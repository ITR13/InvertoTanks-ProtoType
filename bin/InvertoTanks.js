// Generated by Haxe 3.3.0
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var tmp = $iterator(it)();
	while(tmp.hasNext()) a.push(tmp.next());
	return a;
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		if(v == tmp.next()) {
			return i;
		}
		++i;
	}
	return -1;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		return __map_reserved[att] != null?_this.getReserved(att):_this.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var format_abc_Index = $hxClasses["format.abc.Index"] = { __ename__ : ["format","abc","Index"], __constructs__ : ["Idx"] };
format_abc_Index.Idx = function(v) { var $x = ["Idx",0,v]; $x.__enum__ = format_abc_Index; $x.toString = $estr; return $x; };
format_abc_Index.__empty_constructs__ = [];
var format_abc_Namespace = $hxClasses["format.abc.Namespace"] = { __ename__ : ["format","abc","Namespace"], __constructs__ : ["NPrivate","NNamespace","NPublic","NInternal","NProtected","NExplicit","NStaticProtected"] };
format_abc_Namespace.NPrivate = function(ns) { var $x = ["NPrivate",0,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NNamespace = function(ns) { var $x = ["NNamespace",1,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NPublic = function(ns) { var $x = ["NPublic",2,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NInternal = function(ns) { var $x = ["NInternal",3,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NProtected = function(ns) { var $x = ["NProtected",4,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NExplicit = function(ns) { var $x = ["NExplicit",5,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.NStaticProtected = function(ns) { var $x = ["NStaticProtected",6,ns]; $x.__enum__ = format_abc_Namespace; $x.toString = $estr; return $x; };
format_abc_Namespace.__empty_constructs__ = [];
var format_abc_Name = $hxClasses["format.abc.Name"] = { __ename__ : ["format","abc","Name"], __constructs__ : ["NName","NMulti","NRuntime","NRuntimeLate","NMultiLate","NAttrib","NParams"] };
format_abc_Name.NName = function(name,ns) { var $x = ["NName",0,name,ns]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.NMulti = function(name,ns) { var $x = ["NMulti",1,name,ns]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.NRuntime = function(name) { var $x = ["NRuntime",2,name]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.NRuntimeLate = ["NRuntimeLate",3];
format_abc_Name.NRuntimeLate.toString = $estr;
format_abc_Name.NRuntimeLate.__enum__ = format_abc_Name;
format_abc_Name.NMultiLate = function(nset) { var $x = ["NMultiLate",4,nset]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.NAttrib = function(n) { var $x = ["NAttrib",5,n]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.NParams = function(n,params) { var $x = ["NParams",6,n,params]; $x.__enum__ = format_abc_Name; $x.toString = $estr; return $x; };
format_abc_Name.__empty_constructs__ = [format_abc_Name.NRuntimeLate];
var format_abc_Value = $hxClasses["format.abc.Value"] = { __ename__ : ["format","abc","Value"], __constructs__ : ["VNull","VBool","VString","VInt","VUInt","VFloat","VNamespace"] };
format_abc_Value.VNull = ["VNull",0];
format_abc_Value.VNull.toString = $estr;
format_abc_Value.VNull.__enum__ = format_abc_Value;
format_abc_Value.VBool = function(b) { var $x = ["VBool",1,b]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.VString = function(i) { var $x = ["VString",2,i]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.VInt = function(i) { var $x = ["VInt",3,i]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.VUInt = function(i) { var $x = ["VUInt",4,i]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.VFloat = function(f) { var $x = ["VFloat",5,f]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.VNamespace = function(kind,ns) { var $x = ["VNamespace",6,kind,ns]; $x.__enum__ = format_abc_Value; $x.toString = $estr; return $x; };
format_abc_Value.__empty_constructs__ = [format_abc_Value.VNull];
var format_abc_MethodKind = $hxClasses["format.abc.MethodKind"] = { __ename__ : ["format","abc","MethodKind"], __constructs__ : ["KNormal","KGetter","KSetter"] };
format_abc_MethodKind.KNormal = ["KNormal",0];
format_abc_MethodKind.KNormal.toString = $estr;
format_abc_MethodKind.KNormal.__enum__ = format_abc_MethodKind;
format_abc_MethodKind.KGetter = ["KGetter",1];
format_abc_MethodKind.KGetter.toString = $estr;
format_abc_MethodKind.KGetter.__enum__ = format_abc_MethodKind;
format_abc_MethodKind.KSetter = ["KSetter",2];
format_abc_MethodKind.KSetter.toString = $estr;
format_abc_MethodKind.KSetter.__enum__ = format_abc_MethodKind;
format_abc_MethodKind.__empty_constructs__ = [format_abc_MethodKind.KNormal,format_abc_MethodKind.KGetter,format_abc_MethodKind.KSetter];
var format_abc_FieldKind = $hxClasses["format.abc.FieldKind"] = { __ename__ : ["format","abc","FieldKind"], __constructs__ : ["FVar","FMethod","FClass","FFunction"] };
format_abc_FieldKind.FVar = function(type,value,$const) { var $x = ["FVar",0,type,value,$const]; $x.__enum__ = format_abc_FieldKind; $x.toString = $estr; return $x; };
format_abc_FieldKind.FMethod = function(type,k,isFinal,isOverride) { var $x = ["FMethod",1,type,k,isFinal,isOverride]; $x.__enum__ = format_abc_FieldKind; $x.toString = $estr; return $x; };
format_abc_FieldKind.FClass = function(c) { var $x = ["FClass",2,c]; $x.__enum__ = format_abc_FieldKind; $x.toString = $estr; return $x; };
format_abc_FieldKind.FFunction = function(f) { var $x = ["FFunction",3,f]; $x.__enum__ = format_abc_FieldKind; $x.toString = $estr; return $x; };
format_abc_FieldKind.__empty_constructs__ = [];
var format_abc_ABCData = function() {
};
$hxClasses["format.abc.ABCData"] = format_abc_ABCData;
format_abc_ABCData.__name__ = ["format","abc","ABCData"];
format_abc_ABCData.prototype = {
	get: function(t,i) {
		return t[i[2] - 1];
	}
	,__class__: format_abc_ABCData
};
var format_abc_OpCode = $hxClasses["format.abc.OpCode"] = { __ename__ : ["format","abc","OpCode"], __constructs__ : ["OBreakPoint","ONop","OThrow","OGetSuper","OSetSuper","ODxNs","ODxNsLate","ORegKill","OLabel","OJump","OSwitch","OPushWith","OPopScope","OForIn","OHasNext","ONull","OUndefined","OForEach","OSmallInt","OInt","OTrue","OFalse","ONaN","OPop","ODup","OSwap","OString","OIntRef","OUIntRef","OFloat","OScope","ONamespace","ONext","OFunction","OCallStack","OConstruct","OCallMethod","OCallStatic","OCallSuper","OCallProperty","ORetVoid","ORet","OConstructSuper","OConstructProperty","OCallPropLex","OCallSuperVoid","OCallPropVoid","OApplyType","OObject","OArray","ONewBlock","OClassDef","OGetDescendants","OCatch","OFindPropStrict","OFindProp","OFindDefinition","OGetLex","OSetProp","OReg","OSetReg","OGetGlobalScope","OGetScope","OGetProp","OInitProp","ODeleteProp","OGetSlot","OSetSlot","OToString","OToXml","OToXmlAttr","OToInt","OToUInt","OToNumber","OToBool","OToObject","OCheckIsXml","OCast","OAsAny","OAsString","OAsType","OAsObject","OIncrReg","ODecrReg","OTypeof","OInstanceOf","OIsType","OIncrIReg","ODecrIReg","OThis","OSetThis","ODebugReg","ODebugLine","ODebugFile","OBreakPointLine","OTimestamp","OOp","OUnknown"] };
format_abc_OpCode.OBreakPoint = ["OBreakPoint",0];
format_abc_OpCode.OBreakPoint.toString = $estr;
format_abc_OpCode.OBreakPoint.__enum__ = format_abc_OpCode;
format_abc_OpCode.ONop = ["ONop",1];
format_abc_OpCode.ONop.toString = $estr;
format_abc_OpCode.ONop.__enum__ = format_abc_OpCode;
format_abc_OpCode.OThrow = ["OThrow",2];
format_abc_OpCode.OThrow.toString = $estr;
format_abc_OpCode.OThrow.__enum__ = format_abc_OpCode;
format_abc_OpCode.OGetSuper = function(v) { var $x = ["OGetSuper",3,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OSetSuper = function(v) { var $x = ["OSetSuper",4,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODxNs = function(v) { var $x = ["ODxNs",5,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODxNsLate = ["ODxNsLate",6];
format_abc_OpCode.ODxNsLate.toString = $estr;
format_abc_OpCode.ODxNsLate.__enum__ = format_abc_OpCode;
format_abc_OpCode.ORegKill = function(r) { var $x = ["ORegKill",7,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OLabel = ["OLabel",8];
format_abc_OpCode.OLabel.toString = $estr;
format_abc_OpCode.OLabel.__enum__ = format_abc_OpCode;
format_abc_OpCode.OJump = function(j,delta) { var $x = ["OJump",9,j,delta]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OSwitch = function(def,deltas) { var $x = ["OSwitch",10,def,deltas]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OPushWith = ["OPushWith",11];
format_abc_OpCode.OPushWith.toString = $estr;
format_abc_OpCode.OPushWith.__enum__ = format_abc_OpCode;
format_abc_OpCode.OPopScope = ["OPopScope",12];
format_abc_OpCode.OPopScope.toString = $estr;
format_abc_OpCode.OPopScope.__enum__ = format_abc_OpCode;
format_abc_OpCode.OForIn = ["OForIn",13];
format_abc_OpCode.OForIn.toString = $estr;
format_abc_OpCode.OForIn.__enum__ = format_abc_OpCode;
format_abc_OpCode.OHasNext = ["OHasNext",14];
format_abc_OpCode.OHasNext.toString = $estr;
format_abc_OpCode.OHasNext.__enum__ = format_abc_OpCode;
format_abc_OpCode.ONull = ["ONull",15];
format_abc_OpCode.ONull.toString = $estr;
format_abc_OpCode.ONull.__enum__ = format_abc_OpCode;
format_abc_OpCode.OUndefined = ["OUndefined",16];
format_abc_OpCode.OUndefined.toString = $estr;
format_abc_OpCode.OUndefined.__enum__ = format_abc_OpCode;
format_abc_OpCode.OForEach = ["OForEach",17];
format_abc_OpCode.OForEach.toString = $estr;
format_abc_OpCode.OForEach.__enum__ = format_abc_OpCode;
format_abc_OpCode.OSmallInt = function(v) { var $x = ["OSmallInt",18,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OInt = function(v) { var $x = ["OInt",19,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OTrue = ["OTrue",20];
format_abc_OpCode.OTrue.toString = $estr;
format_abc_OpCode.OTrue.__enum__ = format_abc_OpCode;
format_abc_OpCode.OFalse = ["OFalse",21];
format_abc_OpCode.OFalse.toString = $estr;
format_abc_OpCode.OFalse.__enum__ = format_abc_OpCode;
format_abc_OpCode.ONaN = ["ONaN",22];
format_abc_OpCode.ONaN.toString = $estr;
format_abc_OpCode.ONaN.__enum__ = format_abc_OpCode;
format_abc_OpCode.OPop = ["OPop",23];
format_abc_OpCode.OPop.toString = $estr;
format_abc_OpCode.OPop.__enum__ = format_abc_OpCode;
format_abc_OpCode.ODup = ["ODup",24];
format_abc_OpCode.ODup.toString = $estr;
format_abc_OpCode.ODup.__enum__ = format_abc_OpCode;
format_abc_OpCode.OSwap = ["OSwap",25];
format_abc_OpCode.OSwap.toString = $estr;
format_abc_OpCode.OSwap.__enum__ = format_abc_OpCode;
format_abc_OpCode.OString = function(v) { var $x = ["OString",26,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OIntRef = function(v) { var $x = ["OIntRef",27,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OUIntRef = function(v) { var $x = ["OUIntRef",28,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OFloat = function(v) { var $x = ["OFloat",29,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OScope = ["OScope",30];
format_abc_OpCode.OScope.toString = $estr;
format_abc_OpCode.OScope.__enum__ = format_abc_OpCode;
format_abc_OpCode.ONamespace = function(v) { var $x = ["ONamespace",31,v]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ONext = function(r1,r2) { var $x = ["ONext",32,r1,r2]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OFunction = function(f) { var $x = ["OFunction",33,f]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallStack = function(nargs) { var $x = ["OCallStack",34,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OConstruct = function(nargs) { var $x = ["OConstruct",35,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallMethod = function(slot,nargs) { var $x = ["OCallMethod",36,slot,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallStatic = function(meth,nargs) { var $x = ["OCallStatic",37,meth,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallSuper = function(name,nargs) { var $x = ["OCallSuper",38,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallProperty = function(name,nargs) { var $x = ["OCallProperty",39,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ORetVoid = ["ORetVoid",40];
format_abc_OpCode.ORetVoid.toString = $estr;
format_abc_OpCode.ORetVoid.__enum__ = format_abc_OpCode;
format_abc_OpCode.ORet = ["ORet",41];
format_abc_OpCode.ORet.toString = $estr;
format_abc_OpCode.ORet.__enum__ = format_abc_OpCode;
format_abc_OpCode.OConstructSuper = function(nargs) { var $x = ["OConstructSuper",42,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OConstructProperty = function(name,nargs) { var $x = ["OConstructProperty",43,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallPropLex = function(name,nargs) { var $x = ["OCallPropLex",44,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallSuperVoid = function(name,nargs) { var $x = ["OCallSuperVoid",45,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCallPropVoid = function(name,nargs) { var $x = ["OCallPropVoid",46,name,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OApplyType = function(nargs) { var $x = ["OApplyType",47,nargs]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OObject = function(nfields) { var $x = ["OObject",48,nfields]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OArray = function(nvalues) { var $x = ["OArray",49,nvalues]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ONewBlock = ["ONewBlock",50];
format_abc_OpCode.ONewBlock.toString = $estr;
format_abc_OpCode.ONewBlock.__enum__ = format_abc_OpCode;
format_abc_OpCode.OClassDef = function(c) { var $x = ["OClassDef",51,c]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OGetDescendants = function(c) { var $x = ["OGetDescendants",52,c]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OCatch = function(c) { var $x = ["OCatch",53,c]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OFindPropStrict = function(p) { var $x = ["OFindPropStrict",54,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OFindProp = function(p) { var $x = ["OFindProp",55,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OFindDefinition = function(d) { var $x = ["OFindDefinition",56,d]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OGetLex = function(p) { var $x = ["OGetLex",57,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OSetProp = function(p) { var $x = ["OSetProp",58,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OReg = function(r) { var $x = ["OReg",59,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OSetReg = function(r) { var $x = ["OSetReg",60,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OGetGlobalScope = ["OGetGlobalScope",61];
format_abc_OpCode.OGetGlobalScope.toString = $estr;
format_abc_OpCode.OGetGlobalScope.__enum__ = format_abc_OpCode;
format_abc_OpCode.OGetScope = function(n) { var $x = ["OGetScope",62,n]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OGetProp = function(p) { var $x = ["OGetProp",63,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OInitProp = function(p) { var $x = ["OInitProp",64,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODeleteProp = function(p) { var $x = ["ODeleteProp",65,p]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OGetSlot = function(s) { var $x = ["OGetSlot",66,s]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OSetSlot = function(s) { var $x = ["OSetSlot",67,s]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OToString = ["OToString",68];
format_abc_OpCode.OToString.toString = $estr;
format_abc_OpCode.OToString.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToXml = ["OToXml",69];
format_abc_OpCode.OToXml.toString = $estr;
format_abc_OpCode.OToXml.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToXmlAttr = ["OToXmlAttr",70];
format_abc_OpCode.OToXmlAttr.toString = $estr;
format_abc_OpCode.OToXmlAttr.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToInt = ["OToInt",71];
format_abc_OpCode.OToInt.toString = $estr;
format_abc_OpCode.OToInt.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToUInt = ["OToUInt",72];
format_abc_OpCode.OToUInt.toString = $estr;
format_abc_OpCode.OToUInt.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToNumber = ["OToNumber",73];
format_abc_OpCode.OToNumber.toString = $estr;
format_abc_OpCode.OToNumber.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToBool = ["OToBool",74];
format_abc_OpCode.OToBool.toString = $estr;
format_abc_OpCode.OToBool.__enum__ = format_abc_OpCode;
format_abc_OpCode.OToObject = ["OToObject",75];
format_abc_OpCode.OToObject.toString = $estr;
format_abc_OpCode.OToObject.__enum__ = format_abc_OpCode;
format_abc_OpCode.OCheckIsXml = ["OCheckIsXml",76];
format_abc_OpCode.OCheckIsXml.toString = $estr;
format_abc_OpCode.OCheckIsXml.__enum__ = format_abc_OpCode;
format_abc_OpCode.OCast = function(t) { var $x = ["OCast",77,t]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OAsAny = ["OAsAny",78];
format_abc_OpCode.OAsAny.toString = $estr;
format_abc_OpCode.OAsAny.__enum__ = format_abc_OpCode;
format_abc_OpCode.OAsString = ["OAsString",79];
format_abc_OpCode.OAsString.toString = $estr;
format_abc_OpCode.OAsString.__enum__ = format_abc_OpCode;
format_abc_OpCode.OAsType = function(t) { var $x = ["OAsType",80,t]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OAsObject = ["OAsObject",81];
format_abc_OpCode.OAsObject.toString = $estr;
format_abc_OpCode.OAsObject.__enum__ = format_abc_OpCode;
format_abc_OpCode.OIncrReg = function(r) { var $x = ["OIncrReg",82,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODecrReg = function(r) { var $x = ["ODecrReg",83,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OTypeof = ["OTypeof",84];
format_abc_OpCode.OTypeof.toString = $estr;
format_abc_OpCode.OTypeof.__enum__ = format_abc_OpCode;
format_abc_OpCode.OInstanceOf = ["OInstanceOf",85];
format_abc_OpCode.OInstanceOf.toString = $estr;
format_abc_OpCode.OInstanceOf.__enum__ = format_abc_OpCode;
format_abc_OpCode.OIsType = function(t) { var $x = ["OIsType",86,t]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OIncrIReg = function(r) { var $x = ["OIncrIReg",87,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODecrIReg = function(r) { var $x = ["ODecrIReg",88,r]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OThis = ["OThis",89];
format_abc_OpCode.OThis.toString = $estr;
format_abc_OpCode.OThis.__enum__ = format_abc_OpCode;
format_abc_OpCode.OSetThis = ["OSetThis",90];
format_abc_OpCode.OSetThis.toString = $estr;
format_abc_OpCode.OSetThis.__enum__ = format_abc_OpCode;
format_abc_OpCode.ODebugReg = function(name,r,line) { var $x = ["ODebugReg",91,name,r,line]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODebugLine = function(line) { var $x = ["ODebugLine",92,line]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.ODebugFile = function(file) { var $x = ["ODebugFile",93,file]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OBreakPointLine = function(n) { var $x = ["OBreakPointLine",94,n]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OTimestamp = ["OTimestamp",95];
format_abc_OpCode.OTimestamp.toString = $estr;
format_abc_OpCode.OTimestamp.__enum__ = format_abc_OpCode;
format_abc_OpCode.OOp = function(op) { var $x = ["OOp",96,op]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.OUnknown = function($byte) { var $x = ["OUnknown",97,$byte]; $x.__enum__ = format_abc_OpCode; $x.toString = $estr; return $x; };
format_abc_OpCode.__empty_constructs__ = [format_abc_OpCode.OBreakPoint,format_abc_OpCode.ONop,format_abc_OpCode.OThrow,format_abc_OpCode.ODxNsLate,format_abc_OpCode.OLabel,format_abc_OpCode.OPushWith,format_abc_OpCode.OPopScope,format_abc_OpCode.OForIn,format_abc_OpCode.OHasNext,format_abc_OpCode.ONull,format_abc_OpCode.OUndefined,format_abc_OpCode.OForEach,format_abc_OpCode.OTrue,format_abc_OpCode.OFalse,format_abc_OpCode.ONaN,format_abc_OpCode.OPop,format_abc_OpCode.ODup,format_abc_OpCode.OSwap,format_abc_OpCode.OScope,format_abc_OpCode.ORetVoid,format_abc_OpCode.ORet,format_abc_OpCode.ONewBlock,format_abc_OpCode.OGetGlobalScope,format_abc_OpCode.OToString,format_abc_OpCode.OToXml,format_abc_OpCode.OToXmlAttr,format_abc_OpCode.OToInt,format_abc_OpCode.OToUInt,format_abc_OpCode.OToNumber,format_abc_OpCode.OToBool,format_abc_OpCode.OToObject,format_abc_OpCode.OCheckIsXml,format_abc_OpCode.OAsAny,format_abc_OpCode.OAsString,format_abc_OpCode.OAsObject,format_abc_OpCode.OTypeof,format_abc_OpCode.OInstanceOf,format_abc_OpCode.OThis,format_abc_OpCode.OSetThis,format_abc_OpCode.OTimestamp];
var format_abc_JumpStyle = $hxClasses["format.abc.JumpStyle"] = { __ename__ : ["format","abc","JumpStyle"], __constructs__ : ["JNotLt","JNotLte","JNotGt","JNotGte","JAlways","JTrue","JFalse","JEq","JNeq","JLt","JLte","JGt","JGte","JPhysEq","JPhysNeq"] };
format_abc_JumpStyle.JNotLt = ["JNotLt",0];
format_abc_JumpStyle.JNotLt.toString = $estr;
format_abc_JumpStyle.JNotLt.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JNotLte = ["JNotLte",1];
format_abc_JumpStyle.JNotLte.toString = $estr;
format_abc_JumpStyle.JNotLte.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JNotGt = ["JNotGt",2];
format_abc_JumpStyle.JNotGt.toString = $estr;
format_abc_JumpStyle.JNotGt.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JNotGte = ["JNotGte",3];
format_abc_JumpStyle.JNotGte.toString = $estr;
format_abc_JumpStyle.JNotGte.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JAlways = ["JAlways",4];
format_abc_JumpStyle.JAlways.toString = $estr;
format_abc_JumpStyle.JAlways.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JTrue = ["JTrue",5];
format_abc_JumpStyle.JTrue.toString = $estr;
format_abc_JumpStyle.JTrue.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JFalse = ["JFalse",6];
format_abc_JumpStyle.JFalse.toString = $estr;
format_abc_JumpStyle.JFalse.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JEq = ["JEq",7];
format_abc_JumpStyle.JEq.toString = $estr;
format_abc_JumpStyle.JEq.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JNeq = ["JNeq",8];
format_abc_JumpStyle.JNeq.toString = $estr;
format_abc_JumpStyle.JNeq.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JLt = ["JLt",9];
format_abc_JumpStyle.JLt.toString = $estr;
format_abc_JumpStyle.JLt.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JLte = ["JLte",10];
format_abc_JumpStyle.JLte.toString = $estr;
format_abc_JumpStyle.JLte.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JGt = ["JGt",11];
format_abc_JumpStyle.JGt.toString = $estr;
format_abc_JumpStyle.JGt.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JGte = ["JGte",12];
format_abc_JumpStyle.JGte.toString = $estr;
format_abc_JumpStyle.JGte.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JPhysEq = ["JPhysEq",13];
format_abc_JumpStyle.JPhysEq.toString = $estr;
format_abc_JumpStyle.JPhysEq.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.JPhysNeq = ["JPhysNeq",14];
format_abc_JumpStyle.JPhysNeq.toString = $estr;
format_abc_JumpStyle.JPhysNeq.__enum__ = format_abc_JumpStyle;
format_abc_JumpStyle.__empty_constructs__ = [format_abc_JumpStyle.JNotLt,format_abc_JumpStyle.JNotLte,format_abc_JumpStyle.JNotGt,format_abc_JumpStyle.JNotGte,format_abc_JumpStyle.JAlways,format_abc_JumpStyle.JTrue,format_abc_JumpStyle.JFalse,format_abc_JumpStyle.JEq,format_abc_JumpStyle.JNeq,format_abc_JumpStyle.JLt,format_abc_JumpStyle.JLte,format_abc_JumpStyle.JGt,format_abc_JumpStyle.JGte,format_abc_JumpStyle.JPhysEq,format_abc_JumpStyle.JPhysNeq];
var format_abc_Operation = $hxClasses["format.abc.Operation"] = { __ename__ : ["format","abc","Operation"], __constructs__ : ["OpAs","OpNeg","OpIncr","OpDecr","OpNot","OpBitNot","OpAdd","OpSub","OpMul","OpDiv","OpMod","OpShl","OpShr","OpUShr","OpAnd","OpOr","OpXor","OpEq","OpPhysEq","OpLt","OpLte","OpGt","OpGte","OpIs","OpIn","OpIIncr","OpIDecr","OpINeg","OpIAdd","OpISub","OpIMul","OpMemGet8","OpMemGet16","OpMemGet32","OpMemGetFloat","OpMemGetDouble","OpMemSet8","OpMemSet16","OpMemSet32","OpMemSetFloat","OpMemSetDouble","OpSign1","OpSign8","OpSign16"] };
format_abc_Operation.OpAs = ["OpAs",0];
format_abc_Operation.OpAs.toString = $estr;
format_abc_Operation.OpAs.__enum__ = format_abc_Operation;
format_abc_Operation.OpNeg = ["OpNeg",1];
format_abc_Operation.OpNeg.toString = $estr;
format_abc_Operation.OpNeg.__enum__ = format_abc_Operation;
format_abc_Operation.OpIncr = ["OpIncr",2];
format_abc_Operation.OpIncr.toString = $estr;
format_abc_Operation.OpIncr.__enum__ = format_abc_Operation;
format_abc_Operation.OpDecr = ["OpDecr",3];
format_abc_Operation.OpDecr.toString = $estr;
format_abc_Operation.OpDecr.__enum__ = format_abc_Operation;
format_abc_Operation.OpNot = ["OpNot",4];
format_abc_Operation.OpNot.toString = $estr;
format_abc_Operation.OpNot.__enum__ = format_abc_Operation;
format_abc_Operation.OpBitNot = ["OpBitNot",5];
format_abc_Operation.OpBitNot.toString = $estr;
format_abc_Operation.OpBitNot.__enum__ = format_abc_Operation;
format_abc_Operation.OpAdd = ["OpAdd",6];
format_abc_Operation.OpAdd.toString = $estr;
format_abc_Operation.OpAdd.__enum__ = format_abc_Operation;
format_abc_Operation.OpSub = ["OpSub",7];
format_abc_Operation.OpSub.toString = $estr;
format_abc_Operation.OpSub.__enum__ = format_abc_Operation;
format_abc_Operation.OpMul = ["OpMul",8];
format_abc_Operation.OpMul.toString = $estr;
format_abc_Operation.OpMul.__enum__ = format_abc_Operation;
format_abc_Operation.OpDiv = ["OpDiv",9];
format_abc_Operation.OpDiv.toString = $estr;
format_abc_Operation.OpDiv.__enum__ = format_abc_Operation;
format_abc_Operation.OpMod = ["OpMod",10];
format_abc_Operation.OpMod.toString = $estr;
format_abc_Operation.OpMod.__enum__ = format_abc_Operation;
format_abc_Operation.OpShl = ["OpShl",11];
format_abc_Operation.OpShl.toString = $estr;
format_abc_Operation.OpShl.__enum__ = format_abc_Operation;
format_abc_Operation.OpShr = ["OpShr",12];
format_abc_Operation.OpShr.toString = $estr;
format_abc_Operation.OpShr.__enum__ = format_abc_Operation;
format_abc_Operation.OpUShr = ["OpUShr",13];
format_abc_Operation.OpUShr.toString = $estr;
format_abc_Operation.OpUShr.__enum__ = format_abc_Operation;
format_abc_Operation.OpAnd = ["OpAnd",14];
format_abc_Operation.OpAnd.toString = $estr;
format_abc_Operation.OpAnd.__enum__ = format_abc_Operation;
format_abc_Operation.OpOr = ["OpOr",15];
format_abc_Operation.OpOr.toString = $estr;
format_abc_Operation.OpOr.__enum__ = format_abc_Operation;
format_abc_Operation.OpXor = ["OpXor",16];
format_abc_Operation.OpXor.toString = $estr;
format_abc_Operation.OpXor.__enum__ = format_abc_Operation;
format_abc_Operation.OpEq = ["OpEq",17];
format_abc_Operation.OpEq.toString = $estr;
format_abc_Operation.OpEq.__enum__ = format_abc_Operation;
format_abc_Operation.OpPhysEq = ["OpPhysEq",18];
format_abc_Operation.OpPhysEq.toString = $estr;
format_abc_Operation.OpPhysEq.__enum__ = format_abc_Operation;
format_abc_Operation.OpLt = ["OpLt",19];
format_abc_Operation.OpLt.toString = $estr;
format_abc_Operation.OpLt.__enum__ = format_abc_Operation;
format_abc_Operation.OpLte = ["OpLte",20];
format_abc_Operation.OpLte.toString = $estr;
format_abc_Operation.OpLte.__enum__ = format_abc_Operation;
format_abc_Operation.OpGt = ["OpGt",21];
format_abc_Operation.OpGt.toString = $estr;
format_abc_Operation.OpGt.__enum__ = format_abc_Operation;
format_abc_Operation.OpGte = ["OpGte",22];
format_abc_Operation.OpGte.toString = $estr;
format_abc_Operation.OpGte.__enum__ = format_abc_Operation;
format_abc_Operation.OpIs = ["OpIs",23];
format_abc_Operation.OpIs.toString = $estr;
format_abc_Operation.OpIs.__enum__ = format_abc_Operation;
format_abc_Operation.OpIn = ["OpIn",24];
format_abc_Operation.OpIn.toString = $estr;
format_abc_Operation.OpIn.__enum__ = format_abc_Operation;
format_abc_Operation.OpIIncr = ["OpIIncr",25];
format_abc_Operation.OpIIncr.toString = $estr;
format_abc_Operation.OpIIncr.__enum__ = format_abc_Operation;
format_abc_Operation.OpIDecr = ["OpIDecr",26];
format_abc_Operation.OpIDecr.toString = $estr;
format_abc_Operation.OpIDecr.__enum__ = format_abc_Operation;
format_abc_Operation.OpINeg = ["OpINeg",27];
format_abc_Operation.OpINeg.toString = $estr;
format_abc_Operation.OpINeg.__enum__ = format_abc_Operation;
format_abc_Operation.OpIAdd = ["OpIAdd",28];
format_abc_Operation.OpIAdd.toString = $estr;
format_abc_Operation.OpIAdd.__enum__ = format_abc_Operation;
format_abc_Operation.OpISub = ["OpISub",29];
format_abc_Operation.OpISub.toString = $estr;
format_abc_Operation.OpISub.__enum__ = format_abc_Operation;
format_abc_Operation.OpIMul = ["OpIMul",30];
format_abc_Operation.OpIMul.toString = $estr;
format_abc_Operation.OpIMul.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemGet8 = ["OpMemGet8",31];
format_abc_Operation.OpMemGet8.toString = $estr;
format_abc_Operation.OpMemGet8.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemGet16 = ["OpMemGet16",32];
format_abc_Operation.OpMemGet16.toString = $estr;
format_abc_Operation.OpMemGet16.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemGet32 = ["OpMemGet32",33];
format_abc_Operation.OpMemGet32.toString = $estr;
format_abc_Operation.OpMemGet32.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemGetFloat = ["OpMemGetFloat",34];
format_abc_Operation.OpMemGetFloat.toString = $estr;
format_abc_Operation.OpMemGetFloat.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemGetDouble = ["OpMemGetDouble",35];
format_abc_Operation.OpMemGetDouble.toString = $estr;
format_abc_Operation.OpMemGetDouble.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemSet8 = ["OpMemSet8",36];
format_abc_Operation.OpMemSet8.toString = $estr;
format_abc_Operation.OpMemSet8.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemSet16 = ["OpMemSet16",37];
format_abc_Operation.OpMemSet16.toString = $estr;
format_abc_Operation.OpMemSet16.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemSet32 = ["OpMemSet32",38];
format_abc_Operation.OpMemSet32.toString = $estr;
format_abc_Operation.OpMemSet32.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemSetFloat = ["OpMemSetFloat",39];
format_abc_Operation.OpMemSetFloat.toString = $estr;
format_abc_Operation.OpMemSetFloat.__enum__ = format_abc_Operation;
format_abc_Operation.OpMemSetDouble = ["OpMemSetDouble",40];
format_abc_Operation.OpMemSetDouble.toString = $estr;
format_abc_Operation.OpMemSetDouble.__enum__ = format_abc_Operation;
format_abc_Operation.OpSign1 = ["OpSign1",41];
format_abc_Operation.OpSign1.toString = $estr;
format_abc_Operation.OpSign1.__enum__ = format_abc_Operation;
format_abc_Operation.OpSign8 = ["OpSign8",42];
format_abc_Operation.OpSign8.toString = $estr;
format_abc_Operation.OpSign8.__enum__ = format_abc_Operation;
format_abc_Operation.OpSign16 = ["OpSign16",43];
format_abc_Operation.OpSign16.toString = $estr;
format_abc_Operation.OpSign16.__enum__ = format_abc_Operation;
format_abc_Operation.__empty_constructs__ = [format_abc_Operation.OpAs,format_abc_Operation.OpNeg,format_abc_Operation.OpIncr,format_abc_Operation.OpDecr,format_abc_Operation.OpNot,format_abc_Operation.OpBitNot,format_abc_Operation.OpAdd,format_abc_Operation.OpSub,format_abc_Operation.OpMul,format_abc_Operation.OpDiv,format_abc_Operation.OpMod,format_abc_Operation.OpShl,format_abc_Operation.OpShr,format_abc_Operation.OpUShr,format_abc_Operation.OpAnd,format_abc_Operation.OpOr,format_abc_Operation.OpXor,format_abc_Operation.OpEq,format_abc_Operation.OpPhysEq,format_abc_Operation.OpLt,format_abc_Operation.OpLte,format_abc_Operation.OpGt,format_abc_Operation.OpGte,format_abc_Operation.OpIs,format_abc_Operation.OpIn,format_abc_Operation.OpIIncr,format_abc_Operation.OpIDecr,format_abc_Operation.OpINeg,format_abc_Operation.OpIAdd,format_abc_Operation.OpISub,format_abc_Operation.OpIMul,format_abc_Operation.OpMemGet8,format_abc_Operation.OpMemGet16,format_abc_Operation.OpMemGet32,format_abc_Operation.OpMemGetFloat,format_abc_Operation.OpMemGetDouble,format_abc_Operation.OpMemSet8,format_abc_Operation.OpMemSet16,format_abc_Operation.OpMemSet32,format_abc_Operation.OpMemSetFloat,format_abc_Operation.OpMemSetDouble,format_abc_Operation.OpSign1,format_abc_Operation.OpSign8,format_abc_Operation.OpSign16];
var format_agal_Opcode = $hxClasses["format.agal.Opcode"] = { __ename__ : ["format","agal","Opcode"], __constructs__ : ["OMov","OAdd","OSub","OMul","ODiv","ORcp","OMin","OMax","OFrc","OSqt","ORsq","OPow","OLog","OExp","ONrm","OSin","OCos","OCrs","ODp3","ODp4","OAbs","ONeg","OSat","OM33","OM44","OM34","ODdx","ODdy","OIfe","OIne","OIfg","OIfl","OEls","OEif","OUnused","OKil","OTex","OSge","OSlt","OSgn","OSeq","OSne"] };
format_agal_Opcode.OMov = function(dst,v) { var $x = ["OMov",0,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OAdd = function(dst,a,b) { var $x = ["OAdd",1,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSub = function(dst,a,b) { var $x = ["OSub",2,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OMul = function(dst,a,b) { var $x = ["OMul",3,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ODiv = function(dst,a,b) { var $x = ["ODiv",4,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ORcp = function(dst,v) { var $x = ["ORcp",5,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OMin = function(dst,a,b) { var $x = ["OMin",6,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OMax = function(dst,a,b) { var $x = ["OMax",7,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OFrc = function(dst,v) { var $x = ["OFrc",8,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSqt = function(dst,v) { var $x = ["OSqt",9,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ORsq = function(dst,v) { var $x = ["ORsq",10,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OPow = function(dst,a,b) { var $x = ["OPow",11,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OLog = function(dst,v) { var $x = ["OLog",12,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OExp = function(dst,v) { var $x = ["OExp",13,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ONrm = function(dst,v) { var $x = ["ONrm",14,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSin = function(dst,v) { var $x = ["OSin",15,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OCos = function(dst,v) { var $x = ["OCos",16,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OCrs = function(dst,a,b) { var $x = ["OCrs",17,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ODp3 = function(dst,a,b) { var $x = ["ODp3",18,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ODp4 = function(dst,a,b) { var $x = ["ODp4",19,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OAbs = function(dst,v) { var $x = ["OAbs",20,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ONeg = function(dst,v) { var $x = ["ONeg",21,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSat = function(dst,v) { var $x = ["OSat",22,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OM33 = function(dst,a,b) { var $x = ["OM33",23,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OM44 = function(dst,a,b) { var $x = ["OM44",24,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OM34 = function(dst,a,b) { var $x = ["OM34",25,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ODdx = function(dst,v) { var $x = ["ODdx",26,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.ODdy = function(dst,v) { var $x = ["ODdy",27,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OIfe = function(a,b) { var $x = ["OIfe",28,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OIne = function(a,b) { var $x = ["OIne",29,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OIfg = function(a,b) { var $x = ["OIfg",30,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OIfl = function(a,b) { var $x = ["OIfl",31,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OEls = ["OEls",32];
format_agal_Opcode.OEls.toString = $estr;
format_agal_Opcode.OEls.__enum__ = format_agal_Opcode;
format_agal_Opcode.OEif = ["OEif",33];
format_agal_Opcode.OEif.toString = $estr;
format_agal_Opcode.OEif.__enum__ = format_agal_Opcode;
format_agal_Opcode.OUnused = ["OUnused",34];
format_agal_Opcode.OUnused.toString = $estr;
format_agal_Opcode.OUnused.__enum__ = format_agal_Opcode;
format_agal_Opcode.OKil = function(v) { var $x = ["OKil",35,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OTex = function(dst,pt,tex) { var $x = ["OTex",36,dst,pt,tex]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSge = function(dst,a,b) { var $x = ["OSge",37,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSlt = function(dst,a,b) { var $x = ["OSlt",38,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSgn = function(dst,v) { var $x = ["OSgn",39,dst,v]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSeq = function(dst,a,b) { var $x = ["OSeq",40,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.OSne = function(dst,a,b) { var $x = ["OSne",41,dst,a,b]; $x.__enum__ = format_agal_Opcode; $x.toString = $estr; return $x; };
format_agal_Opcode.__empty_constructs__ = [format_agal_Opcode.OEls,format_agal_Opcode.OEif,format_agal_Opcode.OUnused];
var format_agal_RegAccess = function(t,c,o) {
	this.t = t;
	this.comp = c;
	this.offset = o;
};
$hxClasses["format.agal.RegAccess"] = format_agal_RegAccess;
format_agal_RegAccess.__name__ = ["format","agal","RegAccess"];
format_agal_RegAccess.prototype = {
	clone: function() {
		return new format_agal_RegAccess(this.t,this.comp,this.offset);
	}
	,toString: function() {
		return Std.string({ t : this.t, comp : this.comp, offset : this.offset});
	}
	,__class__: format_agal_RegAccess
};
var format_agal_Reg = function(t,i,s,a) {
	this.t = t;
	this.index = i;
	this.swiz = s;
	this.access = a;
};
$hxClasses["format.agal.Reg"] = format_agal_Reg;
format_agal_Reg.__name__ = ["format","agal","Reg"];
format_agal_Reg.prototype = {
	clone: function() {
		return new format_agal_Reg(this.t,this.index,this.swiz,this.access);
	}
	,toString: function() {
		if(this.access == null) {
			return Std.string({ t : this.t, index : this.index, swiz : this.swiz});
		}
		return Std.string({ t : this.t, index : this.index, swiz : this.swiz, access : this.access.toString()});
	}
	,__class__: format_agal_Reg
};
var format_agal_C = $hxClasses["format.agal.C"] = { __ename__ : ["format","agal","C"], __constructs__ : ["X","Y","Z","W"] };
format_agal_C.X = ["X",0];
format_agal_C.X.toString = $estr;
format_agal_C.X.__enum__ = format_agal_C;
format_agal_C.Y = ["Y",1];
format_agal_C.Y.toString = $estr;
format_agal_C.Y.__enum__ = format_agal_C;
format_agal_C.Z = ["Z",2];
format_agal_C.Z.toString = $estr;
format_agal_C.Z.__enum__ = format_agal_C;
format_agal_C.W = ["W",3];
format_agal_C.W.toString = $estr;
format_agal_C.W.__enum__ = format_agal_C;
format_agal_C.__empty_constructs__ = [format_agal_C.X,format_agal_C.Y,format_agal_C.Z,format_agal_C.W];
var format_agal_RegType = $hxClasses["format.agal.RegType"] = { __ename__ : ["format","agal","RegType"], __constructs__ : ["RAttr","RConst","RTemp","ROut","RVar","RTexture","RDepth"] };
format_agal_RegType.RAttr = ["RAttr",0];
format_agal_RegType.RAttr.toString = $estr;
format_agal_RegType.RAttr.__enum__ = format_agal_RegType;
format_agal_RegType.RConst = ["RConst",1];
format_agal_RegType.RConst.toString = $estr;
format_agal_RegType.RConst.__enum__ = format_agal_RegType;
format_agal_RegType.RTemp = ["RTemp",2];
format_agal_RegType.RTemp.toString = $estr;
format_agal_RegType.RTemp.__enum__ = format_agal_RegType;
format_agal_RegType.ROut = ["ROut",3];
format_agal_RegType.ROut.toString = $estr;
format_agal_RegType.ROut.__enum__ = format_agal_RegType;
format_agal_RegType.RVar = ["RVar",4];
format_agal_RegType.RVar.toString = $estr;
format_agal_RegType.RVar.__enum__ = format_agal_RegType;
format_agal_RegType.RTexture = ["RTexture",5];
format_agal_RegType.RTexture.toString = $estr;
format_agal_RegType.RTexture.__enum__ = format_agal_RegType;
format_agal_RegType.RDepth = ["RDepth",6];
format_agal_RegType.RDepth.toString = $estr;
format_agal_RegType.RDepth.__enum__ = format_agal_RegType;
format_agal_RegType.__empty_constructs__ = [format_agal_RegType.RAttr,format_agal_RegType.RConst,format_agal_RegType.RTemp,format_agal_RegType.ROut,format_agal_RegType.RVar,format_agal_RegType.RTexture,format_agal_RegType.RDepth];
var format_agal_TexFlag = $hxClasses["format.agal.TexFlag"] = { __ename__ : ["format","agal","TexFlag"], __constructs__ : ["T2D","TCube","T3D","TMipMapDisable","TMipMapNearest","TMipMapLinear","TWrap","TClamp","TClampURepeatV","TRepeatUClampV","TFilterNearest","TFilterLinear","TFilterAnisotropic2x","TFilterAnisotropic4x","TFilterAnisotropic8x","TFilterAnisotropic16x","TRgba","TDxt1","TDxt5","TVideo","TCentroid","TSingle","TIgnoreSampler","TLodBias"] };
format_agal_TexFlag.T2D = ["T2D",0];
format_agal_TexFlag.T2D.toString = $estr;
format_agal_TexFlag.T2D.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TCube = ["TCube",1];
format_agal_TexFlag.TCube.toString = $estr;
format_agal_TexFlag.TCube.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.T3D = ["T3D",2];
format_agal_TexFlag.T3D.toString = $estr;
format_agal_TexFlag.T3D.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TMipMapDisable = ["TMipMapDisable",3];
format_agal_TexFlag.TMipMapDisable.toString = $estr;
format_agal_TexFlag.TMipMapDisable.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TMipMapNearest = ["TMipMapNearest",4];
format_agal_TexFlag.TMipMapNearest.toString = $estr;
format_agal_TexFlag.TMipMapNearest.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TMipMapLinear = ["TMipMapLinear",5];
format_agal_TexFlag.TMipMapLinear.toString = $estr;
format_agal_TexFlag.TMipMapLinear.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TWrap = ["TWrap",6];
format_agal_TexFlag.TWrap.toString = $estr;
format_agal_TexFlag.TWrap.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TClamp = ["TClamp",7];
format_agal_TexFlag.TClamp.toString = $estr;
format_agal_TexFlag.TClamp.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TClampURepeatV = ["TClampURepeatV",8];
format_agal_TexFlag.TClampURepeatV.toString = $estr;
format_agal_TexFlag.TClampURepeatV.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TRepeatUClampV = ["TRepeatUClampV",9];
format_agal_TexFlag.TRepeatUClampV.toString = $estr;
format_agal_TexFlag.TRepeatUClampV.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterNearest = ["TFilterNearest",10];
format_agal_TexFlag.TFilterNearest.toString = $estr;
format_agal_TexFlag.TFilterNearest.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterLinear = ["TFilterLinear",11];
format_agal_TexFlag.TFilterLinear.toString = $estr;
format_agal_TexFlag.TFilterLinear.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterAnisotropic2x = ["TFilterAnisotropic2x",12];
format_agal_TexFlag.TFilterAnisotropic2x.toString = $estr;
format_agal_TexFlag.TFilterAnisotropic2x.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterAnisotropic4x = ["TFilterAnisotropic4x",13];
format_agal_TexFlag.TFilterAnisotropic4x.toString = $estr;
format_agal_TexFlag.TFilterAnisotropic4x.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterAnisotropic8x = ["TFilterAnisotropic8x",14];
format_agal_TexFlag.TFilterAnisotropic8x.toString = $estr;
format_agal_TexFlag.TFilterAnisotropic8x.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TFilterAnisotropic16x = ["TFilterAnisotropic16x",15];
format_agal_TexFlag.TFilterAnisotropic16x.toString = $estr;
format_agal_TexFlag.TFilterAnisotropic16x.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TRgba = ["TRgba",16];
format_agal_TexFlag.TRgba.toString = $estr;
format_agal_TexFlag.TRgba.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TDxt1 = ["TDxt1",17];
format_agal_TexFlag.TDxt1.toString = $estr;
format_agal_TexFlag.TDxt1.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TDxt5 = ["TDxt5",18];
format_agal_TexFlag.TDxt5.toString = $estr;
format_agal_TexFlag.TDxt5.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TVideo = ["TVideo",19];
format_agal_TexFlag.TVideo.toString = $estr;
format_agal_TexFlag.TVideo.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TCentroid = ["TCentroid",20];
format_agal_TexFlag.TCentroid.toString = $estr;
format_agal_TexFlag.TCentroid.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TSingle = ["TSingle",21];
format_agal_TexFlag.TSingle.toString = $estr;
format_agal_TexFlag.TSingle.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TIgnoreSampler = ["TIgnoreSampler",22];
format_agal_TexFlag.TIgnoreSampler.toString = $estr;
format_agal_TexFlag.TIgnoreSampler.__enum__ = format_agal_TexFlag;
format_agal_TexFlag.TLodBias = function(v) { var $x = ["TLodBias",23,v]; $x.__enum__ = format_agal_TexFlag; $x.toString = $estr; return $x; };
format_agal_TexFlag.__empty_constructs__ = [format_agal_TexFlag.T2D,format_agal_TexFlag.TCube,format_agal_TexFlag.T3D,format_agal_TexFlag.TMipMapDisable,format_agal_TexFlag.TMipMapNearest,format_agal_TexFlag.TMipMapLinear,format_agal_TexFlag.TWrap,format_agal_TexFlag.TClamp,format_agal_TexFlag.TClampURepeatV,format_agal_TexFlag.TRepeatUClampV,format_agal_TexFlag.TFilterNearest,format_agal_TexFlag.TFilterLinear,format_agal_TexFlag.TFilterAnisotropic2x,format_agal_TexFlag.TFilterAnisotropic4x,format_agal_TexFlag.TFilterAnisotropic8x,format_agal_TexFlag.TFilterAnisotropic16x,format_agal_TexFlag.TRgba,format_agal_TexFlag.TDxt1,format_agal_TexFlag.TDxt5,format_agal_TexFlag.TVideo,format_agal_TexFlag.TCentroid,format_agal_TexFlag.TSingle,format_agal_TexFlag.TIgnoreSampler];
var format_gif_Block = $hxClasses["format.gif.Block"] = { __ename__ : ["format","gif","Block"], __constructs__ : ["BFrame","BExtension","BEOF"] };
format_gif_Block.BFrame = function(frame) { var $x = ["BFrame",0,frame]; $x.__enum__ = format_gif_Block; $x.toString = $estr; return $x; };
format_gif_Block.BExtension = function(extension) { var $x = ["BExtension",1,extension]; $x.__enum__ = format_gif_Block; $x.toString = $estr; return $x; };
format_gif_Block.BEOF = ["BEOF",2];
format_gif_Block.BEOF.toString = $estr;
format_gif_Block.BEOF.__enum__ = format_gif_Block;
format_gif_Block.__empty_constructs__ = [format_gif_Block.BEOF];
var format_gif_Extension = $hxClasses["format.gif.Extension"] = { __ename__ : ["format","gif","Extension"], __constructs__ : ["EGraphicControl","EComment","EText","EApplicationExtension","EUnknown"] };
format_gif_Extension.EGraphicControl = function(gce) { var $x = ["EGraphicControl",0,gce]; $x.__enum__ = format_gif_Extension; $x.toString = $estr; return $x; };
format_gif_Extension.EComment = function(text) { var $x = ["EComment",1,text]; $x.__enum__ = format_gif_Extension; $x.toString = $estr; return $x; };
format_gif_Extension.EText = function(pte) { var $x = ["EText",2,pte]; $x.__enum__ = format_gif_Extension; $x.toString = $estr; return $x; };
format_gif_Extension.EApplicationExtension = function(ext) { var $x = ["EApplicationExtension",3,ext]; $x.__enum__ = format_gif_Extension; $x.toString = $estr; return $x; };
format_gif_Extension.EUnknown = function(id,data) { var $x = ["EUnknown",4,id,data]; $x.__enum__ = format_gif_Extension; $x.toString = $estr; return $x; };
format_gif_Extension.__empty_constructs__ = [];
var format_gif_ApplicationExtension = $hxClasses["format.gif.ApplicationExtension"] = { __ename__ : ["format","gif","ApplicationExtension"], __constructs__ : ["AENetscapeLooping","AEUnknown"] };
format_gif_ApplicationExtension.AENetscapeLooping = function(loops) { var $x = ["AENetscapeLooping",0,loops]; $x.__enum__ = format_gif_ApplicationExtension; $x.toString = $estr; return $x; };
format_gif_ApplicationExtension.AEUnknown = function(name,version,data) { var $x = ["AEUnknown",1,name,version,data]; $x.__enum__ = format_gif_ApplicationExtension; $x.toString = $estr; return $x; };
format_gif_ApplicationExtension.__empty_constructs__ = [];
var format_gif_Version = $hxClasses["format.gif.Version"] = { __ename__ : ["format","gif","Version"], __constructs__ : ["GIF87a","GIF89a","Unknown"] };
format_gif_Version.GIF87a = ["GIF87a",0];
format_gif_Version.GIF87a.toString = $estr;
format_gif_Version.GIF87a.__enum__ = format_gif_Version;
format_gif_Version.GIF89a = ["GIF89a",1];
format_gif_Version.GIF89a.toString = $estr;
format_gif_Version.GIF89a.__enum__ = format_gif_Version;
format_gif_Version.Unknown = function(version) { var $x = ["Unknown",2,version]; $x.__enum__ = format_gif_Version; $x.toString = $estr; return $x; };
format_gif_Version.__empty_constructs__ = [format_gif_Version.GIF87a,format_gif_Version.GIF89a];
var format_gif_DisposalMethod = $hxClasses["format.gif.DisposalMethod"] = { __ename__ : ["format","gif","DisposalMethod"], __constructs__ : ["UNSPECIFIED","NO_ACTION","FILL_BACKGROUND","RENDER_PREVIOUS","UNDEFINED"] };
format_gif_DisposalMethod.UNSPECIFIED = ["UNSPECIFIED",0];
format_gif_DisposalMethod.UNSPECIFIED.toString = $estr;
format_gif_DisposalMethod.UNSPECIFIED.__enum__ = format_gif_DisposalMethod;
format_gif_DisposalMethod.NO_ACTION = ["NO_ACTION",1];
format_gif_DisposalMethod.NO_ACTION.toString = $estr;
format_gif_DisposalMethod.NO_ACTION.__enum__ = format_gif_DisposalMethod;
format_gif_DisposalMethod.FILL_BACKGROUND = ["FILL_BACKGROUND",2];
format_gif_DisposalMethod.FILL_BACKGROUND.toString = $estr;
format_gif_DisposalMethod.FILL_BACKGROUND.__enum__ = format_gif_DisposalMethod;
format_gif_DisposalMethod.RENDER_PREVIOUS = ["RENDER_PREVIOUS",3];
format_gif_DisposalMethod.RENDER_PREVIOUS.toString = $estr;
format_gif_DisposalMethod.RENDER_PREVIOUS.__enum__ = format_gif_DisposalMethod;
format_gif_DisposalMethod.UNDEFINED = function(index) { var $x = ["UNDEFINED",4,index]; $x.__enum__ = format_gif_DisposalMethod; $x.toString = $estr; return $x; };
format_gif_DisposalMethod.__empty_constructs__ = [format_gif_DisposalMethod.UNSPECIFIED,format_gif_DisposalMethod.NO_ACTION,format_gif_DisposalMethod.FILL_BACKGROUND,format_gif_DisposalMethod.RENDER_PREVIOUS];
var format_gif_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.gif.Reader"] = format_gif_Reader;
format_gif_Reader.__name__ = ["format","gif","Reader"];
format_gif_Reader.prototype = {
	read: function() {
		var _g = 0;
		var _g1 = [71,73,70];
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(this.i.readByte() != b) {
				throw new js__$Boot_HaxeError("Invalid header");
			}
		}
		var gifVer = this.i.readString(3);
		var version = format_gif_Version.GIF89a;
		switch(gifVer) {
		case "87a":
			version = format_gif_Version.GIF87a;
			break;
		case "89a":
			version = format_gif_Version.GIF89a;
			break;
		default:
			version = format_gif_Version.Unknown(gifVer);
		}
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packedField = this.i.readByte();
		var bgIndex = this.i.readByte();
		var pixelAspectRatio = this.i.readByte();
		if(pixelAspectRatio != 0) {
			pixelAspectRatio = (pixelAspectRatio + 15) / 64;
		} else {
			pixelAspectRatio = 1;
		}
		var lsd = { width : width, height : height, hasGlobalColorTable : (packedField & 128) == 128, colorResolution : (packedField & 112) >>> 4, sorted : (packedField & 8) == 8, globalColorTableSize : 2 << (packedField & 7), backgroundColorIndex : bgIndex, pixelAspectRatio : pixelAspectRatio};
		var gct = null;
		if(lsd.hasGlobalColorTable) {
			gct = this.readColorTable(lsd.globalColorTableSize);
		}
		var blocks = new List();
		while(true) {
			var b1 = this.readBlock();
			blocks.add(b1);
			if(b1 == format_gif_Block.BEOF) {
				break;
			}
		}
		return { version : version, logicalScreenDescriptor : lsd, globalColorTable : gct, blocks : blocks};
	}
	,readBlock: function() {
		switch(this.i.readByte()) {
		case 33:
			return this.readExtension();
		case 44:
			return this.readImage();
		case 59:
			return format_gif_Block.BEOF;
		}
		return format_gif_Block.BEOF;
	}
	,readImage: function() {
		var x = this.i.readUInt16();
		var y = this.i.readUInt16();
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packed = this.i.readByte();
		var localColorTable = (packed & 128) == 128;
		var interlaced = (packed & 64) == 64;
		var sorted = (packed & 32) == 32;
		var localColorTableSize = 2 << (packed & 7);
		var lct = null;
		if(localColorTable) {
			lct = this.readColorTable(localColorTableSize);
		}
		return format_gif_Block.BFrame({ x : x, y : y, width : width, height : height, localColorTable : localColorTable, interlaced : interlaced, sorted : sorted, localColorTableSize : localColorTableSize, pixels : this.readPixels(width,height,interlaced), colorTable : lct});
	}
	,readPixels: function(width,height,interlaced) {
		var input = this.i;
		var pixelsCount = width * height;
		var pixels = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
		var minCodeSize = input.readByte();
		var blockSize = input.readByte() - 1;
		var bits = input.readByte();
		var bitsCount = 8;
		var clearCode = 1 << minCodeSize;
		var eoiCode = clearCode + 1;
		var codeSize = minCodeSize + 1;
		var codeSizeLimit = 1 << codeSize;
		var codeMask = codeSizeLimit - 1;
		var baseDict = [];
		var _g1 = 0;
		while(_g1 < clearCode) {
			var i = _g1++;
			baseDict[i] = [i];
		}
		var dict = [];
		var dictLen = clearCode + 2;
		var newRecord;
		var i1 = 0;
		var code = 0;
		var last;
		while(i1 < pixelsCount) {
			last = code;
			while(bitsCount < codeSize) {
				if(blockSize == 0) {
					break;
				}
				bits |= input.readByte() << bitsCount;
				bitsCount += 8;
				--blockSize;
				if(blockSize == 0) {
					blockSize = input.readByte();
				}
			}
			code = bits & codeMask;
			bits >>= codeSize;
			bitsCount -= codeSize;
			if(code == clearCode) {
				dict = baseDict.slice();
				dictLen = clearCode + 2;
				codeSize = minCodeSize + 1;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
				continue;
			}
			if(code == eoiCode) {
				break;
			}
			if(code < dictLen) {
				if(last != clearCode) {
					newRecord = dict[last].slice();
					newRecord.push(dict[code][0]);
					dict[dictLen++] = newRecord;
				}
			} else {
				if(code != dictLen) {
					throw new js__$Boot_HaxeError("Invalid LZW code. Excepted: " + dictLen + ", got: " + code);
				}
				newRecord = dict[last].slice();
				newRecord.push(newRecord[0]);
				dict[dictLen++] = newRecord;
			}
			newRecord = dict[code];
			var _g = 0;
			while(_g < newRecord.length) {
				var item = newRecord[_g];
				++_g;
				pixels.b[i1++] = item & 255;
			}
			if(dictLen == codeSizeLimit && codeSize < 12) {
				++codeSize;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
			}
		}
		while(blockSize > 0) {
			input.readByte();
			--blockSize;
			if(blockSize == 0) {
				blockSize = input.readByte();
			}
		}
		while(i1 < pixelsCount) pixels.b[i1++] = 0;
		if(interlaced) {
			var buffer = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
			var offset = this.deinterlace(pixels,buffer,8,0,0,width,height);
			offset = this.deinterlace(pixels,buffer,8,4,offset,width,height);
			offset = this.deinterlace(pixels,buffer,4,2,offset,width,height);
			this.deinterlace(pixels,buffer,2,1,offset,width,height);
			pixels = buffer;
		}
		return pixels;
	}
	,deinterlace: function(input,output,step,y,offset,width,height) {
		while(y < height) {
			output.blit(y * width,input,offset,width);
			offset += width;
			y += step;
		}
		return offset;
	}
	,readExtension: function() {
		var subId = this.i.readByte();
		switch(subId) {
		case 1:
			if(this.i.readByte() != 12) {
				throw new js__$Boot_HaxeError("Incorrect size of Plain Text Extension introducer block.");
			}
			var tmp = this.i.readUInt16();
			var tmp1 = this.i.readUInt16();
			var tmp2 = this.i.readUInt16();
			var tmp3 = this.i.readUInt16();
			var tmp4 = this.i.readByte();
			var tmp5 = this.i.readByte();
			var tmp6 = this.i.readByte();
			var tmp7 = this.i.readByte();
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EText({ textGridX : tmp, textGridY : tmp1, textGridWidth : tmp2, textGridHeight : tmp3, charCellWidth : tmp4, charCellHeight : tmp5, textForegroundColorIndex : tmp6, textBackgroundColorIndex : tmp7, text : bytes.toString()}));
		case 249:
			if(this.i.readByte() != 4) {
				throw new js__$Boot_HaxeError("Incorrect Graphic Control Extension block size!");
			}
			var packed = this.i.readByte();
			var disposalMethod;
			switch((packed & 28) >> 2) {
			case 0:
				disposalMethod = format_gif_DisposalMethod.UNSPECIFIED;
				break;
			case 1:
				disposalMethod = format_gif_DisposalMethod.NO_ACTION;
				break;
			case 2:
				disposalMethod = format_gif_DisposalMethod.FILL_BACKGROUND;
				break;
			case 3:
				disposalMethod = format_gif_DisposalMethod.RENDER_PREVIOUS;
				break;
			default:
				disposalMethod = format_gif_DisposalMethod.UNDEFINED((packed & 28) >> 2);
			}
			var b = format_gif_Block.BExtension(format_gif_Extension.EGraphicControl({ disposalMethod : disposalMethod, userInput : (packed & 2) == 2, hasTransparentColor : (packed & 1) == 1, delay : this.i.readUInt16(), transparentIndex : this.i.readByte()}));
			this.i.readByte();
			return b;
		case 254:
			var buffer1 = new haxe_io_BytesOutput();
			var bytes1 = new haxe_io_Bytes(new ArrayBuffer(255));
			var len1 = this.i.readByte();
			while(len1 != 0) {
				this.i.readBytes(bytes1,0,len1);
				buffer1.writeBytes(bytes1,0,len1);
				len1 = this.i.readByte();
			}
			buffer1.flush();
			bytes1 = buffer1.getBytes();
			buffer1.close();
			return format_gif_Block.BExtension(format_gif_Extension.EComment(bytes1.toString()));
		case 255:
			return this.readApplicationExtension();
		default:
			var buffer2 = new haxe_io_BytesOutput();
			var bytes2 = new haxe_io_Bytes(new ArrayBuffer(255));
			var len2 = this.i.readByte();
			while(len2 != 0) {
				this.i.readBytes(bytes2,0,len2);
				buffer2.writeBytes(bytes2,0,len2);
				len2 = this.i.readByte();
			}
			buffer2.flush();
			bytes2 = buffer2.getBytes();
			buffer2.close();
			return format_gif_Block.BExtension(format_gif_Extension.EUnknown(subId,bytes2));
		}
	}
	,readApplicationExtension: function() {
		if(this.i.readByte() != 11) {
			throw new js__$Boot_HaxeError("Incorrect size of Application Extension introducer block.");
		}
		var name = this.i.readString(8);
		var version = this.i.readString(3);
		var buffer = new haxe_io_BytesOutput();
		var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
		var len = this.i.readByte();
		while(len != 0) {
			this.i.readBytes(bytes,0,len);
			buffer.writeBytes(bytes,0,len);
			len = this.i.readByte();
		}
		buffer.flush();
		bytes = buffer.getBytes();
		buffer.close();
		var data = bytes;
		if(name == "NETSCAPE" && version == "2.0" && data.b[0] == 1) {
			return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AENetscapeLooping(data.b[1] | data.b[2] << 8)));
		}
		return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AEUnknown(name,version,data)));
	}
	,readBlocks: function() {
		var buffer = new haxe_io_BytesOutput();
		var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
		var len = this.i.readByte();
		while(len != 0) {
			this.i.readBytes(bytes,0,len);
			buffer.writeBytes(bytes,0,len);
			len = this.i.readByte();
		}
		buffer.flush();
		bytes = buffer.getBytes();
		buffer.close();
		return bytes;
	}
	,readColorTable: function(size) {
		size *= 3;
		var output = new haxe_io_Bytes(new ArrayBuffer(size));
		var c = 0;
		while(c < size) {
			output.b[c] = this.i.readByte() & 255;
			output.b[c + 1] = this.i.readByte() & 255;
			output.b[c + 2] = this.i.readByte() & 255;
			c += 3;
		}
		return output;
	}
	,__class__: format_gif_Reader
};
var format_gif_Tools = function() { };
$hxClasses["format.gif.Tools"] = format_gif_Tools;
format_gif_Tools.__name__ = ["format","gif","Tools"];
format_gif_Tools.framesCount = function(data) {
	var frames = 0;
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 0) {
			++frames;
		}
	}
	return frames;
};
format_gif_Tools.frame = function(data,frameIndex) {
	var counter = 0;
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 0) {
			var frame = val[2];
			if(counter == frameIndex) {
				return frame;
			}
			++counter;
		}
	}
	return null;
};
format_gif_Tools.graphicControl = function(data,frameIndex) {
	var counter = 0;
	var gce = null;
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		switch(val[1]) {
		case 0:
			if(counter == frameIndex) {
				return gce;
			}
			gce = null;
			++counter;
			break;
		case 1:
			if(val[2][1] == 0) {
				gce = val[2][2];
			}
			break;
		default:
		}
	}
	return null;
};
format_gif_Tools.extractBGRA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		switch(val[1]) {
		case 0:
			var frame = val[2];
			if(frameCaret == frameIndex) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(frame.width * frame.height * 4));
				var ct = frame.localColorTable?frame.colorTable:data.globalColorTable;
				if(ct == null) {
					throw new js__$Boot_HaxeError("Frame does not have a color table!");
				}
				var transparentIndex = gce != null && gce.hasTransparentColor?gce.transparentIndex * 3:-1;
				var writeCaret = 0;
				var _g1 = 0;
				var _g = frame.pixels.length;
				while(_g1 < _g) {
					var index = frame.pixels.b[_g1++] * 3;
					bytes.b[writeCaret] = ct.b[index + 2] & 255;
					bytes.b[writeCaret + 1] = ct.b[index + 1] & 255;
					bytes.b[writeCaret + 2] = ct.b[index] & 255;
					if(transparentIndex == index) {
						bytes.b[writeCaret + 3] = 0;
					} else {
						bytes.b[writeCaret + 3] = 255;
					}
					writeCaret += 4;
				}
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = val[2];
			if(ext[1] == 0) {
				gce = ext[2];
			}
			break;
		default:
		}
	}
	return null;
};
format_gif_Tools.extractRGBA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		switch(val[1]) {
		case 0:
			var frame = val[2];
			if(frameCaret == frameIndex) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(frame.width * frame.height * 4));
				var ct = frame.localColorTable?frame.colorTable:data.globalColorTable;
				if(ct == null) {
					throw new js__$Boot_HaxeError("Frame does not have a color table!");
				}
				var transparentIndex = gce != null && gce.hasTransparentColor?gce.transparentIndex * 3:-1;
				var writeCaret = 0;
				var _g1 = 0;
				var _g = frame.pixels.length;
				while(_g1 < _g) {
					var index = frame.pixels.b[_g1++] * 3;
					bytes.b[writeCaret] = ct.b[index] & 255;
					bytes.b[writeCaret + 1] = ct.b[index + 1] & 255;
					bytes.b[writeCaret + 2] = ct.b[index + 2] & 255;
					if(transparentIndex == index) {
						bytes.b[writeCaret + 3] = 0;
					} else {
						bytes.b[writeCaret + 3] = 255;
					}
					writeCaret += 4;
				}
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = val[2];
			if(ext[1] == 0) {
				gce = ext[2];
			}
			break;
		default:
		}
	}
	return null;
};
format_gif_Tools.extractFullBGRA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var bytes = new haxe_io_Bytes(new ArrayBuffer(data.logicalScreenDescriptor.width * data.logicalScreenDescriptor.height * 4));
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		switch(val[1]) {
		case 0:
			var frame = val[2];
			var ct = frame.localColorTable?frame.colorTable:data.globalColorTable;
			if(ct == null) {
				throw new js__$Boot_HaxeError("Frame does not have a color table!");
			}
			var transparentIndex = gce != null && gce.hasTransparentColor?gce.transparentIndex * 3:-1;
			var pixels = frame.pixels;
			var x = 0;
			var writeCaret = (frame.y * data.logicalScreenDescriptor.width + frame.x) * 4;
			var lineSkip = (data.logicalScreenDescriptor.width - frame.width) * 4 + 4;
			switch((frameCaret != frameIndex && gce != null?gce.disposalMethod:format_gif_DisposalMethod.NO_ACTION)[1]) {
			case 2:
				var _g1 = 0;
				var _g = pixels.length;
				while(_g1 < _g) {
					++_g1;
					bytes.b[writeCaret] = 0;
					bytes.b[writeCaret + 1] = 0;
					bytes.b[writeCaret + 2] = 0;
					bytes.b[writeCaret + 3] = 0;
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
				break;
			case 3:
				break;
			default:
				var _g11 = 0;
				var _g2 = pixels.length;
				while(_g11 < _g2) {
					var index = pixels.b[_g11++] * 3;
					if(transparentIndex != index) {
						bytes.b[writeCaret] = ct.b[index + 2] & 255;
						bytes.b[writeCaret + 1] = ct.b[index + 1] & 255;
						bytes.b[writeCaret + 2] = ct.b[index] & 255;
						bytes.b[writeCaret + 3] = 255;
					}
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
			}
			if(frameCaret == frameIndex) {
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = val[2];
			if(ext[1] == 0) {
				gce = ext[2];
			}
			break;
		default:
		}
	}
	return bytes;
};
format_gif_Tools.extractFullRGBA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var bytes = new haxe_io_Bytes(new ArrayBuffer(data.logicalScreenDescriptor.width * data.logicalScreenDescriptor.height * 4));
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		switch(val[1]) {
		case 0:
			var frame = val[2];
			var ct = frame.localColorTable?frame.colorTable:data.globalColorTable;
			if(ct == null) {
				throw new js__$Boot_HaxeError("Frame does not have a color table!");
			}
			var transparentIndex = gce != null && gce.hasTransparentColor?gce.transparentIndex * 3:-1;
			var pixels = frame.pixels;
			var x = 0;
			var writeCaret = (frame.y * data.logicalScreenDescriptor.width + frame.x) * 4;
			var lineSkip = (data.logicalScreenDescriptor.width - frame.width) * 4 + 4;
			switch((frameCaret != frameIndex && gce != null?gce.disposalMethod:format_gif_DisposalMethod.NO_ACTION)[1]) {
			case 2:
				var _g1 = 0;
				var _g = pixels.length;
				while(_g1 < _g) {
					++_g1;
					bytes.b[writeCaret] = 0;
					bytes.b[writeCaret + 1] = 0;
					bytes.b[writeCaret + 2] = 0;
					bytes.b[writeCaret + 3] = 0;
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
				break;
			case 3:
				break;
			default:
				var _g11 = 0;
				var _g2 = pixels.length;
				while(_g11 < _g2) {
					var index = pixels.b[_g11++] * 3;
					if(transparentIndex != index) {
						bytes.b[writeCaret] = ct.b[index] & 255;
						bytes.b[writeCaret + 1] = ct.b[index + 1] & 255;
						bytes.b[writeCaret + 2] = ct.b[index + 2] & 255;
						bytes.b[writeCaret + 3] = 255;
					}
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
			}
			if(frameCaret == frameIndex) {
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = val[2];
			if(ext[1] == 0) {
				gce = ext[2];
			}
			break;
		default:
		}
	}
	return bytes;
};
format_gif_Tools.loopCount = function(data) {
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 1) {
			if(val[2][1] == 3) {
				if(val[2][2][1] == 0) {
					return val[2][2][2];
				}
			}
		}
	}
	return 1;
};
format_gif_Tools.log2 = function(val) {
	return Math.log(val) / format_gif_Tools.LN2;
};
var format_mp3_SamplingRate = $hxClasses["format.mp3.SamplingRate"] = { __ename__ : ["format","mp3","SamplingRate"], __constructs__ : ["SR_8000","SR_11025","SR_12000","SR_22050","SR_24000","SR_32000","SR_44100","SR_48000","SR_Bad"] };
format_mp3_SamplingRate.SR_8000 = ["SR_8000",0];
format_mp3_SamplingRate.SR_8000.toString = $estr;
format_mp3_SamplingRate.SR_8000.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_11025 = ["SR_11025",1];
format_mp3_SamplingRate.SR_11025.toString = $estr;
format_mp3_SamplingRate.SR_11025.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_12000 = ["SR_12000",2];
format_mp3_SamplingRate.SR_12000.toString = $estr;
format_mp3_SamplingRate.SR_12000.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_22050 = ["SR_22050",3];
format_mp3_SamplingRate.SR_22050.toString = $estr;
format_mp3_SamplingRate.SR_22050.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_24000 = ["SR_24000",4];
format_mp3_SamplingRate.SR_24000.toString = $estr;
format_mp3_SamplingRate.SR_24000.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_32000 = ["SR_32000",5];
format_mp3_SamplingRate.SR_32000.toString = $estr;
format_mp3_SamplingRate.SR_32000.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_44100 = ["SR_44100",6];
format_mp3_SamplingRate.SR_44100.toString = $estr;
format_mp3_SamplingRate.SR_44100.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_48000 = ["SR_48000",7];
format_mp3_SamplingRate.SR_48000.toString = $estr;
format_mp3_SamplingRate.SR_48000.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.SR_Bad = ["SR_Bad",8];
format_mp3_SamplingRate.SR_Bad.toString = $estr;
format_mp3_SamplingRate.SR_Bad.__enum__ = format_mp3_SamplingRate;
format_mp3_SamplingRate.__empty_constructs__ = [format_mp3_SamplingRate.SR_8000,format_mp3_SamplingRate.SR_11025,format_mp3_SamplingRate.SR_12000,format_mp3_SamplingRate.SR_22050,format_mp3_SamplingRate.SR_24000,format_mp3_SamplingRate.SR_32000,format_mp3_SamplingRate.SR_44100,format_mp3_SamplingRate.SR_48000,format_mp3_SamplingRate.SR_Bad];
var format_mp3_Bitrate = $hxClasses["format.mp3.Bitrate"] = { __ename__ : ["format","mp3","Bitrate"], __constructs__ : ["BR_8","BR_16","BR_24","BR_32","BR_40","BR_48","BR_56","BR_64","BR_80","BR_96","BR_112","BR_128","BR_144","BR_160","BR_176","BR_192","BR_224","BR_256","BR_288","BR_320","BR_352","BR_384","BR_416","BR_448","BR_Free","BR_Bad"] };
format_mp3_Bitrate.BR_8 = ["BR_8",0];
format_mp3_Bitrate.BR_8.toString = $estr;
format_mp3_Bitrate.BR_8.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_16 = ["BR_16",1];
format_mp3_Bitrate.BR_16.toString = $estr;
format_mp3_Bitrate.BR_16.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_24 = ["BR_24",2];
format_mp3_Bitrate.BR_24.toString = $estr;
format_mp3_Bitrate.BR_24.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_32 = ["BR_32",3];
format_mp3_Bitrate.BR_32.toString = $estr;
format_mp3_Bitrate.BR_32.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_40 = ["BR_40",4];
format_mp3_Bitrate.BR_40.toString = $estr;
format_mp3_Bitrate.BR_40.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_48 = ["BR_48",5];
format_mp3_Bitrate.BR_48.toString = $estr;
format_mp3_Bitrate.BR_48.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_56 = ["BR_56",6];
format_mp3_Bitrate.BR_56.toString = $estr;
format_mp3_Bitrate.BR_56.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_64 = ["BR_64",7];
format_mp3_Bitrate.BR_64.toString = $estr;
format_mp3_Bitrate.BR_64.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_80 = ["BR_80",8];
format_mp3_Bitrate.BR_80.toString = $estr;
format_mp3_Bitrate.BR_80.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_96 = ["BR_96",9];
format_mp3_Bitrate.BR_96.toString = $estr;
format_mp3_Bitrate.BR_96.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_112 = ["BR_112",10];
format_mp3_Bitrate.BR_112.toString = $estr;
format_mp3_Bitrate.BR_112.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_128 = ["BR_128",11];
format_mp3_Bitrate.BR_128.toString = $estr;
format_mp3_Bitrate.BR_128.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_144 = ["BR_144",12];
format_mp3_Bitrate.BR_144.toString = $estr;
format_mp3_Bitrate.BR_144.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_160 = ["BR_160",13];
format_mp3_Bitrate.BR_160.toString = $estr;
format_mp3_Bitrate.BR_160.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_176 = ["BR_176",14];
format_mp3_Bitrate.BR_176.toString = $estr;
format_mp3_Bitrate.BR_176.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_192 = ["BR_192",15];
format_mp3_Bitrate.BR_192.toString = $estr;
format_mp3_Bitrate.BR_192.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_224 = ["BR_224",16];
format_mp3_Bitrate.BR_224.toString = $estr;
format_mp3_Bitrate.BR_224.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_256 = ["BR_256",17];
format_mp3_Bitrate.BR_256.toString = $estr;
format_mp3_Bitrate.BR_256.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_288 = ["BR_288",18];
format_mp3_Bitrate.BR_288.toString = $estr;
format_mp3_Bitrate.BR_288.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_320 = ["BR_320",19];
format_mp3_Bitrate.BR_320.toString = $estr;
format_mp3_Bitrate.BR_320.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_352 = ["BR_352",20];
format_mp3_Bitrate.BR_352.toString = $estr;
format_mp3_Bitrate.BR_352.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_384 = ["BR_384",21];
format_mp3_Bitrate.BR_384.toString = $estr;
format_mp3_Bitrate.BR_384.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_416 = ["BR_416",22];
format_mp3_Bitrate.BR_416.toString = $estr;
format_mp3_Bitrate.BR_416.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_448 = ["BR_448",23];
format_mp3_Bitrate.BR_448.toString = $estr;
format_mp3_Bitrate.BR_448.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_Free = ["BR_Free",24];
format_mp3_Bitrate.BR_Free.toString = $estr;
format_mp3_Bitrate.BR_Free.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.BR_Bad = ["BR_Bad",25];
format_mp3_Bitrate.BR_Bad.toString = $estr;
format_mp3_Bitrate.BR_Bad.__enum__ = format_mp3_Bitrate;
format_mp3_Bitrate.__empty_constructs__ = [format_mp3_Bitrate.BR_8,format_mp3_Bitrate.BR_16,format_mp3_Bitrate.BR_24,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_40,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_144,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_176,format_mp3_Bitrate.BR_192,format_mp3_Bitrate.BR_224,format_mp3_Bitrate.BR_256,format_mp3_Bitrate.BR_288,format_mp3_Bitrate.BR_320,format_mp3_Bitrate.BR_352,format_mp3_Bitrate.BR_384,format_mp3_Bitrate.BR_416,format_mp3_Bitrate.BR_448,format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_Bad];
var format_mp3_MPEG = function() { };
$hxClasses["format.mp3.MPEG"] = format_mp3_MPEG;
format_mp3_MPEG.__name__ = ["format","mp3","MPEG"];
format_mp3_MPEG.enum2Num = function(m) {
	switch(m[1]) {
	case 0:
		return 3;
	case 1:
		return 2;
	case 2:
		return 0;
	case 3:
		return format_mp3_MPEG.Reserved;
	}
};
format_mp3_MPEG.num2Enum = function(m) {
	switch(m) {
	case 0:
		return format_mp3_MPEGVersion.MPEG_V25;
	case 2:
		return format_mp3_MPEGVersion.MPEG_V2;
	case 3:
		return format_mp3_MPEGVersion.MPEG_V1;
	default:
		return format_mp3_MPEGVersion.MPEG_Reserved;
	}
};
format_mp3_MPEG.srNum2Enum = function(sr) {
	switch(sr) {
	case 8000:
		return format_mp3_SamplingRate.SR_8000;
	case 11025:
		return format_mp3_SamplingRate.SR_11025;
	case 12000:
		return format_mp3_SamplingRate.SR_12000;
	case 22050:
		return format_mp3_SamplingRate.SR_22050;
	case 24000:
		return format_mp3_SamplingRate.SR_24000;
	case 32000:
		return format_mp3_SamplingRate.SR_32000;
	case 44100:
		return format_mp3_SamplingRate.SR_44100;
	case 48000:
		return format_mp3_SamplingRate.SR_48000;
	default:
		return format_mp3_SamplingRate.SR_Bad;
	}
};
format_mp3_MPEG.srEnum2Num = function(sr) {
	switch(sr[1]) {
	case 0:
		return 8000;
	case 1:
		return 11025;
	case 2:
		return 12000;
	case 3:
		return 22050;
	case 4:
		return 24000;
	case 5:
		return 32000;
	case 6:
		return 44100;
	case 7:
		return 48000;
	case 8:
		return -1;
	}
};
format_mp3_MPEG.getBitrateIdx = function(br,mpeg,layer) {
	var arr = (mpeg == format_mp3_MPEGVersion.MPEG_V1?format_mp3_MPEG.V1_Bitrates:format_mp3_MPEG.V2_Bitrates)[format_mp3_CLayer.enum2Num(layer)];
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(arr[i] == br) {
			return i;
		}
	}
	throw new js__$Boot_HaxeError("Bitrate index not found");
};
format_mp3_MPEG.getSamplingRateIdx = function(sr,mpeg) {
	var arr = format_mp3_MPEG.SamplingRates[format_mp3_MPEG.enum2Num(mpeg)];
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		if(arr[i] == sr) {
			return i;
		}
	}
	throw new js__$Boot_HaxeError("Sampling rate index not found");
};
format_mp3_MPEG.bitrateEnum2Num = function(br) {
	switch(br[1]) {
	case 0:
		return 8;
	case 1:
		return 16;
	case 2:
		return 24;
	case 3:
		return 32;
	case 4:
		return 40;
	case 5:
		return 48;
	case 6:
		return 56;
	case 7:
		return 64;
	case 8:
		return 80;
	case 9:
		return 96;
	case 10:
		return 112;
	case 11:
		return 128;
	case 12:
		return 144;
	case 13:
		return 160;
	case 14:
		return 176;
	case 15:
		return 192;
	case 16:
		return 224;
	case 17:
		return 256;
	case 18:
		return 288;
	case 19:
		return 320;
	case 20:
		return 352;
	case 21:
		return 384;
	case 22:
		return 416;
	case 23:
		return 448;
	case 24:
		return 0;
	case 25:
		return -1;
	}
};
format_mp3_MPEG.bitrateNum2Enum = function(br) {
	switch(br) {
	case 0:
		return format_mp3_Bitrate.BR_Free;
	case 8:
		return format_mp3_Bitrate.BR_8;
	case 16:
		return format_mp3_Bitrate.BR_16;
	case 24:
		return format_mp3_Bitrate.BR_24;
	case 32:
		return format_mp3_Bitrate.BR_32;
	case 40:
		return format_mp3_Bitrate.BR_40;
	case 48:
		return format_mp3_Bitrate.BR_48;
	case 56:
		return format_mp3_Bitrate.BR_56;
	case 64:
		return format_mp3_Bitrate.BR_64;
	case 80:
		return format_mp3_Bitrate.BR_80;
	case 96:
		return format_mp3_Bitrate.BR_96;
	case 112:
		return format_mp3_Bitrate.BR_112;
	case 128:
		return format_mp3_Bitrate.BR_128;
	case 144:
		return format_mp3_Bitrate.BR_144;
	case 160:
		return format_mp3_Bitrate.BR_160;
	case 176:
		return format_mp3_Bitrate.BR_176;
	case 192:
		return format_mp3_Bitrate.BR_192;
	case 224:
		return format_mp3_Bitrate.BR_224;
	case 256:
		return format_mp3_Bitrate.BR_256;
	case 288:
		return format_mp3_Bitrate.BR_288;
	case 320:
		return format_mp3_Bitrate.BR_320;
	case 352:
		return format_mp3_Bitrate.BR_352;
	case 384:
		return format_mp3_Bitrate.BR_384;
	case 416:
		return format_mp3_Bitrate.BR_416;
	case 448:
		return format_mp3_Bitrate.BR_448;
	default:
		return format_mp3_Bitrate.BR_Bad;
	}
};
var format_mp3_CLayer = function() { };
$hxClasses["format.mp3.CLayer"] = format_mp3_CLayer;
format_mp3_CLayer.__name__ = ["format","mp3","CLayer"];
format_mp3_CLayer.enum2Num = function(l) {
	switch(l[1]) {
	case 0:
		return format_mp3_CLayer.LReserved;
	case 1:
		return format_mp3_CLayer.LLayer3;
	case 2:
		return format_mp3_CLayer.LLayer2;
	case 3:
		return format_mp3_CLayer.LLayer1;
	}
};
format_mp3_CLayer.num2Enum = function(l) {
	switch(l) {
	case 1:
		return format_mp3_Layer.Layer3;
	case 2:
		return format_mp3_Layer.Layer2;
	case 3:
		return format_mp3_Layer.Layer1;
	default:
		return format_mp3_Layer.LayerReserved;
	}
};
var format_mp3_CChannelMode = function() { };
$hxClasses["format.mp3.CChannelMode"] = format_mp3_CChannelMode;
format_mp3_CChannelMode.__name__ = ["format","mp3","CChannelMode"];
format_mp3_CChannelMode.enum2Num = function(c) {
	switch(c[1]) {
	case 0:
		return 0;
	case 1:
		return 1;
	case 2:
		return 2;
	case 3:
		return 3;
	}
};
format_mp3_CChannelMode.num2Enum = function(c) {
	switch(c) {
	case 0:
		return format_mp3_ChannelMode.Stereo;
	case 1:
		return format_mp3_ChannelMode.JointStereo;
	case 2:
		return format_mp3_ChannelMode.DualChannel;
	case 3:
		return format_mp3_ChannelMode.Mono;
	default:
		throw new js__$Boot_HaxeError("assert");
	}
};
var format_mp3_CEmphasis = function() { };
$hxClasses["format.mp3.CEmphasis"] = format_mp3_CEmphasis;
format_mp3_CEmphasis.__name__ = ["format","mp3","CEmphasis"];
format_mp3_CEmphasis.enum2Num = function(c) {
	switch(c[1]) {
	case 0:
		return 0;
	case 1:
		return 1;
	case 2:
		return 3;
	case 3:
		return 2;
	}
};
format_mp3_CEmphasis.num2Enum = function(c) {
	switch(c) {
	case 0:
		return format_mp3_Emphasis.NoEmphasis;
	case 1:
		return format_mp3_Emphasis.Ms50_15;
	case 2:
		return format_mp3_Emphasis.InvalidEmphasis;
	case 3:
		return format_mp3_Emphasis.CCIT_J17;
	default:
		throw new js__$Boot_HaxeError("assert");
	}
};
var format_mp3_MPEGVersion = $hxClasses["format.mp3.MPEGVersion"] = { __ename__ : ["format","mp3","MPEGVersion"], __constructs__ : ["MPEG_V1","MPEG_V2","MPEG_V25","MPEG_Reserved"] };
format_mp3_MPEGVersion.MPEG_V1 = ["MPEG_V1",0];
format_mp3_MPEGVersion.MPEG_V1.toString = $estr;
format_mp3_MPEGVersion.MPEG_V1.__enum__ = format_mp3_MPEGVersion;
format_mp3_MPEGVersion.MPEG_V2 = ["MPEG_V2",1];
format_mp3_MPEGVersion.MPEG_V2.toString = $estr;
format_mp3_MPEGVersion.MPEG_V2.__enum__ = format_mp3_MPEGVersion;
format_mp3_MPEGVersion.MPEG_V25 = ["MPEG_V25",2];
format_mp3_MPEGVersion.MPEG_V25.toString = $estr;
format_mp3_MPEGVersion.MPEG_V25.__enum__ = format_mp3_MPEGVersion;
format_mp3_MPEGVersion.MPEG_Reserved = ["MPEG_Reserved",3];
format_mp3_MPEGVersion.MPEG_Reserved.toString = $estr;
format_mp3_MPEGVersion.MPEG_Reserved.__enum__ = format_mp3_MPEGVersion;
format_mp3_MPEGVersion.__empty_constructs__ = [format_mp3_MPEGVersion.MPEG_V1,format_mp3_MPEGVersion.MPEG_V2,format_mp3_MPEGVersion.MPEG_V25,format_mp3_MPEGVersion.MPEG_Reserved];
var format_mp3_Layer = $hxClasses["format.mp3.Layer"] = { __ename__ : ["format","mp3","Layer"], __constructs__ : ["LayerReserved","Layer3","Layer2","Layer1"] };
format_mp3_Layer.LayerReserved = ["LayerReserved",0];
format_mp3_Layer.LayerReserved.toString = $estr;
format_mp3_Layer.LayerReserved.__enum__ = format_mp3_Layer;
format_mp3_Layer.Layer3 = ["Layer3",1];
format_mp3_Layer.Layer3.toString = $estr;
format_mp3_Layer.Layer3.__enum__ = format_mp3_Layer;
format_mp3_Layer.Layer2 = ["Layer2",2];
format_mp3_Layer.Layer2.toString = $estr;
format_mp3_Layer.Layer2.__enum__ = format_mp3_Layer;
format_mp3_Layer.Layer1 = ["Layer1",3];
format_mp3_Layer.Layer1.toString = $estr;
format_mp3_Layer.Layer1.__enum__ = format_mp3_Layer;
format_mp3_Layer.__empty_constructs__ = [format_mp3_Layer.LayerReserved,format_mp3_Layer.Layer3,format_mp3_Layer.Layer2,format_mp3_Layer.Layer1];
var format_mp3_ChannelMode = $hxClasses["format.mp3.ChannelMode"] = { __ename__ : ["format","mp3","ChannelMode"], __constructs__ : ["Stereo","JointStereo","DualChannel","Mono"] };
format_mp3_ChannelMode.Stereo = ["Stereo",0];
format_mp3_ChannelMode.Stereo.toString = $estr;
format_mp3_ChannelMode.Stereo.__enum__ = format_mp3_ChannelMode;
format_mp3_ChannelMode.JointStereo = ["JointStereo",1];
format_mp3_ChannelMode.JointStereo.toString = $estr;
format_mp3_ChannelMode.JointStereo.__enum__ = format_mp3_ChannelMode;
format_mp3_ChannelMode.DualChannel = ["DualChannel",2];
format_mp3_ChannelMode.DualChannel.toString = $estr;
format_mp3_ChannelMode.DualChannel.__enum__ = format_mp3_ChannelMode;
format_mp3_ChannelMode.Mono = ["Mono",3];
format_mp3_ChannelMode.Mono.toString = $estr;
format_mp3_ChannelMode.Mono.__enum__ = format_mp3_ChannelMode;
format_mp3_ChannelMode.__empty_constructs__ = [format_mp3_ChannelMode.Stereo,format_mp3_ChannelMode.JointStereo,format_mp3_ChannelMode.DualChannel,format_mp3_ChannelMode.Mono];
var format_mp3_Emphasis = $hxClasses["format.mp3.Emphasis"] = { __ename__ : ["format","mp3","Emphasis"], __constructs__ : ["NoEmphasis","Ms50_15","CCIT_J17","InvalidEmphasis"] };
format_mp3_Emphasis.NoEmphasis = ["NoEmphasis",0];
format_mp3_Emphasis.NoEmphasis.toString = $estr;
format_mp3_Emphasis.NoEmphasis.__enum__ = format_mp3_Emphasis;
format_mp3_Emphasis.Ms50_15 = ["Ms50_15",1];
format_mp3_Emphasis.Ms50_15.toString = $estr;
format_mp3_Emphasis.Ms50_15.__enum__ = format_mp3_Emphasis;
format_mp3_Emphasis.CCIT_J17 = ["CCIT_J17",2];
format_mp3_Emphasis.CCIT_J17.toString = $estr;
format_mp3_Emphasis.CCIT_J17.__enum__ = format_mp3_Emphasis;
format_mp3_Emphasis.InvalidEmphasis = ["InvalidEmphasis",3];
format_mp3_Emphasis.InvalidEmphasis.toString = $estr;
format_mp3_Emphasis.InvalidEmphasis.__enum__ = format_mp3_Emphasis;
format_mp3_Emphasis.__empty_constructs__ = [format_mp3_Emphasis.NoEmphasis,format_mp3_Emphasis.Ms50_15,format_mp3_Emphasis.CCIT_J17,format_mp3_Emphasis.InvalidEmphasis];
var format_mp3_FrameType = $hxClasses["format.mp3.FrameType"] = { __ename__ : ["format","mp3","FrameType"], __constructs__ : ["FT_MP3","FT_NONE"] };
format_mp3_FrameType.FT_MP3 = ["FT_MP3",0];
format_mp3_FrameType.FT_MP3.toString = $estr;
format_mp3_FrameType.FT_MP3.__enum__ = format_mp3_FrameType;
format_mp3_FrameType.FT_NONE = ["FT_NONE",1];
format_mp3_FrameType.FT_NONE.toString = $estr;
format_mp3_FrameType.FT_NONE.__enum__ = format_mp3_FrameType;
format_mp3_FrameType.__empty_constructs__ = [format_mp3_FrameType.FT_MP3,format_mp3_FrameType.FT_NONE];
var format_mp3_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(true);
	this.bits = new format_tools_BitsInput(i);
	this.samples = 0;
	this.sampleSize = 0;
	this.any_read = false;
};
$hxClasses["format.mp3.Reader"] = format_mp3_Reader;
format_mp3_Reader.__name__ = ["format","mp3","Reader"];
format_mp3_Reader.prototype = {
	skipID3v2: function() {
		this.id3v2_version = this.i.readUInt16();
		this.id3v2_flags = this.i.readByte();
		var size = this.i.readByte() & 127;
		size = size << 7 | this.i.readByte() & 127;
		size = size << 7 | this.i.readByte() & 127;
		size = size << 7 | this.i.readByte() & 127;
		this.id3v2_data = this.i.read(size);
	}
	,seekFrame: function() {
		try {
			var b;
			while(true) {
				b = this.i.readByte();
				if(!this.any_read) {
					this.any_read = true;
					if(b == 73) {
						b = this.i.readByte();
						if(b == 68) {
							b = this.i.readByte();
							if(b == 51) {
								this.skipID3v2();
							}
						}
					}
				}
				if(b == 255) {
					this.bits.nbits = 0;
					b = this.bits.readBits(3);
					if(b == 7) {
						return format_mp3_FrameType.FT_MP3;
					}
				}
			}
		} catch( ex ) {
			if (ex instanceof js__$Boot_HaxeError) ex = ex.val;
			if( js_Boot.__instanceof(ex,haxe_io_Eof) ) {
				return format_mp3_FrameType.FT_NONE;
			} else throw(ex);
		}
	}
	,readFrames: function() {
		var frames = [];
		var ft;
		while(true) {
			ft = this.seekFrame();
			if(!(ft != format_mp3_FrameType.FT_NONE)) {
				break;
			}
			switch(ft[1]) {
			case 0:
				var f = this.readFrame();
				if(f != null) {
					frames.push(f);
				}
				break;
			case 1:
				break;
			}
		}
		return frames;
	}
	,readFrameHeader: function() {
		var version = this.bits.readBits(2);
		var layer = this.bits.readBits(2);
		var hasCrc = !this.bits.readBit();
		if(version == format_mp3_MPEG.Reserved || layer == format_mp3_CLayer.LReserved) {
			return null;
		}
		var bitrate = format_mp3_Tools.getBitrate(version,layer,this.bits.readBits(4));
		var samplingRate = format_mp3_Tools.getSamplingRate(version,this.bits.readBits(2));
		var isPadded = this.bits.readBit();
		var privateBit = this.bits.readBit();
		if(bitrate == format_mp3_Bitrate.BR_Bad || bitrate == format_mp3_Bitrate.BR_Free || samplingRate == format_mp3_SamplingRate.SR_Bad) {
			return null;
		}
		var channelMode = this.bits.readBits(2);
		var isIntensityStereo = this.bits.readBit();
		var isMSStereo = this.bits.readBit();
		var isCopyrighted = this.bits.readBit();
		var isOriginal = this.bits.readBit();
		var emphasis = this.bits.readBits(2);
		var crc16 = 0;
		if(hasCrc) {
			crc16 = this.i.readUInt16();
		}
		return { version : format_mp3_MPEG.num2Enum(version), layer : format_mp3_CLayer.num2Enum(layer), hasCrc : hasCrc, crc16 : crc16, bitrate : bitrate, samplingRate : samplingRate, isPadded : isPadded, privateBit : privateBit, channelMode : format_mp3_CChannelMode.num2Enum(channelMode), isIntensityStereo : isIntensityStereo, isMSStereo : isMSStereo, isCopyrighted : isCopyrighted, isOriginal : isOriginal, emphasis : format_mp3_CEmphasis.num2Enum(emphasis)};
	}
	,readFrame: function() {
		var header = this.readFrameHeader();
		if(header == null || format_mp3_Tools.isInvalidFrameHeader(header)) {
			return null;
		}
		try {
			var data = this.i.read(format_mp3_Tools.getSampleDataSizeHdr(header));
			this.samples += format_mp3_Tools.getSampleCountHdr(header);
			this.sampleSize += data.length;
			return { header : header, data : data};
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
				return null;
			} else throw(e);
		}
	}
	,read: function() {
		return { frames : this.readFrames(), sampleCount : this.samples, sampleSize : this.sampleSize, id3v2 : this.id3v2_data == null?null:{ versionBytes : this.id3v2_version, flagByte : this.id3v2_flags, data : this.id3v2_data}};
	}
	,__class__: format_mp3_Reader
};
var format_mp3_Tools = function() { };
$hxClasses["format.mp3.Tools"] = format_mp3_Tools;
format_mp3_Tools.__name__ = ["format","mp3","Tools"];
format_mp3_Tools.getBitrate = function(mpegVersion,layerIdx,bitrateIdx) {
	if(mpegVersion == format_mp3_MPEG.Reserved || layerIdx == format_mp3_CLayer.LReserved) {
		return format_mp3_Bitrate.BR_Bad;
	}
	return (mpegVersion == 3?format_mp3_MPEG.V1_Bitrates:format_mp3_MPEG.V2_Bitrates)[layerIdx][bitrateIdx];
};
format_mp3_Tools.getSamplingRate = function(mpegVersion,samplingRateIdx) {
	return format_mp3_MPEG.SamplingRates[mpegVersion][samplingRateIdx];
};
format_mp3_Tools.isInvalidFrameHeader = function(hdr) {
	if(!(hdr.version == format_mp3_MPEGVersion.MPEG_Reserved || hdr.layer == format_mp3_Layer.LayerReserved || hdr.bitrate == format_mp3_Bitrate.BR_Bad || hdr.bitrate == format_mp3_Bitrate.BR_Free)) {
		return hdr.samplingRate == format_mp3_SamplingRate.SR_Bad;
	} else {
		return true;
	}
};
format_mp3_Tools.getSampleDataSize = function(mpegVersion,bitrate,samplingRate,isPadded,hasCrc) {
	return ((mpegVersion == 3?144:72) * bitrate * 1000 / samplingRate | 0) + (isPadded?1:0) - (hasCrc?2:0) - 4;
};
format_mp3_Tools.getSampleDataSizeHdr = function(hdr) {
	return format_mp3_Tools.getSampleDataSize(format_mp3_MPEG.enum2Num(hdr.version),format_mp3_MPEG.bitrateEnum2Num(hdr.bitrate),format_mp3_MPEG.srEnum2Num(hdr.samplingRate),hdr.isPadded,hdr.hasCrc);
};
format_mp3_Tools.getSampleCount = function(mpegVersion) {
	if(mpegVersion == 3) {
		return 1152;
	} else {
		return 576;
	}
};
format_mp3_Tools.getSampleCountHdr = function(hdr) {
	return format_mp3_Tools.getSampleCount(format_mp3_MPEG.enum2Num(hdr.version));
};
format_mp3_Tools.getFrameInfo = function(fr) {
	return Std.string(fr.header.version) + ", " + Std.string(fr.header.layer) + ", " + Std.string(fr.header.channelMode) + ", " + Std.string(fr.header.samplingRate) + " Hz, " + Std.string(fr.header.bitrate) + " kbps " + "Emphasis: " + Std.string(fr.header.emphasis) + ", " + (fr.header.hasCrc?"(CRC) ":"") + (fr.header.isPadded?"(Padded) ":"") + (fr.header.isIntensityStereo?"(Intensity Stereo) ":"") + (fr.header.isMSStereo?"(MS Stereo) ":"") + (fr.header.isCopyrighted?"(Copyrighted) ":"") + (fr.header.isOriginal?"(Original) ":"");
};
var format_neko_Builtins = function(vm) {
	this.vm = vm;
	this.table = new haxe_ds_StringMap();
	this.b("objsetproto",format_neko_ValueFunction.VFun2($bind(this,this.objsetproto)));
	this.b("typeof",format_neko_ValueFunction.VFun1($bind(this,this["typeof"])));
	this.b("string",format_neko_ValueFunction.VFun1($bind(this,this.string)));
	this.b("print",format_neko_ValueFunction.VFunVar($bind(this,this.print)));
};
$hxClasses["format.neko.Builtins"] = format_neko_Builtins;
format_neko_Builtins.__name__ = ["format","neko","Builtins"];
format_neko_Builtins.prototype = {
	b: function(name,f) {
		var value = format_neko_Value.VFunction(f);
		var _this = this.table;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,_nargs: function(f) {
		switch(f[1]) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		case 6:
			return -1;
		}
	}
	,_compare: function(a,b) {
		switch(a[1]) {
		case 1:
			var a1 = a[2];
			switch(b[1]) {
			case 1:
				var b1 = b[2];
				if(a1 == b1) {
					return 0;
				} else if(a1 < b1) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 2:
				var b2 = b[2];
				if(a1 == b2) {
					return 0;
				} else if(a1 < b2) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 4:
				var b3 = b[2];
				var a2 = a1 == null?"null":"" + a1;
				if(a2 == b3) {
					return 0;
				} else if(a2 < b3) {
					return -1;
				} else {
					return 1;
				}
				break;
			default:
			}
			break;
		case 2:
			var a3 = a[2];
			switch(b[1]) {
			case 1:
				var b4 = b[2];
				if(a3 == b4) {
					return 0;
				} else if(a3 < b4) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 2:
				var b5 = b[2];
				if(a3 == b5) {
					return 0;
				} else if(a3 < b5) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 4:
				var b6 = b[2];
				var a4 = a3 == null?"null":"" + a3;
				if(a4 == b6) {
					return 0;
				} else if(a4 < b6) {
					return -1;
				} else {
					return 1;
				}
				break;
			default:
			}
			break;
		case 3:
			var a5 = a[2];
			switch(b[1]) {
			case 3:
				if(a5 == b[2]) {
					return 0;
				} else if(a5) {
					return 1;
				} else {
					return -1;
				}
				break;
			case 4:
				var b7 = b[2];
				var a6 = a5 == null?"null":"" + a5;
				if(a6 == b7) {
					return 0;
				} else if(a6 < b7) {
					return -1;
				} else {
					return 1;
				}
				break;
			default:
			}
			break;
		case 4:
			var a7 = a[2];
			switch(b[1]) {
			case 1:
				var b8 = b[2];
				var b9 = b8 == null?"null":"" + b8;
				if(a7 == b9) {
					return 0;
				} else if(a7 < b9) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 2:
				var b10 = b[2];
				var b11 = b10 == null?"null":"" + b10;
				if(a7 == b11) {
					return 0;
				} else if(a7 < b11) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 3:
				var b12 = b[2];
				var b13 = b12 == null?"null":"" + b12;
				if(a7 == b13) {
					return 0;
				} else if(a7 < b13) {
					return -1;
				} else {
					return 1;
				}
				break;
			case 4:
				var b14 = b[2];
				if(a7 == b14) {
					return 0;
				} else if(a7 < b14) {
					return -1;
				} else {
					return 1;
				}
				break;
			default:
			}
			break;
		case 5:
			var a8 = a[2];
			if(b[1] == 5) {
				if(a8 == b[2]) {
					return 0;
				}
				throw new js__$Boot_HaxeError("TODO");
			}
			break;
		case 9:
			var a9 = a[2];
			if(b[1] == 9) {
				if(a9 == b[2]) {
					return 0;
				} else {
					return -1000;
				}
			}
			break;
		default:
		}
		if(a == b) {
			return 0;
		} else {
			return -1000;
		}
	}
	,_string: function(v) {
		switch(v[1]) {
		case 0:
			return "null";
		case 1:
			var i = v[2];
			if(i == null) {
				return "null";
			} else {
				return "" + i;
			}
			break;
		case 2:
			var f = v[2];
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 3:
			if(v[2]) {
				return "true";
			} else {
				return "false";
			}
			break;
		case 4:
			return v[2];
		case 5:
			throw new js__$Boot_HaxeError("TODO");
			break;
		case 6:
			var a = v[2];
			var b_b = "";
			b_b = "[";
			var first = true;
			var _g = 0;
			while(_g < a.length) {
				var v1 = a[_g];
				++_g;
				if(first) {
					first = false;
				} else {
					b_b += ",";
				}
				b_b += Std.string(this._string(v1));
			}
			b_b += "]";
			return b_b;
		case 7:
			return "#function:" + this._nargs(v[2]);
		case 8:
			return "#abstract";
		case 9:
			return Std.string(v[2]);
		case 10:
			return Std.string(v[2]);
		}
	}
	,'typeof': function(o) {
		var tmp;
		switch(o[1]) {
		case 9:
			tmp = 5;
			break;
		case 10:
			tmp = 7;
			break;
		default:
			tmp = o[1];
		}
		return format_neko_Value.VInt(tmp);
	}
	,print: function(vl) {
		var buf_b = "";
		var _g = 0;
		while(_g < vl.length) {
			var v = vl[_g];
			++_g;
			buf_b += Std.string(this._string(v));
		}
		this.vm.doPrint(buf_b);
		return format_neko_Value.VNull;
	}
	,string: function(v) {
		return format_neko_Value.VString(this._string(v));
	}
	,objsetproto: function(o,p) {
		if(o[1] == 5) {
			var o1 = o[2];
			switch(p[1]) {
			case 0:
				o1.proto = null;
				break;
			case 5:
				o1.proto = p[2];
				break;
			default:
				return null;
			}
		} else {
			return null;
		}
		return format_neko_Value.VNull;
	}
	,__class__: format_neko_Builtins
};
var format_neko_Opcode = $hxClasses["format.neko.Opcode"] = { __ename__ : ["format","neko","Opcode"], __constructs__ : ["OAccNull","OAccTrue","OAccFalse","OAccThis","OAccInt","OAccStack","OAccGlobal","OAccEnv","OAccField","OAccArray","OAccIndex","OAccBuiltin","OSetStack","OSetGlobal","OSetEnv","OSetField","OSetArray","OSetIndex","OSetThis","OPush","OPop","OCall","OObjCall","OJump","OJumpIf","OJumpIfNot","OTrap","OEndTrap","ORet","OMakeEnv","OMakeArray","OBool","OIsNull","OIsNotNull","OAdd","OSub","OMult","ODiv","OMod","OShl","OShr","OUShr","OOr","OAnd","OXor","OEq","ONeq","OGt","OGte","OLt","OLte","ONot","OTypeOf","OCompare","OHash","ONew","OJumpTable","OApply","OAccStack0","OAccStack1","OAccIndex0","OAccIndex1","OPhysCompare","OTailCall"] };
format_neko_Opcode.OAccNull = ["OAccNull",0];
format_neko_Opcode.OAccNull.toString = $estr;
format_neko_Opcode.OAccNull.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccTrue = ["OAccTrue",1];
format_neko_Opcode.OAccTrue.toString = $estr;
format_neko_Opcode.OAccTrue.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccFalse = ["OAccFalse",2];
format_neko_Opcode.OAccFalse.toString = $estr;
format_neko_Opcode.OAccFalse.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccThis = ["OAccThis",3];
format_neko_Opcode.OAccThis.toString = $estr;
format_neko_Opcode.OAccThis.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccInt = ["OAccInt",4];
format_neko_Opcode.OAccInt.toString = $estr;
format_neko_Opcode.OAccInt.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccStack = ["OAccStack",5];
format_neko_Opcode.OAccStack.toString = $estr;
format_neko_Opcode.OAccStack.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccGlobal = ["OAccGlobal",6];
format_neko_Opcode.OAccGlobal.toString = $estr;
format_neko_Opcode.OAccGlobal.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccEnv = ["OAccEnv",7];
format_neko_Opcode.OAccEnv.toString = $estr;
format_neko_Opcode.OAccEnv.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccField = ["OAccField",8];
format_neko_Opcode.OAccField.toString = $estr;
format_neko_Opcode.OAccField.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccArray = ["OAccArray",9];
format_neko_Opcode.OAccArray.toString = $estr;
format_neko_Opcode.OAccArray.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccIndex = ["OAccIndex",10];
format_neko_Opcode.OAccIndex.toString = $estr;
format_neko_Opcode.OAccIndex.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccBuiltin = ["OAccBuiltin",11];
format_neko_Opcode.OAccBuiltin.toString = $estr;
format_neko_Opcode.OAccBuiltin.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetStack = ["OSetStack",12];
format_neko_Opcode.OSetStack.toString = $estr;
format_neko_Opcode.OSetStack.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetGlobal = ["OSetGlobal",13];
format_neko_Opcode.OSetGlobal.toString = $estr;
format_neko_Opcode.OSetGlobal.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetEnv = ["OSetEnv",14];
format_neko_Opcode.OSetEnv.toString = $estr;
format_neko_Opcode.OSetEnv.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetField = ["OSetField",15];
format_neko_Opcode.OSetField.toString = $estr;
format_neko_Opcode.OSetField.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetArray = ["OSetArray",16];
format_neko_Opcode.OSetArray.toString = $estr;
format_neko_Opcode.OSetArray.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetIndex = ["OSetIndex",17];
format_neko_Opcode.OSetIndex.toString = $estr;
format_neko_Opcode.OSetIndex.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSetThis = ["OSetThis",18];
format_neko_Opcode.OSetThis.toString = $estr;
format_neko_Opcode.OSetThis.__enum__ = format_neko_Opcode;
format_neko_Opcode.OPush = ["OPush",19];
format_neko_Opcode.OPush.toString = $estr;
format_neko_Opcode.OPush.__enum__ = format_neko_Opcode;
format_neko_Opcode.OPop = ["OPop",20];
format_neko_Opcode.OPop.toString = $estr;
format_neko_Opcode.OPop.__enum__ = format_neko_Opcode;
format_neko_Opcode.OCall = ["OCall",21];
format_neko_Opcode.OCall.toString = $estr;
format_neko_Opcode.OCall.__enum__ = format_neko_Opcode;
format_neko_Opcode.OObjCall = ["OObjCall",22];
format_neko_Opcode.OObjCall.toString = $estr;
format_neko_Opcode.OObjCall.__enum__ = format_neko_Opcode;
format_neko_Opcode.OJump = ["OJump",23];
format_neko_Opcode.OJump.toString = $estr;
format_neko_Opcode.OJump.__enum__ = format_neko_Opcode;
format_neko_Opcode.OJumpIf = ["OJumpIf",24];
format_neko_Opcode.OJumpIf.toString = $estr;
format_neko_Opcode.OJumpIf.__enum__ = format_neko_Opcode;
format_neko_Opcode.OJumpIfNot = ["OJumpIfNot",25];
format_neko_Opcode.OJumpIfNot.toString = $estr;
format_neko_Opcode.OJumpIfNot.__enum__ = format_neko_Opcode;
format_neko_Opcode.OTrap = ["OTrap",26];
format_neko_Opcode.OTrap.toString = $estr;
format_neko_Opcode.OTrap.__enum__ = format_neko_Opcode;
format_neko_Opcode.OEndTrap = ["OEndTrap",27];
format_neko_Opcode.OEndTrap.toString = $estr;
format_neko_Opcode.OEndTrap.__enum__ = format_neko_Opcode;
format_neko_Opcode.ORet = ["ORet",28];
format_neko_Opcode.ORet.toString = $estr;
format_neko_Opcode.ORet.__enum__ = format_neko_Opcode;
format_neko_Opcode.OMakeEnv = ["OMakeEnv",29];
format_neko_Opcode.OMakeEnv.toString = $estr;
format_neko_Opcode.OMakeEnv.__enum__ = format_neko_Opcode;
format_neko_Opcode.OMakeArray = ["OMakeArray",30];
format_neko_Opcode.OMakeArray.toString = $estr;
format_neko_Opcode.OMakeArray.__enum__ = format_neko_Opcode;
format_neko_Opcode.OBool = ["OBool",31];
format_neko_Opcode.OBool.toString = $estr;
format_neko_Opcode.OBool.__enum__ = format_neko_Opcode;
format_neko_Opcode.OIsNull = ["OIsNull",32];
format_neko_Opcode.OIsNull.toString = $estr;
format_neko_Opcode.OIsNull.__enum__ = format_neko_Opcode;
format_neko_Opcode.OIsNotNull = ["OIsNotNull",33];
format_neko_Opcode.OIsNotNull.toString = $estr;
format_neko_Opcode.OIsNotNull.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAdd = ["OAdd",34];
format_neko_Opcode.OAdd.toString = $estr;
format_neko_Opcode.OAdd.__enum__ = format_neko_Opcode;
format_neko_Opcode.OSub = ["OSub",35];
format_neko_Opcode.OSub.toString = $estr;
format_neko_Opcode.OSub.__enum__ = format_neko_Opcode;
format_neko_Opcode.OMult = ["OMult",36];
format_neko_Opcode.OMult.toString = $estr;
format_neko_Opcode.OMult.__enum__ = format_neko_Opcode;
format_neko_Opcode.ODiv = ["ODiv",37];
format_neko_Opcode.ODiv.toString = $estr;
format_neko_Opcode.ODiv.__enum__ = format_neko_Opcode;
format_neko_Opcode.OMod = ["OMod",38];
format_neko_Opcode.OMod.toString = $estr;
format_neko_Opcode.OMod.__enum__ = format_neko_Opcode;
format_neko_Opcode.OShl = ["OShl",39];
format_neko_Opcode.OShl.toString = $estr;
format_neko_Opcode.OShl.__enum__ = format_neko_Opcode;
format_neko_Opcode.OShr = ["OShr",40];
format_neko_Opcode.OShr.toString = $estr;
format_neko_Opcode.OShr.__enum__ = format_neko_Opcode;
format_neko_Opcode.OUShr = ["OUShr",41];
format_neko_Opcode.OUShr.toString = $estr;
format_neko_Opcode.OUShr.__enum__ = format_neko_Opcode;
format_neko_Opcode.OOr = ["OOr",42];
format_neko_Opcode.OOr.toString = $estr;
format_neko_Opcode.OOr.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAnd = ["OAnd",43];
format_neko_Opcode.OAnd.toString = $estr;
format_neko_Opcode.OAnd.__enum__ = format_neko_Opcode;
format_neko_Opcode.OXor = ["OXor",44];
format_neko_Opcode.OXor.toString = $estr;
format_neko_Opcode.OXor.__enum__ = format_neko_Opcode;
format_neko_Opcode.OEq = ["OEq",45];
format_neko_Opcode.OEq.toString = $estr;
format_neko_Opcode.OEq.__enum__ = format_neko_Opcode;
format_neko_Opcode.ONeq = ["ONeq",46];
format_neko_Opcode.ONeq.toString = $estr;
format_neko_Opcode.ONeq.__enum__ = format_neko_Opcode;
format_neko_Opcode.OGt = ["OGt",47];
format_neko_Opcode.OGt.toString = $estr;
format_neko_Opcode.OGt.__enum__ = format_neko_Opcode;
format_neko_Opcode.OGte = ["OGte",48];
format_neko_Opcode.OGte.toString = $estr;
format_neko_Opcode.OGte.__enum__ = format_neko_Opcode;
format_neko_Opcode.OLt = ["OLt",49];
format_neko_Opcode.OLt.toString = $estr;
format_neko_Opcode.OLt.__enum__ = format_neko_Opcode;
format_neko_Opcode.OLte = ["OLte",50];
format_neko_Opcode.OLte.toString = $estr;
format_neko_Opcode.OLte.__enum__ = format_neko_Opcode;
format_neko_Opcode.ONot = ["ONot",51];
format_neko_Opcode.ONot.toString = $estr;
format_neko_Opcode.ONot.__enum__ = format_neko_Opcode;
format_neko_Opcode.OTypeOf = ["OTypeOf",52];
format_neko_Opcode.OTypeOf.toString = $estr;
format_neko_Opcode.OTypeOf.__enum__ = format_neko_Opcode;
format_neko_Opcode.OCompare = ["OCompare",53];
format_neko_Opcode.OCompare.toString = $estr;
format_neko_Opcode.OCompare.__enum__ = format_neko_Opcode;
format_neko_Opcode.OHash = ["OHash",54];
format_neko_Opcode.OHash.toString = $estr;
format_neko_Opcode.OHash.__enum__ = format_neko_Opcode;
format_neko_Opcode.ONew = ["ONew",55];
format_neko_Opcode.ONew.toString = $estr;
format_neko_Opcode.ONew.__enum__ = format_neko_Opcode;
format_neko_Opcode.OJumpTable = ["OJumpTable",56];
format_neko_Opcode.OJumpTable.toString = $estr;
format_neko_Opcode.OJumpTable.__enum__ = format_neko_Opcode;
format_neko_Opcode.OApply = ["OApply",57];
format_neko_Opcode.OApply.toString = $estr;
format_neko_Opcode.OApply.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccStack0 = ["OAccStack0",58];
format_neko_Opcode.OAccStack0.toString = $estr;
format_neko_Opcode.OAccStack0.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccStack1 = ["OAccStack1",59];
format_neko_Opcode.OAccStack1.toString = $estr;
format_neko_Opcode.OAccStack1.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccIndex0 = ["OAccIndex0",60];
format_neko_Opcode.OAccIndex0.toString = $estr;
format_neko_Opcode.OAccIndex0.__enum__ = format_neko_Opcode;
format_neko_Opcode.OAccIndex1 = ["OAccIndex1",61];
format_neko_Opcode.OAccIndex1.toString = $estr;
format_neko_Opcode.OAccIndex1.__enum__ = format_neko_Opcode;
format_neko_Opcode.OPhysCompare = ["OPhysCompare",62];
format_neko_Opcode.OPhysCompare.toString = $estr;
format_neko_Opcode.OPhysCompare.__enum__ = format_neko_Opcode;
format_neko_Opcode.OTailCall = ["OTailCall",63];
format_neko_Opcode.OTailCall.toString = $estr;
format_neko_Opcode.OTailCall.__enum__ = format_neko_Opcode;
format_neko_Opcode.__empty_constructs__ = [format_neko_Opcode.OAccNull,format_neko_Opcode.OAccTrue,format_neko_Opcode.OAccFalse,format_neko_Opcode.OAccThis,format_neko_Opcode.OAccInt,format_neko_Opcode.OAccStack,format_neko_Opcode.OAccGlobal,format_neko_Opcode.OAccEnv,format_neko_Opcode.OAccField,format_neko_Opcode.OAccArray,format_neko_Opcode.OAccIndex,format_neko_Opcode.OAccBuiltin,format_neko_Opcode.OSetStack,format_neko_Opcode.OSetGlobal,format_neko_Opcode.OSetEnv,format_neko_Opcode.OSetField,format_neko_Opcode.OSetArray,format_neko_Opcode.OSetIndex,format_neko_Opcode.OSetThis,format_neko_Opcode.OPush,format_neko_Opcode.OPop,format_neko_Opcode.OCall,format_neko_Opcode.OObjCall,format_neko_Opcode.OJump,format_neko_Opcode.OJumpIf,format_neko_Opcode.OJumpIfNot,format_neko_Opcode.OTrap,format_neko_Opcode.OEndTrap,format_neko_Opcode.ORet,format_neko_Opcode.OMakeEnv,format_neko_Opcode.OMakeArray,format_neko_Opcode.OBool,format_neko_Opcode.OIsNull,format_neko_Opcode.OIsNotNull,format_neko_Opcode.OAdd,format_neko_Opcode.OSub,format_neko_Opcode.OMult,format_neko_Opcode.ODiv,format_neko_Opcode.OMod,format_neko_Opcode.OShl,format_neko_Opcode.OShr,format_neko_Opcode.OUShr,format_neko_Opcode.OOr,format_neko_Opcode.OAnd,format_neko_Opcode.OXor,format_neko_Opcode.OEq,format_neko_Opcode.ONeq,format_neko_Opcode.OGt,format_neko_Opcode.OGte,format_neko_Opcode.OLt,format_neko_Opcode.OLte,format_neko_Opcode.ONot,format_neko_Opcode.OTypeOf,format_neko_Opcode.OCompare,format_neko_Opcode.OHash,format_neko_Opcode.ONew,format_neko_Opcode.OJumpTable,format_neko_Opcode.OApply,format_neko_Opcode.OAccStack0,format_neko_Opcode.OAccStack1,format_neko_Opcode.OAccIndex0,format_neko_Opcode.OAccIndex1,format_neko_Opcode.OPhysCompare,format_neko_Opcode.OTailCall];
var format_neko_Global = $hxClasses["format.neko.Global"] = { __ename__ : ["format","neko","Global"], __constructs__ : ["GlobalVar","GlobalFunction","GlobalString","GlobalFloat","GlobalDebug"] };
format_neko_Global.GlobalVar = function(v) { var $x = ["GlobalVar",0,v]; $x.__enum__ = format_neko_Global; $x.toString = $estr; return $x; };
format_neko_Global.GlobalFunction = function(pos,nargs) { var $x = ["GlobalFunction",1,pos,nargs]; $x.__enum__ = format_neko_Global; $x.toString = $estr; return $x; };
format_neko_Global.GlobalString = function(v) { var $x = ["GlobalString",2,v]; $x.__enum__ = format_neko_Global; $x.toString = $estr; return $x; };
format_neko_Global.GlobalFloat = function(v) { var $x = ["GlobalFloat",3,v]; $x.__enum__ = format_neko_Global; $x.toString = $estr; return $x; };
format_neko_Global.GlobalDebug = function(debug) { var $x = ["GlobalDebug",4,debug]; $x.__enum__ = format_neko_Global; $x.toString = $estr; return $x; };
format_neko_Global.__empty_constructs__ = [];
var format_neko_VM = function() {
	this.hbuiltins = new haxe_ds_IntMap();
	this.hfields = new haxe_ds_IntMap();
	this.opcodes = [];
	this.stack = new haxe_ds_GenericStack();
	var _g = 0;
	var _g1 = format_neko_Opcode.__constructs__.slice();
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		this.opcodes.push(Type.createEnum(format_neko_Opcode,f));
	}
	this.builtins = new format_neko_Builtins(this);
	var tmp = this.builtins.table.keys();
	while(tmp.hasNext()) {
		var b = tmp.next();
		var key = this.hash(b);
		var _this = this.builtins.table;
		var tmp1 = __map_reserved[b] != null?_this.getReserved(b):_this.h[b];
		this.hbuiltins.h[key] = tmp1;
	}
	this.hloader = this.hash("loader");
	this.hexports = this.hash("exports");
};
$hxClasses["format.neko.VM"] = format_neko_VM;
format_neko_VM.__name__ = ["format","neko","VM"];
format_neko_VM.prototype = {
	hash: function(s) {
		var h = 0;
		var _g1 = 0;
		var _g = s.length;
		while(_g1 < _g) h = (223 * h >> 1) + HxOverrides.cca(s,_g1++) << 1;
		return h >> 1;
	}
	,doPrint: function(s) {
		haxe_Log.trace(s,{ });
	}
	,hashField: function(f) {
		var fid = this.hash(f);
		var f2 = this.hfields.h[fid];
		if(f2 != null) {
			if(f2 == f) {
				return fid;
			}
			throw new js__$Boot_HaxeError("Hashing conflicts between '" + f + "' and '" + f2 + "'");
		}
		this.hfields.h[fid] = f;
		return fid;
	}
	,_abstract: function(b,t) {
		if(b[1] == 8) {
			var v = b[2];
			if(js_Boot.__instanceof(v,t)) {
				return v;
			}
		}
		this.exc(format_neko_Value.VString("Invalid call"));
		return null;
	}
	,valueToString: function(v) {
		return this.builtins._string(v);
	}
	,exc: function(v) {
		throw new js__$Boot_HaxeError(v);
	}
	,loadPrim: function(vprim,vargs) {
		var prim;
		var nargs;
		if(vprim[1] == 4) {
			prim = vprim[2];
		} else {
			return null;
		}
		if(vargs[1] == 1) {
			nargs = vargs[2];
		} else {
			return null;
		}
		var me = this;
		return format_neko_Value.VFunction(format_neko_ValueFunction.VFunVar(function(_) {
			me.exc(format_neko_Value.VString("Failed to load primitive " + prim + ":" + nargs));
			return null;
		}));
	}
	,defaultLoader: function() {
		var loader = new format_neko_ValueObject(null);
		var key = this.hash("loadprim");
		var value = format_neko_Value.VFunction(format_neko_ValueFunction.VFun2($bind(this,this.loadPrim)));
		loader.fields.h[key] = value;
		return loader;
	}
	,load: function(m,loader) {
		if(loader == null) {
			loader = this.defaultLoader();
		}
		this.module = new format_neko_Module(m,loader);
		var _g1 = 0;
		var _g = m.globals.length;
		while(_g1 < _g) {
			var i = _g1++;
			var me = [this];
			var mod = [this.module];
			var _g2 = m.globals[i];
			var tmp;
			switch(_g2[1]) {
			case 0:
				tmp = format_neko_Value.VNull;
				break;
			case 1:
				var nargs = _g2[3];
				var pos = [_g2[2]];
				var tmp1;
				switch(nargs) {
				case 0:
					tmp1 = format_neko_ValueFunction.VFun0((function(pos1,mod1,me1) {
						return function() {
							return me1[0].fcall(mod1[0],pos1[0]);
						};
					})(pos,mod,me));
					break;
				case 1:
					tmp1 = format_neko_ValueFunction.VFun1((function(pos2,mod2,me2) {
						return function(a) {
							var _this = me2[0].stack;
							_this.head = new haxe_ds_GenericCell(a,_this.head);
							return me2[0].fcall(mod2[0],pos2[0]);
						};
					})(pos,mod,me));
					break;
				case 2:
					tmp1 = format_neko_ValueFunction.VFun2((function(pos3,mod3,me3) {
						return function(a1,b) {
							var _this1 = me3[0].stack;
							_this1.head = new haxe_ds_GenericCell(a1,_this1.head);
							var _this2 = me3[0].stack;
							_this2.head = new haxe_ds_GenericCell(b,_this2.head);
							return me3[0].fcall(mod3[0],pos3[0]);
						};
					})(pos,mod,me));
					break;
				case 3:
					tmp1 = format_neko_ValueFunction.VFun3((function(pos4,mod4,me4) {
						return function(a2,b1,c) {
							var _this3 = me4[0].stack;
							_this3.head = new haxe_ds_GenericCell(a2,_this3.head);
							var _this4 = me4[0].stack;
							_this4.head = new haxe_ds_GenericCell(b1,_this4.head);
							var _this5 = me4[0].stack;
							_this5.head = new haxe_ds_GenericCell(c,_this5.head);
							return me4[0].fcall(mod4[0],pos4[0]);
						};
					})(pos,mod,me));
					break;
				case 4:
					tmp1 = format_neko_ValueFunction.VFun4((function(pos5,mod5,me5) {
						return function(a3,b2,c1,d) {
							var _this6 = me5[0].stack;
							_this6.head = new haxe_ds_GenericCell(a3,_this6.head);
							var _this7 = me5[0].stack;
							_this7.head = new haxe_ds_GenericCell(b2,_this7.head);
							var _this8 = me5[0].stack;
							_this8.head = new haxe_ds_GenericCell(c1,_this8.head);
							var _this9 = me5[0].stack;
							_this9.head = new haxe_ds_GenericCell(d,_this9.head);
							return me5[0].fcall(mod5[0],pos5[0]);
						};
					})(pos,mod,me));
					break;
				case 5:
					tmp1 = format_neko_ValueFunction.VFun5((function(pos6,mod6,me6) {
						return function(a4,b3,c2,d1,e) {
							var _this10 = me6[0].stack;
							_this10.head = new haxe_ds_GenericCell(a4,_this10.head);
							var _this11 = me6[0].stack;
							_this11.head = new haxe_ds_GenericCell(b3,_this11.head);
							var _this12 = me6[0].stack;
							_this12.head = new haxe_ds_GenericCell(c2,_this12.head);
							var _this13 = me6[0].stack;
							_this13.head = new haxe_ds_GenericCell(d1,_this13.head);
							var _this14 = me6[0].stack;
							_this14.head = new haxe_ds_GenericCell(e,_this14.head);
							return me6[0].fcall(mod6[0],pos6[0]);
						};
					})(pos,mod,me));
					break;
				default:
					throw new js__$Boot_HaxeError("assert");
				}
				tmp = format_neko_Value.VFunction(tmp1);
				break;
			case 2:
				tmp = format_neko_Value.VString(_g2[2]);
				break;
			case 3:
				tmp = format_neko_Value.VFloat(parseFloat(_g2[2]));
				break;
			case 4:
				this.module.debug = _g2[2];
				tmp = format_neko_Value.VNull;
				break;
			}
			this.module.gtable[i] = tmp;
		}
		var _g3 = 0;
		var _g11 = m.fields;
		while(_g3 < _g11.length) {
			var f = _g11[_g3];
			++_g3;
			this.hashField(f);
		}
		this.vthis = format_neko_Value.VNull;
		this.env = [];
		this.loop(0);
		return this.module;
	}
	,error: function(pc,msg) {
		--pc;
		var pos;
		if(pc < 0) {
			pos = "C Function";
		} else if(this.module.debug != null) {
			var p = this.module.debug[pc];
			pos = p.file + "(" + p.line + ")";
		} else {
			pos = "@" + StringTools.hex(pc);
		}
		throw new js__$Boot_HaxeError(format_neko_Value.VString(pos + " : " + msg));
	}
	,fieldName: function(fid) {
		var name = this.hfields.h[fid];
		if(name == null) {
			return "?" + fid;
		} else {
			return name;
		}
	}
	,call: function(vthis,vfun,args) {
		var _g = 0;
		while(_g < args.length) {
			var a = args[_g];
			++_g;
			var _this = this.stack;
			_this.head = new haxe_ds_GenericCell(a,_this.head);
		}
		return this.mcall(0,vthis,vfun,args.length);
	}
	,fcall: function(m,pc) {
		var old = this.module;
		this.module = m;
		var acc = this.loop(pc);
		this.module = old;
		return acc;
	}
	,mcall: function(pc,obj,f,nargs) {
		var ret = null;
		var old = this.vthis;
		this.vthis = obj;
		switch(f[1]) {
		case 7:
			var f1 = f[2];
			switch(f1[1]) {
			case 0:
				if(nargs != 0) {
					this.error(pc,"Invalid call");
				}
				ret = f1[2]();
				break;
			case 1:
				if(nargs != 1) {
					this.error(pc,"Invalid call");
				}
				var _this = this.stack;
				var k = _this.head;
				var a;
				if(k == null) {
					a = null;
				} else {
					_this.head = k.next;
					a = k.elt;
				}
				ret = f1[2](a);
				break;
			case 2:
				if(nargs != 2) {
					this.error(pc,"Invalid call");
				}
				var _this1 = this.stack;
				var k1 = _this1.head;
				var b;
				if(k1 == null) {
					b = null;
				} else {
					_this1.head = k1.next;
					b = k1.elt;
				}
				var _this2 = this.stack;
				var k2 = _this2.head;
				var a1;
				if(k2 == null) {
					a1 = null;
				} else {
					_this2.head = k2.next;
					a1 = k2.elt;
				}
				ret = f1[2](a1,b);
				break;
			case 3:
				if(nargs != 3) {
					this.error(pc,"Invalid call");
				}
				var _this3 = this.stack;
				var k3 = _this3.head;
				var c;
				if(k3 == null) {
					c = null;
				} else {
					_this3.head = k3.next;
					c = k3.elt;
				}
				var _this4 = this.stack;
				var k4 = _this4.head;
				var b1;
				if(k4 == null) {
					b1 = null;
				} else {
					_this4.head = k4.next;
					b1 = k4.elt;
				}
				var _this5 = this.stack;
				var k5 = _this5.head;
				var a2;
				if(k5 == null) {
					a2 = null;
				} else {
					_this5.head = k5.next;
					a2 = k5.elt;
				}
				ret = f1[2](a2,b1,c);
				break;
			case 4:
				if(nargs != 4) {
					this.error(pc,"Invalid call");
				}
				var _this6 = this.stack;
				var k6 = _this6.head;
				var d;
				if(k6 == null) {
					d = null;
				} else {
					_this6.head = k6.next;
					d = k6.elt;
				}
				var _this7 = this.stack;
				var k7 = _this7.head;
				var c1;
				if(k7 == null) {
					c1 = null;
				} else {
					_this7.head = k7.next;
					c1 = k7.elt;
				}
				var _this8 = this.stack;
				var k8 = _this8.head;
				var b2;
				if(k8 == null) {
					b2 = null;
				} else {
					_this8.head = k8.next;
					b2 = k8.elt;
				}
				var _this9 = this.stack;
				var k9 = _this9.head;
				var a3;
				if(k9 == null) {
					a3 = null;
				} else {
					_this9.head = k9.next;
					a3 = k9.elt;
				}
				ret = f1[2](a3,b2,c1,d);
				break;
			case 5:
				if(nargs != 5) {
					this.error(pc,"Invalid call");
				}
				var _this10 = this.stack;
				var k10 = _this10.head;
				var e;
				if(k10 == null) {
					e = null;
				} else {
					_this10.head = k10.next;
					e = k10.elt;
				}
				var _this11 = this.stack;
				var k11 = _this11.head;
				var d1;
				if(k11 == null) {
					d1 = null;
				} else {
					_this11.head = k11.next;
					d1 = k11.elt;
				}
				var _this12 = this.stack;
				var k12 = _this12.head;
				var c2;
				if(k12 == null) {
					c2 = null;
				} else {
					_this12.head = k12.next;
					c2 = k12.elt;
				}
				var _this13 = this.stack;
				var k13 = _this13.head;
				var b3;
				if(k13 == null) {
					b3 = null;
				} else {
					_this13.head = k13.next;
					b3 = k13.elt;
				}
				var _this14 = this.stack;
				var k14 = _this14.head;
				var a4;
				if(k14 == null) {
					a4 = null;
				} else {
					_this14.head = k14.next;
					a4 = k14.elt;
				}
				ret = f1[2](a4,b3,c2,d1,e);
				break;
			case 6:
				var args = [];
				var _g1 = 0;
				while(_g1 < nargs) {
					++_g1;
					var _this15 = this.stack;
					var k15 = _this15.head;
					var tmp;
					if(k15 == null) {
						tmp = null;
					} else {
						_this15.head = k15.next;
						tmp = k15.elt;
					}
					args.push(tmp);
				}
				ret = f1[2](args);
				break;
			}
			break;
		case 10:
			var args1 = [];
			var _g11 = 0;
			while(_g11 < nargs) {
				++_g11;
				var _this16 = this.stack;
				var k16 = _this16.head;
				var tmp1;
				if(k16 == null) {
					tmp1 = null;
				} else {
					_this16.head = k16.next;
					tmp1 = k16.elt;
				}
				args1.unshift(this.unwrap(tmp1));
			}
			ret = this.wrap(f[2].apply(obj[1] == 9?obj[2]:null,args1));
			break;
		default:
			this.error(pc,"Invalid call");
		}
		if(ret == null) {
			this.error(pc,"Invalid call");
		}
		this.vthis = old;
		return ret;
	}
	,compare: function(pc,a,b) {
		return this.builtins._compare(a,b);
	}
	,accIndex: function(pc,acc,index) {
		switch(acc[1]) {
		case 5:
			throw new js__$Boot_HaxeError("TODO");
			break;
		case 6:
			acc = acc[2][index];
			if(acc == null) {
				acc = format_neko_Value.VNull;
			}
			break;
		default:
			this.error(pc,"Invalid array access");
		}
		return acc;
	}
	,wrap: function(v) {
		switch(Type["typeof"](v)[1]) {
		case 0:
			return format_neko_Value.VNull;
		case 1:
			return format_neko_Value.VInt(v);
		case 2:
			return format_neko_Value.VFloat(v);
		case 3:
			return format_neko_Value.VBool(v);
		case 5:
			return format_neko_Value.VProxyFunction(v);
		case 4:case 6:case 7:
			return format_neko_Value.VProxy(v);
		case 8:
			return null;
		}
	}
	,unwrap: function(v) {
		switch(v[1]) {
		case 0:
			return null;
		case 1:
			return v[2];
		case 2:
			return v[2];
		case 3:
			return v[2];
		case 4:
			return v[2];
		case 5:
			var o = v[2];
			var a = { };
			var tmp = o.fields.keys();
			while(tmp.hasNext()) {
				var f = tmp.next();
				a[this.fieldName(f)] = this.unwrap(o.fields.h[f]);
			}
			return a;
		case 6:
			var a1 = v[2];
			var a2 = [];
			var _g = 0;
			while(_g < a1.length) {
				var x = a1[_g];
				++_g;
				a2.push(this.unwrap(x));
			}
			return a2;
		case 7:
			var f1 = v[2];
			var me = this;
			switch(f1[1]) {
			case 0:
				var f2 = f1[2];
				return function() {
					return me.unwrap(f2());
				};
			case 1:
				var f3 = f1[2];
				return function(x1) {
					return me.unwrap(f3(me.wrap(x1)));
				};
			case 2:
				var f4 = f1[2];
				return function(x2,y) {
					return me.unwrap(f4(me.wrap(x2),me.wrap(y)));
				};
			case 3:
				var f5 = f1[2];
				return function(x3,y1,z) {
					return me.unwrap(f5(me.wrap(x3),me.wrap(y1),me.wrap(z)));
				};
			case 4:
				var f6 = f1[2];
				return function(x4,y2,z1,w) {
					return me.unwrap(f6(me.wrap(x4),me.wrap(y2),me.wrap(z1),me.wrap(w)));
				};
			case 5:
				var f7 = f1[2];
				return function(x5,y3,z2,w1,k) {
					return me.unwrap(f7(me.wrap(x5),me.wrap(y3),me.wrap(z2),me.wrap(w1),me.wrap(k)));
				};
			case 6:
				var f8 = f1[2];
				return Reflect.makeVarArgs(function(args) {
					var args2 = [];
					var _g1 = 0;
					while(_g1 < args.length) {
						var x6 = args[_g1];
						++_g1;
						args2.push(me.wrap(x6));
					}
					return me.unwrap(f8(args2));
				});
			}
			break;
		case 8:
			return v[2];
		case 9:
			return v[2];
		case 10:
			return v[2];
		}
	}
	,getField: function(v,fid) {
		switch(v[1]) {
		case 5:
			var o = v[2];
			while(true) {
				v = o.fields.h[fid];
				if(v != null) {
					break;
				}
				o = o.proto;
				if(o == null) {
					v = format_neko_Value.VNull;
					break;
				}
			}
			break;
		case 9:
			var f;
			try {
				f = Reflect.field(v[2],this.fieldName(fid));
			} catch( e ) {
				f = null;
			}
			v = this.wrap(f);
			break;
		default:
			v = null;
		}
		return v;
	}
	,loop: function(pc) {
		var acc = format_neko_Value.VNull;
		var code = this.module.code.code;
		var opcodes = this.opcodes;
		while(true) switch(opcodes[code[pc++]][1]) {
		case 0:
			acc = format_neko_Value.VNull;
			break;
		case 1:
			acc = format_neko_Value.VBool(true);
			break;
		case 2:
			acc = format_neko_Value.VBool(false);
			break;
		case 3:
			acc = this.vthis;
			break;
		case 4:
			acc = format_neko_Value.VInt(code[pc++]);
			break;
		case 5:
			var idx = code[pc++];
			var head = this.stack.head;
			while(idx > -2) {
				head = head.next;
				--idx;
			}
			acc = head.elt;
			break;
		case 6:
			acc = this.module.gtable[code[pc++]];
			break;
		case 8:
			acc = this.getField(acc,code[pc]);
			if(acc == null) {
				this.error(pc,"Invalid field access : " + this.fieldName(code[pc]));
			}
			++pc;
			break;
		case 9:
			var _this = this.stack;
			var k = _this.head;
			var arr;
			if(k == null) {
				arr = null;
			} else {
				_this.head = k.next;
				arr = k.elt;
			}
			switch(arr[1]) {
			case 5:
				throw new js__$Boot_HaxeError("TODO");
				break;
			case 6:
				var a = arr[2];
				if(acc[1] == 1) {
					acc = a[acc[2]];
					if(acc == null) {
						acc = format_neko_Value.VNull;
					}
				} else {
					this.error(pc,"Invalid array access");
				}
				break;
			default:
				this.error(pc,"Invalid array access");
			}
			break;
		case 10:
			var acc1 = acc;
			switch(acc1[1]) {
			case 5:
				throw new js__$Boot_HaxeError("TODO");
				break;
			case 6:
				acc1 = acc1[2][code[pc] + 2];
				if(acc1 == null) {
					acc1 = format_neko_Value.VNull;
				}
				break;
			default:
				this.error(pc,"Invalid array access");
			}
			acc = acc1;
			++pc;
			break;
		case 11:
			acc = this.hbuiltins.h[code[pc++]];
			if(acc == null) {
				if(code[pc - 1] == this.hloader) {
					acc = format_neko_Value.VObject(this.module.loader);
				} else if(code[pc - 1] == this.hexports) {
					acc = format_neko_Value.VObject(this.module.exports);
				} else {
					this.error(pc - 1,"Builtin not found : " + this.fieldName(code[pc - 1]));
				}
			}
			break;
		case 12:
			var idx1 = code[pc++];
			var head1 = this.stack.head;
			while(idx1 > 0) {
				head1 = head1.next;
				--idx1;
			}
			head1.elt = acc;
			break;
		case 13:
			this.module.gtable[code[pc++]] = acc;
			break;
		case 15:
			var _this1 = this.stack;
			var k1 = _this1.head;
			var obj;
			if(k1 == null) {
				obj = null;
			} else {
				_this1.head = k1.next;
				obj = k1.elt;
			}
			switch(obj[1]) {
			case 5:
				obj[2].fields.h[code[pc++]] = acc;
				break;
			case 9:
				obj[2][this.fieldName(code[pc++])] = this.unwrap(acc);
				break;
			default:
				this.error(pc,"Invalid field access : " + this.fieldName(code[pc]));
			}
			break;
		case 19:
			if(acc == null) {
				throw new js__$Boot_HaxeError("assert");
			}
			var _this2 = this.stack;
			_this2.head = new haxe_ds_GenericCell(acc,_this2.head);
			break;
		case 20:
			var _g1 = 0;
			var _g = code[pc++];
			while(_g1 < _g) {
				++_g1;
				var _this3 = this.stack;
				var k2 = _this3.head;
				if(k2 != null) {
					_this3.head = k2.next;
				}
			}
			break;
		case 21:
			acc = this.mcall(pc,this.vthis,acc,code[pc]);
			++pc;
			break;
		case 22:
			var _this4 = this.stack;
			var k3 = _this4.head;
			var tmp;
			if(k3 == null) {
				tmp = null;
			} else {
				_this4.head = k3.next;
				tmp = k3.elt;
			}
			acc = this.mcall(pc,tmp,acc,code[pc]);
			++pc;
			break;
		case 23:
			pc += code[pc] - 1;
			break;
		case 24:
			if(acc[1] == 3) {
				if(acc[2]) {
					pc += code[pc] - 2;
				}
			}
			++pc;
			break;
		case 25:
			if(acc[1] == 3) {
				if(!acc[2]) {
					pc += code[pc] - 2;
				}
			} else {
				pc += code[pc] - 2;
			}
			++pc;
			break;
		case 28:
			var _g11 = 0;
			var _g2 = code[pc++];
			while(_g11 < _g2) {
				++_g11;
				var _this5 = this.stack;
				var k4 = _this5.head;
				if(k4 != null) {
					_this5.head = k4.next;
				}
			}
			return acc;
		case 30:
			var a1 = [];
			var _g12 = 0;
			var _g3 = code[pc++];
			while(_g12 < _g3) {
				++_g12;
				var _this6 = this.stack;
				var k5 = _this6.head;
				var tmp1;
				if(k5 == null) {
					tmp1 = null;
				} else {
					_this6.head = k5.next;
					tmp1 = k5.elt;
				}
				a1.unshift(tmp1);
			}
			a1.unshift(acc);
			acc = format_neko_Value.VArray(a1);
			break;
		case 31:
			switch(acc[1]) {
			case 0:
				acc = format_neko_Value.VBool(false);
				break;
			case 1:
				acc = format_neko_Value.VBool(acc[2] != 0);
				break;
			case 3:
				acc = acc;
				break;
			default:
				acc = format_neko_Value.VBool(true);
			}
			break;
		case 32:
			acc = format_neko_Value.VBool(acc == format_neko_Value.VNull);
			break;
		case 33:
			acc = format_neko_Value.VBool(acc != format_neko_Value.VNull);
			break;
		case 34:
			var _this7 = this.stack;
			var k6 = _this7.head;
			var a2;
			if(k6 == null) {
				a2 = null;
			} else {
				_this7.head = k6.next;
				a2 = k6.elt;
			}
			switch(acc[1]) {
			case 1:
				var b = acc[2];
				switch(a2[1]) {
				case 1:
					acc = format_neko_Value.VInt(a2[2] + b);
					break;
				case 2:
					acc = format_neko_Value.VFloat(a2[2] + b);
					break;
				case 4:
					acc = format_neko_Value.VString(a2[2] + b);
					break;
				case 9:
					acc = this.wrap(a2[2] + b);
					break;
				default:
					acc = null;
				}
				break;
			case 2:
				var b1 = acc[2];
				switch(a2[1]) {
				case 1:
					acc = format_neko_Value.VFloat(a2[2] + b1);
					break;
				case 2:
					acc = format_neko_Value.VFloat(a2[2] + b1);
					break;
				case 4:
					acc = format_neko_Value.VString(a2[2] + b1);
					break;
				case 9:
					acc = this.wrap(a2[2] + b1);
					break;
				default:
					acc = null;
				}
				break;
			case 4:
				var b2 = acc[2];
				switch(a2[1]) {
				case 1:
					acc = format_neko_Value.VString(a2[2] + b2);
					break;
				case 2:
					acc = format_neko_Value.VString(a2[2] + b2);
					break;
				case 4:
					acc = format_neko_Value.VString(a2[2] + b2);
					break;
				case 9:
					acc = this.wrap(Std.string(a2[2]) + b2);
					break;
				default:
					acc = null;
				}
				break;
			case 9:
				acc = this.wrap(this.unwrap(a2) + acc[2]);
				break;
			default:
				acc = null;
			}
			if(acc == null) {
				this.error(pc,"+");
			}
			break;
		case 45:
			var _this8 = this.stack;
			var k7 = _this8.head;
			var a3;
			if(k7 == null) {
				a3 = null;
			} else {
				_this8.head = k7.next;
				a3 = k7.elt;
			}
			var c = this.builtins._compare(a3,acc);
			acc = format_neko_Value.VBool(c == 0 && c != -1000);
			break;
		case 46:
			var _this9 = this.stack;
			var k8 = _this9.head;
			var a4;
			if(k8 == null) {
				a4 = null;
			} else {
				_this9.head = k8.next;
				a4 = k8.elt;
			}
			var c1 = this.builtins._compare(a4,acc);
			acc = format_neko_Value.VBool(c1 != 0 && c1 != -1000);
			break;
		case 47:
			var _this10 = this.stack;
			var k9 = _this10.head;
			var a5;
			if(k9 == null) {
				a5 = null;
			} else {
				_this10.head = k9.next;
				a5 = k9.elt;
			}
			var c2 = this.builtins._compare(a5,acc);
			acc = format_neko_Value.VBool(c2 > 0 && c2 != -1000);
			break;
		case 48:
			var _this11 = this.stack;
			var k10 = _this11.head;
			var a6;
			if(k10 == null) {
				a6 = null;
			} else {
				_this11.head = k10.next;
				a6 = k10.elt;
			}
			var c3 = this.builtins._compare(a6,acc);
			acc = format_neko_Value.VBool(c3 >= 0 && c3 != -1000);
			break;
		case 49:
			var _this12 = this.stack;
			var k11 = _this12.head;
			var a7;
			if(k11 == null) {
				a7 = null;
			} else {
				_this12.head = k11.next;
				a7 = k11.elt;
			}
			var c4 = this.builtins._compare(a7,acc);
			acc = format_neko_Value.VBool(c4 < 0 && c4 != -1000);
			break;
		case 50:
			var _this13 = this.stack;
			var k12 = _this13.head;
			var a8;
			if(k12 == null) {
				a8 = null;
			} else {
				_this13.head = k12.next;
				a8 = k12.elt;
			}
			var c5 = this.builtins._compare(a8,acc);
			acc = format_neko_Value.VBool(c5 <= 0 && c5 != -1000);
			break;
		case 51:
			switch(acc[1]) {
			case 0:
				acc = format_neko_Value.VBool(true);
				break;
			case 1:
				acc = format_neko_Value.VBool(acc[2] == 0);
				break;
			case 3:
				acc = format_neko_Value.VBool(!acc[2]);
				break;
			default:
				acc = format_neko_Value.VBool(false);
			}
			break;
		case 52:
			acc = this.builtins["typeof"](acc);
			break;
		case 53:
			var _this14 = this.stack;
			var k13 = _this14.head;
			var tmp2;
			if(k13 == null) {
				tmp2 = null;
			} else {
				_this14.head = k13.next;
				tmp2 = k13.elt;
			}
			var v = this.builtins._compare(tmp2,acc);
			if(v == -1000) {
				acc = format_neko_Value.VNull;
			} else {
				acc = format_neko_Value.VInt(v);
			}
			break;
		case 54:
			if(acc[1] == 4) {
				acc = format_neko_Value.VInt(this.hashField(acc[2]));
			} else {
				this.error(pc,"$hash");
			}
			break;
		case 55:
			switch(acc[1]) {
			case 0:
				acc = format_neko_Value.VObject(new format_neko_ValueObject(null));
				break;
			case 5:
				acc = format_neko_Value.VObject(new format_neko_ValueObject(acc[2]));
				break;
			default:
				this.error(pc,"$new");
			}
			break;
		case 58:
			acc = this.stack.head.elt;
			break;
		case 59:
			acc = this.stack.head.next.elt;
			break;
		case 60:
			var acc2 = acc;
			switch(acc2[1]) {
			case 5:
				throw new js__$Boot_HaxeError("TODO");
				break;
			case 6:
				acc2 = acc2[2][0];
				if(acc2 == null) {
					acc2 = format_neko_Value.VNull;
				}
				break;
			default:
				this.error(pc,"Invalid array access");
			}
			acc = acc2;
			break;
		case 61:
			var acc3 = acc;
			switch(acc3[1]) {
			case 5:
				throw new js__$Boot_HaxeError("TODO");
				break;
			case 6:
				acc3 = acc3[2][1];
				if(acc3 == null) {
					acc3 = format_neko_Value.VNull;
				}
				break;
			default:
				this.error(pc,"Invalid array access");
			}
			acc = acc3;
			break;
		case 62:
			this.error(pc,"$pcompare");
			break;
		case 63:
			var v1 = code[pc];
			var nstack = v1 >> 3;
			var nargs = v1 & 7;
			var head2 = this.stack.head;
			while(nstack-- > 0) head2 = head2.next;
			if(nargs == 0) {
				this.stack.head = head2;
			} else {
				var args = this.stack.head;
				var _g13 = 0;
				var _g4 = nargs - 1;
				while(_g13 < _g4) {
					++_g13;
					args = args.next;
				}
				args.next = head2;
			}
			return this.mcall(pc,this.vthis,acc,nargs);
		default:
			throw new js__$Boot_HaxeError("TODO:" + Std.string(opcodes[code[pc - 1]]));
		}
	}
	,__class__: format_neko_VM
};
var format_neko_Value = $hxClasses["format.neko.Value"] = { __ename__ : ["format","neko","Value"], __constructs__ : ["VNull","VInt","VFloat","VBool","VString","VObject","VArray","VFunction","VAbstract","VProxy","VProxyFunction"] };
format_neko_Value.VNull = ["VNull",0];
format_neko_Value.VNull.toString = $estr;
format_neko_Value.VNull.__enum__ = format_neko_Value;
format_neko_Value.VInt = function(i) { var $x = ["VInt",1,i]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VFloat = function(f) { var $x = ["VFloat",2,f]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VBool = function(b) { var $x = ["VBool",3,b]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VString = function(s) { var $x = ["VString",4,s]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VObject = function(o) { var $x = ["VObject",5,o]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VArray = function(a) { var $x = ["VArray",6,a]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VFunction = function(f) { var $x = ["VFunction",7,f]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VAbstract = function(v) { var $x = ["VAbstract",8,v]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VProxy = function(o) { var $x = ["VProxy",9,o]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.VProxyFunction = function(f) { var $x = ["VProxyFunction",10,f]; $x.__enum__ = format_neko_Value; $x.toString = $estr; return $x; };
format_neko_Value.__empty_constructs__ = [format_neko_Value.VNull];
var format_neko_ValueObject = function(p) {
	this.fields = new haxe_ds_IntMap();
	this.proto = p;
};
$hxClasses["format.neko.ValueObject"] = format_neko_ValueObject;
format_neko_ValueObject.__name__ = ["format","neko","ValueObject"];
format_neko_ValueObject.prototype = {
	__class__: format_neko_ValueObject
};
var format_neko_ValueAbstract = function() { };
$hxClasses["format.neko.ValueAbstract"] = format_neko_ValueAbstract;
format_neko_ValueAbstract.__name__ = ["format","neko","ValueAbstract"];
var format_neko_ValueFunction = $hxClasses["format.neko.ValueFunction"] = { __ename__ : ["format","neko","ValueFunction"], __constructs__ : ["VFun0","VFun1","VFun2","VFun3","VFun4","VFun5","VFunVar"] };
format_neko_ValueFunction.VFun0 = function(f) { var $x = ["VFun0",0,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFun1 = function(f) { var $x = ["VFun1",1,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFun2 = function(f) { var $x = ["VFun2",2,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFun3 = function(f) { var $x = ["VFun3",3,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFun4 = function(f) { var $x = ["VFun4",4,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFun5 = function(f) { var $x = ["VFun5",5,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.VFunVar = function(f) { var $x = ["VFunVar",6,f]; $x.__enum__ = format_neko_ValueFunction; $x.toString = $estr; return $x; };
format_neko_ValueFunction.__empty_constructs__ = [];
var format_neko_Module = function(code,loader) {
	this.code = code;
	this.loader = loader;
	this.gtable = [];
	this.exports = new format_neko_ValueObject();
	if(code.globals.length > 0) {
		this.gtable[code.globals.length - 1] = null;
	}
};
$hxClasses["format.neko.Module"] = format_neko_Module;
format_neko_Module.__name__ = ["format","neko","Module"];
format_neko_Module.prototype = {
	__class__: format_neko_Module
};
var format_png_Color = $hxClasses["format.png.Color"] = { __ename__ : ["format","png","Color"], __constructs__ : ["ColGrey","ColTrue","ColIndexed"] };
format_png_Color.ColGrey = function(alpha) { var $x = ["ColGrey",0,alpha]; $x.__enum__ = format_png_Color; $x.toString = $estr; return $x; };
format_png_Color.ColTrue = function(alpha) { var $x = ["ColTrue",1,alpha]; $x.__enum__ = format_png_Color; $x.toString = $estr; return $x; };
format_png_Color.ColIndexed = ["ColIndexed",2];
format_png_Color.ColIndexed.toString = $estr;
format_png_Color.ColIndexed.__enum__ = format_png_Color;
format_png_Color.__empty_constructs__ = [format_png_Color.ColIndexed];
var format_png_Chunk = $hxClasses["format.png.Chunk"] = { __ename__ : ["format","png","Chunk"], __constructs__ : ["CEnd","CHeader","CData","CPalette","CUnknown"] };
format_png_Chunk.CEnd = ["CEnd",0];
format_png_Chunk.CEnd.toString = $estr;
format_png_Chunk.CEnd.__enum__ = format_png_Chunk;
format_png_Chunk.CHeader = function(h) { var $x = ["CHeader",1,h]; $x.__enum__ = format_png_Chunk; $x.toString = $estr; return $x; };
format_png_Chunk.CData = function(b) { var $x = ["CData",2,b]; $x.__enum__ = format_png_Chunk; $x.toString = $estr; return $x; };
format_png_Chunk.CPalette = function(b) { var $x = ["CPalette",3,b]; $x.__enum__ = format_png_Chunk; $x.toString = $estr; return $x; };
format_png_Chunk.CUnknown = function(id,data) { var $x = ["CUnknown",4,id,data]; $x.__enum__ = format_png_Chunk; $x.toString = $estr; return $x; };
format_png_Chunk.__empty_constructs__ = [format_png_Chunk.CEnd];
var format_png_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(true);
	this.checkCRC = true;
};
$hxClasses["format.png.Reader"] = format_png_Reader;
format_png_Reader.__name__ = ["format","png","Reader"];
format_png_Reader.prototype = {
	read: function() {
		var _g = 0;
		var _g1 = [137,80,78,71,13,10,26,10];
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(this.i.readByte() != b) {
				throw new js__$Boot_HaxeError("Invalid header");
			}
		}
		var l = new List();
		while(true) {
			var c = this.readChunk();
			l.add(c);
			if(c == format_png_Chunk.CEnd) {
				break;
			}
		}
		return l;
	}
	,readHeader: function(i) {
		i.set_bigEndian(true);
		var width = i.readInt32();
		var height = i.readInt32();
		var colbits = i.readByte();
		var color = i.readByte();
		var color1;
		switch(color) {
		case 0:
			color1 = format_png_Color.ColGrey(false);
			break;
		case 2:
			color1 = format_png_Color.ColTrue(false);
			break;
		case 3:
			color1 = format_png_Color.ColIndexed;
			break;
		case 4:
			color1 = format_png_Color.ColGrey(true);
			break;
		case 6:
			color1 = format_png_Color.ColTrue(true);
			break;
		default:
			throw new js__$Boot_HaxeError("Unknown color model " + color + ":" + colbits);
		}
		var compress = i.readByte();
		var filter = i.readByte();
		if(compress != 0 || filter != 0) {
			throw new js__$Boot_HaxeError("Invalid header");
		}
		var interlace = i.readByte();
		if(interlace != 0 && interlace != 1) {
			throw new js__$Boot_HaxeError("Invalid header");
		}
		return { width : width, height : height, colbits : colbits, color : color1, interlaced : interlace == 1};
	}
	,readChunk: function() {
		var dataLen = this.i.readInt32();
		var id = this.i.readString(4);
		var data = this.i.read(dataLen);
		var crc = this.i.readInt32();
		if(this.checkCRC) {
			var c = new haxe_crypto_Crc32();
			var _g = 0;
			while(_g < 4) c["byte"](HxOverrides.cca(id,_g++));
			c.update(data,0,data.length);
			if(c.get() != crc) {
				throw new js__$Boot_HaxeError("CRC check failure");
			}
		}
		switch(id) {
		case "IDAT":
			return format_png_Chunk.CData(data);
		case "IEND":
			return format_png_Chunk.CEnd;
		case "IHDR":
			return format_png_Chunk.CHeader(this.readHeader(new haxe_io_BytesInput(data)));
		case "PLTE":
			return format_png_Chunk.CPalette(data);
		default:
			return format_png_Chunk.CUnknown(id,data);
		}
	}
	,__class__: format_png_Reader
};
var format_png_Tools = function() { };
$hxClasses["format.png.Tools"] = format_png_Tools;
format_png_Tools.__name__ = ["format","png","Tools"];
format_png_Tools.getHeader = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 1) {
			return val[2];
		}
	}
	throw new js__$Boot_HaxeError("Header not found");
};
format_png_Tools.getPalette = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 3) {
			return val[2];
		}
	}
	return null;
};
format_png_Tools.filter = function(data,x,y,stride,prev,p,numChannels) {
	if(numChannels == null) {
		numChannels = 4;
	}
	var b = y == 0?0:data.b[p - stride];
	var c = x == 0 || y == 0?0:data.b[p - stride - numChannels];
	var k = prev + b - c;
	var pa = k - prev;
	if(pa < 0) {
		pa = -pa;
	}
	var pb = k - b;
	if(pb < 0) {
		pb = -pb;
	}
	var pc = k - c;
	if(pc < 0) {
		pc = -pc;
	}
	if(pa <= pb && pa <= pc) {
		return prev;
	} else if(pb <= pc) {
		return b;
	} else {
		return c;
	}
};
format_png_Tools.reverseBytes = function(b) {
	var p = 0;
	var _g1 = 0;
	var _g = b.length >> 2;
	while(_g1 < _g) {
		++_g1;
		var b1 = b.b[p];
		var g = b.b[p + 1];
		var r = b.b[p + 2];
		var a = b.b[p + 3];
		b.b[p++] = a & 255;
		b.b[p++] = r & 255;
		b.b[p++] = g & 255;
		b.b[p++] = b1 & 255;
	}
};
format_png_Tools.extractGrey = function(d) {
	var h = format_png_Tools.getHeader(d);
	var grey = new haxe_io_Bytes(new ArrayBuffer(h.width * h.height));
	var data = null;
	var fullData = null;
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 2) {
			var b = val[2];
			if(fullData != null) {
				var b2 = b.b;
				var _g1 = 0;
				var _g = b.length;
				while(_g1 < _g) fullData.b.push(b2[_g1++]);
			} else if(data == null) {
				data = b;
			} else {
				fullData = new haxe_io_BytesBuffer();
				var b21 = data.b;
				var _g11 = 0;
				var _g2 = data.length;
				while(_g11 < _g2) fullData.b.push(b21[_g11++]);
				var b22 = b.b;
				var _g12 = 0;
				var _g3 = b.length;
				while(_g12 < _g3) fullData.b.push(b22[_g12++]);
				data = null;
			}
		}
	}
	if(fullData != null) {
		data = fullData.getBytes();
	}
	if(data == null) {
		throw new js__$Boot_HaxeError("Data not found");
	}
	data = format_tools_Inflate.run(data);
	var r = 0;
	var w = 0;
	var _g4 = h.color;
	if(_g4[1] == 0) {
		var alpha = _g4[2];
		if(h.colbits != 8) {
			throw new js__$Boot_HaxeError("Unsupported color mode");
		}
		var width = h.width;
		if(data.length < h.height * ((alpha?2:1) * width + 1)) {
			throw new js__$Boot_HaxeError("Not enough data");
		}
		var rinc = alpha?2:1;
		var _g13 = 0;
		var _g5 = h.height;
		while(_g13 < _g5) {
			var y = _g13++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				var _g31 = 0;
				while(_g31 < width) {
					++_g31;
					var v = data.b[r];
					r += rinc;
					grey.b[w++] = v & 255;
				}
				break;
			case 1:
				var cv = 0;
				var _g32 = 0;
				while(_g32 < width) {
					++_g32;
					cv += data.b[r];
					r += rinc;
					grey.b[w++] = cv & 255;
				}
				break;
			case 2:
				var stride = y == 0?0:width;
				var _g33 = 0;
				while(_g33 < width) {
					++_g33;
					var v1 = data.b[r] + grey.b[w - stride];
					r += rinc;
					grey.b[w++] = v1 & 255;
				}
				break;
			case 3:
				var cv1 = 0;
				var stride1 = y == 0?0:width;
				var _g34 = 0;
				while(_g34 < width) {
					++_g34;
					cv1 = data.b[r] + (cv1 + grey.b[w - stride1] >> 1) & 255;
					r += rinc;
					grey.b[w++] = cv1 & 255;
				}
				break;
			case 4:
				var cv2 = 0;
				var _g35 = 0;
				while(_g35 < width) {
					var x = _g35++;
					var b1 = y == 0?0:grey.b[w - width];
					var c = x == 0 || y == 0?0:grey.b[w - width - 1];
					var k = cv2 + b1 - c;
					var pa = k - cv2;
					if(pa < 0) {
						pa = -pa;
					}
					var pb = k - b1;
					if(pb < 0) {
						pb = -pb;
					}
					var pc = k - c;
					if(pc < 0) {
						pc = -pc;
					}
					cv2 = (pa <= pb && pa <= pc?cv2:pb <= pc?b1:c) + data.b[r] & 255;
					r += rinc;
					grey.b[w++] = cv2 & 255;
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid filter " + f);
			}
		}
	} else {
		throw new js__$Boot_HaxeError("Unsupported color mode");
	}
	return grey;
};
format_png_Tools.extract32 = function(d,bytes,flipY) {
	var h = format_png_Tools.getHeader(d);
	var bgra = bytes == null?new haxe_io_Bytes(new ArrayBuffer(h.width * h.height * 4)):bytes;
	var data = null;
	var fullData = null;
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		if(val[1] == 2) {
			var b = val[2];
			if(fullData != null) {
				var b2 = b.b;
				var _g1 = 0;
				var _g = b.length;
				while(_g1 < _g) fullData.b.push(b2[_g1++]);
			} else if(data == null) {
				data = b;
			} else {
				fullData = new haxe_io_BytesBuffer();
				var b21 = data.b;
				var _g11 = 0;
				var _g2 = data.length;
				while(_g11 < _g2) fullData.b.push(b21[_g11++]);
				var b22 = b.b;
				var _g12 = 0;
				var _g3 = b.length;
				while(_g12 < _g3) fullData.b.push(b22[_g12++]);
				data = null;
			}
		}
	}
	if(fullData != null) {
		data = fullData.getBytes();
	}
	if(data == null) {
		throw new js__$Boot_HaxeError("Data not found");
	}
	data = format_tools_Inflate.run(data);
	var r = 0;
	var w = 0;
	var lineDelta = 0;
	if(flipY) {
		lineDelta = -h.width * 8;
		w = (h.height - 1) * (h.width * 4);
	}
	var flipY1 = flipY?-1:1;
	var _g4 = h.color;
	switch(_g4[1]) {
	case 0:
		var alpha = _g4[2];
		if(h.colbits != 8) {
			throw new js__$Boot_HaxeError("Unsupported color mode");
		}
		var width = h.width;
		if(data.length < h.height * ((alpha?2:1) * width + 1)) {
			throw new js__$Boot_HaxeError("Not enough data");
		}
		var _g13 = 0;
		var _g5 = h.height;
		while(_g13 < _g5) {
			var y = _g13++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				if(alpha) {
					var _g31 = 0;
					while(_g31 < width) {
						++_g31;
						var v = data.b[r++];
						bgra.b[w++] = v & 255;
						bgra.b[w++] = v & 255;
						bgra.b[w++] = v & 255;
						bgra.b[w++] = data.b[r++] & 255;
					}
				} else {
					var _g32 = 0;
					while(_g32 < width) {
						++_g32;
						var v1 = data.b[r++];
						bgra.b[w++] = v1 & 255;
						bgra.b[w++] = v1 & 255;
						bgra.b[w++] = v1 & 255;
						bgra.b[w++] = 255;
					}
				}
				break;
			case 1:
				var cv = 0;
				var ca = 0;
				if(alpha) {
					var _g33 = 0;
					while(_g33 < width) {
						++_g33;
						cv += data.b[r++];
						bgra.b[w++] = cv & 255;
						bgra.b[w++] = cv & 255;
						bgra.b[w++] = cv & 255;
						ca += data.b[r++];
						bgra.b[w++] = ca & 255;
					}
				} else {
					var _g34 = 0;
					while(_g34 < width) {
						++_g34;
						cv += data.b[r++];
						bgra.b[w++] = cv & 255;
						bgra.b[w++] = cv & 255;
						bgra.b[w++] = cv & 255;
						bgra.b[w++] = 255;
					}
				}
				break;
			case 2:
				var stride = y == 0?0:width * 4 * flipY1;
				if(alpha) {
					var _g35 = 0;
					while(_g35 < width) {
						++_g35;
						var v2 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v2 & 255;
						bgra.b[w++] = v2 & 255;
						bgra.b[w++] = v2 & 255;
						bgra.b[w++] = data.b[r++] + bgra.b[w - stride] & 255;
					}
				} else {
					var _g36 = 0;
					while(_g36 < width) {
						++_g36;
						var v3 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v3 & 255;
						bgra.b[w++] = v3 & 255;
						bgra.b[w++] = v3 & 255;
						bgra.b[w++] = 255;
					}
				}
				break;
			case 3:
				var cv1 = 0;
				var ca1 = 0;
				var stride1 = y == 0?0:width * 4 * flipY1;
				if(alpha) {
					var _g37 = 0;
					while(_g37 < width) {
						++_g37;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1 & 255;
						bgra.b[w++] = cv1 & 255;
						bgra.b[w++] = cv1 & 255;
						ca1 = data.b[r++] + (ca1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = ca1 & 255;
					}
				} else {
					var _g38 = 0;
					while(_g38 < width) {
						++_g38;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1 & 255;
						bgra.b[w++] = cv1 & 255;
						bgra.b[w++] = cv1 & 255;
						bgra.b[w++] = 255;
					}
				}
				break;
			case 4:
				var stride2 = width * 4 * flipY1;
				var cv2 = 0;
				var ca2 = 0;
				if(alpha) {
					var _g39 = 0;
					while(_g39 < width) {
						var x = _g39++;
						var b1 = y == 0?0:bgra.b[w - stride2];
						var c = x == 0 || y == 0?0:bgra.b[w - stride2 - 4];
						var k = cv2 + b1 - c;
						var pa = k - cv2;
						if(pa < 0) {
							pa = -pa;
						}
						var pb = k - b1;
						if(pb < 0) {
							pb = -pb;
						}
						var pc = k - c;
						if(pc < 0) {
							pc = -pc;
						}
						cv2 = (pa <= pb && pa <= pc?cv2:pb <= pc?b1:c) + data.b[r++] & 255;
						bgra.b[w++] = cv2 & 255;
						bgra.b[w++] = cv2 & 255;
						bgra.b[w++] = cv2 & 255;
						var b3 = y == 0?0:bgra.b[w - stride2];
						var c1 = x == 0 || y == 0?0:bgra.b[w - stride2 - 4];
						var k1 = ca2 + b3 - c1;
						var pa1 = k1 - ca2;
						if(pa1 < 0) {
							pa1 = -pa1;
						}
						var pb1 = k1 - b3;
						if(pb1 < 0) {
							pb1 = -pb1;
						}
						var pc1 = k1 - c1;
						if(pc1 < 0) {
							pc1 = -pc1;
						}
						ca2 = (pa1 <= pb1 && pa1 <= pc1?ca2:pb1 <= pc1?b3:c1) + data.b[r++] & 255;
						bgra.b[w++] = ca2 & 255;
					}
				} else {
					var _g310 = 0;
					while(_g310 < width) {
						var x1 = _g310++;
						var b4 = y == 0?0:bgra.b[w - stride2];
						var c2 = x1 == 0 || y == 0?0:bgra.b[w - stride2 - 4];
						var k2 = cv2 + b4 - c2;
						var pa2 = k2 - cv2;
						if(pa2 < 0) {
							pa2 = -pa2;
						}
						var pb2 = k2 - b4;
						if(pb2 < 0) {
							pb2 = -pb2;
						}
						var pc2 = k2 - c2;
						if(pc2 < 0) {
							pc2 = -pc2;
						}
						cv2 = (pa2 <= pb2 && pa2 <= pc2?cv2:pb2 <= pc2?b4:c2) + data.b[r++] & 255;
						bgra.b[w++] = cv2 & 255;
						bgra.b[w++] = cv2 & 255;
						bgra.b[w++] = cv2 & 255;
						bgra.b[w++] = 255;
					}
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid filter " + f);
			}
			w += lineDelta;
		}
		break;
	case 1:
		var alpha1 = _g4[2];
		if(h.colbits != 8) {
			throw new js__$Boot_HaxeError("Unsupported color mode");
		}
		var width1 = h.width;
		if(data.length < h.height * ((alpha1?4:3) * width1 + 1)) {
			throw new js__$Boot_HaxeError("Not enough data");
		}
		var _g14 = 0;
		var _g6 = h.height;
		while(_g14 < _g6) {
			var y1 = _g14++;
			var f1 = data.b[r++];
			switch(f1) {
			case 0:
				if(alpha1) {
					var _g311 = 0;
					while(_g311 < width1) {
						++_g311;
						bgra.b[w++] = data.b[r + 2] & 255;
						bgra.b[w++] = data.b[r + 1] & 255;
						bgra.b[w++] = data.b[r] & 255;
						bgra.b[w++] = data.b[r + 3] & 255;
						r += 4;
					}
				} else {
					var _g312 = 0;
					while(_g312 < width1) {
						++_g312;
						bgra.b[w++] = data.b[r + 2] & 255;
						bgra.b[w++] = data.b[r + 1] & 255;
						bgra.b[w++] = data.b[r] & 255;
						bgra.b[w++] = 255;
						r += 3;
					}
				}
				break;
			case 1:
				var cr = 0;
				var cg = 0;
				var cb = 0;
				var ca3 = 0;
				if(alpha1) {
					var _g313 = 0;
					while(_g313 < width1) {
						++_g313;
						cb += data.b[r + 2];
						bgra.b[w++] = cb & 255;
						cg += data.b[r + 1];
						bgra.b[w++] = cg & 255;
						cr += data.b[r];
						bgra.b[w++] = cr & 255;
						ca3 += data.b[r + 3];
						bgra.b[w++] = ca3 & 255;
						r += 4;
					}
				} else {
					var _g314 = 0;
					while(_g314 < width1) {
						++_g314;
						cb += data.b[r + 2];
						bgra.b[w++] = cb & 255;
						cg += data.b[r + 1];
						bgra.b[w++] = cg & 255;
						cr += data.b[r];
						bgra.b[w++] = cr & 255;
						bgra.b[w++] = 255;
						r += 3;
					}
				}
				break;
			case 2:
				var stride3 = y1 == 0?0:width1 * 4 * flipY1;
				if(alpha1) {
					var _g315 = 0;
					while(_g315 < width1) {
						++_g315;
						bgra.b[w] = data.b[r + 2] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w] = data.b[r + 1] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w] = data.b[r] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w] = data.b[r + 3] + bgra.b[w - stride3] & 255;
						++w;
						r += 4;
					}
				} else {
					var _g316 = 0;
					while(_g316 < width1) {
						++_g316;
						bgra.b[w] = data.b[r + 2] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w] = data.b[r + 1] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w] = data.b[r] + bgra.b[w - stride3] & 255;
						++w;
						bgra.b[w++] = 255;
						r += 3;
					}
				}
				break;
			case 3:
				var cr1 = 0;
				var cg1 = 0;
				var cb1 = 0;
				var ca4 = 0;
				var stride4 = y1 == 0?0:width1 * 4 * flipY1;
				if(alpha1) {
					var _g317 = 0;
					while(_g317 < width1) {
						++_g317;
						cb1 = data.b[r + 2] + (cb1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cb1 & 255;
						cg1 = data.b[r + 1] + (cg1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cg1 & 255;
						cr1 = data.b[r] + (cr1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cr1 & 255;
						ca4 = data.b[r + 3] + (ca4 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = ca4 & 255;
						r += 4;
					}
				} else {
					var _g318 = 0;
					while(_g318 < width1) {
						++_g318;
						cb1 = data.b[r + 2] + (cb1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cb1 & 255;
						cg1 = data.b[r + 1] + (cg1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cg1 & 255;
						cr1 = data.b[r] + (cr1 + bgra.b[w - stride4] >> 1) & 255;
						bgra.b[w++] = cr1 & 255;
						bgra.b[w++] = 255;
						r += 3;
					}
				}
				break;
			case 4:
				var stride5 = width1 * 4 * flipY1;
				var cr2 = 0;
				var cg2 = 0;
				var cb2 = 0;
				var ca5 = 0;
				if(alpha1) {
					var _g319 = 0;
					while(_g319 < width1) {
						var x2 = _g319++;
						var b5 = y1 == 0?0:bgra.b[w - stride5];
						var c3 = x2 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k3 = cb2 + b5 - c3;
						var pa3 = k3 - cb2;
						if(pa3 < 0) {
							pa3 = -pa3;
						}
						var pb3 = k3 - b5;
						if(pb3 < 0) {
							pb3 = -pb3;
						}
						var pc3 = k3 - c3;
						if(pc3 < 0) {
							pc3 = -pc3;
						}
						cb2 = (pa3 <= pb3 && pa3 <= pc3?cb2:pb3 <= pc3?b5:c3) + data.b[r + 2] & 255;
						bgra.b[w++] = cb2 & 255;
						var b6 = y1 == 0?0:bgra.b[w - stride5];
						var c4 = x2 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k4 = cg2 + b6 - c4;
						var pa4 = k4 - cg2;
						if(pa4 < 0) {
							pa4 = -pa4;
						}
						var pb4 = k4 - b6;
						if(pb4 < 0) {
							pb4 = -pb4;
						}
						var pc4 = k4 - c4;
						if(pc4 < 0) {
							pc4 = -pc4;
						}
						cg2 = (pa4 <= pb4 && pa4 <= pc4?cg2:pb4 <= pc4?b6:c4) + data.b[r + 1] & 255;
						bgra.b[w++] = cg2 & 255;
						var b7 = y1 == 0?0:bgra.b[w - stride5];
						var c5 = x2 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k5 = cr2 + b7 - c5;
						var pa5 = k5 - cr2;
						if(pa5 < 0) {
							pa5 = -pa5;
						}
						var pb5 = k5 - b7;
						if(pb5 < 0) {
							pb5 = -pb5;
						}
						var pc5 = k5 - c5;
						if(pc5 < 0) {
							pc5 = -pc5;
						}
						cr2 = (pa5 <= pb5 && pa5 <= pc5?cr2:pb5 <= pc5?b7:c5) + data.b[r] & 255;
						bgra.b[w++] = cr2 & 255;
						var b8 = y1 == 0?0:bgra.b[w - stride5];
						var c6 = x2 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k6 = ca5 + b8 - c6;
						var pa6 = k6 - ca5;
						if(pa6 < 0) {
							pa6 = -pa6;
						}
						var pb6 = k6 - b8;
						if(pb6 < 0) {
							pb6 = -pb6;
						}
						var pc6 = k6 - c6;
						if(pc6 < 0) {
							pc6 = -pc6;
						}
						ca5 = (pa6 <= pb6 && pa6 <= pc6?ca5:pb6 <= pc6?b8:c6) + data.b[r + 3] & 255;
						bgra.b[w++] = ca5 & 255;
						r += 4;
					}
				} else {
					var _g320 = 0;
					while(_g320 < width1) {
						var x3 = _g320++;
						var b9 = y1 == 0?0:bgra.b[w - stride5];
						var c7 = x3 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k7 = cb2 + b9 - c7;
						var pa7 = k7 - cb2;
						if(pa7 < 0) {
							pa7 = -pa7;
						}
						var pb7 = k7 - b9;
						if(pb7 < 0) {
							pb7 = -pb7;
						}
						var pc7 = k7 - c7;
						if(pc7 < 0) {
							pc7 = -pc7;
						}
						cb2 = (pa7 <= pb7 && pa7 <= pc7?cb2:pb7 <= pc7?b9:c7) + data.b[r + 2] & 255;
						bgra.b[w++] = cb2 & 255;
						var b10 = y1 == 0?0:bgra.b[w - stride5];
						var c8 = x3 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k8 = cg2 + b10 - c8;
						var pa8 = k8 - cg2;
						if(pa8 < 0) {
							pa8 = -pa8;
						}
						var pb8 = k8 - b10;
						if(pb8 < 0) {
							pb8 = -pb8;
						}
						var pc8 = k8 - c8;
						if(pc8 < 0) {
							pc8 = -pc8;
						}
						cg2 = (pa8 <= pb8 && pa8 <= pc8?cg2:pb8 <= pc8?b10:c8) + data.b[r + 1] & 255;
						bgra.b[w++] = cg2 & 255;
						var b11 = y1 == 0?0:bgra.b[w - stride5];
						var c9 = x3 == 0 || y1 == 0?0:bgra.b[w - stride5 - 4];
						var k9 = cr2 + b11 - c9;
						var pa9 = k9 - cr2;
						if(pa9 < 0) {
							pa9 = -pa9;
						}
						var pb9 = k9 - b11;
						if(pb9 < 0) {
							pb9 = -pb9;
						}
						var pc9 = k9 - c9;
						if(pc9 < 0) {
							pc9 = -pc9;
						}
						cr2 = (pa9 <= pb9 && pa9 <= pc9?cr2:pb9 <= pc9?b11:c9) + data.b[r] & 255;
						bgra.b[w++] = cr2 & 255;
						bgra.b[w++] = 255;
						r += 3;
					}
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid filter " + f1);
			}
			w += lineDelta;
		}
		break;
	case 2:
		var pal = format_png_Tools.getPalette(d);
		if(pal == null) {
			throw new js__$Boot_HaxeError("PNG Palette is missing");
		}
		var alpha2 = null;
		var _g_head1 = d.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			if(val1[1] == 4) {
				if(val1[2] == "tRNS") {
					alpha2 = val1[3];
					break;
				}
			}
		}
		if(alpha2 != null && alpha2.length < 1 << h.colbits) {
			var alpha21 = new haxe_io_Bytes(new ArrayBuffer(1 << h.colbits));
			alpha21.blit(0,alpha2,0,alpha2.length);
			alpha21.fill(alpha2.length,alpha21.length - alpha2.length,255);
			alpha2 = alpha21;
		}
		var width2 = h.width;
		var stride6 = Math.ceil(width2 * h.colbits / 8) + 1;
		if(data.length < h.height * stride6) {
			throw new js__$Boot_HaxeError("Not enough data");
		}
		var rline = h.width * h.colbits >> 3;
		var _g15 = 0;
		var _g7 = h.height;
		while(_g15 < _g7) {
			var y2 = _g15++;
			var f2 = data.b[r++];
			if(f2 == 0) {
				r += rline;
				continue;
			}
			switch(f2) {
			case 1:
				var c10 = 0;
				var _g321 = 0;
				while(_g321 < width2) {
					++_g321;
					c10 += data.b[r];
					data.b[r++] = c10 & 255 & 255;
				}
				break;
			case 2:
				var stride7 = y2 == 0?0:rline + 1;
				var _g322 = 0;
				while(_g322 < width2) {
					++_g322;
					data.b[r] = data.b[r] + data.b[r - stride7] & 255;
					++r;
				}
				break;
			case 3:
				var c11 = 0;
				var stride8 = y2 == 0?0:rline + 1;
				var _g323 = 0;
				while(_g323 < width2) {
					++_g323;
					c11 = data.b[r] + (c11 + data.b[r - stride8] >> 1) & 255;
					data.b[r++] = c11 & 255;
				}
				break;
			case 4:
				var stride9 = rline + 1;
				var c12 = 0;
				var _g324 = 0;
				while(_g324 < width2) {
					var x4 = _g324++;
					var v4 = data.b[r];
					var b12 = y2 == 0?0:data.b[r - stride9];
					var c13 = x4 == 0 || y2 == 0?0:data.b[r - stride9 - 1];
					var k10 = c12 + b12 - c13;
					var pa10 = k10 - c12;
					if(pa10 < 0) {
						pa10 = -pa10;
					}
					var pb10 = k10 - b12;
					if(pb10 < 0) {
						pb10 = -pb10;
					}
					var pc10 = k10 - c13;
					if(pc10 < 0) {
						pc10 = -pc10;
					}
					c12 = (pa10 <= pb10 && pa10 <= pc10?c12:pb10 <= pc10?b12:c13) + v4 & 255;
					data.b[r++] = c12 & 255;
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid filter " + f2);
			}
		}
		var r1 = 0;
		if(h.colbits == 8) {
			var _g16 = 0;
			var _g8 = h.height;
			while(_g16 < _g8) {
				++_g16;
				++r1;
				var _g325 = 0;
				var _g21 = h.width;
				while(_g325 < _g21) {
					++_g325;
					var c14 = data.b[r1++];
					bgra.b[w++] = pal.b[c14 * 3 + 2] & 255;
					bgra.b[w++] = pal.b[c14 * 3 + 1] & 255;
					bgra.b[w++] = pal.b[c14 * 3] & 255;
					bgra.b[w++] = (alpha2 != null?alpha2.b[c14]:255) & 255;
				}
				w += lineDelta;
			}
		} else if(h.colbits < 8) {
			var req = h.colbits;
			var mask = (1 << req) - 1;
			var _g17 = 0;
			var _g9 = h.height;
			while(_g17 < _g9) {
				++_g17;
				++r1;
				var bits = 0;
				var nbits = 0;
				var _g326 = 0;
				var _g22 = h.width;
				while(_g326 < _g22) {
					++_g326;
					if(nbits < req) {
						bits = bits << 8 | data.b[r1++];
						nbits += 8;
					}
					var c15 = bits >>> nbits - req & mask;
					nbits -= req;
					bgra.b[w++] = pal.b[c15 * 3 + 2] & 255;
					bgra.b[w++] = pal.b[c15 * 3 + 1] & 255;
					bgra.b[w++] = pal.b[c15 * 3] & 255;
					bgra.b[w++] = (alpha2 != null?alpha2.b[c15]:255) & 255;
				}
				w += lineDelta;
			}
		} else {
			throw new js__$Boot_HaxeError(h.colbits + " indexed bits per pixel not supported");
		}
		break;
	}
	return bgra;
};
format_png_Tools.buildGrey = function(width,height,data) {
	var rgb = new haxe_io_Bytes(new ArrayBuffer(width * height + height));
	var w = 0;
	var r = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		rgb.b[w++] = 0;
		var _g3 = 0;
		while(_g3 < width) {
			++_g3;
			rgb.b[w++] = data.b[r++] & 255;
		}
	}
	var l = new List();
	l.add(format_png_Chunk.CHeader({ width : width, height : height, colbits : 8, color : format_png_Color.ColGrey(false), interlaced : false}));
	l.add(format_png_Chunk.CData(format_tools_Deflate.run(rgb)));
	l.add(format_png_Chunk.CEnd);
	return l;
};
format_png_Tools.buildRGB = function(width,height,data) {
	var rgb = new haxe_io_Bytes(new ArrayBuffer(width * height * 3 + height));
	var w = 0;
	var r = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		rgb.b[w++] = 0;
		var _g3 = 0;
		while(_g3 < width) {
			++_g3;
			rgb.b[w++] = data.b[r + 2] & 255;
			rgb.b[w++] = data.b[r + 1] & 255;
			rgb.b[w++] = data.b[r] & 255;
			r += 3;
		}
	}
	var l = new List();
	l.add(format_png_Chunk.CHeader({ width : width, height : height, colbits : 8, color : format_png_Color.ColTrue(false), interlaced : false}));
	l.add(format_png_Chunk.CData(format_tools_Deflate.run(rgb)));
	l.add(format_png_Chunk.CEnd);
	return l;
};
format_png_Tools.build32ARGB = function(width,height,data) {
	var rgba = new haxe_io_Bytes(new ArrayBuffer(width * height * 4 + height));
	var w = 0;
	var r = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		rgba.b[w++] = 0;
		var _g3 = 0;
		while(_g3 < width) {
			++_g3;
			rgba.b[w++] = data.b[r + 1] & 255;
			rgba.b[w++] = data.b[r + 2] & 255;
			rgba.b[w++] = data.b[r + 3] & 255;
			rgba.b[w++] = data.b[r] & 255;
			r += 4;
		}
	}
	var l = new List();
	l.add(format_png_Chunk.CHeader({ width : width, height : height, colbits : 8, color : format_png_Color.ColTrue(true), interlaced : false}));
	l.add(format_png_Chunk.CData(format_tools_Deflate.run(rgba)));
	l.add(format_png_Chunk.CEnd);
	return l;
};
format_png_Tools.build32BGRA = function(width,height,data) {
	var rgba = new haxe_io_Bytes(new ArrayBuffer(width * height * 4 + height));
	var w = 0;
	var r = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		rgba.b[w++] = 0;
		var _g3 = 0;
		while(_g3 < width) {
			++_g3;
			rgba.b[w++] = data.b[r + 2] & 255;
			rgba.b[w++] = data.b[r + 1] & 255;
			rgba.b[w++] = data.b[r] & 255;
			rgba.b[w++] = data.b[r + 3] & 255;
			r += 4;
		}
	}
	var l = new List();
	l.add(format_png_Chunk.CHeader({ width : width, height : height, colbits : 8, color : format_png_Color.ColTrue(true), interlaced : false}));
	l.add(format_png_Chunk.CData(format_tools_Deflate.run(rgba)));
	l.add(format_png_Chunk.CEnd);
	return l;
};
var format_png_Writer = function(o) {
	this.o = o;
	o.set_bigEndian(true);
};
$hxClasses["format.png.Writer"] = format_png_Writer;
format_png_Writer.__name__ = ["format","png","Writer"];
format_png_Writer.prototype = {
	write: function(png) {
		var _g = 0;
		var _g1 = [137,80,78,71,13,10,26,10];
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			this.o.writeByte(b);
		}
		var _g_head = png.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			switch(val[1]) {
			case 0:
				this.writeChunk("IEND",new haxe_io_Bytes(new ArrayBuffer(0)));
				break;
			case 1:
				var h = val[2];
				var b1 = new haxe_io_BytesOutput();
				b1.set_bigEndian(true);
				b1.writeInt32(h.width);
				b1.writeInt32(h.height);
				b1.writeByte(h.colbits);
				var _g2 = h.color;
				var tmp;
				switch(_g2[1]) {
				case 0:
					if(_g2[2]) {
						tmp = 4;
					} else {
						tmp = 0;
					}
					break;
				case 1:
					if(_g2[2]) {
						tmp = 6;
					} else {
						tmp = 2;
					}
					break;
				case 2:
					tmp = 3;
					break;
				}
				b1.writeByte(tmp);
				b1.writeByte(0);
				b1.writeByte(0);
				b1.writeByte(h.interlaced?1:0);
				this.writeChunk("IHDR",b1.getBytes());
				break;
			case 2:
				this.writeChunk("IDAT",val[2]);
				break;
			case 3:
				this.writeChunk("PLTE",val[2]);
				break;
			case 4:
				this.writeChunk(val[2],val[3]);
				break;
			}
		}
	}
	,writeChunk: function(id,data) {
		this.o.writeInt32(data.length);
		this.o.writeString(id);
		this.o.write(data);
		var crc = new haxe_crypto_Crc32();
		var _g = 0;
		while(_g < 4) crc["byte"](HxOverrides.cca(id,_g++));
		crc.update(data,0,data.length);
		this.o.writeInt32(crc.get());
	}
	,__class__: format_png_Writer
};
var format_tools_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["format.tools.Adler32"] = format_tools_Adler32;
format_tools_Adler32.__name__ = ["format","tools","Adler32"];
format_tools_Adler32.read = function(i) {
	var a = new format_tools_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	a.a1 = i.readByte() << 8 | i.readByte();
	a.a2 = a2a << 8 | a2b;
	return a;
};
format_tools_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			a1 = (a1 + b.b[_g1++]) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: format_tools_Adler32
};
var format_tools_BitsInput = function(i) {
	this.i = i;
	this.nbits = 0;
	this.bits = 0;
};
$hxClasses["format.tools.BitsInput"] = format_tools_BitsInput;
format_tools_BitsInput.__name__ = ["format","tools","BitsInput"];
format_tools_BitsInput.prototype = {
	readBits: function(n) {
		if(this.nbits >= n) {
			var c = this.nbits - n;
			var k = this.bits >>> c & (1 << n) - 1;
			this.nbits = c;
			return k;
		}
		var k1 = this.i.readByte();
		if(this.nbits >= 24) {
			if(n >= 31) {
				throw new js__$Boot_HaxeError("Bits error");
			}
			var c1 = 8 + this.nbits - n;
			var d = this.bits & (1 << this.nbits) - 1;
			d = d << 8 - c1 | k1 << c1;
			this.bits = k1;
			this.nbits = c1;
			return d;
		}
		this.bits = this.bits << 8 | k1;
		this.nbits += 8;
		return this.readBits(n);
	}
	,readBit: function() {
		if(this.nbits == 0) {
			this.bits = this.i.readByte();
			this.nbits = 8;
		}
		this.nbits--;
		return (this.bits >>> this.nbits & 1) == 1;
	}
	,reset: function() {
		this.nbits = 0;
	}
	,__class__: format_tools_BitsInput
};
var format_tools_Deflate = function() { };
$hxClasses["format.tools.Deflate"] = format_tools_Deflate;
format_tools_Deflate.__name__ = ["format","tools","Deflate"];
format_tools_Deflate.run = function(b) {
	throw new js__$Boot_HaxeError("Deflate is not supported on this platform");
};
var format_tools_Huffman = $hxClasses["format.tools.Huffman"] = { __ename__ : ["format","tools","Huffman"], __constructs__ : ["Found","NeedBit","NeedBits"] };
format_tools_Huffman.Found = function(i) { var $x = ["Found",0,i]; $x.__enum__ = format_tools_Huffman; $x.toString = $estr; return $x; };
format_tools_Huffman.NeedBit = function(left,right) { var $x = ["NeedBit",1,left,right]; $x.__enum__ = format_tools_Huffman; $x.toString = $estr; return $x; };
format_tools_Huffman.NeedBits = function(n,table) { var $x = ["NeedBits",2,n,table]; $x.__enum__ = format_tools_Huffman; $x.toString = $estr; return $x; };
format_tools_Huffman.__empty_constructs__ = [];
var format_tools_HuffTools = function() {
};
$hxClasses["format.tools.HuffTools"] = format_tools_HuffTools;
format_tools_HuffTools.__name__ = ["format","tools","HuffTools"];
format_tools_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 1:
			var b = t[3];
			var da = this.treeDepth(t[2]);
			var db = this.treeDepth(b);
			return 1 + (da < db?da:db);
		case 2:
			throw new js__$Boot_HaxeError("assert");
			break;
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t[1] == 1) {
				return format_tools_Huffman.NeedBit(this.treeCompress(t[2]),this.treeCompress(t[3]));
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g1 = 0;
		while(_g1 < size) {
			++_g1;
			table.push(format_tools_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return format_tools_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t[1] == 1) {
			var b = t[3];
			var a = t[2];
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return format_tools_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return format_tools_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var _g1 = 0;
		while(_g1 < maxbits) {
			++_g1;
			counts.push(0);
			tmp.push(0);
		}
		var _g11 = 0;
		while(_g11 < nlengths) {
			var p = lengths[_g11++ + pos];
			if(p >= maxbits) {
				throw new js__$Boot_HaxeError("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g12 = 1;
		var _g = maxbits - 1;
		while(_g12 < _g) {
			var i = _g12++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g13 = 0;
		while(_g13 < nlengths) {
			var i1 = _g13++;
			var l = lengths[i1 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i1;
			}
		}
		return this.treeCompress(format_tools_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: format_tools_HuffTools
};
var format_tools_Inflate = function() { };
$hxClasses["format.tools.Inflate"] = format_tools_Inflate;
format_tools_Inflate.__name__ = ["format","tools","Inflate"];
format_tools_Inflate.run = function(bytes) {
	return format_tools_InflateImpl.run(new haxe_io_BytesInput(bytes));
};
var format_tools__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new format_tools_Adler32();
	}
};
$hxClasses["format.tools._InflateImpl.Window"] = format_tools__$InflateImpl_Window;
format_tools__$InflateImpl_Window.__name__ = ["format","tools","_InflateImpl","Window"];
format_tools__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c & 255;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: format_tools__$InflateImpl_Window
};
var format_tools__$InflateImpl_State = $hxClasses["format.tools._InflateImpl.State"] = { __ename__ : ["format","tools","_InflateImpl","State"], __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"] };
format_tools__$InflateImpl_State.Head = ["Head",0];
format_tools__$InflateImpl_State.Head.toString = $estr;
format_tools__$InflateImpl_State.Head.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.Block = ["Block",1];
format_tools__$InflateImpl_State.Block.toString = $estr;
format_tools__$InflateImpl_State.Block.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.CData = ["CData",2];
format_tools__$InflateImpl_State.CData.toString = $estr;
format_tools__$InflateImpl_State.CData.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.Flat = ["Flat",3];
format_tools__$InflateImpl_State.Flat.toString = $estr;
format_tools__$InflateImpl_State.Flat.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.Crc = ["Crc",4];
format_tools__$InflateImpl_State.Crc.toString = $estr;
format_tools__$InflateImpl_State.Crc.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.Dist = ["Dist",5];
format_tools__$InflateImpl_State.Dist.toString = $estr;
format_tools__$InflateImpl_State.Dist.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.DistOne = ["DistOne",6];
format_tools__$InflateImpl_State.DistOne.toString = $estr;
format_tools__$InflateImpl_State.DistOne.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.Done = ["Done",7];
format_tools__$InflateImpl_State.Done.toString = $estr;
format_tools__$InflateImpl_State.Done.__enum__ = format_tools__$InflateImpl_State;
format_tools__$InflateImpl_State.__empty_constructs__ = [format_tools__$InflateImpl_State.Head,format_tools__$InflateImpl_State.Block,format_tools__$InflateImpl_State.CData,format_tools__$InflateImpl_State.Flat,format_tools__$InflateImpl_State.Crc,format_tools__$InflateImpl_State.Dist,format_tools__$InflateImpl_State.DistOne,format_tools__$InflateImpl_State.Done];
var format_tools_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this["final"] = false;
	this.htools = new format_tools_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header?format_tools__$InflateImpl_State.Head:format_tools__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	var _g = 0;
	while(_g < 19) {
		++_g;
		this.lengths.push(-1);
	}
	this.window = new format_tools__$InflateImpl_Window(crc);
};
$hxClasses["format.tools.InflateImpl"] = format_tools_InflateImpl;
format_tools_InflateImpl.__name__ = ["format","tools","InflateImpl"];
format_tools_InflateImpl.run = function(i,bufsize) {
	if(bufsize == null) {
		bufsize = 65536;
	}
	var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
	var output = new haxe_io_BytesBuffer();
	var inflate = new format_tools_InflateImpl(i);
	while(true) {
		var len = inflate.readBytes(buf,0,bufsize);
		if(len < 0 || len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b2 = buf.b;
		var _g1 = 0;
		while(_g1 < len) output.b.push(b2[_g1++]);
		if(len < bufsize) {
			break;
		}
	}
	return output.getBytes();
};
format_tools_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(format_tools_InflateImpl.FIXED_HUFFMAN != null) {
			return format_tools_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143?8:n <= 255?9:n <= 279?7:8);
		}
		format_tools_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return format_tools_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b & 255;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g1 = 0;
		while(_g1 < n) {
			++_g1;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h[1]) {
		case 0:
			return h[2];
		case 1:
			var b = h[3];
			var a = h[2];
			return this.applyHuffman(this.getBit()?b:a);
		case 2:
			return this.applyHuffman(h[3][this.getBits(h[2])]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state[1]) {
		case 0:
			var cmf = this.input.readByte();
			if((cmf & 15) != 8) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			if(fdict) {
				throw new js__$Boot_HaxeError("Unsupported dictionary");
			}
			this.state = format_tools__$InflateImpl_State.Block;
			return true;
		case 1:
			this["final"] = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				if(this.input.readUInt16() != 65535 - this.len) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = format_tools__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = format_tools__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g1 = 0;
				while(_g1 < hclen) this.lengths[format_tools_InflateImpl.CODE_LENGTHS_POS[_g1++]] = this.getBits(3);
				var _g = hclen;
				while(_g < 19) this.lengths[format_tools_InflateImpl.CODE_LENGTHS_POS[_g++]] = 0;
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g11 = 0;
				var _g2 = hlit + hdist;
				while(_g11 < _g2) {
					++_g11;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = format_tools__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this["final"]?format_tools__$InflateImpl_State.Crc:format_tools__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = format_tools_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.len = format_tools_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null?this.getRevBits(5):this.applyHuffman(this.huffdist);
				extra_bits = format_tools_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.dist = format_tools_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = this.dist == 1?format_tools__$InflateImpl_State.DistOne:format_tools__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed?this.len:this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this["final"]?format_tools__$InflateImpl_State.Crc:format_tools__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = format_tools__$InflateImpl_State.Done;
				return true;
			}
			if(!calc.equals(format_tools_Adler32.read(this.input))) {
				throw new js__$Boot_HaxeError("Invalid CRC");
			}
			this.state = format_tools__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist?this.len:this.dist;
				var rlen1 = this.needed < rdist?this.needed:rdist;
				this.addDist(this.dist,rlen1);
				this.len -= rlen1;
			}
			if(this.len == 0) {
				this.state = format_tools__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen2 = this.len < this.needed?this.len:this.needed;
			this.addDistOne(rlen2);
			this.len -= rlen2;
			if(this.len == 0) {
				this.state = format_tools__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: format_tools_InflateImpl
};
var format_wav_WAVEFormat = $hxClasses["format.wav.WAVEFormat"] = { __ename__ : ["format","wav","WAVEFormat"], __constructs__ : ["WF_PCM"] };
format_wav_WAVEFormat.WF_PCM = ["WF_PCM",0];
format_wav_WAVEFormat.WF_PCM.toString = $estr;
format_wav_WAVEFormat.WF_PCM.__enum__ = format_wav_WAVEFormat;
format_wav_WAVEFormat.__empty_constructs__ = [format_wav_WAVEFormat.WF_PCM];
var format_wav_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.wav.Reader"] = format_wav_Reader;
format_wav_Reader.__name__ = ["format","wav","Reader"];
format_wav_Reader.prototype = {
	readInt: function() {
		return this.i.readInt32();
	}
	,read: function() {
		if(this.i.readString(4) != "RIFF") {
			throw new js__$Boot_HaxeError("RIFF header expected");
		}
		this.i.readInt32();
		if(this.i.readString(4) != "WAVE") {
			throw new js__$Boot_HaxeError("WAVE signature not found");
		}
		if(this.i.readString(4) != "fmt ") {
			throw new js__$Boot_HaxeError("expected fmt subchunk");
		}
		var fmtlen = this.i.readInt32();
		var format1;
		if(this.i.readUInt16() == 1) {
			format1 = format_wav_WAVEFormat.WF_PCM;
		} else {
			throw new js__$Boot_HaxeError("only PCM (uncompressed) WAV files are supported");
		}
		var channels = this.i.readUInt16();
		var samplingRate = this.i.readInt32();
		var byteRate = this.i.readInt32();
		var blockAlign = this.i.readUInt16();
		var bitsPerSample = this.i.readUInt16();
		if(fmtlen > 16) {
			this.i.read(fmtlen - 16);
		}
		var nextChunk = this.i.readString(4);
		while(nextChunk != "data") {
			this.i.read(this.i.readInt32());
			nextChunk = this.i.readString(4);
		}
		if(nextChunk != "data") {
			throw new js__$Boot_HaxeError("expected data subchunk");
		}
		var datalen = this.i.readInt32();
		var data = this.i.readAll();
		if(data.length > datalen) {
			data = data.sub(0,datalen);
		}
		return { header : { format : format1, channels : channels, samplingRate : samplingRate, byteRate : byteRate, blockAlign : blockAlign, bitsPerSample : bitsPerSample}, data : data};
	}
	,__class__: format_wav_Reader
};
var h2d_Sprite = function(parent) {
	this.alpha = 1.;
	this.matA = 1;
	this.matB = 0;
	this.matC = 0;
	this.matD = 1;
	this.absX = 0;
	this.absY = 0;
	this.posChanged = true;
	this.x = 0;
	this.posChanged = true;
	this.y = 0;
	this.posChanged = true;
	this.scaleX = 1;
	this.posChanged = true;
	this.scaleY = 1;
	this.posChanged = true;
	this.rotation = 0;
	this.posChanged = parent != null;
	this.visible = true;
	this.childs = [];
	this.filters = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h2d.Sprite"] = h2d_Sprite;
h2d_Sprite.__name__ = ["h2d","Sprite"];
h2d_Sprite.prototype = {
	getBounds: function(relativeTo,out) {
		if(out == null) {
			out = new h2d_col_Bounds();
		} else {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
		}
		if(relativeTo != null) {
			relativeTo.syncPos();
		}
		if(relativeTo != this) {
			this.syncPos();
		}
		this.getBoundsRec(relativeTo,out,false);
		if(out.xMax <= out.xMin || out.yMax <= out.yMin) {
			this.addBounds(relativeTo,out,-1,-1,2,2);
			out.xMax = out.xMin = (out.xMax + out.xMin) * 0.5;
			out.yMax = out.yMin = (out.yMax + out.yMin) * 0.5;
		}
		return out;
	}
	,getSize: function(out) {
		if(out == null) {
			out = new h2d_col_Bounds();
		} else {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
		}
		if(this.parent != null) {
			this.parent.syncPos();
		}
		this.getBoundsRec(this.parent,out,true);
		if(out.xMax <= out.xMin || out.yMax <= out.yMin) {
			this.addBounds(this.parent,out,-1,-1,2,2);
			out.xMax = out.xMin = (out.xMax + out.xMin) * 0.5;
			out.yMax = out.yMin = (out.yMax + out.yMin) * 0.5;
		}
		var dx = -this.x;
		var dy = -this.y;
		out.xMin += dx;
		out.xMax += dx;
		out.yMin += dy;
		out.yMax += dy;
		return out;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		var n = this.childs.length;
		if(n == 0) {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
			return;
		}
		if(n == 1) {
			var c1 = this.childs[0];
			if(c1.visible) {
				c1.getBoundsRec(relativeTo,out,forSize);
			} else {
				out.xMin = 1e20;
				out.yMin = 1e20;
				out.xMax = -1e20;
				out.yMax = -1e20;
			}
			return;
		}
		var xmin = Infinity;
		var ymin = Infinity;
		var xmax = -Infinity;
		var ymax = -Infinity;
		var _g2 = 0;
		var _g11 = this.childs;
		while(_g2 < _g11.length) {
			var c2 = _g11[_g2];
			++_g2;
			if(!c2.visible) {
				continue;
			}
			c2.getBoundsRec(relativeTo,out,forSize);
			if(out.xMin < xmin) {
				xmin = out.xMin;
			}
			if(out.yMin < ymin) {
				ymin = out.yMin;
			}
			if(out.xMax > xmax) {
				xmax = out.xMax;
			}
			if(out.yMax > ymax) {
				ymax = out.yMax;
			}
		}
		out.xMin = xmin;
		out.yMin = ymin;
		out.xMax = xmax;
		out.yMax = ymax;
	}
	,addBounds: function(relativeTo,out,dx,dy,width,height) {
		if(width <= 0 || height <= 0) {
			return;
		}
		if(relativeTo == null) {
			var x = dx * this.matA + dy * this.matC + this.absX;
			var y = dx * this.matB + dy * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x1 = (dx + width) * this.matA + dy * this.matC + this.absX;
			var y1 = (dx + width) * this.matB + dy * this.matD + this.absY;
			if(x1 < out.xMin) {
				out.xMin = x1;
			}
			if(x1 > out.xMax) {
				out.xMax = x1;
			}
			if(y1 < out.yMin) {
				out.yMin = y1;
			}
			if(y1 > out.yMax) {
				out.yMax = y1;
			}
			var x2 = dx * this.matA + (dy + height) * this.matC + this.absX;
			var y2 = dx * this.matB + (dy + height) * this.matD + this.absY;
			if(x2 < out.xMin) {
				out.xMin = x2;
			}
			if(x2 > out.xMax) {
				out.xMax = x2;
			}
			if(y2 < out.yMin) {
				out.yMin = y2;
			}
			if(y2 > out.yMax) {
				out.yMax = y2;
			}
			var x3 = (dx + width) * this.matA + (dy + height) * this.matC + this.absX;
			var y3 = (dx + width) * this.matB + (dy + height) * this.matD + this.absY;
			if(x3 < out.xMin) {
				out.xMin = x3;
			}
			if(x3 > out.xMax) {
				out.xMax = x3;
			}
			if(y3 < out.yMin) {
				out.yMin = y3;
			}
			if(y3 > out.yMax) {
				out.yMax = y3;
			}
			return;
		}
		if(relativeTo == this) {
			if(out.xMin > dx) {
				out.xMin = dx;
			}
			if(out.yMin > dy) {
				out.yMin = dy;
			}
			if(out.xMax < dx + width) {
				out.xMax = dx + width;
			}
			if(out.yMax < dy + height) {
				out.yMax = dy + height;
			}
			return;
		}
		var det = 1 / (relativeTo.matA * relativeTo.matD - relativeTo.matB * relativeTo.matC);
		var rA = relativeTo.matD * det;
		var rB = -relativeTo.matB * det;
		var rC = -relativeTo.matC * det;
		var rD = relativeTo.matA * det;
		var rX = this.absX - relativeTo.absX;
		var rY = this.absY - relativeTo.absY;
		var x4;
		var y4;
		x4 = dx * this.matA + dy * this.matC + rX;
		y4 = dx * this.matB + dy * this.matD + rY;
		var x5 = x4 * rA + y4 * rC;
		var y5 = x4 * rB + y4 * rD;
		if(x5 < out.xMin) {
			out.xMin = x5;
		}
		if(x5 > out.xMax) {
			out.xMax = x5;
		}
		if(y5 < out.yMin) {
			out.yMin = y5;
		}
		if(y5 > out.yMax) {
			out.yMax = y5;
		}
		x4 = (dx + width) * this.matA + dy * this.matC + rX;
		y4 = (dx + width) * this.matB + dy * this.matD + rY;
		var x6 = x4 * rA + y4 * rC;
		var y6 = x4 * rB + y4 * rD;
		if(x6 < out.xMin) {
			out.xMin = x6;
		}
		if(x6 > out.xMax) {
			out.xMax = x6;
		}
		if(y6 < out.yMin) {
			out.yMin = y6;
		}
		if(y6 > out.yMax) {
			out.yMax = y6;
		}
		x4 = dx * this.matA + (dy + height) * this.matC + rX;
		y4 = dx * this.matB + (dy + height) * this.matD + rY;
		var x7 = x4 * rA + y4 * rC;
		var y7 = x4 * rB + y4 * rD;
		if(x7 < out.xMin) {
			out.xMin = x7;
		}
		if(x7 > out.xMax) {
			out.xMax = x7;
		}
		if(y7 < out.yMin) {
			out.yMin = y7;
		}
		if(y7 > out.yMax) {
			out.yMax = y7;
		}
		x4 = (dx + width) * this.matA + (dy + height) * this.matC + rX;
		y4 = (dx + width) * this.matB + (dy + height) * this.matD + rY;
		var x8 = x4 * rA + y4 * rC;
		var y8 = x4 * rB + y4 * rD;
		if(x8 < out.xMin) {
			out.xMin = x8;
		}
		if(x8 > out.xMax) {
			out.xMax = x8;
		}
		if(y8 < out.yMin) {
			out.yMin = y8;
		}
		if(y8 > out.yMax) {
			out.yMax = y8;
		}
	}
	,getSpritesCount: function() {
		var k = 0;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			k += c.getSpritesCount() + 1;
		}
		return k;
	}
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h2d_col_Point();
		}
		var px = pt.x * this.matA + pt.y * this.matC + this.absX;
		var py = pt.x * this.matB + pt.y * this.matD + this.absY;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,globalToLocal: function(pt) {
		this.syncPos();
		pt.x -= this.absX;
		pt.y -= this.absY;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var px = (pt.x * this.matD - pt.y * this.matC) * invDet;
		var py = (-pt.x * this.matB + pt.y * this.matA) * invDet;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		return (p instanceof h2d_Scene)?p:null;
	}
	,addChild: function(s) {
		this.addChildAt(s,this.childs.length);
	}
	,addChildAt: function(s,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.childs.length) {
			pos = this.childs.length;
		}
		var p = this;
		while(p != null) {
			if(p == s) {
				throw new js__$Boot_HaxeError("Recursive addChild");
			}
			p = p.parent;
		}
		if(s.parent != null) {
			var old = s.allocated;
			s.allocated = false;
			s.parent.removeChild(s);
			s.allocated = old;
		}
		this.childs.splice(pos,0,s);
		if(!this.allocated && s.allocated) {
			s.onDelete();
		}
		s.parent = this;
		s.posChanged = true;
		if(this.allocated) {
			if(!s.allocated) {
				s.onAlloc();
			} else {
				s.onParentChangedRec();
			}
		}
	}
	,onParentChangedRec: function() {
		this.onParentChanged();
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onParentChangedRec();
		}
	}
	,onParentChanged: function() {
	}
	,onAlloc: function() {
		this.allocated = true;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAlloc();
		}
	}
	,onDelete: function() {
		this.allocated = false;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onDelete();
		}
	}
	,getMatrix: function(m) {
		m.a = this.matA;
		m.b = this.matB;
		m.c = this.matC;
		m.d = this.matD;
		m.x = this.absX;
		m.y = this.absY;
	}
	,removeChild: function(s) {
		if(HxOverrides.remove(this.childs,s)) {
			if(s.allocated) {
				s.onDelete();
			}
			s.parent = null;
			s.posChanged = true;
		}
	}
	,removeChildren: function() {
		while(this.childs.length > 0) this.removeChild(this.childs[0]);
	}
	,remove: function() {
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
	}
	,drawTo: function(t) {
		var s = this.getScene();
		var needDispose = s == null;
		if(s == null) {
			s = new h2d_Scene();
		}
		s.drawImplTo(this,t);
		if(needDispose) {
			s.dispose();
		}
	}
	,draw: function(ctx) {
	}
	,sync: function(ctx) {
		var changed = this.posChanged;
		if(changed) {
			this.calcAbsPos();
			this.posChanged = false;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.childs.length;
		while(p < len) {
			var c = this.childs[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					c.posChanged = true;
				}
				c.sync(ctx);
			}
			if(this.childs[p] != c) {
				p = 0;
				len = this.childs.length;
			} else {
				++p;
			}
		}
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
	}
	,calcAbsPos: function() {
		if(this.parent == null) {
			var cr;
			var sr;
			if(this.rotation == 0) {
				cr = 1.;
				sr = 0.;
				this.matA = this.scaleX;
				this.matB = 0;
				this.matC = 0;
				this.matD = this.scaleY;
			} else {
				cr = Math.cos(this.rotation);
				sr = Math.sin(this.rotation);
				this.matA = this.scaleX * cr;
				this.matB = this.scaleX * sr;
				this.matC = this.scaleY * -sr;
				this.matD = this.scaleY * cr;
			}
			this.absX = this.x;
			this.absY = this.y;
		} else {
			if(this.rotation == 0) {
				this.matA = this.scaleX * this.parent.matA;
				this.matB = this.scaleX * this.parent.matB;
				this.matC = this.scaleY * this.parent.matC;
				this.matD = this.scaleY * this.parent.matD;
			} else {
				var cr1 = Math.cos(this.rotation);
				var sr1 = Math.sin(this.rotation);
				var tmpA = this.scaleX * cr1;
				var tmpB = this.scaleX * sr1;
				var tmpC = this.scaleY * -sr1;
				var tmpD = this.scaleY * cr1;
				this.matA = tmpA * this.parent.matA + tmpB * this.parent.matC;
				this.matB = tmpA * this.parent.matB + tmpB * this.parent.matD;
				this.matC = tmpC * this.parent.matA + tmpD * this.parent.matC;
				this.matD = tmpC * this.parent.matB + tmpD * this.parent.matD;
			}
			this.absX = this.x * this.parent.matA + this.y * this.parent.matC + this.parent.absX;
			this.absY = this.x * this.parent.matB + this.y * this.parent.matD + this.parent.absY;
		}
	}
	,emitTile: function(ctx,tile) {
		if(h2d_Sprite.nullDrawable == null) {
			h2d_Sprite.nullDrawable = new h2d_Drawable(null);
		}
		h2d_Sprite.nullDrawable.absX = this.absX;
		h2d_Sprite.nullDrawable.absY = this.absY;
		h2d_Sprite.nullDrawable.matA = this.matA;
		h2d_Sprite.nullDrawable.matB = this.matB;
		h2d_Sprite.nullDrawable.matC = this.matC;
		h2d_Sprite.nullDrawable.matD = this.matD;
		ctx.drawTile(h2d_Sprite.nullDrawable,tile);
		return;
	}
	,clipBounds: function(ctx,bounds) {
		var _gthis = this;
		var view = ctx.tmpBounds;
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x = bounds.xMin;
		var y = bounds.yMin;
		var x1 = x * _gthis.matA + y * _gthis.matC + _gthis.absX;
		var y1 = x * _gthis.matB + y * _gthis.matD + _gthis.absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x2 = bounds.xMax;
		var y2 = bounds.yMin;
		var x3 = x2 * _gthis.matA + y2 * _gthis.matC + _gthis.absX;
		var y3 = x2 * _gthis.matB + y2 * _gthis.matD + _gthis.absY;
		if(x3 < view.xMin) {
			view.xMin = x3;
		}
		if(x3 > view.xMax) {
			view.xMax = x3;
		}
		if(y3 < view.yMin) {
			view.yMin = y3;
		}
		if(y3 > view.yMax) {
			view.yMax = y3;
		}
		var x4 = bounds.xMin;
		var y4 = bounds.yMax;
		var x5 = x4 * _gthis.matA + y4 * _gthis.matC + _gthis.absX;
		var y5 = x4 * _gthis.matB + y4 * _gthis.matD + _gthis.absY;
		if(x5 < view.xMin) {
			view.xMin = x5;
		}
		if(x5 > view.xMax) {
			view.xMax = x5;
		}
		if(y5 < view.yMin) {
			view.yMin = y5;
		}
		if(y5 > view.yMax) {
			view.yMax = y5;
		}
		var x6 = bounds.xMax;
		var y6 = bounds.yMax;
		var x7 = x6 * _gthis.matA + y6 * _gthis.matC + _gthis.absX;
		var y7 = x6 * _gthis.matB + y6 * _gthis.matD + _gthis.absY;
		if(x7 < view.xMin) {
			view.xMin = x7;
		}
		if(x7 > view.xMax) {
			view.xMax = x7;
		}
		if(y7 < view.yMin) {
			view.yMin = y7;
		}
		if(y7 > view.yMax) {
			view.yMax = y7;
		}
		if(view.xMin < 0) {
			view.xMin = 0;
		}
		if(view.yMin < 0) {
			view.yMin = 0;
		}
		if(view.xMax > ctx.curWidth) {
			view.xMax = ctx.curWidth;
		}
		if(view.yMax > ctx.curHeight) {
			view.yMax = ctx.curHeight;
		}
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var sxMin = view.xMin;
		var syMin = view.yMin;
		var sxMax = view.xMax;
		var syMax = view.yMax;
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x8 = sxMin;
		var y8 = syMin;
		x8 = sxMin - _gthis.absX;
		y8 = syMin - _gthis.absY;
		var x9 = (x8 * _gthis.matD - y8 * _gthis.matC) * invDet;
		var y9 = (-x8 * _gthis.matB + y8 * _gthis.matA) * invDet;
		if(x9 < view.xMin) {
			view.xMin = x9;
		}
		if(x9 > view.xMax) {
			view.xMax = x9;
		}
		if(y9 < view.yMin) {
			view.yMin = y9;
		}
		if(y9 > view.yMax) {
			view.yMax = y9;
		}
		var x10 = sxMax;
		var y10 = syMin;
		x10 = sxMax - _gthis.absX;
		y10 = syMin - _gthis.absY;
		var x11 = (x10 * _gthis.matD - y10 * _gthis.matC) * invDet;
		var y11 = (-x10 * _gthis.matB + y10 * _gthis.matA) * invDet;
		if(x11 < view.xMin) {
			view.xMin = x11;
		}
		if(x11 > view.xMax) {
			view.xMax = x11;
		}
		if(y11 < view.yMin) {
			view.yMin = y11;
		}
		if(y11 > view.yMax) {
			view.yMax = y11;
		}
		var x12 = sxMin;
		var y12 = syMax;
		x12 = sxMin - _gthis.absX;
		y12 = syMax - _gthis.absY;
		var x13 = (x12 * _gthis.matD - y12 * _gthis.matC) * invDet;
		var y13 = (-x12 * _gthis.matB + y12 * _gthis.matA) * invDet;
		if(x13 < view.xMin) {
			view.xMin = x13;
		}
		if(x13 > view.xMax) {
			view.xMax = x13;
		}
		if(y13 < view.yMin) {
			view.yMin = y13;
		}
		if(y13 > view.yMax) {
			view.yMax = y13;
		}
		var x14 = sxMax;
		var y14 = syMax;
		x14 = sxMax - _gthis.absX;
		y14 = syMax - _gthis.absY;
		var x15 = (x14 * _gthis.matD - y14 * _gthis.matC) * invDet;
		var y15 = (-x14 * _gthis.matB + y14 * _gthis.matA) * invDet;
		if(x15 < view.xMin) {
			view.xMin = x15;
		}
		if(x15 > view.xMax) {
			view.xMax = x15;
		}
		if(y15 < view.yMin) {
			view.yMin = y15;
		}
		if(y15 > view.yMax) {
			view.yMax = y15;
		}
		var a = bounds.xMin;
		var b = view.xMin;
		bounds.xMin = a < b?b:a;
		var a1 = bounds.yMin;
		var b1 = view.yMin;
		bounds.yMin = a1 < b1?b1:a1;
		var a2 = bounds.xMax;
		var b2 = view.xMax;
		bounds.xMax = a2 > b2?b2:a2;
		var a3 = bounds.yMax;
		var b3 = view.yMax;
		bounds.yMax = a3 > b3?b3:a3;
	}
	,drawFilters: function(ctx) {
		var bounds = ctx.tmpBounds;
		var total = new h2d_col_Bounds();
		var maxExtent = -1.;
		var _g = 0;
		var _g1 = this.filters;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f.sync(ctx,this);
			if(f.autoBounds) {
				if(f.boundsExtend > maxExtent) {
					maxExtent = f.boundsExtend;
				}
			} else {
				f.getBounds(this,bounds);
				if(bounds.xMin < total.xMin) {
					total.xMin = bounds.xMin;
				}
				if(bounds.xMax > total.xMax) {
					total.xMax = bounds.xMax;
				}
				if(bounds.yMin < total.yMin) {
					total.yMin = bounds.yMin;
				}
				if(bounds.yMax > total.yMax) {
					total.yMax = bounds.yMax;
				}
			}
		}
		if(maxExtent >= 0) {
			this.getBounds(this,bounds);
			bounds.xMin -= maxExtent;
			bounds.yMin -= maxExtent;
			bounds.xMax += maxExtent;
			bounds.yMax += maxExtent;
			if(bounds.xMin < total.xMin) {
				total.xMin = bounds.xMin;
			}
			if(bounds.xMax > total.xMax) {
				total.xMax = bounds.xMax;
			}
			if(bounds.yMin < total.yMin) {
				total.yMin = bounds.yMin;
			}
			if(bounds.yMax > total.yMax) {
				total.yMax = bounds.yMax;
			}
		}
		this.clipBounds(ctx,total);
		var xMin = Math.floor(total.xMin + 1e-10);
		var yMin = Math.floor(total.yMin + 1e-10);
		var width = Math.ceil(total.xMax - xMin - 1e-10);
		var height = Math.ceil(total.yMax - yMin - 1e-10);
		if(width <= 0 || height <= 0 || total.xMax < total.xMin) {
			return;
		}
		var t = ctx.textures.allocTarget("filterTemp",ctx,width,height,false);
		ctx.pushTarget(t,xMin,yMin);
		ctx.engine.clear(0);
		var oldAlpha = ctx.globalAlpha;
		var shader = ctx.baseShader;
		var _this = shader.filterMatrixA__;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var w = _this.w;
		var _this1 = shader.filterMatrixB__;
		var x1 = _this1.x;
		var y1 = _this1.y;
		var z1 = _this1.z;
		var w1 = _this1.w;
		var oldF = ctx.inFilter;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var invA = this.matD * invDet;
		var invB = -this.matB * invDet;
		var invC = -this.matC * invDet;
		var invD = this.matA * invDet;
		var invX = -(this.absX * invA + this.absY * invC);
		var invY = -(this.absX * invB + this.absY * invD);
		ctx.inFilter = this;
		var _this2 = shader.filterMatrixA__;
		_this2.x = invA;
		_this2.y = invC;
		_this2.z = invX;
		_this2.w = 1.;
		var _this3 = shader.filterMatrixB__;
		_this3.x = invB;
		_this3.y = invD;
		_this3.z = invY;
		_this3.w = 1.;
		ctx.globalAlpha = 1;
		this.draw(ctx);
		var _g2 = 0;
		var _g11 = this.childs;
		while(_g2 < _g11.length) {
			var c = _g11[_g2];
			++_g2;
			c.drawRec(ctx);
		}
		var $final = h2d_Tile.fromTexture(t);
		$final.dx = xMin;
		$final.dy = yMin;
		var _g3 = 0;
		var _g12 = this.filters;
		while(_g3 < _g12.length) {
			var f1 = _g12[_g3];
			++_g3;
			var prev = $final;
			$final = f1.draw(ctx,$final);
			if($final == null) {
				ctx.popTarget();
				return;
			}
			if($final != prev) {
				$final.dx += xMin;
				$final.dy += yMin;
			}
		}
		var _this4 = shader.filterMatrixA__;
		_this4.x = x;
		_this4.y = y;
		_this4.z = z;
		_this4.w = w;
		var _this5 = shader.filterMatrixB__;
		_this5.x = x1;
		_this5.y = y1;
		_this5.z = z1;
		_this5.w = w1;
		ctx.inFilter = oldF;
		ctx.popTarget();
		ctx.globalAlpha = oldAlpha * this.alpha;
		this.emitTile(ctx,$final);
		ctx.globalAlpha = oldAlpha;
	}
	,drawRec: function(ctx) {
		if(!this.visible) {
			return;
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		if(this.filters.length > 0) {
			this.drawFilters(ctx);
		} else {
			var old = ctx.globalAlpha;
			ctx.globalAlpha *= this.alpha;
			this.draw(ctx);
			var _g2 = 0;
			var _g11 = this.childs;
			while(_g2 < _g11.length) {
				var c1 = _g11[_g2];
				++_g2;
				c1.drawRec(ctx);
			}
			ctx.globalAlpha = old;
		}
	}
	,set_x: function(v) {
		this.posChanged = true;
		return this.x = v;
	}
	,set_y: function(v) {
		this.posChanged = true;
		return this.y = v;
	}
	,set_scaleX: function(v) {
		this.posChanged = true;
		return this.scaleX = v;
	}
	,set_scaleY: function(v) {
		this.posChanged = true;
		return this.scaleY = v;
	}
	,set_rotation: function(v) {
		this.posChanged = true;
		return this.rotation = v;
	}
	,move: function(dx,dy) {
		var _g = this;
		var v = _g.x + dx * Math.cos(this.rotation);
		_g.posChanged = true;
		_g.x = v;
		var _g1 = this;
		var v1 = _g1.y + dy * Math.sin(this.rotation);
		_g1.posChanged = true;
		_g1.y = v1;
	}
	,setPos: function(x,y) {
		this.posChanged = true;
		this.x = x;
		this.posChanged = true;
		this.y = y;
	}
	,rotate: function(v) {
		var _g = this;
		var v1 = _g.rotation + v;
		_g.posChanged = true;
		_g.rotation = v1;
	}
	,scale: function(v) {
		var _g = this;
		var v1 = _g.scaleX * v;
		_g.posChanged = true;
		_g.scaleX = v1;
		var _g1 = this;
		var v2 = _g1.scaleY * v;
		_g1.posChanged = true;
		_g1.scaleY = v2;
	}
	,setScale: function(v) {
		this.posChanged = true;
		this.scaleX = v;
		this.posChanged = true;
		this.scaleY = v;
	}
	,getChildAt: function(n) {
		return this.childs[n];
	}
	,getChildIndex: function(s) {
		var _g1 = 0;
		var _g = this.childs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.childs[i] == s) {
				return i;
			}
		}
		return -1;
	}
	,get_numChildren: function() {
		return this.childs.length;
	}
	,iterator: function() {
		return new hxd_impl_ArrayIterator_$h2d_$Sprite(this.childs);
	}
	,toString: function() {
		var c = Type.getClassName(js_Boot.getClass(this));
		if(this.name == null) {
			return c;
		} else {
			return this.name + "(" + c + ")";
		}
	}
	,__class__: h2d_Sprite
};
var h2d_Drawable = function(parent) {
	h2d_Sprite.call(this,parent);
	this.blendMode = h2d_BlendMode.Alpha;
	this.color = new h3d_Vector(1,1,1,1);
};
$hxClasses["h2d.Drawable"] = h2d_Drawable;
h2d_Drawable.__name__ = ["h2d","Drawable"];
h2d_Drawable.__super__ = h2d_Sprite;
h2d_Drawable.prototype = $extend(h2d_Sprite.prototype,{
	set_tileWrap: function(b) {
		return this.tileWrap = b;
	}
	,get_colorAdd: function() {
		var s = this.getShader(h3d_shader_ColorAdd);
		if(s == null) {
			return null;
		} else {
			return s.color__;
		}
	}
	,set_colorAdd: function(c) {
		var s = this.getShader(h3d_shader_ColorAdd);
		if(s == null) {
			if(c != null) {
				s = this.addShader(new h3d_shader_ColorAdd());
				s.color__ = c;
			}
		} else if(c == null) {
			this.removeShader(s);
		} else {
			s.color__ = c;
		}
		return c;
	}
	,set_colorKey: function(v) {
		var s = this.getShader(h3d_shader_ColorKey);
		if(s == null) {
			if(v != null) {
				s = this.addShader(new h3d_shader_ColorKey(-16777216 | v));
			}
		} else if(v == null) {
			this.removeShader(s);
		} else {
			var _this = s.colorKey__;
			var c = -16777216 | v;
			_this.x = (c >> 16 & 255) * 0.00392156862745098;
			_this.y = (c >> 8 & 255) * 0.00392156862745098;
			_this.z = (c & 255) * 0.00392156862745098;
			_this.w = (c >>> 24) * 0.00392156862745098;
		}
		return this.colorKey = v;
	}
	,get_colorMatrix: function() {
		var s = this.getShader(h3d_shader_ColorMatrix);
		if(s == null) {
			return null;
		} else {
			return s.matrix__;
		}
	}
	,set_colorMatrix: function(m) {
		var s = this.getShader(h3d_shader_ColorMatrix);
		if(s == null) {
			if(m != null) {
				s = this.addShader(new h3d_shader_ColorMatrix());
				s.matrix__.loadFrom(m);
			}
		} else if(m == null) {
			this.removeShader(s);
		} else {
			s.matrix__.loadFrom(m);
		}
		return m;
	}
	,get_alpha: function() {
		return this.color.w;
	}
	,set_alpha: function(v) {
		return this.color.w = v;
	}
	,getDebugShaderCode: function(toHxsl) {
		if(toHxsl == null) {
			toHxsl = true;
		}
		var ctx = this.getScene().ctx;
		var shader = ctx.manager.compileShaders(new hxsl_ShaderList(ctx.baseShader,this.shaders));
		var toString = toHxsl?function(d) {
			return hxsl_Printer.shaderToString(d,true);
		}:hxsl_GlslOut.toGlsl;
		return "VERTEX=\n" + toString(shader.vertex.data) + "\n\nFRAGMENT=\n" + toString(shader.fragment.data);
	}
	,getShader: function(stype) {
		if(this.shaders != null) {
			var _g_l = this.shaders;
			var _g_last = null;
			while(_g_l != _g_last) {
				var s = _g_l.s;
				_g_l = _g_l.next;
				var s1 = s;
				var s2 = (s1 instanceof stype)?s1:null;
				if(s2 != null) {
					return s2;
				}
			}
		}
		return null;
	}
	,getShaders: function() {
		return new hxsl__$ShaderList_ShaderIterator(this.shaders,null);
	}
	,addShader: function(s) {
		if(s == null) {
			throw new js__$Boot_HaxeError("Can't add null shader");
		}
		this.shaders = new hxsl_ShaderList(s,this.shaders);
		return s;
	}
	,removeShader: function(s) {
		var prev = null;
		var cur = this.shaders;
		while(cur != null) {
			if(cur.s == s) {
				if(prev == null) {
					this.shaders = cur.next;
				} else {
					prev.next = cur.next;
				}
				return true;
			}
			prev = cur;
			cur = cur.next;
		}
		return false;
	}
	,emitTile: function(ctx,tile) {
		if(tile == null) {
			tile = new h2d_Tile(null,0,0,5,5);
		}
		ctx.drawTile(this,tile);
		return;
	}
	,__class__: h2d_Drawable
});
var h2d_Anim = function(frames,speed,parent) {
	this.fading = false;
	this.loop = true;
	h2d_Drawable.call(this,parent);
	this.frames = frames == null?[]:frames;
	this.curFrame = 0;
	this.speed = speed == null?15:speed;
};
$hxClasses["h2d.Anim"] = h2d_Anim;
h2d_Anim.__name__ = ["h2d","Anim"];
h2d_Anim.__super__ = h2d_Drawable;
h2d_Anim.prototype = $extend(h2d_Drawable.prototype,{
	get_currentFrame: function() {
		return this.curFrame;
	}
	,play: function(frames,atFrame) {
		if(atFrame == null) {
			atFrame = 0.;
		}
		this.frames = frames == null?[]:frames;
		this.set_currentFrame(atFrame);
	}
	,onAnimEnd: function() {
	}
	,set_currentFrame: function(frame) {
		this.curFrame = this.frames.length == 0?0:frame % this.frames.length;
		if(this.curFrame < 0) {
			this.curFrame += this.frames.length;
		}
		return this.curFrame;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		var tile = this.getFrame();
		if(tile != null) {
			this.addBounds(relativeTo,out,tile.dx,tile.dy,tile.width,tile.height);
		}
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		var prev = this.curFrame;
		this.curFrame += this.speed * ctx.elapsedTime;
		if(this.curFrame < this.frames.length) {
			return;
		}
		if(this.loop) {
			this.curFrame %= this.frames.length;
			this.onAnimEnd();
		} else if(this.curFrame >= this.frames.length) {
			this.curFrame = this.frames.length;
			if(this.curFrame != prev) {
				this.onAnimEnd();
			}
		}
	}
	,getFrame: function() {
		var i = this.curFrame | 0;
		if(i == this.frames.length) {
			--i;
		}
		return this.frames[i];
	}
	,draw: function(ctx) {
		var t = this.getFrame();
		if(this.fading) {
			var i = (this.curFrame | 0) + 1;
			if(i >= this.frames.length) {
				if(!this.loop) {
					return;
				}
				i = 0;
			}
			var t2 = this.frames[i];
			var old = ctx.globalAlpha;
			var alpha = this.curFrame - (this.curFrame | 0);
			ctx.globalAlpha *= 1 - alpha;
			this.emitTile(ctx,t);
			ctx.globalAlpha = old * alpha;
			this.emitTile(ctx,t2);
			ctx.globalAlpha = old;
		} else {
			this.emitTile(ctx,t);
		}
	}
	,__class__: h2d_Anim
});
var h2d_Bitmap = function(tile,parent) {
	h2d_Drawable.call(this,parent);
	this.tile = tile;
};
$hxClasses["h2d.Bitmap"] = h2d_Bitmap;
h2d_Bitmap.__name__ = ["h2d","Bitmap"];
h2d_Bitmap.create = function(bmp,allocPos) {
	return new h2d_Bitmap(h2d_Tile.fromBitmap(bmp,allocPos));
};
h2d_Bitmap.__super__ = h2d_Drawable;
h2d_Bitmap.prototype = $extend(h2d_Drawable.prototype,{
	set_tileWrap: function(b) {
		if(b && this.tile != null && (this.tile.innerTex.flags & 32) != 0) {
			throw new js__$Boot_HaxeError("Cannot set tileWrap on a non power-of-two texture");
		}
		return this.tileWrap = b;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			this.addBounds(relativeTo,out,this.tile.dx,this.tile.dy,this.tile.width,this.tile.height);
		}
	}
	,draw: function(ctx) {
		this.emitTile(ctx,this.tile);
	}
	,__class__: h2d_Bitmap
});
var h2d_BlendMode = $hxClasses["h2d.BlendMode"] = { __ename__ : ["h2d","BlendMode"], __constructs__ : ["None","Alpha","Add","SoftAdd","Multiply","Erase","Screen"] };
h2d_BlendMode.None = ["None",0];
h2d_BlendMode.None.toString = $estr;
h2d_BlendMode.None.__enum__ = h2d_BlendMode;
h2d_BlendMode.Alpha = ["Alpha",1];
h2d_BlendMode.Alpha.toString = $estr;
h2d_BlendMode.Alpha.__enum__ = h2d_BlendMode;
h2d_BlendMode.Add = ["Add",2];
h2d_BlendMode.Add.toString = $estr;
h2d_BlendMode.Add.__enum__ = h2d_BlendMode;
h2d_BlendMode.SoftAdd = ["SoftAdd",3];
h2d_BlendMode.SoftAdd.toString = $estr;
h2d_BlendMode.SoftAdd.__enum__ = h2d_BlendMode;
h2d_BlendMode.Multiply = ["Multiply",4];
h2d_BlendMode.Multiply.toString = $estr;
h2d_BlendMode.Multiply.__enum__ = h2d_BlendMode;
h2d_BlendMode.Erase = ["Erase",5];
h2d_BlendMode.Erase.toString = $estr;
h2d_BlendMode.Erase.__enum__ = h2d_BlendMode;
h2d_BlendMode.Screen = ["Screen",6];
h2d_BlendMode.Screen.toString = $estr;
h2d_BlendMode.Screen.__enum__ = h2d_BlendMode;
h2d_BlendMode.__empty_constructs__ = [h2d_BlendMode.None,h2d_BlendMode.Alpha,h2d_BlendMode.Add,h2d_BlendMode.SoftAdd,h2d_BlendMode.Multiply,h2d_BlendMode.Erase,h2d_BlendMode.Screen];
var h2d_FlowAlign = $hxClasses["h2d.FlowAlign"] = { __ename__ : ["h2d","FlowAlign"], __constructs__ : ["Top","Left","Right","Middle","Bottom"] };
h2d_FlowAlign.Top = ["Top",0];
h2d_FlowAlign.Top.toString = $estr;
h2d_FlowAlign.Top.__enum__ = h2d_FlowAlign;
h2d_FlowAlign.Left = ["Left",1];
h2d_FlowAlign.Left.toString = $estr;
h2d_FlowAlign.Left.__enum__ = h2d_FlowAlign;
h2d_FlowAlign.Right = ["Right",2];
h2d_FlowAlign.Right.toString = $estr;
h2d_FlowAlign.Right.__enum__ = h2d_FlowAlign;
h2d_FlowAlign.Middle = ["Middle",3];
h2d_FlowAlign.Middle.toString = $estr;
h2d_FlowAlign.Middle.__enum__ = h2d_FlowAlign;
h2d_FlowAlign.Bottom = ["Bottom",4];
h2d_FlowAlign.Bottom.toString = $estr;
h2d_FlowAlign.Bottom.__enum__ = h2d_FlowAlign;
h2d_FlowAlign.__empty_constructs__ = [h2d_FlowAlign.Top,h2d_FlowAlign.Left,h2d_FlowAlign.Right,h2d_FlowAlign.Middle,h2d_FlowAlign.Bottom];
var h2d_FlowProperties = function() {
	this.calculatedHeight = 0.;
	this.calculatedWidth = 0.;
	this.offsetY = 0;
	this.offsetX = 0;
	this.isAbsolute = false;
	this.paddingBottom = 0;
	this.paddingRight = 0;
	this.paddingTop = 0;
	this.paddingLeft = 0;
};
$hxClasses["h2d.FlowProperties"] = h2d_FlowProperties;
h2d_FlowProperties.__name__ = ["h2d","FlowProperties"];
h2d_FlowProperties.prototype = {
	__class__: h2d_FlowProperties
};
var h2d_col_Bounds = function() {
	this.xMin = 1e20;
	this.yMin = 1e20;
	this.xMax = -1e20;
	this.yMax = -1e20;
};
$hxClasses["h2d.col.Bounds"] = h2d_col_Bounds;
h2d_col_Bounds.__name__ = ["h2d","col","Bounds"];
h2d_col_Bounds.fromValues = function(x0,y0,width,height) {
	var b = new h2d_col_Bounds();
	b.xMin = x0;
	b.yMin = y0;
	b.xMax = x0 + width;
	b.yMax = y0 + height;
	return b;
};
h2d_col_Bounds.fromPoints = function(min,max) {
	var b = new h2d_col_Bounds();
	b.xMin = min.x;
	b.yMin = min.y;
	b.xMax = max.x;
	b.yMax = max.y;
	return b;
};
h2d_col_Bounds.prototype = {
	toIBounds: function(scale) {
		if(scale == null) {
			scale = 1.;
		}
		var x0 = Math.floor(this.xMin * scale);
		var y0 = Math.floor(this.yMin * scale);
		var width = Math.floor((this.xMax - this.xMin) * scale);
		var height = Math.floor((this.yMax - this.yMin) * scale);
		var b = new h2d_col_IBounds();
		b.xMin = x0;
		b.yMin = y0;
		b.xMax = x0 + width;
		b.yMax = y0 + height;
		return b;
	}
	,intersects: function(b) {
		return !(this.xMin > b.xMax || this.yMin > b.yMax || this.xMax < b.xMin || this.yMax < b.yMin);
	}
	,contains: function(p) {
		if(p.x >= this.xMin && p.x < this.xMax && p.y >= this.yMin) {
			return p.y < this.yMax;
		} else {
			return false;
		}
	}
	,addBounds: function(b) {
		if(b.xMin < this.xMin) {
			this.xMin = b.xMin;
		}
		if(b.xMax > this.xMax) {
			this.xMax = b.xMax;
		}
		if(b.yMin < this.yMin) {
			this.yMin = b.yMin;
		}
		if(b.yMax > this.yMax) {
			this.yMax = b.yMax;
		}
	}
	,addPoint: function(p) {
		if(p.x < this.xMin) {
			this.xMin = p.x;
		}
		if(p.x > this.xMax) {
			this.xMax = p.x;
		}
		if(p.y < this.yMin) {
			this.yMin = p.y;
		}
		if(p.y > this.yMax) {
			this.yMax = p.y;
		}
	}
	,addPos: function(x,y) {
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
	}
	,set: function(x,y,width,height) {
		this.xMin = x;
		this.yMin = y;
		this.xMax = x + width;
		this.yMax = y + height;
	}
	,setMin: function(p) {
		this.xMin = p.x;
		this.yMin = p.y;
	}
	,setMax: function(p) {
		this.xMax = p.x;
		this.yMax = p.y;
	}
	,doIntersect: function(b) {
		var a = this.xMin;
		var b1 = b.xMin;
		this.xMin = a < b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		this.yMin = a1 < b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		this.xMax = a2 > b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		this.yMax = a3 > b4?b4:a3;
	}
	,doUnion: function(b) {
		var a = this.xMin;
		var b1 = b.xMin;
		this.xMin = a > b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		this.yMin = a1 > b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		this.xMax = a2 < b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		this.yMax = a3 < b4?b4:a3;
	}
	,intersection: function(b) {
		var i = new h2d_col_Bounds();
		var a = this.xMin;
		var b1 = b.xMin;
		i.xMin = a < b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		i.yMin = a1 < b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		i.xMax = a2 > b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		i.yMax = a3 > b4?b4:a3;
		if(i.xMax < i.xMin) {
			i.xMax = i.xMin;
		}
		if(i.yMax < i.yMin) {
			i.yMax = i.yMin;
		}
		return i;
	}
	,union: function(b) {
		var i = new h2d_col_Bounds();
		var a = this.xMin;
		var b1 = b.xMin;
		i.xMin = a > b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		i.yMin = a1 > b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		i.xMax = a2 < b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		i.yMax = a3 < b4?b4:a3;
		return i;
	}
	,load: function(b) {
		this.xMin = b.xMin;
		this.yMin = b.yMin;
		this.xMax = b.xMax;
		this.yMax = b.yMax;
	}
	,scalePivot: function(v) {
		this.xMin *= v;
		this.yMin *= v;
		this.xMax *= v;
		this.yMax *= v;
	}
	,scaleCenter: function(v) {
		var dx = (this.xMax - this.xMin) * 0.5 * v;
		var dy = (this.yMax - this.yMin) * 0.5 * v;
		var mx = (this.xMax + this.xMin) * 0.5;
		var my = (this.yMax + this.yMin) * 0.5;
		this.xMin = mx - dx;
		this.yMin = my - dy;
		this.xMax = mx + dx;
		this.yMax = my + dy;
	}
	,rotate: function(angle) {
		var cos = Math.cos(angle);
		var sin = Math.sin(angle);
		var x0 = this.xMin;
		var y0 = this.yMin;
		var x1 = this.xMax;
		var y1 = this.yMax;
		this.xMin = 1e20;
		this.yMin = 1e20;
		this.xMax = -1e20;
		this.yMax = -1e20;
		var x = x0 * cos - y0 * sin;
		var y = x0 * sin + y0 * cos;
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
		var x2 = x1 * cos - y0 * sin;
		var y2 = x1 * sin + y0 * cos;
		if(x2 < this.xMin) {
			this.xMin = x2;
		}
		if(x2 > this.xMax) {
			this.xMax = x2;
		}
		if(y2 < this.yMin) {
			this.yMin = y2;
		}
		if(y2 > this.yMax) {
			this.yMax = y2;
		}
		var x3 = x0 * cos - y1 * sin;
		var y3 = x0 * sin + y1 * cos;
		if(x3 < this.xMin) {
			this.xMin = x3;
		}
		if(x3 > this.xMax) {
			this.xMax = x3;
		}
		if(y3 < this.yMin) {
			this.yMin = y3;
		}
		if(y3 > this.yMax) {
			this.yMax = y3;
		}
		var x4 = x1 * cos - y1 * sin;
		var y4 = x1 * sin + y1 * cos;
		if(x4 < this.xMin) {
			this.xMin = x4;
		}
		if(x4 > this.xMax) {
			this.xMax = x4;
		}
		if(y4 < this.yMin) {
			this.yMin = y4;
		}
		if(y4 > this.yMax) {
			this.yMax = y4;
		}
	}
	,offset: function(dx,dy) {
		this.xMin += dx;
		this.xMax += dx;
		this.yMin += dy;
		this.yMax += dy;
	}
	,getMin: function() {
		return new h2d_col_Point(this.xMin,this.yMin);
	}
	,getCenter: function() {
		return new h2d_col_Point((this.xMin + this.xMax) * 0.5,(this.yMin + this.yMax) * 0.5);
	}
	,getSize: function() {
		return new h2d_col_Point(this.xMax - this.xMin,this.yMax - this.yMin);
	}
	,getMax: function() {
		return new h2d_col_Point(this.xMax,this.yMax);
	}
	,isEmpty: function() {
		if(!(this.xMax <= this.xMin)) {
			return this.yMax <= this.yMin;
		} else {
			return true;
		}
	}
	,empty: function() {
		this.xMin = 1e20;
		this.yMin = 1e20;
		this.xMax = -1e20;
		this.yMax = -1e20;
	}
	,all: function() {
		this.xMin = -1e20;
		this.yMin = -1e20;
		this.xMax = 1e20;
		this.yMax = 1e20;
	}
	,clone: function() {
		var b = new h2d_col_Bounds();
		b.xMin = this.xMin;
		b.yMin = this.yMin;
		b.xMax = this.xMax;
		b.yMax = this.yMax;
		return b;
	}
	,get_x: function() {
		return this.xMin;
	}
	,get_y: function() {
		return this.yMin;
	}
	,set_x: function(x) {
		this.xMax += x - this.xMin;
		return this.xMin = x;
	}
	,set_y: function(y) {
		this.yMax += y - this.yMin;
		return this.yMin = y;
	}
	,get_width: function() {
		return this.xMax - this.xMin;
	}
	,get_height: function() {
		return this.yMax - this.yMin;
	}
	,set_width: function(w) {
		this.xMax = this.xMin + w;
		return w;
	}
	,set_height: function(h) {
		this.yMax = this.yMin + h;
		return h;
	}
	,toString: function() {
		return "{" + Std.string(new h2d_col_Point(this.xMin,this.yMin)) + "," + Std.string(new h2d_col_Point(this.xMax - this.xMin,this.yMax - this.yMin)) + "}";
	}
	,__class__: h2d_col_Bounds
};
var h2d_Flow = function(parent) {
	this.calculatedHeight = 0.;
	this.calculatedWidth = 0.;
	this.properties = [];
	this.multiline = false;
	this.isInline = true;
	this.borderHeight = 0;
	this.borderWidth = 0;
	this.verticalSpacing = 0;
	this.horizontalSpacing = 0;
	this.paddingBottom = 0;
	this.paddingTop = 0;
	this.paddingRight = 0;
	this.paddingLeft = 0;
	this.overflow = false;
	this.needReflow = true;
	h2d_Sprite.call(this,parent);
};
$hxClasses["h2d.Flow"] = h2d_Flow;
h2d_Flow.__name__ = ["h2d","Flow"];
h2d_Flow.__super__ = h2d_Sprite;
h2d_Flow.prototype = $extend(h2d_Sprite.prototype,{
	getProperties: function(e) {
		this.needReflow = true;
		return this.properties[this.getChildIndex(e)];
	}
	,set_isVertical: function(v) {
		if(this.isVertical == v) {
			return v;
		}
		this.needReflow = true;
		return this.isVertical = v;
	}
	,set_horizontalAlign: function(v) {
		if(this.horizontalAlign == v) {
			return v;
		}
		this.needReflow = true;
		return this.horizontalAlign = v;
	}
	,set_debug: function(v) {
		if(this.debug == v) {
			return v;
		}
		this.needReflow = true;
		if(v) {
			this.debugGraphics = new h2d_Graphics(this);
			this.getProperties(this.debugGraphics).isAbsolute = true;
		} else {
			var _this = this.debugGraphics;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.debugGraphics = null;
		}
		return this.debug = v;
	}
	,set_verticalAlign: function(v) {
		if(this.verticalAlign == v) {
			return v;
		}
		this.needReflow = true;
		return this.verticalAlign = v;
	}
	,set_overflow: function(v) {
		if(this.overflow == v) {
			return v;
		}
		this.needReflow = true;
		return this.overflow = v;
	}
	,set_multiline: function(v) {
		if(this.multiline == v) {
			return v;
		}
		this.needReflow = true;
		return this.multiline = v;
	}
	,set_lineHeight: function(v) {
		if(this.lineHeight == v) {
			return v;
		}
		this.needReflow = true;
		return this.lineHeight = v;
	}
	,set_colWidth: function(v) {
		if(this.colWidth == v) {
			return v;
		}
		this.needReflow = true;
		return this.colWidth = v;
	}
	,set_padding: function(v) {
		this.set_paddingLeft(v);
		this.set_paddingTop(v);
		this.set_paddingRight(v);
		this.set_paddingBottom(v);
		return v;
	}
	,get_clientWidth: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedWidth) - (this.paddingLeft + this.paddingRight + this.borderWidth * 2);
	}
	,get_clientHeight: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedHeight) - (this.paddingTop + this.paddingBottom + this.borderHeight * 2);
	}
	,set_paddingLeft: function(v) {
		if(this.paddingLeft == v) {
			return v;
		}
		this.needReflow = true;
		return this.paddingLeft = v;
	}
	,set_paddingRight: function(v) {
		if(this.paddingRight == v) {
			return v;
		}
		this.needReflow = true;
		return this.paddingRight = v;
	}
	,set_paddingTop: function(v) {
		if(this.paddingTop == v) {
			return v;
		}
		this.needReflow = true;
		return this.paddingTop = v;
	}
	,set_paddingBottom: function(v) {
		if(this.paddingBottom == v) {
			return v;
		}
		this.needReflow = true;
		return this.paddingBottom = v;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.needReflow) {
			this.reflow();
		}
		if(forSize) {
			if(!this.isInline) {
				h2d_Sprite.prototype.getBoundsRec.call(this,relativeTo,out,false);
				if(relativeTo == this.parent && this.background == null) {
					out.xMax += this.paddingRight + this.borderWidth;
					out.yMax += this.paddingBottom + this.borderHeight;
				}
			} else if(this.calculatedWidth != 0) {
				this.addBounds(relativeTo,out,0,0,this.calculatedWidth,this.calculatedHeight);
			}
		} else {
			h2d_Sprite.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		}
	}
	,addChildAt: function(s,pos) {
		if(this.background != null) {
			++pos;
		}
		var fp = this.getProperties(s);
		h2d_Sprite.prototype.addChildAt.call(this,s,pos);
		if(fp == null) {
			fp = new h2d_FlowProperties();
		} else {
			HxOverrides.remove(this.properties,fp);
		}
		this.properties.splice(pos,0,fp);
		this.needReflow = true;
	}
	,removeChild: function(s) {
		var index = this.getChildIndex(s);
		h2d_Sprite.prototype.removeChild.call(this,s);
		if(index >= 0) {
			this.needReflow = true;
			this.properties.splice(index,1);
		}
	}
	,sync: function(ctx) {
		if(this.needReflow) {
			this.reflow();
		}
		h2d_Sprite.prototype.sync.call(this,ctx);
	}
	,set_maxWidth: function(w) {
		if(this.maxWidth == w) {
			return w;
		}
		this.needReflow = true;
		return this.maxWidth = w;
	}
	,set_maxHeight: function(h) {
		if(this.maxHeight == h) {
			return h;
		}
		this.needReflow = true;
		return this.maxHeight = h;
	}
	,set_minWidth: function(w) {
		if(this.minWidth == w) {
			return w;
		}
		this.needReflow = true;
		return this.minWidth = w;
	}
	,set_minHeight: function(h) {
		if(this.minHeight == h) {
			return h;
		}
		this.needReflow = true;
		return this.minHeight = h;
	}
	,set_horizontalSpacing: function(s) {
		if(this.horizontalSpacing == s) {
			return s;
		}
		this.needReflow = true;
		return this.horizontalSpacing = s;
	}
	,set_verticalSpacing: function(s) {
		if(this.verticalSpacing == s) {
			return s;
		}
		this.needReflow = true;
		return this.verticalSpacing = s;
	}
	,set_enableInteractive: function(b) {
		if(this.enableInteractive == b) {
			return b;
		}
		if(b) {
			if(this.interactive == null) {
				this.interactive = new h2d_Interactive(0,0,this);
				this.properties[this.properties.length - 1].isAbsolute = true;
				if(!this.needReflow) {
					this.interactive.width = this.calculatedWidth;
					this.interactive.height = this.calculatedHeight;
				}
			}
		} else if(this.interactive != null) {
			var _this = this.interactive;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.interactive = null;
		}
		return this.enableInteractive = b;
	}
	,set_backgroundTile: function(t) {
		if(this.backgroundTile == t) {
			return t;
		}
		if(t != null) {
			if(this.background == null) {
				var background = new h2d_ScaleGrid(t,this.borderWidth,this.borderHeight);
				this.addChildAt(background,0);
				this.properties[0].isAbsolute = true;
				this.background = background;
				if(!this.needReflow) {
					background.set_width(Math.ceil(this.calculatedWidth));
					background.set_height(Math.ceil(this.calculatedHeight));
				}
			}
			this.background.tile = t;
		} else if(this.background != null) {
			var _this = this.background;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.background = null;
		}
		return this.backgroundTile = t;
	}
	,set_borderWidth: function(v) {
		if(this.borderWidth == v) {
			return v;
		}
		if(this.background != null) {
			this.background.borderWidth = v;
		}
		this.needReflow = true;
		return this.borderWidth = v;
	}
	,set_borderHeight: function(v) {
		if(this.borderHeight == v) {
			return v;
		}
		if(this.background != null) {
			this.background.borderHeight = v;
		}
		this.needReflow = true;
		return this.borderHeight = v;
	}
	,reflow: function() {
		var _gthis = this;
		var cw;
		var ch;
		if(!this.isVertical) {
			var halign = this.horizontalAlign == null?h2d_FlowAlign.Left:this.horizontalAlign;
			var valign = this.verticalAlign == null?h2d_FlowAlign.Bottom:this.verticalAlign;
			var startX = this.paddingLeft + this.borderWidth;
			var x = startX;
			var y = this.paddingTop + this.borderHeight;
			cw = x;
			var maxLineHeight = 0.;
			var minLineHeight = this.lineHeight != null?this.lineHeight:this.minHeight != null && !this.multiline?this.minHeight - (this.paddingTop + this.paddingBottom + this.borderHeight * 2):0;
			var tmpBounds = h2d_Flow.tmpBounds;
			var maxWidth = this.maxWidth == null?100000000:this.maxWidth - (this.paddingLeft + this.paddingRight + this.borderWidth * 2);
			var lastIndex = 0;
			var _g1 = 0;
			var _g = this.childs.length;
			while(_g1 < _g) {
				var i = _g1++;
				var p = this.properties[i];
				if(p.isAbsolute) {
					continue;
				}
				var c = this.childs[i];
				if(!c.visible) {
					continue;
				}
				var b = c.getSize(tmpBounds);
				var br = false;
				p.calculatedWidth = b.xMax + p.paddingLeft + p.paddingRight;
				p.calculatedHeight = b.yMax + p.paddingTop + p.paddingBottom;
				if(p.minWidth != null && p.calculatedWidth < p.minWidth) {
					p.calculatedWidth = p.minWidth;
				}
				if(p.minHeight != null && p.calculatedHeight < p.minHeight) {
					p.calculatedHeight = p.minHeight;
				}
				if(x + p.calculatedWidth > maxWidth && x > startX) {
					br = true;
					if(maxLineHeight < minLineHeight) {
						maxLineHeight = minLineHeight;
					} else if(_gthis.overflow && minLineHeight != 0) {
						maxLineHeight = minLineHeight;
					}
					var _g11 = lastIndex;
					while(_g11 < i) {
						var i1 = _g11++;
						var p1 = _gthis.properties[i1];
						if(p1.isAbsolute) {
							continue;
						}
						var c1 = _gthis.childs[i1];
						if(!c1.visible) {
							continue;
						}
						var a = p1.verticalAlign != null?p1.verticalAlign:valign;
						var v = y + p1.offsetY + p1.paddingTop;
						c1.posChanged = true;
						c1.y = v;
						switch(a[1]) {
						case 3:
							var v1 = c1.y + ((maxLineHeight - p1.calculatedHeight) * 0.5 | 0);
							c1.posChanged = true;
							c1.y = v1;
							break;
						case 4:
							var v2 = c1.y + (maxLineHeight - p1.calculatedHeight);
							c1.posChanged = true;
							c1.y = v2;
							break;
						default:
						}
					}
					lastIndex = i;
					y += maxLineHeight + this.verticalSpacing;
					maxLineHeight = 0;
					x = startX;
				}
				p.isBreak = br;
				x += p.calculatedWidth;
				if(x > cw) {
					cw = x;
				}
				x += this.horizontalSpacing;
				if(p.calculatedHeight > maxLineHeight) {
					maxLineHeight = p.calculatedHeight;
				}
			}
			var maxIndex = this.childs.length;
			if(maxLineHeight < minLineHeight) {
				maxLineHeight = minLineHeight;
			} else if(_gthis.overflow && minLineHeight != 0) {
				maxLineHeight = minLineHeight;
			}
			var _g12 = lastIndex;
			while(_g12 < maxIndex) {
				var i2 = _g12++;
				var p2 = _gthis.properties[i2];
				if(p2.isAbsolute) {
					continue;
				}
				var c2 = _gthis.childs[i2];
				if(!c2.visible) {
					continue;
				}
				var a1 = p2.verticalAlign != null?p2.verticalAlign:valign;
				var v3 = y + p2.offsetY + p2.paddingTop;
				c2.posChanged = true;
				c2.y = v3;
				switch(a1[1]) {
				case 3:
					var v4 = c2.y + ((maxLineHeight - p2.calculatedHeight) * 0.5 | 0);
					c2.posChanged = true;
					c2.y = v4;
					break;
				case 4:
					var v5 = c2.y + (maxLineHeight - p2.calculatedHeight);
					c2.posChanged = true;
					c2.y = v5;
					break;
				default:
				}
			}
			cw += this.paddingRight + this.borderWidth;
			ch = y + maxLineHeight + this.paddingBottom + this.borderHeight;
			if(this.minWidth != null && cw < this.minWidth) {
				cw = this.minWidth;
			}
			var endX = cw - (this.paddingRight + this.borderWidth);
			var xmin = startX;
			var xmax = endX;
			var midSpace = 0;
			var _g13 = 0;
			var _g2 = this.childs.length;
			while(_g13 < _g2) {
				var i3 = _g13++;
				var p3 = this.properties[i3];
				if(p3.isAbsolute || !this.childs[i3].visible) {
					continue;
				}
				if(p3.isBreak) {
					xmin = startX;
					xmax = endX;
					midSpace = 0;
				}
				var px;
				switch((p3.horizontalAlign == null?halign:p3.horizontalAlign)[1]) {
				case 2:
					if(midSpace != 0) {
						xmin += midSpace;
						midSpace = 0;
					}
					xmax -= p3.calculatedWidth;
					px = xmax;
					xmax -= this.horizontalSpacing;
					break;
				case 3:
					if(midSpace == 0) {
						var remSize = p3.calculatedWidth;
						var _g3 = i3 + 1;
						var _g21 = this.childs.length;
						while(_g3 < _g21) {
							var j = _g3++;
							var p4 = this.properties[j];
							if(p4.isAbsolute || !this.childs[j].visible) {
								continue;
							}
							if(p4.isBreak) {
								break;
							}
							remSize += this.horizontalSpacing + p4.calculatedWidth;
						}
						midSpace = (xmax - xmin - remSize) * 0.5 | 0;
						xmin += midSpace;
					}
					px = xmin;
					xmin += p3.calculatedWidth + this.horizontalSpacing;
					break;
				default:
					if(midSpace != 0) {
						xmin += midSpace;
						midSpace = 0;
					}
					px = xmin;
					xmin += p3.calculatedWidth + this.horizontalSpacing;
				}
				var _this = this.childs[i3];
				var v6 = px + p3.offsetX + p3.paddingLeft;
				_this.posChanged = true;
				_this.x = v6;
			}
		} else {
			var halign1 = this.horizontalAlign == null?h2d_FlowAlign.Left:this.horizontalAlign;
			var valign1 = this.verticalAlign == null?h2d_FlowAlign.Top:this.verticalAlign;
			var startY = this.paddingTop + this.borderHeight;
			var y1 = startY;
			var x1 = this.paddingLeft + this.borderWidth;
			ch = y1;
			var maxColWidth = 0.;
			var minColWidth = this.colWidth != null?this.colWidth:this.minWidth != null && !this.multiline?this.minWidth - (this.paddingLeft + this.paddingRight + this.borderWidth * 2):0;
			var tmpBounds1 = h2d_Flow.tmpBounds;
			var maxHeight = this.maxHeight == null?100000000:this.maxHeight - (this.paddingTop + this.paddingBottom + this.borderHeight * 2);
			var lastIndex1 = 0;
			var _g14 = 0;
			var _g4 = this.childs.length;
			while(_g14 < _g4) {
				var i4 = _g14++;
				var p5 = this.properties[i4];
				if(p5.isAbsolute) {
					continue;
				}
				var c3 = this.childs[i4];
				if(!c3.visible) {
					continue;
				}
				var b1 = c3.getSize(tmpBounds1);
				var br1 = false;
				p5.calculatedWidth = b1.xMax + p5.paddingLeft + p5.paddingRight;
				p5.calculatedHeight = b1.yMax + p5.paddingTop + p5.paddingBottom;
				if(p5.minWidth != null && p5.calculatedWidth < p5.minWidth) {
					p5.calculatedWidth = p5.minWidth;
				}
				if(p5.minHeight != null && p5.calculatedHeight < p5.minHeight) {
					p5.calculatedHeight = p5.minHeight;
				}
				if(y1 + p5.calculatedHeight > maxHeight && y1 > startY) {
					br1 = true;
					if(maxColWidth < minColWidth) {
						maxColWidth = minColWidth;
					} else if(_gthis.overflow && minColWidth != 0) {
						maxColWidth = minColWidth;
					}
					var _g15 = lastIndex1;
					while(_g15 < i4) {
						var i5 = _g15++;
						var p6 = _gthis.properties[i5];
						if(p6.isAbsolute) {
							continue;
						}
						var c4 = _gthis.childs[i5];
						if(!c4.visible) {
							continue;
						}
						var a2 = p6.horizontalAlign != null?p6.horizontalAlign:halign1;
						var v7 = x1 + p6.offsetX + p6.paddingLeft;
						c4.posChanged = true;
						c4.x = v7;
						switch(a2[1]) {
						case 2:
							var v8 = c4.x + (maxColWidth - p6.calculatedWidth);
							c4.posChanged = true;
							c4.x = v8;
							break;
						case 3:
							var v9 = c4.x + ((maxColWidth - p6.calculatedWidth) * 0.5 | 0);
							c4.posChanged = true;
							c4.x = v9;
							break;
						default:
						}
					}
					lastIndex1 = i4;
					x1 += maxColWidth + this.horizontalSpacing;
					maxColWidth = 0;
					y1 = startY;
				}
				p5.isBreak = br1;
				var v10 = y1 + p5.offsetY + p5.paddingTop;
				c3.posChanged = true;
				c3.y = v10;
				y1 += p5.calculatedHeight;
				if(y1 > ch) {
					ch = y1;
				}
				y1 += this.verticalSpacing;
				if(p5.calculatedWidth > maxColWidth) {
					maxColWidth = p5.calculatedWidth;
				}
			}
			var maxIndex1 = this.childs.length;
			if(maxColWidth < minColWidth) {
				maxColWidth = minColWidth;
			} else if(_gthis.overflow && minColWidth != 0) {
				maxColWidth = minColWidth;
			}
			var _g16 = lastIndex1;
			while(_g16 < maxIndex1) {
				var i6 = _g16++;
				var p7 = _gthis.properties[i6];
				if(p7.isAbsolute) {
					continue;
				}
				var c5 = _gthis.childs[i6];
				if(!c5.visible) {
					continue;
				}
				var a3 = p7.horizontalAlign != null?p7.horizontalAlign:halign1;
				var v11 = x1 + p7.offsetX + p7.paddingLeft;
				c5.posChanged = true;
				c5.x = v11;
				switch(a3[1]) {
				case 2:
					var v12 = c5.x + (maxColWidth - p7.calculatedWidth);
					c5.posChanged = true;
					c5.x = v12;
					break;
				case 3:
					var v13 = c5.x + ((maxColWidth - p7.calculatedWidth) * 0.5 | 0);
					c5.posChanged = true;
					c5.x = v13;
					break;
				default:
				}
			}
			ch += this.paddingTop + this.borderHeight;
			cw = x1 + maxColWidth + this.paddingRight + this.borderWidth;
			if(this.minHeight != null && ch < this.minHeight) {
				ch = this.minHeight;
			}
			var endY = ch - (this.paddingBottom + this.borderHeight);
			var ymin = startY;
			var ymax = endY;
			var midSpace1 = 0;
			var _g17 = 0;
			var _g5 = this.childs.length;
			while(_g17 < _g5) {
				var i7 = _g17++;
				var p8 = this.properties[i7];
				if(p8.isAbsolute || !this.childs[i7].visible) {
					continue;
				}
				if(p8.isBreak) {
					ymin = startY;
					ymax = endY;
					midSpace1 = 0;
				}
				var py;
				switch((p8.verticalAlign == null?valign1:p8.verticalAlign)[1]) {
				case 3:
					if(midSpace1 == 0) {
						var remSize1 = p8.calculatedHeight;
						var _g31 = i7 + 1;
						var _g22 = this.childs.length;
						while(_g31 < _g22) {
							var j1 = _g31++;
							var p9 = this.properties[j1];
							if(p9.isAbsolute || !this.childs[j1].visible) {
								continue;
							}
							if(p9.isBreak) {
								break;
							}
							remSize1 += this.verticalSpacing + p9.calculatedHeight;
						}
						midSpace1 = (ymax - ymin - remSize1) * 0.5 | 0;
						ymin += midSpace1;
					}
					py = ymin;
					ymin += p8.calculatedHeight + this.verticalSpacing;
					break;
				case 4:
					if(midSpace1 != 0) {
						ymin += midSpace1;
						midSpace1 = 0;
					}
					ymax -= p8.calculatedHeight;
					py = ymax;
					ymax -= this.verticalSpacing;
					break;
				default:
					if(midSpace1 != 0) {
						ymin += midSpace1;
						midSpace1 = 0;
					}
					py = ymin;
					ymin += p8.calculatedHeight + this.verticalSpacing;
				}
				var _this1 = this.childs[i7];
				var v14 = py + p8.offsetY + p8.paddingTop;
				_this1.posChanged = true;
				_this1.y = v14;
			}
		}
		if(this.minWidth != null && cw < this.minWidth) {
			cw = this.minWidth;
		}
		if(this.minHeight != null && ch < this.minHeight) {
			ch = this.minHeight;
		}
		if(this.overflow) {
			if(this.maxWidth != null && cw > this.maxWidth) {
				cw = this.maxWidth;
			}
			if(this.maxHeight != null && ch > this.maxHeight) {
				ch = this.maxHeight;
			}
		}
		if(this.interactive != null) {
			this.interactive.width = cw;
			this.interactive.height = ch;
		}
		if(this.background != null) {
			this.background.set_width(Math.ceil(cw));
			this.background.set_height(Math.ceil(ch));
		}
		this.calculatedWidth = cw;
		this.calculatedHeight = ch;
		this.needReflow = false;
		if(this.debug) {
			this.debugGraphics.clear();
			if(this.debugGraphics != this.childs[this.childs.length - 1]) {
				this.addChild(this.debugGraphics);
				this.needReflow = false;
			}
			if(this.paddingLeft != 0 || this.paddingRight != 0 || this.paddingTop != 0 || this.paddingBottom != 0 || this.borderWidth != 0 || this.borderHeight != 0) {
				this.debugGraphics.lineStyle(1,65280);
				this.debugGraphics.drawRect(this.paddingLeft + this.borderWidth,this.paddingTop + this.borderHeight,this.get_clientWidth(),this.get_clientHeight());
			}
			this.debugGraphics.lineStyle(1,33023);
			var _g18 = 0;
			var _g6 = this.childs.length;
			while(_g18 < _g6) {
				var i8 = _g18++;
				var p10 = this.properties[i8];
				var c6 = this.childs[i8];
				if(p10.isAbsolute || !c6.visible) {
					continue;
				}
				this.debugGraphics.drawRect(c6.x,c6.y,p10.calculatedWidth,p10.calculatedHeight);
			}
			this.debugGraphics.lineStyle(1,16711680);
			this.debugGraphics.drawRect(0,0,cw,ch);
		}
		this.onReflow();
	}
	,onReflow: function() {
	}
	,__class__: h2d_Flow
});
var h2d_Kerning = function(c,o) {
	this.prevChar = c;
	this.offset = o;
};
$hxClasses["h2d.Kerning"] = h2d_Kerning;
h2d_Kerning.__name__ = ["h2d","Kerning"];
h2d_Kerning.prototype = {
	__class__: h2d_Kerning
};
var h2d_FontChar = function(t,w) {
	this.t = t;
	this.width = w;
};
$hxClasses["h2d.FontChar"] = h2d_FontChar;
h2d_FontChar.__name__ = ["h2d","FontChar"];
h2d_FontChar.prototype = {
	addKerning: function(prevChar,offset) {
		var k = new h2d_Kerning(prevChar,offset);
		k.next = this.kerning;
		this.kerning = k;
	}
	,getKerningOffset: function(prevChar) {
		var k = this.kerning;
		while(k != null) {
			if(k.prevChar == prevChar) {
				return k.offset;
			}
			k = k.next;
		}
		return 0;
	}
	,clone: function() {
		var c = new h2d_FontChar(this.t.clone(),this.width);
		c.kerning = this.kerning;
		return c;
	}
	,__class__: h2d_FontChar
};
var h2d_Font = function(name,size) {
	this.name = name;
	this.size = size;
	this.glyphs = new haxe_ds_IntMap();
	this.defaultChar = new h2d_FontChar(new h2d_Tile(null,0,0,0,0),0);
	this.charset = hxd_Charset.getDefault();
};
$hxClasses["h2d.Font"] = h2d_Font;
h2d_Font.__name__ = ["h2d","Font"];
h2d_Font.prototype = {
	getChar: function(code) {
		var c = this.glyphs.h[code];
		if(c == null) {
			c = this.charset.resolveChar(code,this.glyphs);
			if(c == null) {
				c = this.defaultChar;
			}
		}
		return c;
	}
	,clone: function() {
		var f = new h2d_Font(this.name,this.size);
		f.baseLine = this.baseLine;
		f.lineHeight = this.lineHeight;
		f.tile = this.tile.clone();
		f.charset = this.charset;
		f.defaultChar = this.defaultChar.clone();
		var tmp = this.glyphs.keys();
		while(tmp.hasNext()) {
			var g = tmp.next();
			var c = this.glyphs.h[g];
			var c2 = c.clone();
			if(c == this.defaultChar) {
				f.defaultChar = c2;
			}
			f.glyphs.h[g] = c2;
		}
		return f;
	}
	,resizeTo: function(size) {
		var ratio = size / this.size;
		var tmp = this.glyphs.iterator();
		while(tmp.hasNext()) {
			var c = tmp.next();
			c.width = c.width * ratio | 0;
			c.t.scaleToSize(c.t.width * ratio | 0,c.t.height * ratio | 0);
			c.t.dx = c.t.dx * ratio | 0;
			c.t.dy = c.t.dy * ratio | 0;
		}
		this.lineHeight = this.lineHeight * ratio | 0;
		this.baseLine = this.baseLine * ratio | 0;
		this.size = size;
	}
	,hasChar: function(code) {
		return this.glyphs.h[code] != null;
	}
	,dispose: function() {
		this.tile.dispose();
	}
	,__class__: h2d_Font
};
var h2d__$Graphics_GPoint = function(x,y,r,g,b,a) {
	this.x = x;
	this.y = y;
	this.r = r;
	this.g = g;
	this.b = b;
	this.a = a;
};
$hxClasses["h2d._Graphics.GPoint"] = h2d__$Graphics_GPoint;
h2d__$Graphics_GPoint.__name__ = ["h2d","_Graphics","GPoint"];
h2d__$Graphics_GPoint.prototype = {
	__class__: h2d__$Graphics_GPoint
};
var h3d_prim_Primitive = function() { };
$hxClasses["h3d.prim.Primitive"] = h3d_prim_Primitive;
h3d_prim_Primitive.__name__ = ["h3d","prim","Primitive"];
h3d_prim_Primitive.prototype = {
	triCount: function() {
		if(this.indexes != null) {
			return this.indexes.count / 3 | 0;
		} else if(this.buffer == null) {
			return 0;
		} else {
			return this.buffer.totalVertices() / 3 | 0;
		}
	}
	,vertexCount: function() {
		return 0;
	}
	,getCollider: function() {
		throw new js__$Boot_HaxeError("not implemented for " + Std.string(this));
	}
	,getBounds: function() {
		throw new js__$Boot_HaxeError("not implemented for " + Std.string(this));
	}
	,alloc: function(engine) {
		throw new js__$Boot_HaxeError("not implemented");
	}
	,selectMaterial: function(material) {
	}
	,buildNormalsDisplay: function() {
		throw new js__$Boot_HaxeError("not implemented for " + Std.string(this));
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(engine);
		}
		if(this.indexes == null) {
			if((this.buffer.flags & 4) != 0) {
				engine.renderBuffer(this.buffer,engine.mem.quadIndexes,2,0,-1);
			} else {
				engine.renderBuffer(this.buffer,engine.mem.triIndexes,3,0,-1);
			}
		} else {
			engine.renderIndexed(this.buffer,this.indexes);
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			this.buffer.dispose();
			this.buffer = null;
		}
		if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,__class__: h3d_prim_Primitive
};
var h2d__$Graphics_GraphicsContent = function() {
	this.buffers = [];
};
$hxClasses["h2d._Graphics.GraphicsContent"] = h2d__$Graphics_GraphicsContent;
h2d__$Graphics_GraphicsContent.__name__ = ["h2d","_Graphics","GraphicsContent"];
h2d__$Graphics_GraphicsContent.__super__ = h3d_prim_Primitive;
h2d__$Graphics_GraphicsContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	addIndex: function(i) {
		this.index.push(i);
	}
	,add: function(x,y,u,v,r,g,b,a) {
		this.tmp.push(x);
		this.tmp.push(y);
		this.tmp.push(u);
		this.tmp.push(v);
		this.tmp.push(r);
		this.tmp.push(g);
		this.tmp.push(b);
		this.tmp.push(a);
	}
	,next: function() {
		if(this.tmp.length >> 3 < 32768) {
			return false;
		}
		this.buffers.push({ buf : this.tmp, idx : this.index, vbuf : null, ibuf : null});
		this.tmp = new Array(0);
		this.index = new Array(0);
		h3d_prim_Primitive.prototype.dispose.call(this);
		return true;
	}
	,alloc: function(engine) {
		if(this.index.length <= 0) {
			return;
		}
		this.buffer = h3d_Buffer.ofFloats(this.tmp,8,[h3d_BufferFlag.RawFormat],{ fileName : "Graphics.hx", lineNumber : 62, className : "h2d._Graphics.GraphicsContent", methodName : "alloc"});
		this.indexes = h3d_Indexes.alloc(this.index);
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf == null || b.vbuf.isDisposed()) {
				b.vbuf = h3d_Buffer.ofFloats(b.buf,8,[h3d_BufferFlag.RawFormat],{ fileName : "Graphics.hx", lineNumber : 65, className : "h2d._Graphics.GraphicsContent", methodName : "alloc"});
			}
			if(b.ibuf == null || b.ibuf.isDisposed()) {
				b.ibuf = h3d_Indexes.alloc(b.idx);
			}
		}
	}
	,render: function(engine) {
		if(this.index.length <= 0) {
			return;
		}
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(engine);
		}
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			engine.renderIndexed(b.vbuf,b.ibuf);
		}
		h3d_prim_Primitive.prototype.render.call(this,engine);
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf != null) {
				b.vbuf.dispose();
			}
			if(b.ibuf != null) {
				b.ibuf.dispose();
			}
			b.vbuf = null;
			b.ibuf = null;
		}
		h3d_prim_Primitive.prototype.dispose.call(this);
	}
	,clear: function() {
		this.dispose();
		this.tmp = new Array(0);
		this.index = new Array(0);
		this.buffers = [];
	}
	,__class__: h2d__$Graphics_GraphicsContent
});
var h2d_Graphics = function(parent) {
	this.bevel = 0.25;
	this.my = 0.;
	this.mx = 0.;
	this.md = 1.;
	this.mc = 0.;
	this.mb = 0.;
	this.ma = 1.;
	h2d_Drawable.call(this,parent);
	this.content = new h2d__$Graphics_GraphicsContent();
	this.tile = h2d_Tile.fromColor(16777215,null,null,null,{ fileName : "Graphics.hx", lineNumber : 132, className : "h2d.Graphics", methodName : "new"});
	this.clear();
};
$hxClasses["h2d.Graphics"] = h2d_Graphics;
h2d_Graphics.__name__ = ["h2d","Graphics"];
h2d_Graphics.__super__ = h2d_Drawable;
h2d_Graphics.prototype = $extend(h2d_Drawable.prototype,{
	onDelete: function() {
		h2d_Drawable.prototype.onDelete.call(this);
		this.clear();
	}
	,clear: function() {
		this.content.clear();
		this.tmpPoints = [];
		this.pindex = 0;
		this.lineSize = 0;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.yMax = -Infinity;
		this.xMax = -Infinity;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			this.addBounds(relativeTo,out,this.xMin,this.yMin,this.xMax - this.xMin,this.yMax - this.yMin);
		}
	}
	,isConvex: function(points) {
		var first = true;
		var sign = false;
		var _g1 = 0;
		var _g = points.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p1 = points[i];
			var p2 = points[(i + 1) % points.length];
			var p3 = points[(i + 2) % points.length];
			var s = (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x) > 0;
			if(first) {
				first = false;
				sign = s;
			} else if(sign != s) {
				return false;
			}
		}
		return true;
	}
	,flushLine: function(start) {
		var pts = this.tmpPoints;
		var last = pts.length - 1;
		var prev = pts[last];
		var p = pts[0];
		var closed = p.x == prev.x && p.y == prev.y;
		var count = pts.length;
		if(!closed) {
			var prevLast = pts[last - 1];
			if(prevLast == null) {
				prevLast = p;
			}
			pts.push(new h2d__$Graphics_GPoint(prev.x * 2 - prevLast.x,prev.y * 2 - prevLast.y,0,0,0,0));
			var pNext = pts[1];
			if(pNext == null) {
				pNext = p;
			}
			prev = new h2d__$Graphics_GPoint(p.x * 2 - pNext.x,p.y * 2 - pNext.y,0,0,0,0);
		} else if(p != prev) {
			--count;
			--last;
			prev = pts[last];
		}
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var next = pts[(i + 1) % pts.length];
			var nx1 = prev.y - p.y;
			var ny1 = p.x - prev.x;
			var ns1 = 1. / Math.sqrt(nx1 * nx1 + ny1 * ny1);
			var nx2 = p.y - next.y;
			var ny2 = next.x - p.x;
			var ns2 = 1. / Math.sqrt(nx2 * nx2 + ny2 * ny2);
			var nx = nx1 * ns1 + nx2 * ns2;
			var ny = ny1 * ns1 + ny2 * ns2;
			var ns = 1. / Math.sqrt(nx * nx + ny * ny);
			nx *= ns;
			ny *= ns;
			var size = nx * nx1 * ns1 + ny * ny1 * ns1;
			if(size < 0.1) {
				size = 0.1;
			}
			var d = this.lineSize * 0.5 / size;
			nx *= d;
			ny *= d;
			if(size > this.bevel) {
				var _this = this.content;
				var x = p.x + nx;
				var y = p.y + ny;
				var r = p.r;
				var g = p.g;
				var b = p.b;
				var a = p.a;
				_this.tmp.push(x);
				_this.tmp.push(y);
				_this.tmp.push(0);
				_this.tmp.push(0);
				_this.tmp.push(r);
				_this.tmp.push(g);
				_this.tmp.push(b);
				_this.tmp.push(a);
				var _this1 = this.content;
				var x1 = p.x - nx;
				var y1 = p.y - ny;
				var r1 = p.r;
				var g1 = p.g;
				var b1 = p.b;
				var a1 = p.a;
				_this1.tmp.push(x1);
				_this1.tmp.push(y1);
				_this1.tmp.push(0);
				_this1.tmp.push(0);
				_this1.tmp.push(r1);
				_this1.tmp.push(g1);
				_this1.tmp.push(b1);
				_this1.tmp.push(a1);
				var pnext = i == last?start:this.pindex + 2;
				if(i < count - 1 || closed) {
					this.content.index.push(this.pindex);
					this.content.index.push(this.pindex + 1);
					this.content.index.push(pnext);
					this.content.index.push(this.pindex + 1);
					this.content.index.push(pnext);
					this.content.index.push(pnext + 1);
				}
				this.pindex += 2;
			} else {
				var sign = (next.x - p.x) * nx + (next.y - p.y) * ny;
				var nnx = -ny;
				var nny = nx;
				var d1 = this.lineSize * 0.5 / (nnx * nx1 * ns1 + nny * ny1 * ns1);
				nnx *= d1;
				nny *= d1;
				var pnext1 = i == last?start:this.pindex + 3;
				if(sign > 0) {
					var _this2 = this.content;
					var x2 = p.x + nx;
					var y2 = p.y + ny;
					var r2 = p.r;
					var g2 = p.g;
					var b2 = p.b;
					var a2 = p.a;
					_this2.tmp.push(x2);
					_this2.tmp.push(y2);
					_this2.tmp.push(0);
					_this2.tmp.push(0);
					_this2.tmp.push(r2);
					_this2.tmp.push(g2);
					_this2.tmp.push(b2);
					_this2.tmp.push(a2);
					var _this3 = this.content;
					var x3 = p.x - nnx;
					var y3 = p.y - nny;
					var r3 = p.r;
					var g3 = p.g;
					var b3 = p.b;
					var a3 = p.a;
					_this3.tmp.push(x3);
					_this3.tmp.push(y3);
					_this3.tmp.push(0);
					_this3.tmp.push(0);
					_this3.tmp.push(r3);
					_this3.tmp.push(g3);
					_this3.tmp.push(b3);
					_this3.tmp.push(a3);
					var _this4 = this.content;
					var x4 = p.x + nnx;
					var y4 = p.y + nny;
					var r4 = p.r;
					var g4 = p.g;
					var b4 = p.b;
					var a4 = p.a;
					_this4.tmp.push(x4);
					_this4.tmp.push(y4);
					_this4.tmp.push(0);
					_this4.tmp.push(0);
					_this4.tmp.push(r4);
					_this4.tmp.push(g4);
					_this4.tmp.push(b4);
					_this4.tmp.push(a4);
					this.content.index.push(this.pindex);
					this.content.index.push(pnext1);
					this.content.index.push(this.pindex + 2);
					this.content.index.push(this.pindex + 2);
					this.content.index.push(pnext1);
					this.content.index.push(pnext1 + 1);
				} else {
					var _this5 = this.content;
					var x5 = p.x + nnx;
					var y5 = p.y + nny;
					var r5 = p.r;
					var g5 = p.g;
					var b5 = p.b;
					var a5 = p.a;
					_this5.tmp.push(x5);
					_this5.tmp.push(y5);
					_this5.tmp.push(0);
					_this5.tmp.push(0);
					_this5.tmp.push(r5);
					_this5.tmp.push(g5);
					_this5.tmp.push(b5);
					_this5.tmp.push(a5);
					var _this6 = this.content;
					var x6 = p.x - nx;
					var y6 = p.y - ny;
					var r6 = p.r;
					var g6 = p.g;
					var b6 = p.b;
					var a6 = p.a;
					_this6.tmp.push(x6);
					_this6.tmp.push(y6);
					_this6.tmp.push(0);
					_this6.tmp.push(0);
					_this6.tmp.push(r6);
					_this6.tmp.push(g6);
					_this6.tmp.push(b6);
					_this6.tmp.push(a6);
					var _this7 = this.content;
					var x7 = p.x - nnx;
					var y7 = p.y - nny;
					var r7 = p.r;
					var g7 = p.g;
					var b7 = p.b;
					var a7 = p.a;
					_this7.tmp.push(x7);
					_this7.tmp.push(y7);
					_this7.tmp.push(0);
					_this7.tmp.push(0);
					_this7.tmp.push(r7);
					_this7.tmp.push(g7);
					_this7.tmp.push(b7);
					_this7.tmp.push(a7);
					this.content.index.push(this.pindex + 1);
					this.content.index.push(pnext1);
					this.content.index.push(this.pindex + 2);
					this.content.index.push(this.pindex + 1);
					this.content.index.push(pnext1);
					this.content.index.push(pnext1 + 1);
				}
				this.content.index.push(this.pindex);
				this.content.index.push(this.pindex + 1);
				this.content.index.push(this.pindex + 2);
				this.pindex += 3;
			}
			prev = p;
			p = next;
		}
	}
	,flushFill: function(i0) {
		if(this.tmpPoints.length < 3) {
			return;
		}
		var pts = this.tmpPoints;
		var p0 = pts[0];
		var p1 = pts[pts.length - 1];
		var last = null;
		var tmp;
		var f = p0.x - p1.x;
		if((f < 0?-f:f) < 1e-9) {
			var f1 = p0.y - p1.y;
			tmp = (f1 < 0?-f1:f1) < 1e-9;
		} else {
			tmp = false;
		}
		if(tmp) {
			last = pts.pop();
		}
		if(this.isConvex(pts)) {
			var _g1 = 1;
			var _g = pts.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				this.content.index.push(i0);
				this.content.index.push(i0 + i);
				this.content.index.push(i0 + i + 1);
			}
		} else {
			var ear = h2d_Graphics.EARCUT;
			if(ear == null) {
				ear = new hxd_earcut_Earcut();
				h2d_Graphics.EARCUT = ear;
			}
			var _g2 = 0;
			var _g11 = ear.triangulate_h2d__Graphics_GPoint(pts);
			while(_g2 < _g11.length) {
				var i1 = _g11[_g2];
				++_g2;
				this.content.index.push(i1 + i0);
			}
		}
		if(last != null) {
			pts.push(last);
		}
	}
	,flush: function() {
		if(this.tmpPoints.length == 0) {
			return;
		}
		if(this.doFill) {
			this.flushFill(this.pindex);
			this.pindex += this.tmpPoints.length;
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		if(this.lineSize > 0) {
			this.flushLine(this.pindex);
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		this.tmpPoints = [];
	}
	,beginFill: function(color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		this.flush();
		this.curA = alpha;
		this.curR = (color >> 16 & 255) / 255.;
		this.curG = (color >> 8 & 255) / 255.;
		this.curB = (color & 255) / 255.;
		this.doFill = true;
	}
	,beginTileFill: function(dx,dy,scaleX,scaleY,tile) {
		this.beginFill(16777215);
		if(dx == null) {
			dx = 0;
		}
		if(dy == null) {
			dy = 0;
		}
		if(tile != null) {
			if(this.tile != null && tile.innerTex != this.tile.innerTex) {
				var tex = this.tile.innerTex;
				if(tex.width != 1 || tex.height != 1) {
					throw new js__$Boot_HaxeError("All tiles must be of the same texture");
				}
			}
			this.tile = tile;
		} else {
			tile = this.tile;
		}
		if(tile == null) {
			throw new js__$Boot_HaxeError("Tile not specified");
		}
		if(scaleX == null) {
			scaleX = 1;
		}
		if(scaleY == null) {
			scaleY = 1;
		}
		var tex1 = tile.innerTex;
		var pixWidth = 1 / tex1.width;
		var pixHeight = 1 / tex1.height;
		this.ma = pixWidth / scaleX;
		this.mb = 0;
		this.mc = 0;
		this.md = pixHeight / scaleY;
		this.mx = -dx * this.ma;
		this.my = -dy * this.md;
	}
	,lineStyle: function(size,color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		if(size == null) {
			size = 0;
		}
		this.flush();
		this.lineSize = size;
		this.lineA = alpha;
		this.lineR = (color >> 16 & 255) / 255.;
		this.lineG = (color >> 8 & 255) / 255.;
		this.lineB = (color & 255) / 255.;
	}
	,moveTo: function(x,y) {
		this.flush();
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
	}
	,endFill: function() {
		this.flush();
		this.doFill = false;
	}
	,setColor: function(color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		this.curA = alpha;
		this.curR = (color >> 16 & 255) / 255.;
		this.curG = (color >> 8 & 255) / 255.;
		this.curB = (color & 255) / 255.;
	}
	,drawRect: function(x,y,w,h) {
		this.flush();
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var x1 = x + w;
		this.addVertex(x1,y,this.curR,this.curG,this.curB,this.curA,x1 * this.ma + y * this.mc + this.mx,x1 * this.mb + y * this.md + this.my);
		var x2 = x + w;
		var y1 = y + h;
		this.addVertex(x2,y1,this.curR,this.curG,this.curB,this.curA,x2 * this.ma + y1 * this.mc + this.mx,x2 * this.mb + y1 * this.md + this.my);
		var y2 = y + h;
		this.addVertex(x,y2,this.curR,this.curG,this.curB,this.curA,x * this.ma + y2 * this.mc + this.mx,x * this.mb + y2 * this.md + this.my);
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		this.flush();
	}
	,drawCircle: function(cx,cy,ray,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		this.flush();
		if(nsegments == 0) {
			nsegments = Math.ceil(ray * 3.14 * 2 / 4);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = 6.2831853071795862 / nsegments;
		var _g1 = 0;
		var _g = nsegments + 1;
		while(_g1 < _g) {
			var a = _g1++ * angle;
			var x = cx + Math.cos(a) * ray;
			var y = cy + Math.sin(a) * ray;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.flush();
	}
	,drawPie: function(cx,cy,ray,angleStart,angleLength,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		this.flush();
		this.addVertex(cx,cy,this.curR,this.curG,this.curB,this.curA,cx * this.ma + cy * this.mc + this.mx,cx * this.mb + cy * this.md + this.my);
		if(nsegments == 0) {
			nsegments = Math.ceil(ray * angleLength / 4);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = angleLength / (nsegments - 1);
		var _g1 = 0;
		var _g = nsegments;
		while(_g1 < _g) {
			var a = _g1++ * angle + angleStart;
			var x = cx + Math.cos(a) * ray;
			var y = cy + Math.sin(a) * ray;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.addVertex(cx,cy,this.curR,this.curG,this.curB,this.curA,cx * this.ma + cy * this.mc + this.mx,cx * this.mb + cy * this.md + this.my);
		this.flush();
	}
	,lineTo: function(x,y) {
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
	}
	,addVertex: function(x,y,r,g,b,a,u,v) {
		if(v == null) {
			v = 0.;
		}
		if(u == null) {
			u = 0.;
		}
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
		if(this.doFill) {
			var _this = this.content;
			_this.tmp.push(x);
			_this.tmp.push(y);
			_this.tmp.push(u);
			_this.tmp.push(v);
			_this.tmp.push(r);
			_this.tmp.push(g);
			_this.tmp.push(b);
			_this.tmp.push(a);
		}
		this.tmpPoints.push(new h2d__$Graphics_GPoint(x,y,this.lineR,this.lineG,this.lineB,this.lineA));
	}
	,draw: function(ctx) {
		this.flush();
		ctx.beginDrawObject(this,this.tile.innerTex);
		this.content.render(ctx.engine);
	}
	,__class__: h2d_Graphics
});
var hxd_Interactive = function() { };
$hxClasses["hxd.Interactive"] = hxd_Interactive;
hxd_Interactive.__name__ = ["hxd","Interactive"];
hxd_Interactive.prototype = {
	__class__: hxd_Interactive
};
var h2d_Interactive = function(width,height,parent) {
	this.mouseDownButton = -1;
	this.propagateEvents = false;
	this.cancelEvents = false;
	h2d_Drawable.call(this,parent);
	this.width = width;
	this.height = height;
	this.set_cursor(hxd_Cursor.Button);
};
$hxClasses["h2d.Interactive"] = h2d_Interactive;
h2d_Interactive.__name__ = ["h2d","Interactive"];
h2d_Interactive.__interfaces__ = [hxd_Interactive];
h2d_Interactive.__super__ = h2d_Drawable;
h2d_Interactive.prototype = $extend(h2d_Drawable.prototype,{
	onAlloc: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		this.updateMask();
		h2d_Drawable.prototype.onAlloc.call(this);
	}
	,draw: function(ctx) {
		if(this.backgroundColor != null) {
			this.emitTile(ctx,h2d_Tile.fromColor(this.backgroundColor,this.width | 0,this.height | 0,(this.backgroundColor >>> 24) / 255,{ fileName : "Interactive.hx", lineNumber : 38, className : "h2d.Interactive", methodName : "draw"}));
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.backgroundColor != null) {
			this.addBounds(relativeTo,out,0,0,this.width | 0,this.height | 0);
		}
	}
	,onParentChanged: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene.addEventTarget(this);
		}
		this.updateMask();
	}
	,updateMask: function() {
		this.parentMask = null;
		var p = this.parent;
		while(p != null) {
			var m = (p instanceof h2d_Mask)?p:null;
			if(m != null) {
				this.parentMask = m;
				break;
			}
			p = p.parent;
		}
	}
	,onDelete: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this,true);
			this.scene = null;
		}
		h2d_Drawable.prototype.onDelete.call(this);
	}
	,checkBounds: function(e) {
		switch(e.kind[1]) {
		case 4:case 6:case 7:
			return false;
		default:
			return true;
		}
	}
	,preventClick: function() {
		this.mouseDownButton = -1;
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.parentMask != null && this.checkBounds(e)) {
			var p = this.parentMask;
			var pt = new h2d_col_Point(e.relX,e.relY);
			this.localToGlobal(pt);
			var saveX = pt.x;
			var saveY = pt.y;
			while(p != null) {
				pt.x = saveX;
				pt.y = saveY;
				var pt1 = p.globalToLocal(pt);
				if(pt1.x < 0 || pt1.y < 0 || pt1.x > p.width || pt1.y > p.height) {
					if(e.kind == hxd_EventKind.ERelease) {
						this.mouseDownButton = -1;
						break;
					}
					e.cancel = true;
					return;
				}
				p = p.parentMask;
			}
		}
		if(this.isEllipse && this.checkBounds(e)) {
			var cx = this.width * 0.5;
			var cy = this.height * 0.5;
			var dx = (e.relX - cx) / cx;
			var dy = (e.relY - cy) / cy;
			if(dx * dx + dy * dy > 1) {
				if(e.kind == hxd_EventKind.ERelease) {
					this.mouseDownButton = -1;
				} else {
					e.cancel = true;
					return;
				}
			}
		}
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind[1]) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onClick(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			hxd_System.setCursor(this.cursor);
			this.onOver(e);
			break;
		case 4:
			this.mouseDownButton = -1;
			hxd_System.setCursor(hxd_Cursor.Default);
			this.onOut(e);
			break;
		case 5:
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				e.kind = hxd_EventKind.ERelease;
				this.onRelease(e);
				e.kind = hxd_EventKind.EReleaseOutside;
			}
			this.mouseDownButton = -1;
			break;
		}
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.isOver()) {
			hxd_System.setCursor(this.cursor);
		}
		return c;
	}
	,eventToLocal: function(e) {
		var x = e.relX;
		var y = e.relY;
		var rx = x * this.scene.matA + y * this.scene.matB + this.scene.absX;
		var ry = x * this.scene.matC + y * this.scene.matD + this.scene.absY;
		var r = this.scene.height / this.scene.width;
		var i = this;
		var dx = rx - i.absX;
		var dy = ry - i.absY;
		var w1 = i.width * i.matA * r;
		var h1 = i.width * i.matC;
		var ky = h1 * dx - w1 * dy;
		var w2 = i.height * i.matB * r;
		var h2 = i.height * i.matD;
		var kx = w2 * dy - h2 * dx;
		var max = h1 * w2 - w1 * h2;
		e.relX = kx * r / max * i.width;
		e.relY = ky / max * i.height;
	}
	,startDrag: function(callb,onCancel) {
		var _gthis = this;
		this.scene.startDrag(function(event) {
			var x = event.relX;
			var y = event.relY;
			_gthis.eventToLocal(event);
			callb(event);
			event.relX = x;
			event.relY = y;
		},onCancel);
	}
	,stopDrag: function() {
		this.scene.stopDrag();
	}
	,focus: function() {
		if(this.scene == null || this.scene.events == null) {
			return;
		}
		this.scene.events.focus(this);
	}
	,blur: function() {
		if(this.hasFocus()) {
			this.scene.events.blur();
		}
	}
	,isOver: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentOver == this;
		} else {
			return false;
		}
	}
	,hasFocus: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentFocus == this;
		} else {
			return false;
		}
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,__class__: h2d_Interactive
});
var h2d_Layers = function(parent) {
	h2d_Sprite.call(this,parent);
	this.layersIndexes = [];
	this.layerCount = 0;
};
$hxClasses["h2d.Layers"] = h2d_Layers;
h2d_Layers.__name__ = ["h2d","Layers"];
h2d_Layers.__super__ = h2d_Sprite;
h2d_Layers.prototype = $extend(h2d_Sprite.prototype,{
	addChild: function(s) {
		this.addChildAt(s,0);
	}
	,add: function(s,layer) {
		this.addChildAt(s,layer);
		return;
	}
	,addChildAt: function(s,layer) {
		if(s.parent == this) {
			var old = s.allocated;
			s.allocated = false;
			this.removeChild(s);
			s.allocated = old;
		}
		while(layer >= this.layerCount) this.layersIndexes[this.layerCount++] = this.childs.length;
		h2d_Sprite.prototype.addChildAt.call(this,s,this.layersIndexes[layer]);
		var _g1 = layer;
		var _g = this.layerCount;
		while(_g1 < _g) this.layersIndexes[_g1++]++;
	}
	,removeChild: function(s) {
		var _g1 = 0;
		var _g = this.childs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.childs[i] == s) {
				this.childs.splice(i,1);
				if(s.allocated) {
					s.onDelete();
				}
				s.parent = null;
				var k = this.layerCount - 1;
				while(k >= 0 && this.layersIndexes[k] > i) {
					this.layersIndexes[k]--;
					--k;
				}
				break;
			}
		}
	}
	,under: function(s) {
		var _g1 = 0;
		var _g = this.childs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.childs[i] == s) {
				var pos = 0;
				var _g2 = 0;
				var _g3 = this.layersIndexes;
				while(_g2 < _g3.length) {
					var l = _g3[_g2];
					++_g2;
					if(l > i) {
						break;
					} else {
						pos = l;
					}
				}
				var p = i;
				while(p > pos) {
					this.childs[p] = this.childs[p - 1];
					--p;
				}
				this.childs[pos] = s;
				break;
			}
		}
	}
	,over: function(s) {
		var _g1 = 0;
		var _g = this.childs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.childs[i] == s) {
				var _g2 = 0;
				var _g3 = this.layersIndexes;
				while(_g2 < _g3.length) {
					var l = _g3[_g2];
					++_g2;
					if(l > i) {
						var _g5 = i;
						var _g4 = l - 1;
						while(_g5 < _g4) {
							var p = _g5++;
							this.childs[p] = this.childs[p + 1];
						}
						this.childs[l - 1] = s;
						break;
					}
				}
				break;
			}
		}
	}
	,getLayer: function(layer) {
		return new hxd_impl_ArrayIterator_$h2d_$Sprite(layer >= this.layerCount?[]:this.childs.slice(layer == 0?0:this.layersIndexes[layer - 1],this.layersIndexes[layer]));
	}
	,ysort: function(layer) {
		if(layer >= this.layerCount) {
			return;
		}
		var start = layer == 0?0:this.layersIndexes[layer - 1];
		var max = this.layersIndexes[layer];
		if(start == max) {
			return;
		}
		var pos = start;
		var ymax = this.childs[pos++].y;
		while(pos < max) {
			var c = this.childs[pos];
			if(c.y < ymax) {
				var p = pos - 1;
				while(p >= start) {
					var c2 = this.childs[p];
					if(c.y >= c2.y) {
						break;
					}
					this.childs[p + 1] = c2;
					--p;
				}
				this.childs[p + 1] = c;
			} else {
				ymax = c.y;
			}
			++pos;
		}
	}
	,__class__: h2d_Layers
});
var h2d_Mask = function(width,height,parent) {
	h2d_Sprite.call(this,parent);
	this.width = width;
	this.height = height;
};
$hxClasses["h2d.Mask"] = h2d_Mask;
h2d_Mask.__name__ = ["h2d","Mask"];
h2d_Mask.__super__ = h2d_Sprite;
h2d_Mask.prototype = $extend(h2d_Sprite.prototype,{
	onParentChanged: function() {
		this.updateMask();
	}
	,onAlloc: function() {
		h2d_Sprite.prototype.onAlloc.call(this);
		this.updateMask();
	}
	,updateMask: function() {
		this.parentMask = null;
		var p = this.parent;
		while(p != null) {
			var m = (p instanceof h2d_Mask)?p:null;
			if(m != null) {
				this.parentMask = m;
				break;
			}
			p = p.parent;
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Sprite.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		var xMin = out.xMin;
		var yMin = out.yMin;
		var xMax = out.xMax;
		var yMax = out.yMax;
		out.xMin = 1e20;
		out.yMin = 1e20;
		out.xMax = -1e20;
		out.yMax = -1e20;
		this.addBounds(relativeTo,out,0,0,this.width,this.height);
		if(xMin > out.xMin) {
			out.xMin = xMin;
		}
		if(yMin > out.yMin) {
			out.yMin = yMin;
		}
		if(xMax < out.xMax) {
			out.xMax = xMax;
		}
		if(yMax < out.yMax) {
			out.yMax = yMax;
		}
	}
	,drawRec: function(ctx) {
		var x1 = this.absX;
		var y1 = this.absY;
		var x2 = this.width * this.matA + this.height * this.matC + this.absX;
		var y2 = this.width * this.matB + this.height * this.matD + this.absY;
		if(ctx.hasRenderZone) {
			var oldX = ctx.renderX;
			var oldY = ctx.renderY;
			var oldW = ctx.renderW;
			var oldH = ctx.renderH;
			ctx.setRenderZone(x1,y1,x2 - x1,y2 - y1);
			h2d_Sprite.prototype.drawRec.call(this,ctx);
			ctx.setRenderZone(oldX,oldY,oldW,oldH);
		} else {
			ctx.setRenderZone(x1,y1,x2 - x1,y2 - y1);
			h2d_Sprite.prototype.drawRec.call(this,ctx);
			ctx.hasRenderZone = false;
			ctx.engine.setRenderZone();
		}
	}
	,__class__: h2d_Mask
});
var h3d_impl_RenderContext = function() {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	this.engine = h3d_Engine.CURRENT;
	this.frame = 0;
	this.time = 0.;
	this.elapsedTime = 1. / hxd_System.getDefaultFrameRate();
};
$hxClasses["h3d.impl.RenderContext"] = h3d_impl_RenderContext;
h3d_impl_RenderContext.__name__ = ["h3d","impl","RenderContext"];
h3d_impl_RenderContext.prototype = {
	__class__: h3d_impl_RenderContext
};
var h2d_RenderContext = function(scene) {
	this.tmpBounds = new h2d_col_Bounds();
	this.defaultFilter = false;
	this.globalAlpha = 1.;
	h3d_impl_RenderContext.call(this);
	this.scene = scene;
	this.bufPos = 0;
	this.manager = new h3d_shader_Manager(["output.position","output.color"]);
	this.pass = new h3d_mat_Pass("",null);
	this.pass.depth(true,h3d_mat_Compare.Always);
	this.pass.set_culling(h3d_mat_Face.None);
	this.baseShader = new h3d_shader_Base2d();
	this.baseShader.priority = 100;
	this.baseShader.zValue__ = 0.;
	this.baseShaderList = new hxsl_ShaderList(this.baseShader);
	this.targetsStack = [];
	this.textures = new h3d_impl_TextureCache();
};
$hxClasses["h2d.RenderContext"] = h2d_RenderContext;
h2d_RenderContext.__name__ = ["h2d","RenderContext"];
h2d_RenderContext.__super__ = h3d_impl_RenderContext;
h2d_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	dispose: function() {
		this.textures.dispose();
		if(this.fixedBuffer != null) {
			this.fixedBuffer.dispose();
		}
	}
	,hasBuffering: function() {
		return false;
	}
	,begin: function() {
		this.texture = null;
		this.currentObj = null;
		this.bufPos = 0;
		this.stride = 0;
		this.curX = 0;
		this.curY = 0;
		this.inFilter = null;
		this.curWidth = this.scene.width;
		this.curHeight = this.scene.height;
		this.manager.globals.set("time",this.time);
		var _this = this.baseShader;
		_this.constModified = true;
		_this.pixelAlign__ = false;
		var _this1 = this.baseShader.halfPixelInverse__;
		var x = 0.5 / this.engine.width;
		var y = 0.5 / this.engine.height;
		_this1.x = x;
		_this1.y = y;
		_this1.z = 0.;
		_this1.w = 1.;
		var _this2 = this.baseShader.viewport__;
		var x1 = -this.scene.width * 0.5;
		var y1 = -this.scene.height * 0.5;
		var z = 2 / this.scene.width;
		var w = -2 / this.scene.height;
		_this2.x = x1;
		_this2.y = y1;
		_this2.z = z;
		_this2.w = w;
		var _this3 = this.baseShader.filterMatrixA__;
		_this3.x = 1;
		_this3.y = 0;
		_this3.z = 0;
		_this3.w = 1.;
		var _this4 = this.baseShader.filterMatrixB__;
		_this4.x = 0;
		_this4.y = 1;
		_this4.z = 0;
		_this4.w = 1.;
		this.baseShaderList.next = null;
		this.initShaders(this.baseShaderList);
		this.engine.selectMaterial(this.pass);
		this.textures.begin(this);
	}
	,initShaders: function(shaders) {
		this.currentShaders = shaders;
		this.compiledShader = this.manager.compileShaders(shaders);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(this.compiledShader);
		} else {
			var _this = this.buffers;
			var s = this.compiledShader;
			_this.vertex.grow(s.vertex);
			_this.fragment.grow(s.fragment);
		}
		this.manager.fillGlobals(this.buffers,this.compiledShader);
		this.engine.selectShader(this.compiledShader);
		this.engine.uploadShaderBuffers(this.buffers,0);
	}
	,end: function() {
		this.texture = null;
		this.currentObj = null;
		this.baseShaderList.next = null;
		if(this.targetsStack.length != 0) {
			throw new js__$Boot_HaxeError("Missing popTarget()");
		}
	}
	,pushTarget: function(t,startX,startY,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(startY == null) {
			startY = 0;
		}
		if(startX == null) {
			startX = 0;
		}
		this.engine.pushTarget(t);
		this.initShaders(this.baseShaderList);
		if(width < 0) {
			if(t == null) {
				width = this.scene.width;
			} else {
				width = t.width;
			}
		}
		if(height < 0) {
			if(t == null) {
				height = this.scene.height;
			} else {
				height = t.height;
			}
		}
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / (t == null?this.engine.width:t.width);
		var y = 0.5 / (t == null?this.engine.height:t.height);
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this1 = this.baseShader.viewport__;
		_this1.x = -width * 0.5 - startX;
		_this1.y = -height * 0.5 - startY;
		_this1.z = 2 / width;
		_this1.w = -2 / height;
		this.targetsStack.push({ t : t, x : startX, y : startY, w : width, h : height, renderZone : this.hasRenderZone?{ x : this.renderX, y : this.renderY, w : this.renderW, h : this.renderH}:null});
		this.curX = startX;
		this.curY = startY;
		this.curWidth = width;
		this.curHeight = height;
		if(this.hasRenderZone) {
			this.hasRenderZone = false;
			this.engine.setRenderZone();
		}
	}
	,popTarget: function(restore) {
		if(restore == null) {
			restore = true;
		}
		var pinf = this.targetsStack.pop();
		if(pinf == null) {
			throw new js__$Boot_HaxeError("Too many popTarget()");
		}
		this.engine.popTarget();
		if(restore) {
			var tinf = this.targetsStack[this.targetsStack.length - 1];
			var t = tinf == null?null:tinf.t;
			var startX = tinf == null?0:tinf.x;
			var startY = tinf == null?0:tinf.y;
			var width = tinf == null?this.scene.width:tinf.w;
			var height = tinf == null?this.scene.height:tinf.h;
			this.initShaders(this.baseShaderList);
			var _this = this.baseShader.halfPixelInverse__;
			var x = 0.5 / (t == null?this.engine.width:t.width);
			var y = 0.5 / (t == null?this.engine.height:t.height);
			_this.x = x;
			_this.y = y;
			_this.z = 0.;
			_this.w = 1.;
			var _this1 = this.baseShader.viewport__;
			_this1.x = -width * 0.5 - startX;
			_this1.y = -height * 0.5 - startY;
			_this1.z = 2 / width;
			_this1.w = -2 / height;
			this.curX = startX;
			this.curY = startY;
			this.curWidth = width;
			this.curHeight = height;
		}
		var rz = pinf.renderZone;
		if(rz != null) {
			this.setRenderZone(rz.x,rz.y,rz.w,rz.h);
		}
	}
	,setRenderZone: function(x,y,w,h) {
		this.hasRenderZone = true;
		this.renderX = x;
		this.renderY = y;
		this.renderW = w;
		this.renderH = h;
		var scaleX = this.engine.width / this.scene.width;
		var scaleY = this.engine.height / this.scene.height;
		if(this.inFilter != null) {
			var fa = this.baseShader.filterMatrixA__;
			var fb = this.baseShader.filterMatrixB__;
			var x2 = x + w;
			var y2 = y + h;
			var rx1 = x * fa.x + y * fa.y + fa.z;
			var ry1 = x * fb.x + y * fb.y + fb.z;
			var rx2 = x2 * fa.x + y2 * fa.y + fa.z;
			var ry2 = x2 * fb.x + y2 * fb.y + fb.z;
			x = rx1;
			y = ry1;
			w = rx2 - rx1;
			h = ry2 - ry1;
		}
		this.engine.setRenderZone((x - this.curX) * scaleX + 1e-10 | 0,(y - this.curY) * scaleY + 1e-10 | 0,w * scaleX + 1e-10 | 0,h * scaleY + 1e-10 | 0);
	}
	,clearRenderZone: function() {
		this.hasRenderZone = false;
		this.engine.setRenderZone();
	}
	,flush: function() {
	}
	,_flush: function() {
		if(this.bufPos == 0) {
			return;
		}
		this.beforeDraw();
		var nverts = this.bufPos / this.stride | 0;
		var tmp = new h3d_Buffer(nverts,this.stride,[h3d_BufferFlag.Quads,h3d_BufferFlag.Dynamic,h3d_BufferFlag.RawFormat],{ fileName : "RenderContext.hx", lineNumber : 190, className : "h2d.RenderContext", methodName : "_flush"});
		tmp.uploadVector(this.buffer,0,nverts);
		var _this = this.engine;
		_this.renderBuffer(tmp,_this.mem.quadIndexes,2,0,-1);
		tmp.dispose();
		this.bufPos = 0;
		this.texture = null;
	}
	,beforeDraw: function() {
		if(this.texture == null) {
			this.texture = h3d_mat_Texture.fromColor(16711935,null,{ fileName : "RenderContext.hx", lineNumber : 199, className : "h2d.RenderContext", methodName : "beforeDraw"});
		}
		this.baseShader.texture__ = this.texture;
		this.texture.set_filter((this.currentObj.filter == null?this.defaultFilter:this.currentObj.filter)?h3d_mat_Filter.Linear:h3d_mat_Filter.Nearest);
		this.texture.set_wrap(this.currentObj.tileWrap?h3d_mat_Wrap.Repeat:h3d_mat_Wrap.Clamp);
		var blend = this.currentObj.blendMode;
		if(this.inFilter == this.currentObj && blend == h2d_BlendMode.Erase) {
			blend = h2d_BlendMode.Add;
		}
		this.pass.setBlendMode(blend);
		this.manager.fillParams(this.buffers,this.compiledShader,this.currentShaders);
		this.engine.selectMaterial(this.pass);
		this.engine.uploadShaderBuffers(this.buffers,1);
		this.engine.uploadShaderBuffers(this.buffers,2);
	}
	,beginDrawObject: function(obj,texture) {
		this.beginDraw(obj,texture,true);
		if(this.inFilter == obj) {
			var _this = this.baseShader.color__;
			_this.x = 1;
			_this.y = 1;
			_this.z = 1;
			_this.w = 1;
		} else {
			var _this1 = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			_this1.x = x;
			_this1.y = y;
			_this1.z = z;
			_this1.w = w;
		}
		var _this2 = this.baseShader.absoluteMatrixA__;
		var x1 = obj.matA;
		var y1 = obj.matC;
		var z1 = obj.absX;
		_this2.x = x1;
		_this2.y = y1;
		_this2.z = z1;
		_this2.w = 1.;
		var _this3 = this.baseShader.absoluteMatrixB__;
		var x2 = obj.matB;
		var y2 = obj.matD;
		var z2 = obj.absY;
		_this3.x = x2;
		_this3.y = y2;
		_this3.z = z2;
		_this3.w = 1.;
		this.beforeDraw();
	}
	,beginDrawBatch: function(obj,texture) {
		this.beginDraw(obj,texture,false);
	}
	,drawTile: function(obj,tile) {
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(this.inFilter != null) {
			var f1 = this.baseShader.filterMatrixA__;
			var f2 = this.baseShader.filterMatrixB__;
			matA = obj.matA * f1.x + obj.matB * f1.y;
			matB = obj.matA * f2.x + obj.matB * f2.y;
			matC = obj.matC * f1.x + obj.matD * f1.y;
			matD = obj.matC * f2.x + obj.matD * f2.y;
			absX = obj.absX * f1.x + obj.absY * f1.y + f1.z;
			absY = obj.absX * f2.x + obj.absY * f2.y + f2.z;
		} else {
			matA = obj.matA;
			matB = obj.matB;
			matC = obj.matC;
			matD = obj.matD;
			absX = obj.absX;
			absY = obj.absY;
		}
		if(matB == 0 && matC == 0) {
			var tx = tile.dx + tile.width * 0.5;
			var ty = tile.dy + tile.height * 0.5;
			var tmp = (tile.width > tile.height?tile.width:tile.height) * 1.5;
			var f = obj.matA;
			var a = f < 0?-f:f;
			var f3 = obj.matD;
			var b = f3 < 0?-f3:f3;
			var tr = tmp * (a < b?b:a);
			var cx = absX + tx * matA - this.curX;
			var cy = absY + ty * matD - this.curY;
			if(cx < -tr || cy < -tr || cx - tr > this.curWidth || cy - tr > this.curHeight) {
				return;
			}
		} else {
			var xMin = 1e20;
			var yMin = 1e20;
			var xMax = -1e20;
			var yMax = -1e20;
			var hw = tile.width * 0.5;
			var hh = tile.height * 0.5;
			var px = tile.dx * matA + tile.dy * matC;
			var py = tile.dx * matB + tile.dy * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var x = tile.width;
			var px1 = (x + tile.dx) * matA + tile.dy * matC;
			var py1 = (x + tile.dx) * matB + tile.dy * matD;
			if(px1 < xMin) {
				xMin = px1;
			}
			if(px1 > xMax) {
				xMax = px1;
			}
			if(py1 < yMin) {
				yMin = py1;
			}
			if(py1 > yMax) {
				yMax = py1;
			}
			var y = tile.height;
			var px2 = tile.dx * matA + (y + tile.dy) * matC;
			var py2 = tile.dx * matB + (y + tile.dy) * matD;
			if(px2 < xMin) {
				xMin = px2;
			}
			if(px2 > xMax) {
				xMax = px2;
			}
			if(py2 < yMin) {
				yMin = py2;
			}
			if(py2 > yMax) {
				yMax = py2;
			}
			var x1 = tile.width;
			var y1 = tile.height;
			var px3 = (x1 + tile.dx) * matA + (y1 + tile.dy) * matC;
			var py3 = (x1 + tile.dx) * matB + (y1 + tile.dy) * matD;
			if(px3 < xMin) {
				xMin = px3;
			}
			if(px3 > xMax) {
				xMax = px3;
			}
			if(py3 < yMin) {
				yMin = py3;
			}
			if(py3 > yMax) {
				yMax = py3;
			}
			var cx1 = absX - this.curX;
			var cy1 = absY - this.curY;
			if(cx1 + xMax < 0 || cy1 + yMax < 0 || cx1 + xMin > this.curWidth || cy1 + yMin > this.curHeight) {
				return;
			}
		}
		this.beginDraw(obj,tile.innerTex,true,true);
		if(this.inFilter == obj) {
			var _this = this.baseShader.color__;
			_this.x = 1;
			_this.y = 1;
			_this.z = 1;
			_this.w = 1;
		} else {
			var _this1 = this.baseShader.color__;
			var x2 = obj.color.x;
			var y2 = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			_this1.x = x2;
			_this1.y = y2;
			_this1.z = z;
			_this1.w = w;
		}
		var _this2 = this.baseShader.absoluteMatrixA__;
		var x3 = tile.width * obj.matA;
		var y3 = tile.height * obj.matC;
		var z1 = obj.absX + tile.dx * obj.matA + tile.dy * obj.matC;
		_this2.x = x3;
		_this2.y = y3;
		_this2.z = z1;
		_this2.w = 1.;
		var _this3 = this.baseShader.absoluteMatrixB__;
		var x4 = tile.width * obj.matB;
		var y4 = tile.height * obj.matD;
		var z2 = obj.absY + tile.dx * obj.matB + tile.dy * obj.matD;
		_this3.x = x4;
		_this3.y = y4;
		_this3.z = z2;
		_this3.w = 1.;
		var _this4 = this.baseShader.uvPos__;
		var x5 = tile.u;
		var y5 = tile.v;
		var z3 = tile.u2 - tile.u;
		var w1 = tile.v2 - tile.v;
		_this4.x = x5;
		_this4.y = y5;
		_this4.z = z3;
		_this4.w = w1;
		this.beforeDraw();
		if(this.fixedBuffer == null || this.fixedBuffer.isDisposed()) {
			this.fixedBuffer = new h3d_Buffer(4,8,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat],{ fileName : "RenderContext.hx", lineNumber : 292, className : "h2d.RenderContext", methodName : "drawTile"});
			var k = new Array(0);
			var _g = 0;
			var _g1 = [0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1];
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				k.push(v);
			}
			this.fixedBuffer.uploadVector(k,0,4);
		}
		var _this5 = this.engine;
		_this5.renderBuffer(this.fixedBuffer,_this5.mem.quadIndexes,2,0,-1);
	}
	,beginDraw: function(obj,texture,isRelative,hasUVPos) {
		if(hasUVPos == null) {
			hasUVPos = false;
		}
		var shaderChanged = false;
		var paramsChanged = false;
		var objShaders = obj.shaders;
		var curShaders = this.currentShaders.next;
		while(objShaders != null && curShaders != null) {
			var s = objShaders.s;
			var t = curShaders.s;
			objShaders = objShaders.next;
			curShaders = curShaders.next;
			if(s == t) {
				continue;
			}
			paramsChanged = true;
			s.updateConstants(this.manager.globals);
			if(s.instance != t.instance) {
				shaderChanged = true;
			}
		}
		if(objShaders != null || curShaders != null || this.baseShader.isRelative__ != isRelative || this.baseShader.hasUVPos__ != hasUVPos) {
			shaderChanged = true;
		}
		if(shaderChanged) {
			var _this = this.baseShader;
			_this.constModified = true;
			_this.hasUVPos__ = hasUVPos;
			var _this1 = this.baseShader;
			_this1.constModified = true;
			_this1.isRelative__ = isRelative;
			this.baseShader.updateConstants(this.manager.globals);
			this.baseShaderList.next = obj.shaders;
			this.initShaders(this.baseShaderList);
		} else if(paramsChanged) {
			if(this.currentShaders != this.baseShaderList) {
				throw new js__$Boot_HaxeError("!");
			}
			this.currentShaders.next = obj.shaders;
		}
		this.texture = texture;
		this.stride = 8;
		this.currentObj = obj;
	}
	,__class__: h2d_RenderContext
});
var h2d_TileGroup = function(t,parent) {
	h2d_Drawable.call(this,parent);
	this.tile = t;
	this.rangeMin = this.rangeMax = -1;
	this.curColor = new h3d_Vector(1,1,1,1);
	this.content = new h2d__$TileGroup_TileLayerContent();
};
$hxClasses["h2d.TileGroup"] = h2d_TileGroup;
h2d_TileGroup.__name__ = ["h2d","TileGroup"];
h2d_TileGroup.__super__ = h2d_Drawable;
h2d_TileGroup.prototype = $extend(h2d_Drawable.prototype,{
	getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		this.addBounds(relativeTo,out,this.content.xMin,this.content.yMin,this.content.xMax - this.content.xMin,this.content.yMax - this.content.yMin);
	}
	,clear: function() {
		this.content.clear();
	}
	,invalidate: function() {
		this.content.dispose();
	}
	,count: function() {
		return this.content.triCount() >> 1;
	}
	,onDelete: function() {
		this.content.dispose();
		h2d_Drawable.prototype.onDelete.call(this);
	}
	,setDefaultColor: function(rgb,alpha) {
		if(alpha == null) {
			alpha = 1.0;
		}
		this.curColor.x = (rgb >> 16 & 255) / 255;
		this.curColor.y = (rgb >> 8 & 255) / 255;
		this.curColor.z = (rgb & 255) / 255;
		this.curColor.w = alpha;
	}
	,add: function(x,y,t) {
		this.content.add(x,y,this.curColor.x,this.curColor.y,this.curColor.z,this.curColor.w,t);
	}
	,addColor: function(x,y,r,g,b,a,t) {
		this.content.add(x,y,r,g,b,a,t);
	}
	,draw: function(ctx) {
		this.drawWith(ctx,this);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		var _this = this.content;
		if(_this.buffer == null || _this.buffer.isDisposed()) {
			if(h3d_Engine.CURRENT == null) {
				throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
			}
			_this.alloc(h3d_Engine.CURRENT);
		}
	}
	,drawWith: function(ctx,obj) {
		var max = this.content.triCount();
		if(max == 0) {
			return;
		}
		ctx.beginDrawObject(obj,this.tile.innerTex);
		var min = this.rangeMin < 0?0:this.rangeMin * 2;
		if(this.rangeMax > 0 && this.rangeMax < max * 2) {
			max = this.rangeMax * 2;
		}
		this.content.doRender(ctx.engine,min,max - min);
	}
	,__class__: h2d_TileGroup
});
var h2d_ScaleGrid = function(tile,borderW,borderH,holdSize,holdVertical,parent) {
	if(holdVertical == null) {
		holdVertical = false;
	}
	this.holdPosition = 0.5;
	h2d_TileGroup.call(this,tile,parent);
	this.borderWidth = borderW;
	this.borderHeight = borderH;
	this.set_width(tile.width);
	this.set_height(tile.height);
	this.holdSize = holdSize;
	this.holdVertical = holdVertical;
};
$hxClasses["h2d.ScaleGrid"] = h2d_ScaleGrid;
h2d_ScaleGrid.__name__ = ["h2d","ScaleGrid"];
h2d_ScaleGrid.__super__ = h2d_TileGroup;
h2d_ScaleGrid.prototype = $extend(h2d_TileGroup.prototype,{
	set_holdPosition: function(v) {
		v = Math.max(0,Math.min(1,v));
		this.holdPosition = v;
		this.clear();
		return v;
	}
	,set_tileBorders: function(b) {
		this.tileBorders = b;
		this.clear();
		return b;
	}
	,set_width: function(w) {
		this.width = w;
		this.clear();
		return w;
	}
	,set_height: function(h) {
		this.height = h;
		this.clear();
		return h;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.content.isEmpty()) {
			this.updateContent();
		}
		h2d_TileGroup.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
	}
	,drawContent: function() {
		var bw = this.borderWidth;
		var bh = this.borderHeight;
		var color = this.curColor;
		var t = this.tile.sub(0,0,bw,bh);
		this.content.add(0,0,color.x,color.y,color.z,color.w,t);
		var x = this.width - bw;
		var color1 = this.curColor;
		var t1 = this.tile.sub(this.tile.width - bw,0,bw,bh);
		this.content.add(x,0,color1.x,color1.y,color1.z,color1.w,t1);
		var y = this.height - bh;
		var color2 = this.curColor;
		var t2 = this.tile.sub(0,this.tile.height - bh,bw,bh);
		this.content.add(0,y,color2.x,color2.y,color2.z,color2.w,t2);
		var x1 = this.width - bw;
		var y1 = this.height - bh;
		var color3 = this.curColor;
		var t3 = this.tile.sub(this.tile.width - bw,this.tile.height - bh,bw,bh);
		this.content.add(x1,y1,color3.x,color3.y,color3.z,color3.w,t3);
		var sizeX = this.tile.width - bw * 2;
		var sizeY = this.tile.height - bh * 2;
		if(!this.tileBorders) {
			var w = this.width - bw * 2;
			var h = this.height - bh * 2;
			var t4 = this.tile.sub(bw,0,sizeX,bh);
			t4.scaleToSize(w,bh);
			var color4 = this.curColor;
			this.content.add(bw,0,color4.x,color4.y,color4.z,color4.w,t4);
			var t5 = this.tile.sub(bw,this.tile.height - bh,sizeX,bh);
			t5.scaleToSize(w,bh);
			var color5 = this.curColor;
			this.content.add(bw,h + bh,color5.x,color5.y,color5.z,color5.w,t5);
			var t6 = this.tile.sub(0,bh,bw,sizeY);
			t6.scaleToSize(bw,h);
			var color6 = this.curColor;
			this.content.add(0,bh,color6.x,color6.y,color6.z,color6.w,t6);
			var t7 = this.tile.sub(this.tile.width - bw,bh,bw,sizeY);
			t7.scaleToSize(bw,h);
			var color7 = this.curColor;
			this.content.add(w + bw,bh,color7.x,color7.y,color7.z,color7.w,t7);
		} else {
			var rw = (this.width - bw * 2) / sizeX | 0;
			var _g1 = 0;
			while(_g1 < rw) {
				var x2 = _g1++;
				var color8 = this.curColor;
				var t8 = this.tile.sub(bw,0,sizeX,bh);
				this.content.add(bw + x2 * sizeX,0,color8.x,color8.y,color8.z,color8.w,t8);
				var y2 = this.height - bh;
				var color9 = this.curColor;
				var t9 = this.tile.sub(bw,this.tile.height - bh,sizeX,bh);
				this.content.add(bw + x2 * sizeX,y2,color9.x,color9.y,color9.z,color9.w,t9);
			}
			var dx = this.width - bw * 2 - rw * sizeX;
			if(dx > 0) {
				var color10 = this.curColor;
				var t10 = this.tile.sub(bw,0,dx,bh);
				this.content.add(bw + rw * sizeX,0,color10.x,color10.y,color10.z,color10.w,t10);
				var y3 = this.height - bh;
				var color11 = this.curColor;
				var t11 = this.tile.sub(bw,this.tile.height - bh,dx,bh);
				this.content.add(bw + rw * sizeX,y3,color11.x,color11.y,color11.z,color11.w,t11);
			}
			var rh = (this.height - bh * 2) / sizeY | 0;
			var _g11 = 0;
			while(_g11 < rh) {
				var y4 = _g11++;
				var color12 = this.curColor;
				var t12 = this.tile.sub(0,bh,bw,sizeY);
				this.content.add(0,bh + y4 * sizeY,color12.x,color12.y,color12.z,color12.w,t12);
				var x3 = this.width - bw;
				var color13 = this.curColor;
				var t13 = this.tile.sub(this.tile.width - bw,bh,bw,sizeY);
				this.content.add(x3,bh + y4 * sizeY,color13.x,color13.y,color13.z,color13.w,t13);
			}
			var dy = this.height - bh * 2 - rh * sizeY;
			if(dy > 0) {
				var color14 = this.curColor;
				var t14 = this.tile.sub(0,bh,bw,dy);
				this.content.add(0,bh + rh * sizeY,color14.x,color14.y,color14.z,color14.w,t14);
				var x4 = this.width - bw;
				var color15 = this.curColor;
				var t15 = this.tile.sub(this.tile.width - bw,bh,bw,dy);
				this.content.add(x4,bh + rh * sizeY,color15.x,color15.y,color15.z,color15.w,t15);
			}
		}
		var t16 = this.tile.sub(bw,bh,sizeX,sizeY);
		t16.scaleToSize(this.width - bw * 2,this.height - bh * 2);
		var color16 = this.curColor;
		this.content.add(bw,bh,color16.x,color16.y,color16.z,color16.w,t16);
	}
	,drawHoldContent: function() {
		if(this.tileBorders) {
			throw new js__$Boot_HaxeError("TODO");
		}
		var bw = this.borderWidth;
		var bh = this.borderHeight;
		var holdw = this.holdVertical?this.holdSize:0;
		var holdh = this.holdVertical?0:this.holdSize;
		var wpos = this.holdVertical?this.holdPosition:0.5;
		var hpos = this.holdVertical?0.5:this.holdPosition;
		var sizeX1 = Math.floor((this.tile.width - bw * 2 - holdw) * 0.5);
		var sizeX2 = Math.ceil((this.tile.width - bw * 2 - holdw) * 0.5);
		var sizeY1 = Math.floor((this.tile.height - bh * 2 - holdh) * 0.5);
		var sizeY2 = Math.ceil((this.tile.height - bh * 2 - holdh) * 0.5);
		var w1 = Math.floor((this.width - bw * 2 - holdw) * wpos);
		var w2 = Math.ceil((this.width - bw * 2 - holdw) * (1 - wpos));
		var h1 = Math.floor((this.height - bh * 2 - holdh) * hpos);
		var h2 = Math.ceil((this.height - bh * 2 - holdh) * (1 - hpos));
		var color = this.curColor;
		var t = this.tile.sub(0,0,bw,bh);
		this.content.add(0,0,color.x,color.y,color.z,color.w,t);
		var color1 = this.curColor;
		var t1 = this.tile.sub(bw + sizeX1 + sizeX2 + holdw,0,bw,bh);
		this.content.add(bw + w1 + w2 + holdw,0,color1.x,color1.y,color1.z,color1.w,t1);
		var color2 = this.curColor;
		var t2 = this.tile.sub(0,bh + sizeY1 + sizeY2 + holdh,bw,bh);
		this.content.add(0,bh + h1 + h2 + holdh,color2.x,color2.y,color2.z,color2.w,t2);
		var color3 = this.curColor;
		var t3 = this.tile.sub(bw + sizeX1 + sizeX2 + holdw,bh + sizeY1 + sizeY2 + holdh,bw,bh);
		this.content.add(bw + w1 + w2 + holdw,bh + h1 + h2 + holdh,color3.x,color3.y,color3.z,color3.w,t3);
		var t4 = this.tile.sub(bw,0,sizeX1,bh);
		t4.scaleToSize(w1,bh);
		var color4 = this.curColor;
		this.content.add(bw,0,color4.x,color4.y,color4.z,color4.w,t4);
		var t5 = this.tile.sub(bw + sizeX1 + holdw,0,sizeX2,bh);
		t5.scaleToSize(w2,bh);
		var color5 = this.curColor;
		this.content.add(bw + w1 + holdw,0,color5.x,color5.y,color5.z,color5.w,t5);
		var t6 = this.tile.sub(bw,bh + sizeY1 + sizeY2 + holdh,sizeX1,bh);
		t6.scaleToSize(w1,bh);
		var color6 = this.curColor;
		this.content.add(bw,bh + h1 + h2 + holdh,color6.x,color6.y,color6.z,color6.w,t6);
		var t7 = this.tile.sub(bw + sizeX1 + holdw,bh + sizeY1 + sizeY2 + holdh,sizeX2,bh);
		t7.scaleToSize(w2,bh);
		var color7 = this.curColor;
		this.content.add(bw + w1 + holdw,bh + h1 + h2 + holdh,color7.x,color7.y,color7.z,color7.w,t7);
		var t8 = this.tile.sub(0,bh,bw,sizeY1);
		t8.scaleToSize(bw,h1);
		var color8 = this.curColor;
		this.content.add(0,bh,color8.x,color8.y,color8.z,color8.w,t8);
		var t9 = this.tile.sub(0,bh + sizeY1 + holdh,bw,sizeY2);
		t9.scaleToSize(bw,h2);
		var color9 = this.curColor;
		this.content.add(0,bh + h1 + holdh,color9.x,color9.y,color9.z,color9.w,t9);
		var t10 = this.tile.sub(bw + sizeX1 + sizeX2 + holdw,bh,bw,sizeY1);
		t10.scaleToSize(bw,h1);
		var color10 = this.curColor;
		this.content.add(bw + w1 + w2 + holdw,bh,color10.x,color10.y,color10.z,color10.w,t10);
		var t11 = this.tile.sub(bw + sizeX1 + sizeX2 + holdw,bh + sizeY1 + holdh,bw,sizeY2);
		t11.scaleToSize(bw,h2);
		var color11 = this.curColor;
		this.content.add(bw + w1 + w2 + holdw,bh + h1 + holdh,color11.x,color11.y,color11.z,color11.w,t11);
		var t12 = this.tile.sub(bw + sizeX1,0,holdw,bh);
		var color12 = this.curColor;
		this.content.add(bw + w1,0,color12.x,color12.y,color12.z,color12.w,t12);
		var t13 = this.tile.sub(bw + sizeX1,bh + sizeY1 + sizeY2 + holdh,holdw,bh);
		var color13 = this.curColor;
		this.content.add(bw + w1,bh + h1 + h2 + holdh,color13.x,color13.y,color13.z,color13.w,t13);
		var t14 = this.tile.sub(0,bh + sizeY1,bw,holdh);
		var color14 = this.curColor;
		this.content.add(0,bh + h1,color14.x,color14.y,color14.z,color14.w,t14);
		var t15 = this.tile.sub(bw + sizeX1 + sizeX2 + holdw,bh + sizeY1,bw,holdh);
		var color15 = this.curColor;
		this.content.add(bw + w1 + w2 + holdw,bh + h1,color15.x,color15.y,color15.z,color15.w,t15);
		var t16 = this.tile.sub(bw,bh,sizeX1 + sizeX2 + holdw,sizeY1 + sizeY2 + holdh);
		t16.scaleToSize(w1 + w2 + holdw,h1 + h2 + holdh);
		var color16 = this.curColor;
		this.content.add(bw,bh,color16.x,color16.y,color16.z,color16.w,t16);
	}
	,updateContent: function() {
		if(this.holdSize == null) {
			this.drawContent();
		} else {
			this.drawHoldContent();
		}
	}
	,sync: function(ctx) {
		if(this.content.isEmpty()) {
			this.content.dispose();
			this.updateContent();
		}
		h2d_TileGroup.prototype.sync.call(this,ctx);
	}
	,__class__: h2d_ScaleGrid
});
var hxd_InteractiveScene = function() { };
$hxClasses["hxd.InteractiveScene"] = hxd_InteractiveScene;
hxd_InteractiveScene.__name__ = ["hxd","InteractiveScene"];
hxd_InteractiveScene.prototype = {
	__class__: hxd_InteractiveScene
};
var h3d_IDrawable = function() { };
$hxClasses["h3d.IDrawable"] = h3d_IDrawable;
h3d_IDrawable.__name__ = ["h3d","IDrawable"];
h3d_IDrawable.prototype = {
	__class__: h3d_IDrawable
};
var h2d_Scene = function() {
	h2d_Layers.call(this,null);
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	var e = h3d_Engine.CURRENT;
	this.ctx = new h2d_RenderContext(this);
	this.width = e.width;
	this.height = e.height;
	this.interactive = [];
	this.eventListeners = [];
	this.stage = hxd_Stage.getInstance();
	this.posChanged = true;
};
$hxClasses["h2d.Scene"] = h2d_Scene;
h2d_Scene.__name__ = ["h2d","Scene"];
h2d_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h2d_Scene.__super__ = h2d_Layers;
h2d_Scene.prototype = $extend(h2d_Layers.prototype,{
	get_defaultFilter: function() {
		return this.ctx.defaultFilter;
	}
	,set_defaultFilter: function(v) {
		return this.ctx.defaultFilter = v;
	}
	,setEvents: function(events) {
		this.events = events;
	}
	,get_zoom: function() {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		return h3d_Engine.CURRENT.width / this.width | 0;
	}
	,set_zoom: function(v) {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var e = h3d_Engine.CURRENT;
		var stage = hxd_Stage.getInstance();
		var twidth = Math.ceil(stage.get_width() / v);
		var theight = Math.ceil(stage.get_height() / v);
		var totalWidth = twidth * v;
		var totalHeight = theight * v;
		if(totalWidth != e.width || totalHeight != e.height) {
			e.resize(totalWidth,totalHeight);
		}
		this.setFixedSize(twidth,theight);
		return v;
	}
	,setFixedSize: function(w,h) {
		this.width = w;
		this.height = h;
		this.fixedSize = true;
		this.posChanged = true;
	}
	,checkResize: function() {
		if(this.fixedSize) {
			return;
		}
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var engine = h3d_Engine.CURRENT;
		if(this.width != engine.width || this.height != engine.height) {
			this.width = engine.width;
			this.height = engine.height;
			this.posChanged = true;
		}
	}
	,screenXToLocal: function(mx) {
		return mx * this.width / (this.stage.get_width() * this.scaleX) - this.x;
	}
	,screenYToLocal: function(my) {
		return my * this.height / (this.stage.get_height() * this.scaleY) - this.y;
	}
	,get_mouseX: function() {
		return this.stage.get_mouseX() * this.width / (this.stage.get_width() * this.scaleX) - this.x;
	}
	,get_mouseY: function() {
		return this.stage.get_mouseY() * this.height / (this.stage.get_height() * this.scaleY) - this.y;
	}
	,dispatchListeners: function(event) {
		this.screenToLocal(event);
		var _g = 0;
		var _g1 = this.eventListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(event);
			if(!event.propagate) {
				break;
			}
		}
	}
	,getInteractive: function(x,y) {
		var rx = x * this.matA + y * this.matB + this.absX;
		var ry = x * this.matC + y * this.matD + this.absY;
		var _g = 0;
		var _g1 = this.interactive;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var dx = rx - i.absX;
			var dy = ry - i.absY;
			var w1 = i.width * i.matA;
			var h1 = i.width * i.matC;
			var ky = h1 * dx + w1 * dy;
			if(ky < 0) {
				continue;
			}
			var w2 = i.height * i.matB;
			var h2 = i.height * i.matD;
			var kx = w2 * dy + h2 * dx;
			if(kx < 0) {
				continue;
			}
			var max = w1 * h2 - h1 * w2;
			if(ky >= max || kx >= max) {
				continue;
			}
			var visible = true;
			var p = i;
			while(p != null) {
				if(!p.visible) {
					visible = false;
					break;
				}
				p = p.parent;
			}
			if(!visible) {
				continue;
			}
			return i;
		}
		return null;
	}
	,screenToLocal: function(e) {
		var x = e.relX * this.width / (this.stage.get_width() * this.scaleX) - this.x;
		var y = e.relY * this.height / (this.stage.get_height() * this.scaleY) - this.y;
		var rx = x * this.matA + y * this.matB + this.absX;
		var ry = x * this.matC + y * this.matD + this.absY;
		e.relX = rx;
		e.relY = ry;
	}
	,dispatchEvent: function(event,to) {
		var i = to;
		this.screenToLocal(event);
		var rx = event.relX;
		var ry = event.relY;
		var dx = rx - i.absX;
		var dy = ry - i.absY;
		var w1 = i.width * i.matA;
		var h1 = i.width * i.matC;
		var ky = h1 * dx + w1 * dy;
		var w2 = i.height * i.matB;
		var h2 = i.height * i.matD;
		var kx = w2 * dy + h2 * dx;
		var max = w1 * h2 - h1 * w2;
		event.relX = kx / max * i.width;
		event.relY = ky / max * i.height;
		i.handleEvent(event);
	}
	,handleEvent: function(event,last) {
		this.screenToLocal(event);
		var rx = event.relX;
		var ry = event.relY;
		var _g1 = last == null?0:this.interactive.indexOf(last) + 1;
		var _g = this.interactive.length;
		while(_g1 < _g) {
			var i = this.interactive[_g1++];
			if(i == null) {
				break;
			}
			var dx = rx - i.absX;
			var dy = ry - i.absY;
			var w1 = i.width * i.matA;
			var h1 = i.width * i.matC;
			var ky = h1 * dx + w1 * dy;
			if(ky < 0) {
				continue;
			}
			var w2 = i.height * i.matB;
			var h2 = i.height * i.matD;
			var kx = w2 * dy + h2 * dx;
			if(kx < 0) {
				continue;
			}
			var max = w1 * h2 - h1 * w2;
			if(ky >= max || kx >= max) {
				continue;
			}
			var visible = true;
			var p = i;
			while(p != null) {
				if(!p.visible) {
					visible = false;
					break;
				}
				p = p.parent;
			}
			if(!visible) {
				continue;
			}
			event.relX = kx / max * i.width;
			event.relY = ky / max * i.height;
			i.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			return i;
		}
		return null;
	}
	,addEventListener: function(f) {
		this.eventListeners.push(f);
	}
	,removeEventListener: function(f) {
		return HxOverrides.remove(this.eventListeners,f);
	}
	,startDrag: function(f,onCancel,refEvent) {
		var _gthis = this;
		this.events.startDrag(function(e) {
			_gthis.screenToLocal(e);
			f(e);
		},onCancel,refEvent);
	}
	,stopDrag: function() {
		this.events.stopDrag();
	}
	,getFocus: function() {
		if(this.events == null) {
			return null;
		}
		var f = this.events.getFocus();
		if(f == null) {
			return null;
		}
		var i = (f instanceof h2d_Interactive)?f:null;
		if(i == null) {
			return null;
		}
		return this.interactive[this.interactive.indexOf(i)];
	}
	,addEventTarget: function(i) {
		var i1 = i;
		var lv = 0;
		while(i1 != null) {
			i1 = i1.parent;
			++lv;
		}
		var level = lv;
		var _g1 = 0;
		var _g = this.interactive.length;
		while(_g1 < _g) {
			var index = _g1++;
			var i11 = i;
			var i2 = this.interactive[index];
			var lv1 = level;
			var i3 = i2;
			var lv2 = 0;
			while(i3 != null) {
				i3 = i3.parent;
				++lv2;
			}
			var lv21 = lv2;
			var p1 = i11;
			var p2 = i2;
			while(lv1 > lv21) {
				i11 = p1;
				p1 = p1.parent;
				--lv1;
			}
			while(lv21 > lv1) {
				i2 = p2;
				p2 = p2.parent;
				--lv21;
			}
			while(p1 != p2) {
				i11 = p1;
				p1 = p1.parent;
				i2 = p2;
				p2 = p2.parent;
			}
			var id = -1;
			var _g11 = 0;
			var _g2 = p1.childs.length;
			while(_g11 < _g2) {
				var k = _g11++;
				if(p1.childs[k] == i11) {
					id = k;
					break;
				}
			}
			var tmp = id;
			var id1 = -1;
			var _g12 = 0;
			var _g3 = p2.childs.length;
			while(_g12 < _g3) {
				var k1 = _g12++;
				if(p2.childs[k1] == i2) {
					id1 = k1;
					break;
				}
			}
			if(tmp > id1) {
				this.interactive.splice(index,0,i);
				return;
			}
		}
		this.interactive.push(i);
	}
	,removeEventTarget: function(i,notify) {
		if(notify == null) {
			notify = false;
		}
		HxOverrides.remove(this.interactive,i);
		if(notify && this.events != null) {
			this.events.onRemove(i);
		}
	}
	,dispose: function() {
		if(this.allocated) {
			this.onDelete();
		}
		this.ctx.dispose();
	}
	,setElapsedTime: function(v) {
		this.ctx.elapsedTime = v;
	}
	,drawImplTo: function(s,t) {
		if((t.flags & 1) == 0) {
			throw new js__$Boot_HaxeError("Can only draw to texture created with Target flag");
		}
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		this.ctx.engine = h3d_Engine.CURRENT;
		this.ctx.engine.begin();
		this.ctx.globalAlpha = this.alpha;
		this.ctx.begin();
		this.ctx.pushTarget(t);
		if((t.flags & 512) == 0) {
			this.ctx.engine.driver.clear(new h3d_Vector(0,0,0,0),1,0);
		}
		s.drawRec(this.ctx);
		this.ctx.popTarget();
		this.ctx.engine.driver.clear(new h3d_Vector(0,0,0,0),1,0);
	}
	,render: function(engine) {
		this.ctx.engine = engine;
		this.ctx.frame++;
		this.ctx.time += this.ctx.elapsedTime;
		this.ctx.globalAlpha = this.alpha;
		this.sync(this.ctx);
		if(this.childs.length == 0) {
			return;
		}
		this.ctx.begin();
		this.drawRec(this.ctx);
		this.ctx.end();
	}
	,sync: function(ctx) {
		if(!this.allocated) {
			this.onAlloc();
		}
		if(!this.fixedSize && (this.width != ctx.engine.width || this.height != ctx.engine.height)) {
			this.width = ctx.engine.width;
			this.height = ctx.engine.height;
			this.posChanged = true;
		}
		h2d_Layers.prototype.sync.call(this,ctx);
	}
	,captureBitmap: function(target) {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var engine = h3d_Engine.CURRENT;
		if(target == null) {
			target = new h2d_Tile(new h3d_mat_Texture(this.width,this.height,[h3d_mat_TextureFlags.Target],null,{ fileName : "Scene.hx", lineNumber : 386, className : "h2d.Scene", methodName : "captureBitmap"}),0,0,this.width,this.height);
		}
		engine.begin();
		engine.setRenderZone(target.x,target.y,target.width,target.height);
		var tex = target.innerTex;
		engine.pushTarget(tex);
		var ow = this.width;
		var oh = this.height;
		var of = this.fixedSize;
		this.setFixedSize(tex.width,tex.height);
		this.render(engine);
		engine.popTarget();
		this.width = ow;
		this.height = oh;
		this.fixedSize = of;
		this.posChanged = true;
		engine.setRenderZone();
		engine.end();
		return new h2d_Bitmap(target);
	}
	,__class__: h2d_Scene
});
var h2d_Align = $hxClasses["h2d.Align"] = { __ename__ : ["h2d","Align"], __constructs__ : ["Left","Right","Center"] };
h2d_Align.Left = ["Left",0];
h2d_Align.Left.toString = $estr;
h2d_Align.Left.__enum__ = h2d_Align;
h2d_Align.Right = ["Right",1];
h2d_Align.Right.toString = $estr;
h2d_Align.Right.__enum__ = h2d_Align;
h2d_Align.Center = ["Center",2];
h2d_Align.Center.toString = $estr;
h2d_Align.Center.__enum__ = h2d_Align;
h2d_Align.__empty_constructs__ = [h2d_Align.Left,h2d_Align.Right,h2d_Align.Center];
var h2d_Text = function(font,parent) {
	h2d_Drawable.call(this,parent);
	this.set_font(font);
	this.set_textAlign(h2d_Align.Left);
	this.set_letterSpacing(1);
	this.set_lineSpacing(0);
	this.set_text("");
	this.set_textColor(16777215);
};
$hxClasses["h2d.Text"] = h2d_Text;
h2d_Text.__name__ = ["h2d","Text"];
h2d_Text.__super__ = h2d_Drawable;
h2d_Text.prototype = $extend(h2d_Drawable.prototype,{
	set_font: function(font) {
		if(this.font == font) {
			return font;
		}
		this.font = font;
		if(this.glyphs != null) {
			var _this = this.glyphs;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
		}
		this.glyphs = new h2d_TileGroup(font == null?null:font.tile,this);
		this.glyphs.visible = false;
		this.rebuild();
		return font;
	}
	,set_textAlign: function(a) {
		if(this.textAlign == a) {
			return a;
		}
		this.textAlign = a;
		this.rebuild();
		return a;
	}
	,set_letterSpacing: function(s) {
		if(this.letterSpacing == s) {
			return s;
		}
		this.letterSpacing = s;
		this.rebuild();
		return s;
	}
	,set_lineSpacing: function(s) {
		if(this.lineSpacing == s) {
			return s;
		}
		this.lineSpacing = s;
		this.rebuild();
		return s;
	}
	,onAlloc: function() {
		h2d_Drawable.prototype.onAlloc.call(this);
		this.rebuild();
	}
	,draw: function(ctx) {
		if(this.glyphs == null) {
			this.emitTile(ctx,h2d_Tile.fromColor(16711935,16,16,null,{ fileName : "Text.hx", lineNumber : 90, className : "h2d.Text", methodName : "draw"}));
			return;
		}
		if(this.dropShadow != null) {
			var oldX = this.absX;
			var oldY = this.absY;
			this.absX += this.dropShadow.dx * this.matA + this.dropShadow.dy * this.matC;
			this.absY += this.dropShadow.dx * this.matB + this.dropShadow.dy * this.matD;
			var oldR = this.color.x;
			var oldG = this.color.y;
			var oldB = this.color.z;
			var oldA = this.color.w;
			var _this = this.color;
			var c = this.dropShadow.color;
			_this.x = (c >> 16 & 255) * 0.00392156862745098;
			_this.y = (c >> 8 & 255) * 0.00392156862745098;
			_this.z = (c & 255) * 0.00392156862745098;
			_this.w = (c >>> 24) * 0.00392156862745098;
			this.color.w = this.dropShadow.alpha * oldA;
			this.glyphs.drawWith(ctx,this);
			this.absX = oldX;
			this.absY = oldY;
			var _this1 = this.color;
			_this1.x = oldR;
			_this1.y = oldG;
			_this1.z = oldB;
			_this1.w = oldA;
			this.calcAbsPos();
		}
		this.glyphs.drawWith(ctx,this);
	}
	,set_text: function(t) {
		var t1 = t == null?"null":t;
		if(t1 == this.text) {
			return t1;
		}
		this.text = t1;
		this.rebuild();
		return t1;
	}
	,rebuild: function() {
		this.calcDone = false;
		if(this.allocated && this.text != null && this.font != null) {
			this.initGlyphs(this.text);
		}
	}
	,calcTextWidth: function(text) {
		if(this.calcDone) {
			var ow = this.calcWidth;
			var oh = this.calcHeight;
			var osh = this.calcSizeHeight;
			var oy = this.calcYMin;
			this.initGlyphs(text,false);
			var w = this.calcWidth;
			this.calcWidth = ow;
			this.calcHeight = oh;
			this.calcSizeHeight = osh;
			this.calcYMin = oy;
			return w;
		} else {
			this.initGlyphs(text,false);
			this.calcDone = false;
			return this.calcWidth;
		}
	}
	,splitText: function(text,leftMargin) {
		if(leftMargin == null) {
			leftMargin = 0;
		}
		if(this.maxWidth == null) {
			return text;
		}
		var lines = [];
		var restPos = 0;
		var x = leftMargin;
		var prevChar = -1;
		var _g1 = 0;
		var _g = text.length;
		while(_g1 < _g) {
			var i = _g1++;
			var cc = HxOverrides.cca(text,i);
			var _this = this.font;
			var c = _this.glyphs.h[cc];
			if(c == null) {
				c = _this.charset.resolveChar(cc,_this.glyphs);
				if(c == null) {
					c = _this.defaultChar;
				}
			}
			var e = c;
			var newline = cc == 10;
			var esize = e.width + e.getKerningOffset(prevChar);
			if(this.font.charset.isBreakChar(cc)) {
				if(lines.length == 0 && leftMargin > 0 && x > this.maxWidth) {
					lines.push("");
					x -= leftMargin;
				}
				var size = x + esize + this.letterSpacing;
				var k = i + 1;
				var max = text.length;
				var prevChar1 = prevChar;
				while(size <= this.maxWidth && k < max) {
					var cc1 = HxOverrides.cca(text,k++);
					if(this.font.charset.isSpace(cc1) || cc1 == 10) {
						break;
					}
					var _this1 = this.font;
					var c1 = _this1.glyphs.h[cc1];
					if(c1 == null) {
						c1 = _this1.charset.resolveChar(cc1,_this1.glyphs);
						if(c1 == null) {
							c1 = _this1.defaultChar;
						}
					}
					var e1 = c1;
					size += e1.width + this.letterSpacing + e1.getKerningOffset(prevChar1);
					prevChar1 = cc1;
				}
				if(size > this.maxWidth) {
					newline = true;
					lines.push(HxOverrides.substr(text,restPos,i - restPos));
					restPos = i;
					if(this.font.charset.isSpace(cc)) {
						e = null;
						restPos = i + 1;
					}
				}
			}
			if(e != null) {
				x += esize + this.letterSpacing;
			}
			if(newline) {
				x = 0;
				prevChar = -1;
			} else {
				prevChar = cc;
			}
		}
		if(restPos < text.length) {
			if(lines.length == 0 && leftMargin > 0 && x > this.maxWidth) {
				lines.push("");
			}
			lines.push(HxOverrides.substr(text,restPos,text.length - restPos));
		}
		return lines.join("\n");
	}
	,initGlyphs: function(text,rebuild,handleAlign,lines) {
		if(handleAlign == null) {
			handleAlign = true;
		}
		if(rebuild == null) {
			rebuild = true;
		}
		if(rebuild) {
			this.glyphs.clear();
		}
		var x = 0;
		var y = 0;
		var xMax = 0;
		var prevChar = -1;
		var align = handleAlign?this.textAlign:h2d_Align.Left;
		switch(align[1]) {
		case 1:case 2:
			lines = [];
			this.initGlyphs(text,false,false,lines);
			var max = this.maxWidth == null?0:this.maxWidth | 0;
			var k = align == h2d_Align.Center?1:0;
			var _g1 = 0;
			var _g = lines.length;
			while(_g1 < _g) {
				var i = _g1++;
				lines[i] = max - lines[i] >> k;
			}
			x = lines.shift();
			break;
		default:
		}
		var dl = this.font.lineHeight + this.lineSpacing;
		var calcLines = !rebuild && lines != null;
		var yMin = 0;
		var _g11 = 0;
		var _g2 = text.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var cc = HxOverrides.cca(text,i1);
			var _this = this.font;
			var c = _this.glyphs.h[cc];
			if(c == null) {
				c = _this.charset.resolveChar(cc,_this.glyphs);
				if(c == null) {
					c = _this.defaultChar;
				}
			}
			var e = c;
			var newline = cc == 10;
			var offs = e.getKerningOffset(prevChar);
			var esize = e.width + offs;
			if(this.font.charset.isBreakChar(cc) && this.maxWidth != null) {
				var size = x + esize + this.letterSpacing;
				var k1 = i1 + 1;
				var max1 = text.length;
				var prevChar1 = prevChar;
				while(size <= this.maxWidth && k1 < max1) {
					var cc1 = HxOverrides.cca(text,k1++);
					if(this.font.charset.isSpace(cc1) || cc1 == 10) {
						break;
					}
					var _this1 = this.font;
					var c1 = _this1.glyphs.h[cc1];
					if(c1 == null) {
						c1 = _this1.charset.resolveChar(cc1,_this1.glyphs);
						if(c1 == null) {
							c1 = _this1.defaultChar;
						}
					}
					var e1 = c1;
					size += e1.width + this.letterSpacing + e1.getKerningOffset(prevChar1);
					prevChar1 = cc1;
				}
				if(size > this.maxWidth) {
					newline = true;
					if(this.font.charset.isSpace(cc)) {
						e = null;
					}
				}
			}
			if(e != null) {
				if(rebuild) {
					var _this2 = this.glyphs;
					_this2.content.add(x + offs,y,_this2.curColor.x,_this2.curColor.y,_this2.curColor.z,_this2.curColor.w,e.t);
				}
				if(y == 0 && e.t.dy < yMin) {
					yMin = e.t.dy;
				}
				x += esize + this.letterSpacing;
			}
			if(newline) {
				if(x > xMax) {
					xMax = x;
				}
				if(calcLines) {
					lines.push(x);
				}
				if(rebuild) {
					switch(align[1]) {
					case 0:
						x = 0;
						break;
					case 1:case 2:
						x = lines.shift();
						break;
					}
				} else {
					x = 0;
				}
				y += dl;
				prevChar = -1;
			} else {
				prevChar = cc;
			}
		}
		if(calcLines) {
			lines.push(x);
		}
		this.calcYMin = yMin;
		this.calcWidth = x > xMax?x:xMax;
		this.calcHeight = y > 0 && x == 0?y - this.lineSpacing:y + this.font.lineHeight;
		this.calcSizeHeight = y > 0 && x == 0?y + (this.font.baseLine - dl):y + this.font.baseLine;
		this.calcDone = true;
	}
	,updateSize: function() {
		if(!this.calcDone) {
			this.initGlyphs(this.text,false);
		}
	}
	,get_textHeight: function() {
		if(!this.calcDone) {
			this.initGlyphs(this.text,false);
		}
		return this.calcHeight;
	}
	,get_textWidth: function() {
		if(!this.calcDone) {
			this.initGlyphs(this.text,false);
		}
		return this.calcWidth;
	}
	,set_maxWidth: function(w) {
		if(this.maxWidth == w) {
			return w;
		}
		this.maxWidth = w;
		this.rebuild();
		return w;
	}
	,set_textColor: function(c) {
		if(this.textColor == c) {
			return c;
		}
		this.textColor = c;
		var a = this.color.w;
		var _this = this.color;
		_this.x = (c >> 16 & 255) * 0.00392156862745098;
		_this.y = (c >> 8 & 255) * 0.00392156862745098;
		_this.z = (c & 255) * 0.00392156862745098;
		_this.w = (c >>> 24) * 0.00392156862745098;
		this.color.w = a;
		return c;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(!this.calcDone) {
			this.initGlyphs(this.text,false);
		}
		var y;
		var w;
		var h;
		if(forSize) {
			y = 0;
			if(this.maxWidth != null && this.textAlign != h2d_Align.Left && this.maxWidth > this.calcWidth) {
				w = this.maxWidth;
			} else {
				w = this.calcWidth;
			}
			h = this.calcSizeHeight;
		} else {
			y = this.calcYMin;
			w = this.calcWidth;
			h = this.calcHeight - this.calcYMin;
		}
		this.addBounds(relativeTo,out,0,y,w,h);
	}
	,__class__: h2d_Text
});
var h2d_Tile = function(tex,x,y,w,h,dx,dy) {
	if(dy == null) {
		dy = 0;
	}
	if(dx == null) {
		dx = 0;
	}
	this.innerTex = tex;
	this.x = x;
	this.y = y;
	this.width = w;
	this.height = h;
	this.dx = dx;
	this.dy = dy;
	if(tex != null) {
		this.setTexture(tex);
	}
};
$hxClasses["h2d.Tile"] = h2d_Tile;
h2d_Tile.__name__ = ["h2d","Tile"];
h2d_Tile.fromColor = function(color,width,height,alpha,allocPos) {
	if(alpha == null) {
		alpha = 1.;
	}
	if(height == null) {
		height = 1;
	}
	if(width == null) {
		width = 1;
	}
	var t = new h2d_Tile(h3d_mat_Texture.fromColor(color,alpha,allocPos),0,0,1,1);
	t.width = width;
	t.height = height;
	return t;
};
h2d_Tile.fromBitmap = function(bmp,allocPos) {
	return new h2d_Tile(h3d_mat_Texture.fromBitmap(bmp,allocPos),0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height);
};
h2d_Tile.autoCut = function(bmp,width,height,allocPos) {
	bmp.lock();
	if(height == null) {
		height = width;
	}
	var colorBG = bmp.getPixel(bmp.ctx.canvas.width - 1,bmp.ctx.canvas.height - 1);
	var tl = [];
	var w = 1;
	var h = 1;
	while(w < bmp.ctx.canvas.width) w <<= 1;
	while(h < bmp.ctx.canvas.height) h <<= 1;
	var tex = new h3d_mat_Texture(w,h,null,null,allocPos);
	var _g1 = 0;
	var _g = bmp.ctx.canvas.height / height | 0;
	while(_g1 < _g) {
		var y = _g1++;
		var a = [];
		tl[y] = a;
		var _g3 = 0;
		var _g2 = bmp.ctx.canvas.width / width | 0;
		while(_g3 < _g2) {
			var x = _g3++;
			var sz = h2d_Tile.isEmpty(bmp,x * width,y * height,width,height,colorBG);
			if(sz == null) {
				break;
			}
			a.push(new h2d_Tile(tex,x * width + sz.dx,y * height + sz.dy,sz.w,sz.h,sz.dx,sz.dy));
		}
	}
	bmp.unlock();
	var main = new h2d_Tile(tex,0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height);
	main.upload(bmp);
	return { main : main, tiles : tl};
};
h2d_Tile.fromTexture = function(t) {
	return new h2d_Tile(t,0,0,t.width,t.height);
};
h2d_Tile.fromPixels = function(pixels,allocPos) {
	var pix2 = pixels.makeSquare(true);
	var t = h3d_mat_Texture.fromPixels(pix2,{ fileName : "Tile.hx", lineNumber : 227, className : "h2d.Tile", methodName : "fromPixels"});
	if(pix2 != pixels) {
		pix2.dispose();
	}
	return new h2d_Tile(t,0,0,pixels.width,pixels.height);
};
h2d_Tile.isEmpty = function(b,px,py,width,height,bg) {
	var empty = true;
	var xmin = width;
	var ymin = height;
	var xmax = 0;
	var ymax = 0;
	var _g1 = 0;
	while(_g1 < width) {
		var x = _g1++;
		var _g3 = 0;
		while(_g3 < height) {
			var y = _g3++;
			var color = b.getPixel(x + px,y + py);
			if(color != bg) {
				empty = false;
				if(x < xmin) {
					xmin = x;
				}
				if(y < ymin) {
					ymin = y;
				}
				if(x > xmax) {
					xmax = x;
				}
				if(y > ymax) {
					ymax = y;
				}
			}
			if(color == bg) {
				b.setPixel(x + px,y + py,0);
			}
		}
	}
	if(empty) {
		return null;
	} else {
		return { dx : xmin, dy : ymin, w : xmax - xmin + 1, h : ymax - ymin + 1};
	}
};
h2d_Tile.prototype = {
	getTexture: function() {
		return this.innerTex;
	}
	,isDisposed: function() {
		if(this.innerTex != null) {
			var _this = this.innerTex;
			if(_this.t == null) {
				return _this.realloc == null;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,setTexture: function(tex) {
		this.innerTex = tex;
		if(tex != null) {
			this.u = this.x / tex.width;
			this.v = this.y / tex.height;
			this.u2 = (this.x + this.width) / tex.width;
			this.v2 = (this.y + this.height) / tex.height;
		}
	}
	,switchTexture: function(t) {
		this.setTexture(t.innerTex);
	}
	,sub: function(x,y,w,h,dx,dy) {
		if(dy == null) {
			dy = 0;
		}
		if(dx == null) {
			dx = 0;
		}
		return new h2d_Tile(this.innerTex,this.x + x,this.y + y,w,h,dx,dy);
	}
	,center: function() {
		return this.sub(0,0,this.width,this.height,-(this.width >> 1),-(this.height >> 1));
	}
	,setCenterRatio: function(px,py) {
		if(py == null) {
			py = 0.5;
		}
		if(px == null) {
			px = 0.5;
		}
		this.dx = -(px * this.width | 0);
		this.dy = -(py * this.height | 0);
	}
	,flipX: function() {
		var tmp = this.u;
		this.u = this.u2;
		this.u2 = tmp;
		this.dx = -this.dx - this.width;
	}
	,flipY: function() {
		var tmp = this.v;
		this.v = this.v2;
		this.v2 = tmp;
		this.dy = -this.dy - this.height;
	}
	,setPos: function(x,y) {
		this.x = x;
		this.y = y;
		var tex = this.innerTex;
		if(tex != null) {
			this.u = x / tex.width;
			this.v = y / tex.height;
			this.u2 = (x + this.width) / tex.width;
			this.v2 = (y + this.height) / tex.height;
		}
	}
	,setSize: function(w,h) {
		this.width = w;
		this.height = h;
		var tex = this.innerTex;
		if(tex != null) {
			this.u2 = (this.x + w) / tex.width;
			this.v2 = (this.y + h) / tex.height;
		}
	}
	,scaleToSize: function(w,h) {
		this.width = w;
		this.height = h;
	}
	,scrollDiscrete: function(dx,dy) {
		var tex = this.innerTex;
		this.u += dx / tex.width;
		this.v -= dy / tex.height;
		this.u2 += dx / tex.width;
		this.v2 -= dy / tex.height;
		this.x = this.u * tex.width | 0;
		this.y = this.v * tex.height | 0;
	}
	,dispose: function() {
		if(this.innerTex != null) {
			this.innerTex.dispose();
		}
		this.innerTex = null;
	}
	,clone: function() {
		var t = new h2d_Tile(null,this.x,this.y,this.width,this.height,this.dx,this.dy);
		t.innerTex = this.innerTex;
		t.u = this.u;
		t.u2 = this.u2;
		t.v = this.v;
		t.v2 = this.v2;
		return t;
	}
	,split: function(frames,vertical) {
		if(vertical == null) {
			vertical = false;
		}
		if(frames == null) {
			frames = 0;
		}
		var tl = [];
		if(vertical) {
			if(frames == 0) {
				frames = this.height / this.width | 0;
			}
			var stride = this.height / frames | 0;
			var _g1 = 0;
			var _g = frames;
			while(_g1 < _g) tl.push(this.sub(0,_g1++ * stride,this.width,stride));
		} else {
			if(frames == 0) {
				frames = this.width / this.height | 0;
			}
			var stride1 = this.width / frames | 0;
			var _g11 = 0;
			var _g2 = frames;
			while(_g11 < _g2) tl.push(this.sub(_g11++ * stride1,0,stride1,this.height));
		}
		return tl;
	}
	,grid: function(size,dx,dy) {
		if(dy == null) {
			dy = 0;
		}
		if(dx == null) {
			dx = 0;
		}
		var _g = [];
		var _g2 = 0;
		var _g1 = this.height / size | 0;
		while(_g2 < _g1) {
			var y = _g2++;
			var _g4 = 0;
			var _g3 = this.width / size | 0;
			while(_g4 < _g3) _g.push(this.sub(_g4++ * size,y * size,size,size,dx,dy));
		}
		return _g;
	}
	,toString: function() {
		return "Tile(" + this.x + "," + this.y + "," + this.width + "x" + this.height + (this.dx != 0 || this.dy != 0?"," + this.dx + ":" + this.dy:"") + ")";
	}
	,upload: function(bmp) {
		this.innerTex.uploadBitmap(bmp);
	}
	,__class__: h2d_Tile
};
var h2d__$TileGroup_TileLayerContent = function() {
	this.clear();
};
$hxClasses["h2d._TileGroup.TileLayerContent"] = h2d__$TileGroup_TileLayerContent;
h2d__$TileGroup_TileLayerContent.__name__ = ["h2d","_TileGroup","TileLayerContent"];
h2d__$TileGroup_TileLayerContent.__super__ = h3d_prim_Primitive;
h2d__$TileGroup_TileLayerContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	clear: function() {
		this.tmp = new Array(0);
		if(this.buffer != null) {
			this.buffer.dispose();
		}
		this.buffer = null;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.xMax = -Infinity;
		this.yMax = -Infinity;
	}
	,isEmpty: function() {
		return this.triCount() == 0;
	}
	,triCount: function() {
		if(this.buffer == null) {
			return this.tmp.length >> 4;
		} else {
			return this.buffer.totalVertices() >> 1;
		}
	}
	,addColor: function(x,y,color,t) {
		this.add(x,y,color.x,color.y,color.z,color.w,t);
	}
	,add: function(x,y,r,g,b,a,t) {
		var sx = x + t.dx;
		var sy = y + t.dy;
		this.tmp.push(sx);
		this.tmp.push(sy);
		this.tmp.push(t.u);
		this.tmp.push(t.v);
		this.tmp.push(r);
		this.tmp.push(g);
		this.tmp.push(b);
		this.tmp.push(a);
		this.tmp.push(sx + t.width);
		this.tmp.push(sy);
		this.tmp.push(t.u2);
		this.tmp.push(t.v);
		this.tmp.push(r);
		this.tmp.push(g);
		this.tmp.push(b);
		this.tmp.push(a);
		this.tmp.push(sx);
		this.tmp.push(sy + t.height);
		this.tmp.push(t.u);
		this.tmp.push(t.v2);
		this.tmp.push(r);
		this.tmp.push(g);
		this.tmp.push(b);
		this.tmp.push(a);
		this.tmp.push(sx + t.width);
		this.tmp.push(sy + t.height);
		this.tmp.push(t.u2);
		this.tmp.push(t.v2);
		this.tmp.push(r);
		this.tmp.push(g);
		this.tmp.push(b);
		this.tmp.push(a);
		var x1 = x + t.dx;
		var y1 = y + t.dy;
		if(x1 < this.xMin) {
			this.xMin = x1;
		}
		if(y1 < this.yMin) {
			this.yMin = y1;
		}
		x1 += t.width;
		y1 += t.height;
		if(x1 > this.xMax) {
			this.xMax = x1;
		}
		if(y1 > this.yMax) {
			this.yMax = y1;
		}
	}
	,addPoint: function(x,y,color) {
		this.tmp.push(x);
		this.tmp.push(y);
		this.tmp.push(0);
		this.tmp.push(0);
		this.tmp.push((color >> 16 & 255) / 255.);
		this.tmp.push((color >> 8 & 255) / 255.);
		this.tmp.push((color & 255) / 255.);
		this.tmp.push((color >>> 24) / 255.);
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
	}
	,insertColor: function(c) {
		this.tmp.push((c >> 16 & 255) / 255.);
		this.tmp.push((c >> 8 & 255) / 255.);
		this.tmp.push((c & 255) / 255.);
		this.tmp.push((c >>> 24) / 255.);
	}
	,rectColor: function(x,y,w,h,color) {
		this.tmp.push(x);
		this.tmp.push(y);
		this.tmp.push(0);
		this.tmp.push(0);
		this.tmp.push((color >> 16 & 255) / 255.);
		this.tmp.push((color >> 8 & 255) / 255.);
		this.tmp.push((color & 255) / 255.);
		this.tmp.push((color >>> 24) / 255.);
		this.tmp.push(x + w);
		this.tmp.push(y);
		this.tmp.push(1);
		this.tmp.push(0);
		this.tmp.push((color >> 16 & 255) / 255.);
		this.tmp.push((color >> 8 & 255) / 255.);
		this.tmp.push((color & 255) / 255.);
		this.tmp.push((color >>> 24) / 255.);
		this.tmp.push(x);
		this.tmp.push(y + h);
		this.tmp.push(0);
		this.tmp.push(1);
		this.tmp.push((color >> 16 & 255) / 255.);
		this.tmp.push((color >> 8 & 255) / 255.);
		this.tmp.push((color & 255) / 255.);
		this.tmp.push((color >>> 24) / 255.);
		this.tmp.push(x + w);
		this.tmp.push(y + h);
		this.tmp.push(1);
		this.tmp.push(1);
		this.tmp.push((color >> 16 & 255) / 255.);
		this.tmp.push((color >> 8 & 255) / 255.);
		this.tmp.push((color & 255) / 255.);
		this.tmp.push((color >>> 24) / 255.);
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		x += w;
		y += h;
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
	}
	,rectGradient: function(x,y,w,h,ctl,ctr,cbl,cbr) {
		this.tmp.push(x);
		this.tmp.push(y);
		this.tmp.push(0);
		this.tmp.push(0);
		this.tmp.push((ctl >> 16 & 255) / 255.);
		this.tmp.push((ctl >> 8 & 255) / 255.);
		this.tmp.push((ctl & 255) / 255.);
		this.tmp.push((ctl >>> 24) / 255.);
		this.tmp.push(x + w);
		this.tmp.push(y);
		this.tmp.push(1);
		this.tmp.push(0);
		this.tmp.push((ctr >> 16 & 255) / 255.);
		this.tmp.push((ctr >> 8 & 255) / 255.);
		this.tmp.push((ctr & 255) / 255.);
		this.tmp.push((ctr >>> 24) / 255.);
		this.tmp.push(x);
		this.tmp.push(y + h);
		this.tmp.push(0);
		this.tmp.push(1);
		this.tmp.push((cbl >> 16 & 255) / 255.);
		this.tmp.push((cbl >> 8 & 255) / 255.);
		this.tmp.push((cbl & 255) / 255.);
		this.tmp.push((cbl >>> 24) / 255.);
		this.tmp.push(x + w);
		this.tmp.push(y + h);
		this.tmp.push(1);
		this.tmp.push(0);
		this.tmp.push((cbr >> 16 & 255) / 255.);
		this.tmp.push((cbr >> 8 & 255) / 255.);
		this.tmp.push((cbr & 255) / 255.);
		this.tmp.push((cbr >>> 24) / 255.);
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		x += w;
		y += h;
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
	}
	,fillArc: function(x,y,ray,c,start,end) {
		if(end <= start) {
			return;
		}
		var arcLength = end - start;
		var nsegments = Math.ceil(ray * 3.14 * 2 / 4);
		if(nsegments < 4) {
			nsegments = 4;
		}
		var angle = arcLength / nsegments;
		var prevX = -Infinity;
		var prevY = -Infinity;
		var _x = 0.;
		var _y = 0.;
		var i = 0;
		while(i < nsegments) {
			var a = start + i * angle;
			_x = x + Math.cos(a) * ray;
			_y = y + Math.sin(a) * ray;
			if(prevX != -Infinity) {
				this.addPoint(x,y,c);
				this.addPoint(_x,_y,c);
				this.addPoint(prevX,prevY,c);
				this.addPoint(prevX,prevY,c);
			}
			prevX = _x;
			prevY = _y;
			++i;
		}
		_x = x + Math.cos(end) * ray;
		_y = y + Math.sin(end) * ray;
		this.addPoint(x,y,c);
		this.addPoint(_x,_y,c);
		this.addPoint(prevX,prevY,c);
		this.addPoint(prevX,prevY,c);
	}
	,fillCircle: function(x,y,radius,c) {
		var nsegments = Math.ceil(radius * 3.14 * 2 / 2);
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = Math.PI * 2 / nsegments;
		var prevX = -Infinity;
		var prevY = -Infinity;
		var firstX = -Infinity;
		var firstY = -Infinity;
		var curX = 0.;
		var curY = 0.;
		var _g1 = 0;
		var _g = nsegments;
		while(_g1 < _g) {
			var a = _g1++ * angle;
			curX = x + Math.cos(a) * radius;
			curY = y + Math.sin(a) * radius;
			if(prevX != -Infinity) {
				this.addPoint(x,y,c);
				this.addPoint(curX,curY,c);
				this.addPoint(prevX,prevY,c);
				this.addPoint(x,y,c);
			}
			if(firstX == -Infinity) {
				firstX = curX;
				firstY = curY;
			}
			prevX = curX;
			prevY = curY;
		}
		this.addPoint(x,y,c);
		this.addPoint(curX,curY,c);
		this.addPoint(firstX,firstY,c);
		this.addPoint(x,y,c);
	}
	,circle: function(x,y,ray,size,c) {
		if(size > ray) {
			return;
		}
		var nsegments = Math.ceil(ray * 3.14 * 2 / 2);
		if(nsegments < 3) {
			nsegments = 3;
		}
		var ray1 = ray - size;
		var angle = Math.PI * 2 / nsegments;
		var prevX = -Infinity;
		var prevY = -Infinity;
		var prevX1 = -Infinity;
		var prevY1 = -Infinity;
		var _g1 = 0;
		var _g = nsegments;
		while(_g1 < _g) {
			var a = _g1++ * angle;
			var _x = x + Math.cos(a) * ray;
			var _y = y + Math.sin(a) * ray;
			var _x1 = x + Math.cos(a) * ray1;
			var _y1 = y + Math.sin(a) * ray1;
			if(prevX != -Infinity) {
				this.addPoint(_x,_y,c);
				this.addPoint(prevX,prevY,c);
				this.addPoint(_x1,_y1,c);
				this.addPoint(prevX1,prevY1,c);
			}
			prevX = _x;
			prevY = _y;
			prevX1 = _x1;
			prevY1 = _y1;
		}
	}
	,arc: function(x,y,ray,size,start,end,c) {
		if(size > ray) {
			return;
		}
		if(end <= start) {
			return;
		}
		var arcLength = end - start;
		var nsegments = Math.ceil(ray * 3.14 * 2 / 4);
		if(nsegments < 3) {
			nsegments = 3;
		}
		var ray1 = ray - size;
		var angle = arcLength / nsegments;
		var prevX = -Infinity;
		var prevY = -Infinity;
		var prevX1 = -Infinity;
		var prevY1 = -Infinity;
		var _x = 0.;
		var _y = 0.;
		var _x1 = 0.;
		var _y1 = 0.;
		var _g1 = 0;
		var _g = nsegments;
		while(_g1 < _g) {
			var a = start + _g1++ * angle;
			_x = x + Math.cos(a) * ray;
			_y = y + Math.sin(a) * ray;
			_x1 = x + Math.cos(a) * ray1;
			_y1 = y + Math.sin(a) * ray1;
			if(prevX != -Infinity) {
				this.addPoint(_x,_y,c);
				this.addPoint(prevX,prevY,c);
				this.addPoint(_x1,_y1,c);
				this.addPoint(prevX1,prevY1,c);
			}
			prevX = _x;
			prevY = _y;
			prevX1 = _x1;
			prevY1 = _y1;
		}
		_x = x + Math.cos(end) * ray;
		_y = y + Math.sin(end) * ray;
		_x1 = x + Math.cos(end) * ray1;
		_y1 = y + Math.sin(end) * ray1;
		this.addPoint(_x,_y,c);
		this.addPoint(prevX,prevY,c);
		this.addPoint(_x1,_y1,c);
		this.addPoint(prevX1,prevY1,c);
	}
	,alloc: function(engine) {
		if(this.tmp == null) {
			this.clear();
		}
		this.buffer = h3d_Buffer.ofFloats(this.tmp,8,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat],{ fileName : "TileGroup.hx", lineNumber : 302, className : "h2d._TileGroup.TileLayerContent", methodName : "alloc"});
	}
	,flush: function() {
		if(this.buffer == null || this.buffer.isDisposed()) {
			if(h3d_Engine.CURRENT == null) {
				throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
			}
			this.alloc(h3d_Engine.CURRENT);
		}
	}
	,doRender: function(engine,min,len) {
		if(this.buffer == null || this.buffer.isDisposed()) {
			if(h3d_Engine.CURRENT == null) {
				throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
			}
			this.alloc(h3d_Engine.CURRENT);
		}
		engine.renderQuadBuffer(this.buffer,min,len);
	}
	,__class__: h2d__$TileGroup_TileLayerContent
});
var h2d_col_IBounds = function() {
	this.xMin = 2147483647;
	this.yMin = 2147483647;
	this.xMax = -2147483648;
	this.yMax = -2147483648;
};
$hxClasses["h2d.col.IBounds"] = h2d_col_IBounds;
h2d_col_IBounds.__name__ = ["h2d","col","IBounds"];
h2d_col_IBounds.fromValues = function(x0,y0,width,height) {
	var b = new h2d_col_IBounds();
	b.xMin = x0;
	b.yMin = y0;
	b.xMax = x0 + width;
	b.yMax = y0 + height;
	return b;
};
h2d_col_IBounds.fromPoints = function(min,max) {
	var b = new h2d_col_IBounds();
	b.xMin = min.x;
	b.yMin = min.y;
	b.xMax = max.x;
	b.yMax = max.y;
	return b;
};
h2d_col_IBounds.prototype = {
	toBounds: function(scale) {
		if(scale == null) {
			scale = 1.;
		}
		var x0 = this.xMin * scale;
		var y0 = this.yMin * scale;
		var width = (this.xMax - this.xMin) * scale;
		var height = (this.yMax - this.yMin) * scale;
		var b = new h2d_col_Bounds();
		b.xMin = x0;
		b.yMin = y0;
		b.xMax = x0 + width;
		b.yMax = y0 + height;
		return b;
	}
	,intersects: function(b) {
		return !(this.xMin > b.xMax || this.yMin > b.yMax || this.xMax < b.xMin || this.yMax < b.yMin);
	}
	,contains: function(p) {
		if(p.x >= this.xMin && p.x < this.xMax && p.y >= this.yMin) {
			return p.y < this.yMax;
		} else {
			return false;
		}
	}
	,addBounds: function(b) {
		if(b.xMin < this.xMin) {
			this.xMin = b.xMin;
		}
		if(b.xMax > this.xMax) {
			this.xMax = b.xMax;
		}
		if(b.yMin < this.yMin) {
			this.yMin = b.yMin;
		}
		if(b.yMax > this.yMax) {
			this.yMax = b.yMax;
		}
	}
	,addPoint: function(p) {
		if(p.x < this.xMin) {
			this.xMin = p.x;
		}
		if(p.x > this.xMax) {
			this.xMax = p.x;
		}
		if(p.y < this.yMin) {
			this.yMin = p.y;
		}
		if(p.y > this.yMax) {
			this.yMax = p.y;
		}
	}
	,addPos: function(x,y) {
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
	}
	,set: function(x,y,width,height) {
		this.xMin = x;
		this.yMin = y;
		this.xMax = x + width;
		this.yMax = y + height;
	}
	,setMin: function(p) {
		this.xMin = p.x;
		this.yMin = p.y;
	}
	,setMax: function(p) {
		this.xMax = p.x;
		this.yMax = p.y;
	}
	,doIntersect: function(b) {
		var a = this.xMin;
		var b1 = b.xMin;
		this.xMin = a < b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		this.yMin = a1 < b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		this.xMax = a2 > b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		this.yMax = a3 > b4?b4:a3;
	}
	,doUnion: function(b) {
		var a = this.xMin;
		var b1 = b.xMin;
		this.xMin = a > b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		this.yMin = a1 > b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		this.xMax = a2 < b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		this.yMax = a3 < b4?b4:a3;
	}
	,intersection: function(b) {
		var i = new h2d_col_Bounds();
		var a = this.xMin;
		var b1 = b.xMin;
		i.xMin = a < b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		i.yMin = a1 < b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		i.xMax = a2 > b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		i.yMax = a3 > b4?b4:a3;
		if(i.xMax < i.xMin) {
			i.xMax = i.xMin;
		}
		if(i.yMax < i.yMin) {
			i.yMax = i.yMin;
		}
		return i;
	}
	,union: function(b) {
		var i = new h2d_col_Bounds();
		var a = this.xMin;
		var b1 = b.xMin;
		i.xMin = a > b1?b1:a;
		var a1 = this.yMin;
		var b2 = b.yMin;
		i.yMin = a1 > b2?b2:a1;
		var a2 = this.xMax;
		var b3 = b.xMax;
		i.xMax = a2 < b3?b3:a2;
		var a3 = this.yMax;
		var b4 = b.yMax;
		i.yMax = a3 < b4?b4:a3;
		return i;
	}
	,load: function(b) {
		this.xMin = b.xMin;
		this.yMin = b.yMin;
		this.xMax = b.xMax;
		this.yMax = b.yMax;
	}
	,offset: function(dx,dy) {
		this.xMin += dx;
		this.xMax += dx;
		this.yMin += dy;
		this.yMax += dy;
	}
	,getMin: function() {
		return new h2d_col_IPoint(this.xMin,this.yMin);
	}
	,getCenter: function() {
		return new h2d_col_IPoint(this.xMin + this.xMax >> 1,this.yMin + this.yMax >> 1);
	}
	,getSize: function() {
		return new h2d_col_IPoint(this.xMax - this.xMin,this.yMax - this.yMin);
	}
	,getMax: function() {
		return new h2d_col_IPoint(this.xMax,this.yMax);
	}
	,isEmpty: function() {
		if(this.xMax > this.xMin) {
			return this.yMax <= this.yMin;
		} else {
			return true;
		}
	}
	,empty: function() {
		this.xMin = 2147483647;
		this.yMin = 2147483647;
		this.xMax = -2147483648;
		this.yMax = -2147483648;
	}
	,all: function() {
		this.xMin = -2147483648;
		this.yMin = -2147483648;
		this.xMax = 2147483647;
		this.yMax = 2147483647;
	}
	,clone: function() {
		var b = new h2d_col_Bounds();
		b.xMin = this.xMin;
		b.yMin = this.yMin;
		b.xMax = this.xMax;
		b.yMax = this.yMax;
		return b;
	}
	,get_x: function() {
		return this.xMin;
	}
	,get_y: function() {
		return this.yMin;
	}
	,set_x: function(x) {
		this.xMax += x - this.xMin;
		return this.xMin = x;
	}
	,set_y: function(y) {
		this.yMax += y - this.yMin;
		return this.yMin = y;
	}
	,get_width: function() {
		return this.xMax - this.xMin;
	}
	,get_height: function() {
		return this.yMax - this.yMin;
	}
	,set_width: function(w) {
		this.xMax = this.xMin + w;
		return w;
	}
	,set_height: function(h) {
		this.yMax = this.yMin + h;
		return h;
	}
	,toString: function() {
		return "{" + Std.string(new h2d_col_IPoint(this.xMin,this.yMin)) + "," + Std.string(new h2d_col_IPoint(this.xMax - this.xMin,this.yMax - this.yMin)) + "}";
	}
	,__class__: h2d_col_IBounds
};
var h2d_col_IPoint = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["h2d.col.IPoint"] = h2d_col_IPoint;
h2d_col_IPoint.__name__ = ["h2d","col","IPoint"];
h2d_col_IPoint.prototype = {
	toPoint: function(scale) {
		if(scale == null) {
			scale = 1.;
		}
		return new h2d_col_Point(this.x * scale,this.y * scale);
	}
	,distanceSq: function(p) {
		var dx = this.x - p.x;
		var dy = this.y - p.y;
		return dx * dx + dy * dy;
	}
	,distance: function(p) {
		var dx = this.x - p.x;
		var dy = this.y - p.y;
		return Math.sqrt(dx * dx + dy * dy);
	}
	,toString: function() {
		return "{" + this.x + "," + this.y + "}";
	}
	,sub: function(p) {
		return new h2d_col_Point(this.x - p.x,this.y - p.y);
	}
	,add: function(p) {
		return new h2d_col_Point(this.x + p.x,this.y + p.y);
	}
	,dot: function(p) {
		return this.x * p.x + this.y * p.y;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,clone: function() {
		return new h2d_col_IPoint(this.x,this.y);
	}
	,__class__: h2d_col_IPoint
};
var h2d_col_Matrix = function() {
	this.a = 1;
	this.b = 0;
	this.c = 0;
	this.d = 1;
	this.x = 0;
	this.y = 0;
};
$hxClasses["h2d.col.Matrix"] = h2d_col_Matrix;
h2d_col_Matrix.__name__ = ["h2d","col","Matrix"];
h2d_col_Matrix.prototype = {
	identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.x = 0;
		this.y = 0;
	}
	,invert: function() {
		this.inverse(this);
	}
	,getDeterminant: function() {
		return this.a * this.d - this.b * this.c;
	}
	,inverse: function(m) {
		var a = m.a;
		var b = m.b;
		var c = m.c;
		var d = m.d;
		var x = m.x;
		var y = m.y;
		var invDet = 1 / (this.a * this.d - this.b * this.c);
		this.a = d * invDet;
		this.b = -b * invDet;
		this.c = -c * invDet;
		this.d = a * invDet;
		this.x = (-x * d + c * y) * invDet;
		this.y = (x * b - a * y) * invDet;
	}
	,transform: function(pt) {
		return new h2d_col_Point(pt.x * this.a + pt.y * this.c + this.x,pt.x * this.b + pt.y * this.d + this.y);
	}
	,translate: function(x,y) {
		this.x += x;
		this.y += y;
	}
	,prependTranslate: function(x,y) {
		this.x += this.a * x + this.c * y;
		this.y += this.b * x + this.d * y;
	}
	,multiply: function(a,b) {
		var aa = a.a;
		var ab = a.b;
		var ac = a.c;
		var ad = a.d;
		var ax = a.x;
		var ay = a.y;
		var ba = b.a;
		var bb = b.b;
		var bc = b.c;
		var bd = b.d;
		var bx = b.x;
		var by = b.y;
		this.a = aa * ba + ab * bc;
		this.b = aa * bb + ab * bd;
		this.c = ac * ba + ad * bc;
		this.d = ac * bb + ad * bd;
		this.x = ax * ba + ay * bc + bx;
		this.y = ax * bb + ay * bd + by;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.c *= sx;
		this.x *= sx;
		this.b *= sy;
		this.d *= sy;
		this.y *= sy;
	}
	,toString: function() {
		return "MAT=[\n" + "  [ " + hxd_Math.fmt(this.a) + ", " + hxd_Math.fmt(this.b) + " ]\n" + "  [ " + hxd_Math.fmt(this.c) + ", " + hxd_Math.fmt(this.d) + " ]\n" + "  [ " + hxd_Math.fmt(this.x) + ", " + hxd_Math.fmt(this.y) + " ]\n" + "]";
	}
	,__class__: h2d_col_Matrix
};
var h2d_col_Point = function(x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["h2d.col.Point"] = h2d_col_Point;
h2d_col_Point.__name__ = ["h2d","col","Point"];
h2d_col_Point.prototype = {
	toIPoint: function(scale) {
		if(scale == null) {
			scale = 1.;
		}
		return new h2d_col_IPoint(Math.floor(this.x * scale),Math.floor(this.y * scale));
	}
	,distanceSq: function(p) {
		var dx = this.x - p.x;
		var dy = this.y - p.y;
		return dx * dx + dy * dy;
	}
	,distance: function(p) {
		var dx = this.x - p.x;
		var dy = this.y - p.y;
		return Math.sqrt(dx * dx + dy * dy);
	}
	,toString: function() {
		return "{" + hxd_Math.fmt(this.x) + "," + hxd_Math.fmt(this.y) + "}";
	}
	,sub: function(p) {
		return new h2d_col_Point(this.x - p.x,this.y - p.y);
	}
	,add: function(p) {
		return new h2d_col_Point(this.x + p.x,this.y + p.y);
	}
	,dot: function(p) {
		return this.x * p.x + this.y * p.y;
	}
	,rotate: function(angle) {
		var c = Math.cos(angle);
		var s = Math.sin(angle);
		var x2 = this.x * c - this.y * s;
		var y2 = this.x * s + this.y * c;
		this.x = x2;
		this.y = y2;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,normalize: function() {
		var k = this.x * this.x + this.y * this.y;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		this.x *= k;
		this.y *= k;
	}
	,normalizeFast: function() {
		var k = this.x * this.x + this.y * this.y;
		k = 1. / Math.sqrt(k);
		this.x *= k;
		this.y *= k;
	}
	,set: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,scale: function(f) {
		this.x *= f;
		this.y *= f;
	}
	,clone: function() {
		return new h2d_col_Point(this.x,this.y);
	}
	,__class__: h2d_col_Point
};
var h2d_col_Ray = function(p1,p2) {
	this.x = p1.x;
	this.y = p1.y;
	this.dx = p2.x - this.x;
	this.dy = p2.y - this.y;
};
$hxClasses["h2d.col.Ray"] = h2d_col_Ray;
h2d_col_Ray.__name__ = ["h2d","col","Ray"];
h2d_col_Ray.prototype = {
	setPoints: function(p1,p2) {
		this.x = p1.x;
		this.y = p1.y;
		this.dx = p2.x - this.x;
		this.dy = p2.y - this.y;
	}
	,side: function(p) {
		return this.dx * (p.y - this.y) - this.dy * (p.x - this.x);
	}
	,getPos: function() {
		return new h2d_col_Point(this.x,this.y);
	}
	,getDir: function() {
		return new h2d_col_Point(this.dx,this.dy);
	}
	,__class__: h2d_col_Ray
};
var h2d_filter_Filter = function() {
	this.filter = false;
	this.boundsExtend = 0.;
	this.autoBounds = true;
};
$hxClasses["h2d.filter.Filter"] = h2d_filter_Filter;
h2d_filter_Filter.__name__ = ["h2d","filter","Filter"];
h2d_filter_Filter.prototype = {
	sync: function(ctx,s) {
	}
	,getBounds: function(s,bounds) {
		s.getBounds(s,bounds);
		bounds.xMin -= this.boundsExtend;
		bounds.yMin -= this.boundsExtend;
		bounds.xMax += this.boundsExtend;
		bounds.yMax += this.boundsExtend;
	}
	,draw: function(ctx,input) {
		return input;
	}
	,__class__: h2d_filter_Filter
};
var h3d_BufferFlag = $hxClasses["h3d.BufferFlag"] = { __ename__ : ["h3d","BufferFlag"], __constructs__ : ["Dynamic","Triangles","Quads","Managed","RawFormat","NoAlloc"] };
h3d_BufferFlag.Dynamic = ["Dynamic",0];
h3d_BufferFlag.Dynamic.toString = $estr;
h3d_BufferFlag.Dynamic.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.Triangles = ["Triangles",1];
h3d_BufferFlag.Triangles.toString = $estr;
h3d_BufferFlag.Triangles.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.Quads = ["Quads",2];
h3d_BufferFlag.Quads.toString = $estr;
h3d_BufferFlag.Quads.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.Managed = ["Managed",3];
h3d_BufferFlag.Managed.toString = $estr;
h3d_BufferFlag.Managed.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.RawFormat = ["RawFormat",4];
h3d_BufferFlag.RawFormat.toString = $estr;
h3d_BufferFlag.RawFormat.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.NoAlloc = ["NoAlloc",5];
h3d_BufferFlag.NoAlloc.toString = $estr;
h3d_BufferFlag.NoAlloc.__enum__ = h3d_BufferFlag;
h3d_BufferFlag.__empty_constructs__ = [h3d_BufferFlag.Dynamic,h3d_BufferFlag.Triangles,h3d_BufferFlag.Quads,h3d_BufferFlag.Managed,h3d_BufferFlag.RawFormat,h3d_BufferFlag.NoAlloc];
var h3d_Buffer = function(vertices,stride,flags,allocPos) {
	this.id = h3d_Buffer.GUID++;
	this.vertices = vertices;
	this.flags = 0;
	this.allocPos = allocPos;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f[1];
		}
	}
	if((this.flags & 4) != 0 || (this.flags & 2) != 0) {
		this.flags |= 8;
	}
	if((this.flags & 32) == 0) {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		h3d_Engine.CURRENT.mem.allocBuffer(this,stride);
	}
};
$hxClasses["h3d.Buffer"] = h3d_Buffer;
h3d_Buffer.__name__ = ["h3d","Buffer"];
h3d_Buffer.ofFloats = function(v,stride,flags,allocPos) {
	var nvert = v.length / stride | 0;
	var b = new h3d_Buffer(nvert,stride,flags,allocPos);
	b.uploadVector(v,0,nvert);
	return b;
};
h3d_Buffer.ofSubFloats = function(v,stride,vertices,flags,allocPos) {
	var b = new h3d_Buffer(vertices,stride,flags,allocPos);
	b.uploadVector(v,0,vertices);
	return b;
};
h3d_Buffer.prototype = {
	isDisposed: function() {
		if(this.buffer != null) {
			return this.buffer.vbuf == null;
		} else {
			return true;
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			this.buffer.freeBuffer(this);
			this.buffer = null;
			if(this.next != null) {
				this.next.dispose();
			}
		}
	}
	,totalVertices: function() {
		var count = 0;
		var b = this;
		while(b != null) {
			count += b.vertices;
			b = b.next;
		}
		return count;
	}
	,uploadVector: function(buf,bufPos,vertices,startVertice) {
		if(startVertice == null) {
			startVertice = 0;
		}
		var cur = this;
		while(cur != null && startVertice >= cur.vertices) {
			startVertice -= cur.vertices;
			cur = cur.next;
		}
		while(vertices > 0) {
			if(cur == null) {
				throw new js__$Boot_HaxeError("Too many vertices");
			}
			var count = vertices + startVertice > cur.vertices?cur.vertices - startVertice:vertices;
			cur.buffer.uploadVertexBuffer(cur.position + startVertice,count,buf,bufPos);
			startVertice = 0;
			bufPos += count * this.buffer.stride;
			vertices -= count;
			cur = cur.next;
		}
	}
	,uploadBytes: function(data,dataPos,vertices) {
		var cur = this;
		while(vertices > 0) {
			if(cur == null) {
				throw new js__$Boot_HaxeError("Too many vertices");
			}
			var count = vertices > cur.vertices?cur.vertices:vertices;
			cur.buffer.uploadVertexBytes(cur.position,count,data,dataPos);
			dataPos += count * this.buffer.stride * 4;
			vertices -= count;
			cur = cur.next;
		}
	}
	,__class__: h3d_Buffer
};
var h3d_BufferOffset = function(buffer,offset) {
	this.id = h3d_BufferOffset.UID++;
	this.buffer = buffer;
	this.offset = offset;
};
$hxClasses["h3d.BufferOffset"] = h3d_BufferOffset;
h3d_BufferOffset.__name__ = ["h3d","BufferOffset"];
h3d_BufferOffset.prototype = {
	dispose: function() {
		if(this.buffer != null) {
			this.buffer.dispose();
			this.buffer = null;
		}
		this.next = null;
	}
	,__class__: h3d_BufferOffset
};
var h3d_Camera = function(fovY,zoom,screenRatio,zNear,zFar,rightHanded) {
	if(rightHanded == null) {
		rightHanded = false;
	}
	if(zFar == null) {
		zFar = 4000.;
	}
	if(zNear == null) {
		zNear = 0.02;
	}
	if(screenRatio == null) {
		screenRatio = 1.333333;
	}
	if(zoom == null) {
		zoom = 1.;
	}
	if(fovY == null) {
		fovY = 25.;
	}
	this.viewY = 0.;
	this.viewX = 0.;
	this.fovY = fovY;
	this.zoom = zoom;
	this.screenRatio = screenRatio;
	this.zNear = zNear;
	this.zFar = zFar;
	this.rightHanded = rightHanded;
	this.pos = new h3d_Vector(2,3,4);
	this.up = new h3d_Vector(0,0,1);
	this.target = new h3d_Vector(0,0,0);
	this.m = new h3d_Matrix();
	this.mcam = new h3d_Matrix();
	this.mproj = new h3d_Matrix();
	this.update();
};
$hxClasses["h3d.Camera"] = h3d_Camera;
h3d_Camera.__name__ = ["h3d","Camera"];
h3d_Camera.prototype = {
	setFovX: function(fovX,withRatio) {
		var degToRad = Math.PI / 180;
		this.fovY = 2 * Math.atan(Math.tan(fovX * 0.5 * degToRad) / withRatio) / degToRad;
	}
	,getFovX: function() {
		var degToRad = Math.PI / 180;
		return Math.atan(Math.tan(this.fovY * 0.5 * degToRad) * this.screenRatio) * 2 / degToRad;
	}
	,clone: function() {
		var c = new h3d_Camera(this.fovY,this.zoom,this.screenRatio,this.zNear,this.zFar,this.rightHanded);
		var _this = this.pos;
		c.pos = new h3d_Vector(_this.x,_this.y,_this.z,_this.w);
		var _this1 = this.up;
		c.up = new h3d_Vector(_this1.x,_this1.y,_this1.z,_this1.w);
		var _this2 = this.target;
		c.target = new h3d_Vector(_this2.x,_this2.y,_this2.z,_this2.w);
		c.update();
		return c;
	}
	,getInverseViewProj: function() {
		if(this.minv == null) {
			this.minv = new h3d_Matrix();
		}
		if(this.needInv) {
			this.minv.inverse(this.m);
			this.needInv = false;
		}
		return this.minv;
	}
	,getInverseView: function() {
		if(this.miview == null) {
			this.miview = new h3d_Matrix();
			this.miview._44 = 0;
		}
		if(this.miview._44 == 0) {
			this.miview.inverse(this.mcam);
		}
		return this.miview;
	}
	,unproject: function(screenX,screenY,camZ) {
		var p = new h3d_Vector(screenX,screenY,camZ);
		var m = this.getInverseViewProj();
		var px = p.x * m._11 + p.y * m._21 + p.z * m._31 + p.w * m._41;
		var py = p.x * m._12 + p.y * m._22 + p.z * m._32 + p.w * m._42;
		var pz = p.x * m._13 + p.y * m._23 + p.z * m._33 + p.w * m._43;
		var iw = 1 / (p.x * m._14 + p.y * m._24 + p.z * m._34 + p.w * m._44);
		p.x = px * iw;
		p.y = py * iw;
		p.z = pz * iw;
		p.w = 1;
		return p;
	}
	,rayFromScreen: function(pixelX,pixelY) {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var engine = h3d_Engine.CURRENT;
		var rx = (pixelX / engine.width - 0.5) * 2;
		var ry = (0.5 - pixelY / engine.height) * 2;
		var _this = this.unproject(rx,ry,0);
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var _this1 = this.unproject(rx,ry,1);
		var x1 = _this1.x;
		var y1 = _this1.y;
		var z1 = _this1.z;
		var r = new h3d_col_Ray();
		r.px = x;
		r.py = y;
		r.pz = z;
		r.lx = x1 - x;
		r.ly = y1 - y;
		r.lz = z1 - z;
		r.normalize();
		return r;
	}
	,update: function() {
		if(this.follow != null) {
			var _this = this.pos;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.;
			var _this1 = this.target;
			_this1.x = 0;
			_this1.y = 0;
			_this1.z = 0;
			_this1.w = 1.;
			this.follow.pos.localToGlobal(this.pos);
			this.follow.target.localToGlobal(this.target);
			if(this.follow.pos.name != null) {
				var p = this.follow.pos;
				while(p != null) {
					if(p.currentAnimation != null) {
						var v = p.currentAnimation.getPropValue(this.follow.pos.name,"FOVY");
						if(v != null) {
							this.fovY = v;
							break;
						}
					}
					p = p.parent;
				}
			}
		}
		this.makeCameraMatrix(this.mcam);
		this.makeFrustumMatrix(this.mproj);
		this.m.multiply(this.mcam,this.mproj);
		this.needInv = true;
		if(this.miview != null) {
			this.miview._44 = 0;
		}
	}
	,lostUp: function() {
		var _this = this.pos;
		var p2 = new h3d_Vector(_this.x,_this.y,_this.z,_this.w);
		p2.normalize();
		var v = this.up;
		return Math.abs(p2.x * v.x + p2.y * v.y + p2.z * v.z) > 0.999;
	}
	,movePosAxis: function(dx,dy,dz) {
		if(dz == null) {
			dz = 0.;
		}
		var p_z;
		var p_y;
		var p_x = dx;
		p_y = dy;
		p_z = dz;
		var m = this.mcam;
		var px = dx * m._11 + dy * m._21 + dz * m._31 + m._41;
		var py = dx * m._12 + dy * m._22 + dz * m._32 + m._42;
		var pz = dx * m._13 + dy * m._23 + dz * m._33 + m._43;
		var iw = 1 / (dx * m._14 + dy * m._24 + dz * m._34 + m._44);
		p_x = px * iw;
		p_y = py * iw;
		p_z = pz * iw;
		this.pos.x += p_x;
		this.pos.y += p_y;
		this.pos.z += p_z;
	}
	,moveTargetAxis: function(dx,dy,dz) {
		if(dz == null) {
			dz = 0.;
		}
		var p_z;
		var p_y;
		var p_x = dx;
		p_y = dy;
		p_z = dz;
		var m = this.mcam;
		var px = dx * m._11 + dy * m._21 + dz * m._31 + m._41;
		var py = dx * m._12 + dy * m._22 + dz * m._32 + m._42;
		var pz = dx * m._13 + dy * m._23 + dz * m._33 + m._43;
		var iw = 1 / (dx * m._14 + dy * m._24 + dz * m._34 + m._44);
		p_x = px * iw;
		p_y = py * iw;
		p_z = pz * iw;
		this.target.x += p_x;
		this.target.y += p_y;
		this.target.z += p_z;
	}
	,forward: function(speed) {
		if(speed == null) {
			speed = 1.;
		}
		var c = 1 - 0.025 * speed;
		var _this = this.pos;
		var x = this.target.x + (this.pos.x - this.target.x) * c;
		var y = this.target.y + (this.pos.y - this.target.y) * c;
		var z = this.target.z + (this.pos.z - this.target.z) * c;
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,backward: function(speed) {
		if(speed == null) {
			speed = 1.;
		}
		var c = 1 + 0.025 * speed;
		var _this = this.pos;
		var x = this.target.x + (this.pos.x - this.target.x) * c;
		var y = this.target.y + (this.pos.y - this.target.y) * c;
		var z = this.target.z + (this.pos.z - this.target.z) * c;
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,makeCameraMatrix: function(m) {
		var az;
		if(this.rightHanded) {
			var _this = this.pos;
			var v = this.target;
			az = new h3d_Vector(_this.x - v.x,_this.y - v.y,_this.z - v.z,_this.w - v.w);
		} else {
			var _this1 = this.target;
			var v1 = this.pos;
			az = new h3d_Vector(_this1.x - v1.x,_this1.y - v1.y,_this1.z - v1.z,_this1.w - v1.w);
		}
		az.normalize();
		var _this2 = this.up;
		var ax = new h3d_Vector(_this2.y * az.z - _this2.z * az.y,_this2.z * az.x - _this2.x * az.z,_this2.x * az.y - _this2.y * az.x,1);
		ax.normalize();
		if(Math.sqrt(ax.x * ax.x + ax.y * ax.y + ax.z * ax.z) == 0) {
			ax.x = az.y;
			ax.y = az.z;
			ax.z = az.x;
		}
		var x = az.y * ax.z - az.z * ax.y;
		var y = az.z * ax.x - az.x * ax.z;
		var z = az.x * ax.y - az.y * ax.x;
		m._11 = ax.x;
		m._12 = x;
		m._13 = az.x;
		m._14 = 0;
		m._21 = ax.y;
		m._22 = y;
		m._23 = az.y;
		m._24 = 0;
		m._31 = ax.z;
		m._32 = z;
		m._33 = az.z;
		m._34 = 0;
		var v2 = this.pos;
		m._41 = -(ax.x * v2.x + ax.y * v2.y + ax.z * v2.z);
		var v3 = this.pos;
		m._42 = -(x * v3.x + y * v3.y + z * v3.z);
		var v4 = this.pos;
		m._43 = -(az.x * v4.x + az.y * v4.y + az.z * v4.z);
		m._44 = 1;
	}
	,makeFrustumMatrix: function(m) {
		m.zero();
		var bounds = this.orthoBounds;
		if(bounds != null) {
			var w = 1 / (bounds.xMax - bounds.xMin);
			var h = 1 / (bounds.yMax - bounds.yMin);
			var d = 1 / (bounds.zMax - bounds.zMin);
			m._11 = 2 * w;
			m._22 = 2 * h;
			m._33 = d;
			m._41 = -(bounds.xMin + bounds.xMax) * w;
			m._42 = -(bounds.yMin + bounds.yMax) * h;
			m._43 = -bounds.zMin * d;
			m._44 = 1;
		} else {
			var halfFovX = Math.atan(Math.tan(this.fovY * 0.5 * (Math.PI / 180)) * this.screenRatio);
			var scale = this.zoom / Math.tan(halfFovX);
			m._11 = scale;
			m._22 = scale * this.screenRatio;
			m._33 = this.zFar / (this.zFar - this.zNear);
			m._34 = 1;
			m._43 = -(this.zNear * this.zFar) / (this.zFar - this.zNear);
		}
		m._11 += this.viewX * m._14;
		m._21 += this.viewX * m._24;
		m._31 += this.viewX * m._34;
		m._41 += this.viewX * m._44;
		m._12 += this.viewY * m._14;
		m._22 += this.viewY * m._24;
		m._32 += this.viewY * m._34;
		m._42 += this.viewY * m._44;
		if(this.rightHanded) {
			m._33 *= -1;
			m._34 *= -1;
		}
	}
	,project: function(x,y,z,screenWidth,screenHeight,snapToPixel) {
		if(snapToPixel == null) {
			snapToPixel = true;
		}
		var p = new h3d_Vector(x,y,z);
		var m = this.m;
		var px = p.x * m._11 + p.y * m._21 + p.z * m._31 + p.w * m._41;
		var py = p.x * m._12 + p.y * m._22 + p.z * m._32 + p.w * m._42;
		var pz = p.x * m._13 + p.y * m._23 + p.z * m._33 + p.w * m._43;
		var iw = 1 / (p.x * m._14 + p.y * m._24 + p.z * m._34 + p.w * m._44);
		p.x = px * iw;
		p.y = py * iw;
		p.z = pz * iw;
		p.w = 1;
		p.x = (p.x + 1) * 0.5 * screenWidth;
		p.y = (-p.y + 1) * 0.5 * screenHeight;
		if(snapToPixel) {
			p.x = Math.round(p.x);
			p.y = Math.round(p.y);
		}
		return p;
	}
	,__class__: h3d_Camera
};
var h3d__$Engine_TargetTmp = function(t,n) {
	this.t = t;
	this.next = n;
};
$hxClasses["h3d._Engine.TargetTmp"] = h3d__$Engine_TargetTmp;
h3d__$Engine_TargetTmp.__name__ = ["h3d","_Engine","TargetTmp"];
h3d__$Engine_TargetTmp.prototype = {
	__class__: h3d__$Engine_TargetTmp
};
var h3d_Engine = function(hardware,aa) {
	if(aa == null) {
		aa = 0;
	}
	if(hardware == null) {
		hardware = true;
	}
	this.tmpVector = new h3d_Vector();
	this.frameCount = 0;
	this.backgroundColor = -16777216;
	this.hardware = hardware;
	this.antiAlias = aa;
	this.autoResize = true;
	this.set_fullScreen(!hxd_System.get_isWindowed());
	var stage = hxd_Stage.getInstance();
	this.realFps = hxd_System.getDefaultFrameRate();
	this.lastTime = haxe_Timer.stamp();
	stage.addResizeEvent($bind(this,this.onStageResize));
	this.driver = new h3d_impl_GlDriver();
	h3d_Engine.CURRENT = this;
};
$hxClasses["h3d.Engine"] = h3d_Engine;
h3d_Engine.__name__ = ["h3d","Engine"];
h3d_Engine.check = function() {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
};
h3d_Engine.getCurrent = function() {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	return h3d_Engine.CURRENT;
};
h3d_Engine.prototype = {
	setDriver: function(d) {
		this.driver = d;
		if(this.mem != null) {
			this.mem.driver = d;
		}
	}
	,setCurrent: function() {
		h3d_Engine.CURRENT = this;
	}
	,init: function() {
		this.driver.init($bind(this,this.onCreate),!this.hardware);
	}
	,driverName: function(details) {
		if(details == null) {
			details = false;
		}
		return this.driver.getDriverName(details);
	}
	,selectShader: function(shader) {
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		if(this.driver.selectShader(shader)) {
			this.shaderSwitches++;
		}
	}
	,selectMaterial: function(pass) {
		this.driver.selectMaterial(pass);
	}
	,uploadShaderBuffers: function(buffers,which) {
		this.driver.uploadShaderBuffers(buffers,which);
	}
	,selectBuffer: function(buf) {
		if(buf.isDisposed()) {
			return false;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.selectBuffer(buf);
		return true;
	}
	,renderTriBuffer: function(b,start,max) {
		if(max == null) {
			max = -1;
		}
		if(start == null) {
			start = 0;
		}
		this.renderBuffer(b,this.mem.triIndexes,3,start,max);
		return;
	}
	,renderQuadBuffer: function(b,start,max) {
		if(max == null) {
			max = -1;
		}
		if(start == null) {
			start = 0;
		}
		this.renderBuffer(b,this.mem.quadIndexes,2,start,max);
		return;
	}
	,renderBuffer: function(b,indexes,vertPerTri,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(indexes.isDisposed()) {
			return;
		}
		while(true) {
			var ntri = b.vertices / vertPerTri | 0;
			var pos = b.position / vertPerTri | 0;
			if(startTri > 0) {
				if(startTri >= ntri) {
					startTri -= ntri;
					b = b.next;
					if(!(b != null)) {
						break;
					} else {
						continue;
					}
				}
				pos += startTri;
				ntri -= startTri;
				startTri = 0;
			}
			if(drawTri >= 0) {
				if(drawTri == 0) {
					return;
				}
				drawTri -= ntri;
				if(drawTri < 0) {
					ntri += drawTri;
					drawTri = 0;
				}
			}
			if(ntri > 0 && this.selectBuffer(b)) {
				this.driver.draw(indexes.ibuf,pos * 3,ntri);
				this.drawTriangles += ntri;
				this.drawCalls++;
			}
			b = b.next;
			if(!(b != null)) {
				break;
			}
		}
	}
	,renderIndexed: function(b,indexes,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(b.next != null) {
			throw new js__$Boot_HaxeError("Buffer is split");
		}
		if(indexes.isDisposed()) {
			return;
		}
		var maxTri = indexes.count / 3 | 0;
		if(drawTri < 0) {
			drawTri = maxTri - startTri;
		}
		if(drawTri > 0 && this.selectBuffer(b)) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,renderMultiBuffers: function(buffers,indexes,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		var maxTri = indexes.count / 3 | 0;
		if(maxTri <= 0) {
			return;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.selectMultiBuffers(buffers);
		if(indexes.isDisposed()) {
			return;
		}
		if(drawTri < 0) {
			drawTri = maxTri - startTri;
		}
		if(drawTri > 0) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,set_debug: function(d) {
		this.debug = d;
		this.driver.setDebug(this.debug);
		return d;
	}
	,onCreate: function(disposed) {
		if(this.autoResize) {
			var stage = hxd_Stage.getInstance();
			this.width = stage.get_width();
			this.height = stage.get_height();
		}
		if(disposed) {
			this.mem.onContextLost();
		} else {
			this.mem = new h3d_impl_MemoryManager(this.driver);
			this.mem.init();
		}
		this.hardware = this.driver.hasFeature(h3d_impl_Feature.HardwareAccelerated);
		this.set_debug(this.debug);
		this.set_fullScreen(this.fullScreen);
		this.resize(this.width,this.height);
		if(disposed) {
			this.onContextLost();
		} else {
			this.onReady();
		}
	}
	,onContextLost: function() {
	}
	,onReady: function() {
	}
	,onStageResize: function() {
		if(this.autoResize && !this.driver.isDisposed()) {
			var stage = hxd_Stage.getInstance();
			var w = stage.get_width();
			var h = stage.get_height();
			if(w != this.width || h != this.height) {
				this.resize(w,h);
			}
			this.onResized();
		}
	}
	,set_fullScreen: function(v) {
		this.fullScreen = v;
		if(this.mem != null && hxd_System.get_isWindowed()) {
			hxd_Stage.getInstance().setFullScreen(v);
		}
		return v;
	}
	,onResized: function() {
	}
	,resize: function(width,height) {
		if(width < 32) {
			width = 32;
		}
		if(height < 32) {
			height = 32;
		}
		this.width = width;
		this.height = height;
		if(!this.driver.isDisposed()) {
			this.driver.resize(width,height);
		}
	}
	,begin: function() {
		if(this.driver.isDisposed()) {
			return false;
		}
		this.frameCount++;
		this.drawTriangles = 0;
		this.shaderSwitches = 0;
		this.drawCalls = 0;
		this.targetStack = null;
		this.needFlushTarget = this.currentTarget != null;
		this.driver.begin(this.frameCount);
		if(this.backgroundColor != null) {
			this.clear(this.backgroundColor,1,0);
		}
		return true;
	}
	,hasFeature: function(f) {
		return this.driver.hasFeature(f);
	}
	,end: function() {
		this.driver.present();
	}
	,pushTarget: function(tex) {
		var c = this.targetTmp;
		if(c == null) {
			c = new h3d__$Engine_TargetTmp(tex,this.targetStack);
		} else {
			this.targetTmp = c.next;
			c.t = tex;
			c.next = this.targetStack;
		}
		this.targetStack = c;
		this.needFlushTarget = this.currentTarget != tex;
	}
	,pushTargets: function(textures) {
		if(this.nullTexture == null) {
			this.nullTexture = new h3d_mat_Texture(0,0,[h3d_mat_TextureFlags.NoAlloc],null,{ fileName : "Engine.hx", lineNumber : 294, className : "h3d.Engine", methodName : "pushTargets"});
		}
		this.pushTarget(this.nullTexture);
		this.driver.setRenderTargets(textures);
		this.currentTarget = this.nullTexture;
		this.needFlushTarget = false;
	}
	,popTarget: function() {
		var c = this.targetStack;
		if(c == null) {
			throw new js__$Boot_HaxeError("popTarget() with no matching pushTarget()");
		}
		this.targetStack = c.next;
		this.needFlushTarget = this.currentTarget != (this.targetStack == null?null:this.targetStack.t);
		c.t = null;
		c.next = this.targetTmp;
		this.targetTmp = c;
	}
	,flushTarget: function() {
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
	}
	,doFlushTarget: function() {
		var tex = this.targetStack == null?null:this.targetStack.t;
		this.currentTarget = tex;
		this.driver.setRenderTarget(tex);
		this.needFlushTarget = false;
	}
	,clear: function(color,depth,stencil) {
		if(color != null) {
			var _this = this.tmpVector;
			_this.x = (color >> 16 & 255) * 0.00392156862745098;
			_this.y = (color >> 8 & 255) * 0.00392156862745098;
			_this.z = (color & 255) * 0.00392156862745098;
			_this.w = (color >>> 24) * 0.00392156862745098;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.clear(color == null?null:this.tmpVector,depth,stencil);
	}
	,setRenderZone: function(x,y,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.driver.setRenderZone(x,y,width,height);
	}
	,render: function(obj) {
		if(!this.begin()) {
			return false;
		}
		obj.render(this);
		this.end();
		var delta = haxe_Timer.stamp() - this.lastTime;
		this.lastTime += delta;
		if(delta > 0) {
			var curFps = 1. / delta;
			if(curFps > this.realFps * 2) {
				curFps = this.realFps * 2;
			} else if(curFps < this.realFps * 0.5) {
				curFps = this.realFps * 0.5;
			}
			var f = delta / .5;
			if(f > 0.3) {
				f = 0.3;
			}
			this.realFps = this.realFps * (1 - f) + curFps * f;
		}
		return true;
	}
	,dispose: function() {
		this.driver.dispose();
		hxd_Stage.getInstance().removeResizeEvent($bind(this,this.onStageResize));
	}
	,get_fps: function() {
		return Math.ceil(this.realFps * 100) / 100;
	}
	,__class__: h3d_Engine
};
var h3d_Indexes = function(count) {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	this.mem = h3d_Engine.CURRENT.mem;
	this.count = count;
	this.mem.allocIndexes(this);
};
$hxClasses["h3d.Indexes"] = h3d_Indexes;
h3d_Indexes.__name__ = ["h3d","Indexes"];
h3d_Indexes.alloc = function(i,startPos,length) {
	if(length == null) {
		length = -1;
	}
	if(startPos == null) {
		startPos = 0;
	}
	if(length < 0) {
		length = i.length;
	}
	var idx = new h3d_Indexes(length);
	idx.upload(i,0,length);
	return idx;
};
h3d_Indexes.prototype = {
	isDisposed: function() {
		return this.ibuf == null;
	}
	,upload: function(indexes,pos,count,bufferPos) {
		if(bufferPos == null) {
			bufferPos = 0;
		}
		this.mem.driver.uploadIndexBuffer(this.ibuf,pos,count,indexes,bufferPos);
	}
	,uploadBytes: function(bytes,dataPos,indices) {
		this.mem.driver.uploadIndexBytes(this.ibuf,0,indices,bytes,dataPos);
	}
	,dispose: function() {
		if(this.ibuf != null) {
			this.mem.deleteIndexes(this);
		}
	}
	,__class__: h3d_Indexes
};
var h3d_Matrix = function() {
};
$hxClasses["h3d.Matrix"] = h3d_Matrix;
h3d_Matrix.__name__ = ["h3d","Matrix"];
h3d_Matrix.I = function() {
	var m = new h3d_Matrix();
	m.identity();
	return m;
};
h3d_Matrix.L = function(a) {
	var m = new h3d_Matrix();
	m.load(a);
	return m;
};
h3d_Matrix.T = function(x,y,z) {
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	var m = new h3d_Matrix();
	m.initTranslate(x,y,z);
	return m;
};
h3d_Matrix.R = function(x,y,z) {
	var m = new h3d_Matrix();
	m.initRotate(x,y,z);
	return m;
};
h3d_Matrix.S = function(x,y,z) {
	if(z == null) {
		z = 1.0;
	}
	if(y == null) {
		y = 1.;
	}
	if(x == null) {
		x = 1.;
	}
	var m = new h3d_Matrix();
	m.initScale(x,y,z);
	return m;
};
h3d_Matrix.lookAtX = function(dir,up,m) {
	if(up == null) {
		up = new h3d_Vector(0,0,1);
	}
	if(m == null) {
		m = new h3d_Matrix();
	}
	var k = dir.x * dir.x + dir.y * dir.y + dir.z * dir.z;
	if(k < 1e-10) {
		k = 0;
	} else {
		k = 1. / Math.sqrt(k);
	}
	var x = dir.x * k;
	var y = dir.y * k;
	var z = dir.z * k;
	var ay_z;
	var ay_y;
	var ay_x;
	var x1 = up.y * z - up.z * y;
	var y1 = up.z * x - up.x * z;
	var z1 = up.x * y - up.y * x;
	var k1 = x1 * x1 + y1 * y1 + z1 * z1;
	if(k1 < 1e-10) {
		k1 = 0;
	} else {
		k1 = 1. / Math.sqrt(k1);
	}
	var x2 = x1 * k1;
	var y2 = y1 * k1;
	var z2 = z1 * k1;
	ay_x = x2;
	ay_y = y2;
	ay_z = z2;
	if(x2 * x2 + y2 * y2 + z2 * z2 < 1e-10) {
		ay_x = y;
		ay_y = z;
		ay_z = x;
	}
	var x3 = y * ay_z - z * ay_y;
	var y3 = z * ay_x - x * ay_z;
	var z3 = x * ay_y - y * ay_x;
	m._11 = x;
	m._12 = y;
	m._13 = z;
	m._14 = 0;
	m._21 = ay_x;
	m._22 = ay_y;
	m._23 = ay_z;
	m._24 = 0;
	m._31 = x3;
	m._32 = y3;
	m._33 = z3;
	m._34 = 0;
	m._41 = 0;
	m._42 = 0;
	m._43 = 0;
	m._44 = 1;
	return m;
};
h3d_Matrix.prototype = {
	get_tx: function() {
		return this._41;
	}
	,get_ty: function() {
		return this._42;
	}
	,get_tz: function() {
		return this._43;
	}
	,set_tx: function(v) {
		return this._41 = v;
	}
	,set_ty: function(v) {
		return this._42 = v;
	}
	,set_tz: function(v) {
		return this._43 = v;
	}
	,zero: function() {
		this._11 = 0.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 0.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 0.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 0.0;
	}
	,identity: function() {
		this._11 = 1.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 1.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 1.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,initRotateX: function(a) {
		var cos = Math.cos(a);
		var sin = Math.sin(a);
		this._11 = 1.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = cos;
		this._23 = sin;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = -sin;
		this._33 = cos;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,initRotateY: function(a) {
		var cos = Math.cos(a);
		var sin = Math.sin(a);
		this._11 = cos;
		this._12 = 0.0;
		this._13 = -sin;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 1.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = sin;
		this._32 = 0.0;
		this._33 = cos;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,initRotateZ: function(a) {
		var cos = Math.cos(a);
		var sin = Math.sin(a);
		this._11 = cos;
		this._12 = sin;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = -sin;
		this._22 = cos;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 1.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,initTranslate: function(x,y,z) {
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		this._11 = 1.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 1.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 1.0;
		this._34 = 0.0;
		this._41 = x;
		this._42 = y;
		this._43 = z;
		this._44 = 1.0;
	}
	,initScale: function(x,y,z) {
		if(z == null) {
			z = 1.;
		}
		if(y == null) {
			y = 1.;
		}
		if(x == null) {
			x = 1.;
		}
		this._11 = x;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = y;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = z;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,initRotateAxis: function(axis,angle) {
		var cos = Math.cos(angle);
		var sin = Math.sin(angle);
		var cos1 = 1 - cos;
		var x = -axis.x;
		var y = -axis.y;
		var z = -axis.z;
		var len = 1. / Math.sqrt(x * x + y * y + z * z);
		x *= len;
		y *= len;
		z *= len;
		var xcos1 = x * cos1;
		var zcos1 = z * cos1;
		this._11 = cos + x * xcos1;
		this._12 = y * xcos1 - z * sin;
		this._13 = x * zcos1 + y * sin;
		this._14 = 0.;
		this._21 = y * xcos1 + z * sin;
		this._22 = cos + y * y * cos1;
		this._23 = y * zcos1 - x * sin;
		this._24 = 0.;
		this._31 = x * zcos1 - y * sin;
		this._32 = y * zcos1 + x * sin;
		this._33 = cos + z * zcos1;
		this._34 = 0.;
		this._41 = 0.;
		this._42 = 0.;
		this._43 = 0.;
		this._44 = 1.;
	}
	,initRotate: function(x,y,z) {
		var cx = Math.cos(x);
		var sx = Math.sin(x);
		var cy = Math.cos(y);
		var sy = Math.sin(y);
		var cz = Math.cos(z);
		var sz = Math.sin(z);
		var cxsy = cx * sy;
		var sxsy = sx * sy;
		this._11 = cy * cz;
		this._12 = cy * sz;
		this._13 = -sy;
		this._14 = 0;
		this._21 = sxsy * cz - cx * sz;
		this._22 = sxsy * sz + cx * cz;
		this._23 = sx * cy;
		this._24 = 0;
		this._31 = cxsy * cz + sx * sz;
		this._32 = cxsy * sz - sx * cz;
		this._33 = cx * cy;
		this._34 = 0;
		this._41 = 0;
		this._42 = 0;
		this._43 = 0;
		this._44 = 1;
	}
	,translate: function(x,y,z) {
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		this._11 += x * this._14;
		this._12 += y * this._14;
		this._13 += z * this._14;
		this._21 += x * this._24;
		this._22 += y * this._24;
		this._23 += z * this._24;
		this._31 += x * this._34;
		this._32 += y * this._34;
		this._33 += z * this._34;
		this._41 += x * this._44;
		this._42 += y * this._44;
		this._43 += z * this._44;
	}
	,scale: function(x,y,z) {
		if(z == null) {
			z = 1.;
		}
		if(y == null) {
			y = 1.;
		}
		if(x == null) {
			x = 1.;
		}
		this._11 *= x;
		this._21 *= x;
		this._31 *= x;
		this._41 *= x;
		this._12 *= y;
		this._22 *= y;
		this._32 *= y;
		this._42 *= y;
		this._13 *= z;
		this._23 *= z;
		this._33 *= z;
		this._43 *= z;
	}
	,rotate: function(x,y,z) {
		var tmp = h3d_Matrix.tmp;
		tmp.initRotate(x,y,z);
		this.multiply(this,tmp);
	}
	,rotateAxis: function(axis,angle) {
		var tmp = h3d_Matrix.tmp;
		tmp.initRotateAxis(axis,angle);
		this.multiply(this,tmp);
	}
	,pos: function(v) {
		if(v == null) {
			return new h3d_Vector(this._41,this._42,this._43,this._44);
		}
		v.x = this._41;
		v.y = this._42;
		v.z = this._43;
		v.w = this._44;
		return v;
	}
	,prependTranslate: function(x,y,z) {
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var vx = this._11 * x + this._21 * y + this._31 * z + this._41;
		var vy = this._12 * x + this._22 * y + this._32 * z + this._42;
		var vz = this._13 * x + this._23 * y + this._33 * z + this._43;
		var vw = this._14 * x + this._24 * y + this._34 * z + this._44;
		this._41 = vx;
		this._42 = vy;
		this._43 = vz;
		this._44 = vw;
	}
	,getScale: function() {
		var v = new h3d_Vector();
		v.x = Math.sqrt(this._11 * this._11 + this._12 * this._12 + this._13 * this._13);
		v.y = Math.sqrt(this._21 * this._21 + this._22 * this._22 + this._23 * this._23);
		v.z = Math.sqrt(this._31 * this._31 + this._32 * this._32 + this._33 * this._33);
		if(this._11 * (this._22 * this._33 - this._23 * this._32) + this._12 * (this._23 * this._31 - this._21 * this._33) + this._13 * (this._21 * this._32 - this._22 * this._31) < 0) {
			v.x *= -1;
			v.y *= -1;
			v.z *= -1;
		}
		return v;
	}
	,prependRotate: function(x,y,z) {
		var tmp = h3d_Matrix.tmp;
		tmp.initRotate(x,y,z);
		this.multiply(tmp,this);
	}
	,prependRotateAxis: function(axis,angle) {
		var tmp = h3d_Matrix.tmp;
		tmp.initRotateAxis(axis,angle);
		this.multiply(tmp,this);
	}
	,prependScale: function(sx,sy,sz) {
		if(sz == null) {
			sz = 1.;
		}
		if(sy == null) {
			sy = 1.;
		}
		if(sx == null) {
			sx = 1.;
		}
		var tmp = h3d_Matrix.tmp;
		tmp.initScale(sx,sy,sz);
		this.multiply(tmp,this);
	}
	,multiply3x4: function(a,b) {
		var m11 = a._11;
		var m12 = a._12;
		var m13 = a._13;
		var m21 = a._21;
		var m22 = a._22;
		var m23 = a._23;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		this._11 = m11 * b11 + m12 * b21 + m13 * b31;
		this._12 = m11 * b12 + m12 * b22 + m13 * b32;
		this._13 = m11 * b13 + m12 * b23 + m13 * b33;
		this._14 = 0;
		this._21 = m21 * b11 + m22 * b21 + m23 * b31;
		this._22 = m21 * b12 + m22 * b22 + m23 * b32;
		this._23 = m21 * b13 + m22 * b23 + m23 * b33;
		this._24 = 0;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33;
		this._34 = 0;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this._44 = 1;
	}
	,multiply3x4inline: function(a,b) {
		var m11 = a._11;
		var m12 = a._12;
		var m13 = a._13;
		var m21 = a._21;
		var m22 = a._22;
		var m23 = a._23;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		this._11 = m11 * b11 + m12 * b21 + m13 * b31;
		this._12 = m11 * b12 + m12 * b22 + m13 * b32;
		this._13 = m11 * b13 + m12 * b23 + m13 * b33;
		this._14 = 0;
		this._21 = m21 * b11 + m22 * b21 + m23 * b31;
		this._22 = m21 * b12 + m22 * b22 + m23 * b32;
		this._23 = m21 * b13 + m22 * b23 + m23 * b33;
		this._24 = 0;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33;
		this._34 = 0;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this._44 = 1;
	}
	,multiply: function(a,b) {
		var a11 = a._11;
		var a12 = a._12;
		var a13 = a._13;
		var a14 = a._14;
		var a21 = a._21;
		var a22 = a._22;
		var a23 = a._23;
		var a24 = a._24;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a34 = a._34;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var a44 = a._44;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b14 = b._14;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b24 = b._24;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b34 = b._34;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		var b44 = b._44;
		this._11 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this._12 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this._13 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this._14 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this._21 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this._22 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this._23 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this._24 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this._34 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this._44 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
	}
	,multiplyValue: function(v) {
		this._11 *= v;
		this._12 *= v;
		this._13 *= v;
		this._14 *= v;
		this._21 *= v;
		this._22 *= v;
		this._23 *= v;
		this._24 *= v;
		this._31 *= v;
		this._32 *= v;
		this._33 *= v;
		this._34 *= v;
		this._41 *= v;
		this._42 *= v;
		this._43 *= v;
		this._44 *= v;
	}
	,invert: function() {
		this.inverse(this);
	}
	,getDeterminant: function() {
		return this._11 * (this._22 * this._33 - this._23 * this._32) + this._12 * (this._23 * this._31 - this._21 * this._33) + this._13 * (this._21 * this._32 - this._22 * this._31);
	}
	,inverse3x4: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		this._11 = m22 * m33 - m23 * m32;
		this._12 = m13 * m32 - m12 * m33;
		this._13 = m12 * m23 - m13 * m22;
		this._14 = 0;
		this._21 = m23 * m31 - m21 * m33;
		this._22 = m11 * m33 - m13 * m31;
		this._23 = m13 * m21 - m11 * m23;
		this._24 = 0;
		this._31 = m21 * m32 - m22 * m31;
		this._32 = m12 * m31 - m11 * m32;
		this._33 = m11 * m22 - m12 * m21;
		this._34 = 0;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		this._44 = 1;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31;
		if((det < 0?-det:det) < 1e-10) {
			this.zero();
			return;
		}
		var invDet = 1.0 / det;
		this._11 *= invDet;
		this._12 *= invDet;
		this._13 *= invDet;
		this._21 *= invDet;
		this._22 *= invDet;
		this._23 *= invDet;
		this._31 *= invDet;
		this._32 *= invDet;
		this._33 *= invDet;
		this._41 *= invDet;
		this._42 *= invDet;
		this._43 *= invDet;
	}
	,inverse: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m14 = m._14;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m24 = m._24;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m34 = m._34;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		var m44 = m._44;
		this._11 = m22 * m33 * m44 - m22 * m34 * m43 - m32 * m23 * m44 + m32 * m24 * m43 + m42 * m23 * m34 - m42 * m24 * m33;
		this._12 = -m12 * m33 * m44 + m12 * m34 * m43 + m32 * m13 * m44 - m32 * m14 * m43 - m42 * m13 * m34 + m42 * m14 * m33;
		this._13 = m12 * m23 * m44 - m12 * m24 * m43 - m22 * m13 * m44 + m22 * m14 * m43 + m42 * m13 * m24 - m42 * m14 * m23;
		this._14 = -m12 * m23 * m34 + m12 * m24 * m33 + m22 * m13 * m34 - m22 * m14 * m33 - m32 * m13 * m24 + m32 * m14 * m23;
		this._21 = -m21 * m33 * m44 + m21 * m34 * m43 + m31 * m23 * m44 - m31 * m24 * m43 - m41 * m23 * m34 + m41 * m24 * m33;
		this._22 = m11 * m33 * m44 - m11 * m34 * m43 - m31 * m13 * m44 + m31 * m14 * m43 + m41 * m13 * m34 - m41 * m14 * m33;
		this._23 = -m11 * m23 * m44 + m11 * m24 * m43 + m21 * m13 * m44 - m21 * m14 * m43 - m41 * m13 * m24 + m41 * m14 * m23;
		this._24 = m11 * m23 * m34 - m11 * m24 * m33 - m21 * m13 * m34 + m21 * m14 * m33 + m31 * m13 * m24 - m31 * m14 * m23;
		this._31 = m21 * m32 * m44 - m21 * m34 * m42 - m31 * m22 * m44 + m31 * m24 * m42 + m41 * m22 * m34 - m41 * m24 * m32;
		this._32 = -m11 * m32 * m44 + m11 * m34 * m42 + m31 * m12 * m44 - m31 * m14 * m42 - m41 * m12 * m34 + m41 * m14 * m32;
		this._33 = m11 * m22 * m44 - m11 * m24 * m42 - m21 * m12 * m44 + m21 * m14 * m42 + m41 * m12 * m24 - m41 * m14 * m22;
		this._34 = -m11 * m22 * m34 + m11 * m24 * m32 + m21 * m12 * m34 - m21 * m14 * m32 - m31 * m12 * m24 + m31 * m14 * m22;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31 + m14 * this._41;
		if((det < 0?-det:det) < 1e-10) {
			this.zero();
			return;
		}
		det = 1.0 / det;
		this._11 *= det;
		this._12 *= det;
		this._13 *= det;
		this._14 *= det;
		this._21 *= det;
		this._22 *= det;
		this._23 *= det;
		this._24 *= det;
		this._31 *= det;
		this._32 *= det;
		this._33 *= det;
		this._34 *= det;
		this._41 *= det;
		this._42 *= det;
		this._43 *= det;
		this._44 *= det;
	}
	,transpose: function() {
		var tmp = this._12;
		this._12 = this._21;
		this._21 = tmp;
		tmp = this._13;
		this._13 = this._31;
		this._31 = tmp;
		tmp = this._14;
		this._14 = this._41;
		this._41 = tmp;
		tmp = this._23;
		this._23 = this._32;
		this._32 = tmp;
		tmp = this._24;
		this._24 = this._42;
		this._42 = tmp;
		tmp = this._34;
		this._34 = this._43;
		this._43 = tmp;
	}
	,clone: function() {
		var m = new h3d_Matrix();
		m._11 = this._11;
		m._12 = this._12;
		m._13 = this._13;
		m._14 = this._14;
		m._21 = this._21;
		m._22 = this._22;
		m._23 = this._23;
		m._24 = this._24;
		m._31 = this._31;
		m._32 = this._32;
		m._33 = this._33;
		m._34 = this._34;
		m._41 = this._41;
		m._42 = this._42;
		m._43 = this._43;
		m._44 = this._44;
		return m;
	}
	,loadFrom: function(m) {
		this._11 = m._11;
		this._12 = m._12;
		this._13 = m._13;
		this._14 = m._14;
		this._21 = m._21;
		this._22 = m._22;
		this._23 = m._23;
		this._24 = m._24;
		this._31 = m._31;
		this._32 = m._32;
		this._33 = m._33;
		this._34 = m._34;
		this._41 = m._41;
		this._42 = m._42;
		this._43 = m._43;
		this._44 = m._44;
	}
	,load: function(a) {
		this._11 = a[0];
		this._12 = a[1];
		this._13 = a[2];
		this._14 = a[3];
		this._21 = a[4];
		this._22 = a[5];
		this._23 = a[6];
		this._24 = a[7];
		this._31 = a[8];
		this._32 = a[9];
		this._33 = a[10];
		this._34 = a[11];
		this._41 = a[12];
		this._42 = a[13];
		this._43 = a[14];
		this._44 = a[15];
	}
	,getFloats: function() {
		return [this._11,this._12,this._13,this._14,this._21,this._22,this._23,this._24,this._31,this._32,this._33,this._34,this._41,this._42,this._43,this._44];
	}
	,toString: function() {
		return "MAT=[\n" + "  [ " + hxd_Math.fmt(this._11) + ", " + hxd_Math.fmt(this._12) + ", " + hxd_Math.fmt(this._13) + ", " + hxd_Math.fmt(this._14) + " ]\n" + "  [ " + hxd_Math.fmt(this._21) + ", " + hxd_Math.fmt(this._22) + ", " + hxd_Math.fmt(this._23) + ", " + hxd_Math.fmt(this._24) + " ]\n" + "  [ " + hxd_Math.fmt(this._31) + ", " + hxd_Math.fmt(this._32) + ", " + hxd_Math.fmt(this._33) + ", " + hxd_Math.fmt(this._34) + " ]\n" + "  [ " + hxd_Math.fmt(this._41) + ", " + hxd_Math.fmt(this._42) + ", " + hxd_Math.fmt(this._43) + ", " + hxd_Math.fmt(this._44) + " ]\n" + "]";
	}
	,colorHue: function(hue) {
		if(hue == 0.) {
			return;
		}
		var cosA = Math.cos(-hue);
		var sinA = Math.sin(-hue);
		var ch = (1 - cosA) / 3;
		h3d_Matrix.tmp._11 = cosA + ch;
		h3d_Matrix.tmp._12 = ch - 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._13 = ch + 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._21 = ch + 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._22 = cosA + ch;
		h3d_Matrix.tmp._23 = ch - 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._31 = ch - 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._32 = ch + 0.57735026918962576450914878050196 * sinA;
		h3d_Matrix.tmp._33 = cosA + ch;
		h3d_Matrix.tmp._34 = 0;
		h3d_Matrix.tmp._41 = 0;
		h3d_Matrix.tmp._42 = 0;
		h3d_Matrix.tmp._43 = 0;
		this.multiply3x4(this,h3d_Matrix.tmp);
	}
	,colorSaturation: function(sat) {
		var $is = 1 - sat;
		var r = $is * 0.212671;
		var g = $is * 0.71516;
		var b = $is * 0.072169;
		h3d_Matrix.tmp._11 = r + sat;
		h3d_Matrix.tmp._12 = r;
		h3d_Matrix.tmp._13 = r;
		h3d_Matrix.tmp._21 = g;
		h3d_Matrix.tmp._22 = g + sat;
		h3d_Matrix.tmp._23 = g;
		h3d_Matrix.tmp._31 = b;
		h3d_Matrix.tmp._32 = b;
		h3d_Matrix.tmp._33 = b + sat;
		h3d_Matrix.tmp._41 = 0;
		h3d_Matrix.tmp._42 = 0;
		h3d_Matrix.tmp._43 = 0;
		this.multiply3x4(this,h3d_Matrix.tmp);
	}
	,colorContrast: function(contrast) {
		var v = contrast + 1;
		h3d_Matrix.tmp._11 = v;
		h3d_Matrix.tmp._12 = 0;
		h3d_Matrix.tmp._13 = 0;
		h3d_Matrix.tmp._21 = 0;
		h3d_Matrix.tmp._22 = v;
		h3d_Matrix.tmp._23 = 0;
		h3d_Matrix.tmp._31 = 0;
		h3d_Matrix.tmp._32 = 0;
		h3d_Matrix.tmp._33 = v;
		h3d_Matrix.tmp._41 = -contrast * 0.5;
		h3d_Matrix.tmp._42 = -contrast * 0.5;
		h3d_Matrix.tmp._43 = -contrast * 0.5;
		this.multiply3x4(this,h3d_Matrix.tmp);
	}
	,colorBrightness: function(brightness) {
		this._41 += brightness;
		this._42 += brightness;
		this._43 += brightness;
	}
	,colorBits: function(bits,blend) {
		var t11 = 0.;
		var t12 = 0.;
		var t13 = 0.;
		var t21 = 0.;
		var t22 = 0.;
		var t23 = 0.;
		var t31 = 0.;
		var t32 = 0.;
		var t33 = 0.;
		var c = bits;
		if((bits & 1) == 1) {
			t11 = 1;
		}
		c = bits >> 1;
		if((c & 1) == 1) {
			t12 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t13 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t21 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t22 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t23 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t31 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t32 = 1;
		}
		c >>= 1;
		if((c & 1) == 1) {
			t33 = 1;
		}
		c >>= 1;
		var r = t11 + t21 + t31;
		var g = t12 + t22 + t32;
		var b = t13 + t23 + t33;
		if(r > 1) {
			t11 /= r;
			t21 /= r;
			t31 /= r;
		}
		if(g > 1) {
			t12 /= g;
			t22 /= g;
			t32 /= g;
		}
		if(b > 1) {
			t13 /= b;
			t23 /= b;
			t33 /= b;
		}
		var b11 = this._11 * t11 + this._12 * t21 + this._13 * t31;
		var b12 = this._11 * t12 + this._12 * t22 + this._13 * t32;
		var b13 = this._11 * t13 + this._12 * t23 + this._13 * t33;
		var b21 = this._21 * t11 + this._22 * t21 + this._23 * t31;
		var b22 = this._21 * t12 + this._22 * t22 + this._23 * t32;
		var b23 = this._21 * t13 + this._22 * t23 + this._23 * t33;
		var b31 = this._31 * t11 + this._32 * t21 + this._33 * t31;
		var b32 = this._31 * t12 + this._32 * t22 + this._33 * t32;
		var b33 = this._31 * t13 + this._32 * t23 + this._33 * t33;
		var k = 1 - blend;
		this._11 = this._11 * k + b11 * blend;
		this._12 = this._12 * k + b12 * blend;
		this._13 = this._13 * k + b13 * blend;
		this._21 = this._21 * k + b21 * blend;
		this._22 = this._22 * k + b22 * blend;
		this._23 = this._23 * k + b23 * blend;
		this._31 = this._31 * k + b31 * blend;
		this._32 = this._32 * k + b32 * blend;
		this._33 = this._33 * k + b33 * blend;
	}
	,colorAdd: function(c) {
		this._41 += (c >> 16 & 255) / 255;
		this._42 += (c >> 8 & 255) / 255;
		this._43 += (c & 255) / 255;
	}
	,colorSet: function(c,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		this.zero();
		this._44 = alpha;
		this._41 += (c >> 16 & 255) / 255;
		this._42 += (c >> 8 & 255) / 255;
		this._43 += (c & 255) / 255;
	}
	,__class__: h3d_Matrix
};
var h3d_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Quat"] = h3d_Quat;
h3d_Quat.__name__ = ["h3d","Quat"];
h3d_Quat.prototype = {
	set: function(x,y,z,w) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,identity: function() {
		this.x = this.y = this.z = 0;
		this.w = 1;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,clone: function() {
		return new h3d_Quat(this.x,this.y,this.z,this.w);
	}
	,initMoveTo: function(from,to) {
		var hx = from.x + to.x;
		var hy = from.y + to.y;
		var hz = from.z + to.z;
		Math.sqrt(hx * hx + hy * hy + hz * hz);
		this.x = from.y * hz - from.z * hy;
		this.y = from.z * hx - from.x * hz;
		this.z = from.x * hy - from.y * hx;
		this.w = from.x * hx + from.y * hy + from.z * hz;
		this.normalize();
	}
	,initDirection: function(dir) {
		var x = dir.x;
		var y = dir.y;
		var z = dir.z;
		var k = x * x + y * y + z * z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		var x1 = x * k;
		var y1 = y * k;
		var z1 = z * k;
		var ay_z;
		var ay_y;
		var ay_x;
		var x2 = -y1;
		var _this_z = 0;
		var k1 = x2 * x2 + x1 * x1 + _this_z * _this_z;
		if(k1 < 1e-10) {
			k1 = 0;
		} else {
			k1 = 1. / Math.sqrt(k1);
		}
		var x3 = x2 * k1;
		var y2 = x1 * k1;
		var z2 = _this_z * k1;
		ay_x = x3;
		ay_y = y2;
		ay_z = z2;
		if(x3 * x3 + y2 * y2 + z2 * z2 < 1e-10) {
			ay_x = y1;
			ay_y = z1;
			ay_z = x1;
		}
		var x4 = y1 * ay_z - z1 * ay_y;
		var y3 = z1 * ay_x - x1 * ay_z;
		var z3 = x1 * ay_y - y1 * ay_x;
		var tr = x1 + ay_y + z3;
		if(tr > 0) {
			var s = Math.sqrt(tr + 1.0) * 2;
			var $is = 1 / s;
			this.x = (ay_z - y3) * $is;
			this.y = (x4 - z1) * $is;
			this.z = (y1 - ay_x) * $is;
			this.w = 0.25 * s;
		} else if(x1 > ay_y && x1 > z3) {
			var s1 = Math.sqrt(1.0 + x1 - ay_y - z3) * 2;
			var is1 = 1 / s1;
			this.x = 0.25 * s1;
			this.y = (ay_x + y1) * is1;
			this.z = (x4 + z1) * is1;
			this.w = (ay_z - y3) * is1;
		} else if(ay_y > z3) {
			var s2 = Math.sqrt(1.0 + ay_y - x1 - z3) * 2;
			var is2 = 1 / s2;
			this.x = (ay_x + y1) * is2;
			this.y = 0.25 * s2;
			this.z = (y3 + ay_z) * is2;
			this.w = (x4 - z1) * is2;
		} else {
			var s3 = Math.sqrt(1.0 + z3 - x1 - ay_y) * 2;
			var is3 = 1 / s3;
			this.x = (x4 + z1) * is3;
			this.y = (y3 + ay_z) * is3;
			this.z = 0.25 * s3;
			this.w = (y1 - ay_x) * is3;
		}
	}
	,initRotateAxis: function(x,y,z,a) {
		var sin = Math.sin(a / 2);
		var cos = Math.cos(a / 2);
		this.x = x * sin;
		this.y = y * sin;
		this.z = z * sin;
		this.w = cos * Math.sqrt(x * x + y * y + z * z);
		this.normalize();
	}
	,initRotateMatrix: function(m) {
		var tr = m._11 + m._22 + m._33;
		if(tr > 0) {
			var s = Math.sqrt(tr + 1.0) * 2;
			var $is = 1 / s;
			this.x = (m._23 - m._32) * $is;
			this.y = (m._31 - m._13) * $is;
			this.z = (m._12 - m._21) * $is;
			this.w = 0.25 * s;
		} else if(m._11 > m._22 && m._11 > m._33) {
			var s1 = Math.sqrt(1.0 + m._11 - m._22 - m._33) * 2;
			var is1 = 1 / s1;
			this.x = 0.25 * s1;
			this.y = (m._21 + m._12) * is1;
			this.z = (m._31 + m._13) * is1;
			this.w = (m._23 - m._32) * is1;
		} else if(m._22 > m._33) {
			var s2 = Math.sqrt(1.0 + m._22 - m._11 - m._33) * 2;
			var is2 = 1 / s2;
			this.x = (m._21 + m._12) * is2;
			this.y = 0.25 * s2;
			this.z = (m._32 + m._23) * is2;
			this.w = (m._31 - m._13) * is2;
		} else {
			var s3 = Math.sqrt(1.0 + m._33 - m._11 - m._22) * 2;
			var is3 = 1 / s3;
			this.x = (m._31 + m._13) * is3;
			this.y = (m._32 + m._23) * is3;
			this.z = 0.25 * s3;
			this.w = (m._12 - m._21) * is3;
		}
	}
	,normalize: function() {
		var len = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
		if(len < 1e-10) {
			this.x = this.y = this.z = 0;
			this.w = 1;
		} else {
			var m = 1. / Math.sqrt(len);
			this.x *= m;
			this.y *= m;
			this.z *= m;
			this.w *= m;
		}
	}
	,initRotate: function(ax,ay,az) {
		var sinX = Math.sin(ax * 0.5);
		var cosX = Math.cos(ax * 0.5);
		var sinY = Math.sin(ay * 0.5);
		var cosY = Math.cos(ay * 0.5);
		var sinZ = Math.sin(az * 0.5);
		var cosZ = Math.cos(az * 0.5);
		var cosYZ = cosY * cosZ;
		var sinYZ = sinY * sinZ;
		this.x = sinX * cosYZ - cosX * sinYZ;
		this.y = cosX * sinY * cosZ + sinX * cosY * sinZ;
		this.z = cosX * cosY * sinZ - sinX * sinY * cosZ;
		this.w = cosX * cosYZ + sinX * sinYZ;
	}
	,multiply: function(q1,q2) {
		var x2 = q1.x * q2.w + q1.w * q2.x + q1.y * q2.z - q1.z * q2.y;
		var y2 = q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x;
		var z2 = q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w;
		var w2 = q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z;
		this.x = x2;
		this.y = y2;
		this.z = z2;
		this.w = w2;
	}
	,toMatrix: function() {
		var m = new h3d_Matrix();
		this.saveToMatrix(m);
		return m;
	}
	,__toEuler: function() {
		var q = this.x * this.y + this.z * this.w;
		return new h3d_Vector(Math.atan2(2 * (this.x * this.w - this.y * this.z),1 - 2 * (this.x * this.x + this.z * this.z)),Math.atan2(2 * (this.y * this.w - this.x * this.z),1 - 2 * (this.y * this.y + this.z * this.z)),Math.asin(2 * q));
	}
	,lerp: function(q1,q2,v,nearest) {
		if(nearest == null) {
			nearest = false;
		}
		var v2 = nearest && q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w < 0?v - 1:1 - v;
		var x = q1.x * v + q2.x * v2;
		var y = q1.y * v + q2.y * v2;
		var z = q1.z * v + q2.z * v2;
		var w = q1.w * v + q2.w * v2;
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,slerp: function(q1,q2,v) {
		var cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;
		if((cosHalfTheta < 0?-cosHalfTheta:cosHalfTheta) >= 1) {
			this.x = q1.x;
			this.y = q1.y;
			this.z = q1.z;
			this.w = q1.w;
			return;
		}
		var halfTheta = Math.acos(cosHalfTheta);
		var invSinHalfTheta = 1. / Math.sqrt(1 - cosHalfTheta * cosHalfTheta);
		if((invSinHalfTheta < 0?-invSinHalfTheta:invSinHalfTheta) > 1e3) {
			var v2 = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w < 0?-0.5:0.5;
			var x = q1.x * 0.5 + q2.x * v2;
			var y = q1.y * 0.5 + q2.y * v2;
			var z = q1.z * 0.5 + q2.z * v2;
			var w = q1.w * 0.5 + q2.w * v2;
			this.x = x;
			this.y = y;
			this.z = z;
			this.w = w;
			return;
		}
		var a = Math.sin((1 - v) * halfTheta) * invSinHalfTheta;
		var b = Math.sin(v * halfTheta) * invSinHalfTheta * (cosHalfTheta < 0?-1:1);
		this.x = q1.x * a + q2.x * b;
		this.y = q1.y * a + q2.y * b;
		this.z = q1.z * a + q2.z * b;
		this.w = q1.w * a + q2.w * b;
	}
	,conjugate: function() {
		this.x = -this.x;
		this.y = -this.y;
		this.z = -this.z;
	}
	,negate: function() {
		this.x = -this.x;
		this.y = -this.y;
		this.z = -this.z;
		this.w = -this.w;
	}
	,dot: function(q) {
		return this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;
	}
	,saveToMatrix: function(m) {
		var xx = this.x * this.x;
		var xy = this.x * this.y;
		var xz = this.x * this.z;
		var xw = this.x * this.w;
		var yy = this.y * this.y;
		var yz = this.y * this.z;
		var yw = this.y * this.w;
		var zz = this.z * this.z;
		var zw = this.z * this.w;
		m._11 = 1 - 2 * (yy + zz);
		m._12 = 2 * (xy + zw);
		m._13 = 2 * (xz - yw);
		m._14 = 0;
		m._21 = 2 * (xy - zw);
		m._22 = 1 - 2 * (xx + zz);
		m._23 = 2 * (yz + xw);
		m._24 = 0;
		m._31 = 2 * (xz + yw);
		m._32 = 2 * (yz - xw);
		m._33 = 1 - 2 * (xx + yy);
		m._34 = 0;
		m._41 = 0;
		m._42 = 0;
		m._43 = 0;
		m._44 = 1;
		return m;
	}
	,toString: function() {
		return "{" + hxd_Math.fmt(this.x) + "," + hxd_Math.fmt(this.y) + "," + hxd_Math.fmt(this.z) + "," + hxd_Math.fmt(this.w) + "}";
	}
	,__class__: h3d_Quat
};
var h3d_Vector = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Vector"] = h3d_Vector;
h3d_Vector.__name__ = ["h3d","Vector"];
h3d_Vector.fromColor = function(c,scale) {
	if(scale == null) {
		scale = 1.0;
	}
	var s = scale / 255;
	return new h3d_Vector((c >> 16 & 255) * s,(c >> 8 & 255) * s,(c & 255) * s,(c >>> 24) * s);
};
h3d_Vector.prototype = {
	distance: function(v) {
		var dx = v.x - this.x;
		var dy = v.y - this.y;
		var dz = v.z - this.z;
		return Math.sqrt(dx * dx + dy * dy + dz * dz);
	}
	,distanceSq: function(v) {
		var dx = v.x - this.x;
		var dy = v.y - this.y;
		var dz = v.z - this.z;
		return dx * dx + dy * dy + dz * dz;
	}
	,sub: function(v) {
		return new h3d_Vector(this.x - v.x,this.y - v.y,this.z - v.z,this.w - v.w);
	}
	,add: function(v) {
		return new h3d_Vector(this.x + v.x,this.y + v.y,this.z + v.z,this.w + v.w);
	}
	,cross: function(v) {
		return new h3d_Vector(this.y * v.z - this.z * v.y,this.z * v.x - this.x * v.z,this.x * v.y - this.y * v.x,1);
	}
	,reflect: function(n) {
		var k = 2 * (this.x * n.x + this.y * n.y + this.z * n.z);
		return new h3d_Vector(this.x - k * n.x,this.y - k * n.y,this.z - k * n.z,1);
	}
	,dot3: function(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z;
	}
	,dot4: function(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,normalize: function() {
		var k = this.x * this.x + this.y * this.y + this.z * this.z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		this.x *= k;
		this.y *= k;
		this.z *= k;
	}
	,normalizeFast: function() {
		var k = 1. / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		this.x *= k;
		this.y *= k;
		this.z *= k;
	}
	,getNormalized: function() {
		var k = this.x * this.x + this.y * this.y + this.z * this.z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		return new h3d_Vector(this.x * k,this.y * k,this.z * k);
	}
	,set: function(x,y,z,w) {
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,load: function(v) {
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = v.w;
	}
	,scale3: function(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
	}
	,project: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31 + this.w * m._41;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32 + this.w * m._42;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33 + this.w * m._43;
		var iw = 1 / (this.x * m._14 + this.y * m._24 + this.z * m._34 + this.w * m._44);
		this.x = px * iw;
		this.y = py * iw;
		this.z = pz * iw;
		this.w = 1;
	}
	,lerp: function(v1,v2,k) {
		var a = v1.x;
		var x = a + k * (v2.x - a);
		var a1 = v1.y;
		var y = a1 + k * (v2.y - a1);
		var a2 = v1.z;
		var z = a2 + k * (v2.z - a2);
		var a3 = v1.w;
		var w = a3 + k * (v2.w - a3);
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,transform3x4: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31 + this.w * m._41;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32 + this.w * m._42;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33 + this.w * m._43;
		this.x = px;
		this.y = py;
		this.z = pz;
	}
	,transform3x3: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33;
		this.x = px;
		this.y = py;
		this.z = pz;
	}
	,transform: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31 + this.w * m._41;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32 + this.w * m._42;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33 + this.w * m._43;
		var pw = this.x * m._14 + this.y * m._24 + this.z * m._34 + this.w * m._44;
		this.x = px;
		this.y = py;
		this.z = pz;
		this.w = pw;
	}
	,clone: function() {
		return new h3d_Vector(this.x,this.y,this.z,this.w);
	}
	,toPoint: function() {
		return new h3d_col_Point(this.x,this.y,this.z);
	}
	,toString: function() {
		return "{" + hxd_Math.fmt(this.x) + "," + hxd_Math.fmt(this.y) + "," + hxd_Math.fmt(this.z) + "," + hxd_Math.fmt(this.w) + "}";
	}
	,get_r: function() {
		return this.x;
	}
	,get_g: function() {
		return this.y;
	}
	,get_b: function() {
		return this.z;
	}
	,get_a: function() {
		return this.w;
	}
	,set_r: function(v) {
		return this.x = v;
	}
	,set_g: function(v) {
		return this.y = v;
	}
	,set_b: function(v) {
		return this.z = v;
	}
	,set_a: function(v) {
		return this.w = v;
	}
	,setColor: function(c,scale) {
		if(scale == null) {
			scale = 1.0;
		}
		var s = scale / 255;
		this.x = (c >> 16 & 255) * s;
		this.y = (c >> 8 & 255) * s;
		this.z = (c & 255) * s;
		this.w = (c >>> 24) * s;
	}
	,makeColor: function(hue,saturation,brightness) {
		if(brightness == null) {
			brightness = 0.5;
		}
		if(saturation == null) {
			saturation = 1.;
		}
		var r = hue % 6.2831853071795862;
		if(r >= 0) {
			hue = r;
		} else {
			hue = r + 6.2831853071795862;
		}
		var f = 2 * brightness - 1;
		var c = (1 - (f < 0?-f:f)) * saturation;
		var f1 = hue * 3 / 3.14159265358979323 % 2. - 1;
		var x = c * (1 - (f1 < 0?-f1:f1));
		var m = brightness - c / 2;
		if(hue < 1.0471975511965976) {
			this.x = c;
			this.y = x;
			this.z = 0;
		} else if(hue < 2.0943951023931953) {
			this.x = x;
			this.y = c;
			this.z = 0;
		} else if(hue < 3.14159265358979323) {
			this.x = 0;
			this.y = c;
			this.z = x;
		} else if(hue < 4.1887902047863905) {
			this.x = 0;
			this.y = x;
			this.z = c;
		} else if(hue < 5.2359877559829888) {
			this.x = x;
			this.y = 0;
			this.z = c;
		} else {
			this.x = c;
			this.y = 0;
			this.z = x;
		}
		var _g = this;
		_g.x = _g.x + m;
		var _g1 = this;
		_g1.y = _g1.y + m;
		var _g2 = this;
		_g2.z = _g2.z + m;
		this.w = 1;
	}
	,toColor: function() {
		var f = this.w;
		var tmp = ((f < 0.?0.:f > 1.?1.:f) * 255 + 0.499 | 0) << 24;
		var f1 = this.x;
		var tmp1 = tmp | ((f1 < 0.?0.:f1 > 1.?1.:f1) * 255 + 0.499 | 0) << 16;
		var f2 = this.y;
		var tmp2 = tmp1 | ((f2 < 0.?0.:f2 > 1.?1.:f2) * 255 + 0.499 | 0) << 8;
		var f3 = this.z;
		return tmp2 | ((f3 < 0.?0.:f3 > 1.?1.:f3) * 255 + 0.499 | 0);
	}
	,__class__: h3d_Vector
};
var h3d_anim_AnimatedObject = function(name) {
	this.objectName = name;
};
$hxClasses["h3d.anim.AnimatedObject"] = h3d_anim_AnimatedObject;
h3d_anim_AnimatedObject.__name__ = ["h3d","anim","AnimatedObject"];
h3d_anim_AnimatedObject.prototype = {
	clone: function() {
		return new h3d_anim_AnimatedObject(this.objectName);
	}
	,__class__: h3d_anim_AnimatedObject
};
var h3d_anim_Animation = function(name,frameCount,sampling) {
	this.name = name;
	this.frameCount = frameCount;
	this.sampling = sampling;
	this.objects = [];
	this.lastEvent = -1;
	this.frame = 0.;
	this.speed = 1.;
	this.loop = true;
	this.pause = false;
};
$hxClasses["h3d.anim.Animation"] = h3d_anim_Animation;
h3d_anim_Animation.__name__ = ["h3d","anim","Animation"];
h3d_anim_Animation.prototype = {
	getIFrame: function() {
		var f = this.frame | 0;
		if(f == this.endFrame()) {
			--f;
		}
		return f;
	}
	,unbind: function(objectName) {
		var _g = 0;
		var _g1 = this.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.objectName == objectName) {
				this.isSync = false;
				o.targetObject = null;
				o.targetSkin = null;
				return;
			}
		}
	}
	,setEvents: function(el) {
		var _g = [];
		var _g2 = 0;
		var _g1 = this.frameCount;
		while(_g2 < _g1) {
			++_g2;
			_g.push(null);
		}
		this.events = _g;
		var tmp = $iterator(el)();
		while(tmp.hasNext()) {
			var e = tmp.next();
			this.events[e.frame] = e.data;
		}
	}
	,setFrame: function(f) {
		this.frame = f;
		this.lastEvent = -1;
		while(this.frame < 0) this.frame += this.frameCount;
		while(this.frame > this.frameCount) this.frame -= this.frameCount;
	}
	,clone: function(a) {
		if(a == null) {
			a = new h3d_anim_Animation(this.name,this.frameCount,this.sampling);
		}
		a.objects = this.objects;
		a.speed = this.speed;
		a.loop = this.loop;
		a.pause = this.pause;
		a.events = this.events;
		return a;
	}
	,initInstance: function() {
		this.isInstance = true;
	}
	,createInstance: function(base) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.objects;
		while(_g1 < _g2.length) {
			var a = _g2[_g1];
			++_g1;
			_g.push(a.clone());
		}
		var a1 = this.clone();
		a1.objects = _g;
		a1.bind(base);
		a1.initInstance();
		return a1;
	}
	,bind: function(base) {
		var currentSkin = null;
		var _g = 0;
		var _g1 = this.objects.slice();
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(currentSkin != null) {
				var _this = currentSkin.skinData.namedJoints;
				var key = a.objectName;
				var j = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
				if(j != null) {
					a.targetSkin = currentSkin;
					a.targetJoint = j.index;
				}
			}
			var obj = base.getObjectByName(a.objectName);
			if(obj == null) {
				HxOverrides.remove(this.objects,a);
				continue;
			}
			var joint = (obj instanceof h3d_scene_Joint)?obj:null;
			if(joint != null) {
				currentSkin = joint.parent;
				a.targetSkin = currentSkin;
				a.targetJoint = joint.index;
			} else {
				a.targetObject = obj;
			}
		}
		this.isSync = false;
	}
	,getPropValue: function(objectName,propName) {
		return null;
	}
	,sync: function(decompose) {
		if(decompose == null) {
			decompose = false;
		}
		throw new js__$Boot_HaxeError("assert");
	}
	,isPlaying: function() {
		if(!this.pause) {
			return (this.speed < 0?-this.speed:this.speed) > 0.000001;
		} else {
			return false;
		}
	}
	,endFrame: function() {
		return this.frameCount;
	}
	,update: function(dt) {
		if(!this.isInstance) {
			throw new js__$Boot_HaxeError("You must instanciate this animation first");
		}
		if(!this.isPlaying()) {
			return 0;
		}
		if(this.events != null && this.onEvent != null) {
			var f0 = this.frame | 0;
			var f1 = this.frame + dt * this.speed * this.sampling | 0;
			if(f1 >= this.frameCount) {
				f1 = this.frameCount - 1;
			}
			var _g1 = f0;
			var _g = f1 + 1;
			while(_g1 < _g) {
				var f = _g1++;
				if(f == this.lastEvent) {
					continue;
				}
				this.lastEvent = f;
				if(this.events[f] != null) {
					var oldF = this.frame;
					var oldDT = dt;
					dt -= (f - this.frame) / (this.speed * this.sampling);
					this.frame = f;
					this.onEvent(this.events[f]);
					if(this.frame == f && f == this.frameCount - 1) {
						this.frame = oldF;
						dt = oldDT;
						break;
					} else {
						return dt;
					}
				}
			}
		}
		if(this.onAnimEnd != null) {
			var end = this.endFrame();
			var et = (end - this.frame) / (this.speed * this.sampling);
			if(et <= dt && et > 0) {
				this.frame = end;
				dt -= et;
				this.onAnimEnd();
				if(this.frame == end && this.isPlaying()) {
					if(this.loop) {
						this.frame = 0;
					} else {
						dt = 0;
					}
				}
				return dt;
			}
		}
		this.frame += dt * this.speed * this.sampling;
		if(this.frame >= this.frameCount) {
			if(this.loop) {
				this.frame %= this.frameCount;
			} else {
				this.frame = this.frameCount;
			}
		}
		return 0;
	}
	,toString: function() {
		return this.name;
	}
	,__class__: h3d_anim_Animation
};
var h3d_anim_LinearFrame = function() {
};
$hxClasses["h3d.anim.LinearFrame"] = h3d_anim_LinearFrame;
h3d_anim_LinearFrame.__name__ = ["h3d","anim","LinearFrame"];
h3d_anim_LinearFrame.prototype = {
	toMatrix: function() {
		var m = new h3d_Matrix();
		new h3d_Quat(this.qx,this.qy,this.qz,this.qw).saveToMatrix(m);
		m.prependScale(this.sx,this.sy,this.sz);
		m.translate(this.tx,this.ty,this.tz);
		return m;
	}
	,__class__: h3d_anim_LinearFrame
};
var h3d_anim_LinearObject = function(name) {
	h3d_anim_AnimatedObject.call(this,name);
};
$hxClasses["h3d.anim.LinearObject"] = h3d_anim_LinearObject;
h3d_anim_LinearObject.__name__ = ["h3d","anim","LinearObject"];
h3d_anim_LinearObject.__super__ = h3d_anim_AnimatedObject;
h3d_anim_LinearObject.prototype = $extend(h3d_anim_AnimatedObject.prototype,{
	clone: function() {
		var o = new h3d_anim_LinearObject(this.objectName);
		o.hasRotation = this.hasRotation;
		o.hasScale = this.hasScale;
		o.frames = this.frames;
		o.alphas = this.alphas;
		o.uvs = this.uvs;
		o.propName = this.propName;
		o.propValues = this.propValues;
		return o;
	}
	,__class__: h3d_anim_LinearObject
});
var h3d_anim_LinearAnimation = function(name,frame,sampling) {
	h3d_anim_Animation.call(this,name,frame,sampling);
	this.syncFrame = -1;
};
$hxClasses["h3d.anim.LinearAnimation"] = h3d_anim_LinearAnimation;
h3d_anim_LinearAnimation.__name__ = ["h3d","anim","LinearAnimation"];
h3d_anim_LinearAnimation.__super__ = h3d_anim_Animation;
h3d_anim_LinearAnimation.prototype = $extend(h3d_anim_Animation.prototype,{
	addCurve: function(objName,frames,hasRot,hasScale) {
		var f = new h3d_anim_LinearObject(objName);
		f.frames = frames;
		f.hasRotation = hasRot;
		f.hasScale = hasScale;
		this.objects.push(f);
	}
	,addAlphaCurve: function(objName,alphas) {
		var f = new h3d_anim_LinearObject(objName);
		f.alphas = alphas;
		this.objects.push(f);
	}
	,addUVCurve: function(objName,uvs) {
		var f = new h3d_anim_LinearObject(objName);
		f.uvs = uvs;
		this.objects.push(f);
	}
	,addPropCurve: function(objName,propName,values) {
		var f = new h3d_anim_LinearObject(objName);
		f.propName = propName;
		f.propValues = values;
		this.objects.push(f);
	}
	,getPropValue: function(objName,propName) {
		var _g = 0;
		var _g1 = this.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.objectName == objName && o.propName == propName) {
				return o.propCurrentValue;
			}
		}
		return null;
	}
	,getFrames: function() {
		return this.objects;
	}
	,clone: function(a) {
		if(a == null) {
			a = new h3d_anim_LinearAnimation(this.name,this.frameCount,this.sampling);
		}
		h3d_anim_Animation.prototype.clone.call(this,a);
		return a;
	}
	,endFrame: function() {
		if(this.loop) {
			return this.frameCount;
		} else {
			return this.frameCount - 1;
		}
	}
	,initInstance: function() {
		h3d_anim_Animation.prototype.initInstance.call(this);
		var frames = this.objects;
		var _g = 0;
		while(_g < frames.length) {
			var a = frames[_g];
			++_g;
			if(a.propValues != null) {
				a.propCurrentValue = a.propValues[0];
				continue;
			}
			var tmp;
			if(a.alphas != null) {
				if(a.targetObject != null) {
					var _this = a.targetObject;
					tmp = ((_this instanceof h3d_scene_Mesh)?_this:null) == null;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(a.objectName + " should be a mesh (for alpha animation)");
			}
			if(a.uvs != null || a.alphas != null) {
				continue;
			}
			a.matrix = new h3d_Matrix();
			a.matrix.identity();
		}
		frames.sort($bind(this,this.sortByFrameCountDesc));
	}
	,sortByFrameCountDesc: function(o1,o2) {
		return (o2.frames == null?10:o2.frames.length) - (o1.frames == null?10:o1.frames.length);
	}
	,uvLerp: function(v1,v2,k) {
		v1 %= 1.;
		v2 %= 1.;
		if(v1 < v2 - 0.5) {
			++v1;
		} else if(v1 > v2 + 0.5) {
			--v1;
		}
		return v1 * (1 - k) + v2 * k;
	}
	,sync: function(decompose) {
		if(decompose == null) {
			decompose = false;
		}
		if(this.frame == this.syncFrame && !decompose) {
			return;
		}
		var f = this.frame | 0;
		if(f == this.endFrame()) {
			--f;
		}
		var frame1 = f;
		var frame2 = (frame1 + 1) % this.frameCount;
		var k2 = this.frame - frame1;
		var k1 = 1 - k2;
		if(frame1 < 0) {
			frame2 = 0;
			frame1 = 0;
		} else if(this.frame >= this.frameCount) {
			frame2 = this.frameCount - 1;
			frame1 = frame2;
		}
		this.syncFrame = this.frame;
		if(decompose) {
			this.isSync = false;
		}
		var _g = 0;
		var _g1 = this.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.targetObject == null && o.targetSkin == null) {
				continue;
			}
			if(o.alphas != null) {
				var mat = o.targetObject.toMesh().material;
				if(mat.blendMode == h2d_BlendMode.None) {
					mat.set_blendMode(h2d_BlendMode.Alpha);
				}
				mat.mshader.color__.w = o.alphas[frame1] * k1 + o.alphas[frame2] * k2;
				continue;
			}
			if(o.uvs != null) {
				var mat1 = o.targetObject.toMesh().material;
				var s = mat1.passes.getShader(h3d_shader_UVDelta);
				if(s == null) {
					s = mat1.passes.addShader(new h3d_shader_UVDelta());
					mat1.get_texture().set_wrap(h3d_mat_Wrap.Repeat);
				}
				var v1 = o.uvs[frame1 << 1];
				var v2 = o.uvs[frame2 << 1];
				v1 %= 1.;
				v2 %= 1.;
				if(v1 < v2 - 0.5) {
					++v1;
				} else if(v1 > v2 + 0.5) {
					--v1;
				}
				s.uvDelta__.x = v1 * (1 - k2) + v2 * k2;
				var v11 = o.uvs[frame1 << 1 | 1];
				var v21 = o.uvs[frame2 << 1 | 1];
				v11 %= 1.;
				v21 %= 1.;
				if(v11 < v21 - 0.5) {
					++v11;
				} else if(v11 > v21 + 0.5) {
					--v11;
				}
				s.uvDelta__.y = v11 * (1 - k2) + v21 * k2;
				continue;
			}
			if(o.propValues != null) {
				o.propCurrentValue = o.propValues[frame1] * k1 + o.propValues[frame2] * k2;
				continue;
			}
			var frame11 = frame1;
			var frame21 = frame2;
			if(o.frames.length == 1) {
				if(this.isSync) {
					break;
				}
				frame21 = 0;
				frame11 = 0;
			}
			var f1 = o.frames[frame11];
			var f2 = o.frames[frame21];
			var m = o.matrix;
			m._41 = f1.tx * k1 + f2.tx * k2;
			m._42 = f1.ty * k1 + f2.ty * k2;
			m._43 = f1.tz * k1 + f2.tz * k2;
			if(o.hasRotation) {
				var q2 = f1.qx * f2.qx + f1.qy * f2.qy + f1.qz * f2.qz + f1.qw * f2.qw < 0?-k2:k2;
				var qx = f1.qx * k1 + f2.qx * q2;
				var qy = f1.qy * k1 + f2.qy * q2;
				var qz = f1.qz * k1 + f2.qz * q2;
				var qw = f1.qw * k1 + f2.qw * q2;
				var ql = 1 / Math.sqrt(qx * qx + qy * qy + qz * qz + qw * qw);
				qx *= ql;
				qy *= ql;
				qz *= ql;
				qw *= ql;
				if(decompose) {
					m._12 = qx;
					m._13 = qy;
					m._21 = qz;
					m._23 = qw;
					if(o.hasScale) {
						m._11 = f1.sx * k1 + f2.sx * k2;
						m._22 = f1.sy * k1 + f2.sy * k2;
						m._33 = f1.sz * k1 + f2.sz * k2;
					} else {
						m._11 = 1;
						m._22 = 1;
						m._33 = 1;
					}
				} else {
					var xx = qx * qx;
					var xy = qx * qy;
					var xz = qx * qz;
					var xw = qx * qw;
					var yy = qy * qy;
					var yz = qy * qz;
					var yw = qy * qw;
					var zz = qz * qz;
					var zw = qz * qw;
					m._11 = 1 - 2 * (yy + zz);
					m._12 = 2 * (xy + zw);
					m._13 = 2 * (xz - yw);
					m._21 = 2 * (xy - zw);
					m._22 = 1 - 2 * (xx + zz);
					m._23 = 2 * (yz + xw);
					m._31 = 2 * (xz + yw);
					m._32 = 2 * (yz - xw);
					m._33 = 1 - 2 * (xx + yy);
					if(o.hasScale) {
						var sx = f1.sx * k1 + f2.sx * k2;
						var sy = f1.sy * k1 + f2.sy * k2;
						var sz = f1.sz * k1 + f2.sz * k2;
						m._11 *= sx;
						m._12 *= sx;
						m._13 *= sx;
						m._21 *= sy;
						m._22 *= sy;
						m._23 *= sy;
						m._31 *= sz;
						m._32 *= sz;
						m._33 *= sz;
					}
				}
			} else {
				m._12 = 0;
				m._13 = 0;
				m._21 = 0;
				m._23 = decompose?1:0;
				if(o.hasScale) {
					m._11 = f1.sx * k1 + f2.sx * k2;
					m._22 = f1.sy * k1 + f2.sy * k2;
					m._33 = f1.sz * k1 + f2.sz * k2;
				} else {
					m._11 = 1;
					m._22 = 1;
					m._33 = 1;
				}
			}
			if(o.targetSkin != null) {
				o.targetSkin.currentRelPose[o.targetJoint] = o.matrix;
				o.targetSkin.jointsUpdated = true;
			} else {
				var _this = o.targetObject;
				_this.defaultTransform = o.matrix;
				_this.flags |= 1;
			}
		}
		if(!decompose) {
			this.isSync = true;
		}
	}
	,__class__: h3d_anim_LinearAnimation
});
var h3d_anim_Joint = function() {
	this.bindIndex = -1;
	this.splitIndex = -1;
	this.subs = [];
};
$hxClasses["h3d.anim.Joint"] = h3d_anim_Joint;
h3d_anim_Joint.__name__ = ["h3d","anim","Joint"];
h3d_anim_Joint.prototype = {
	__class__: h3d_anim_Joint
};
var h3d_anim__$Skin_Permut = function() {
};
$hxClasses["h3d.anim._Skin.Permut"] = h3d_anim__$Skin_Permut;
h3d_anim__$Skin_Permut.__name__ = ["h3d","anim","_Skin","Permut"];
h3d_anim__$Skin_Permut.prototype = {
	__class__: h3d_anim__$Skin_Permut
};
var h3d_anim__$Skin_Influence = function(j,w) {
	this.j = j;
	this.w = w;
};
$hxClasses["h3d.anim._Skin.Influence"] = h3d_anim__$Skin_Influence;
h3d_anim__$Skin_Influence.__name__ = ["h3d","anim","_Skin","Influence"];
h3d_anim__$Skin_Influence.prototype = {
	__class__: h3d_anim__$Skin_Influence
};
var h3d_anim_Skin = function(name,vertexCount,bonesPerVertex) {
	this.name = name;
	this.vertexCount = vertexCount;
	this.bonesPerVertex = bonesPerVertex;
	if(vertexCount > 0) {
		this.vertexJoints = new Array(vertexCount * bonesPerVertex);
		this.vertexWeights = new Array(vertexCount * bonesPerVertex);
		this.envelop = [];
	}
};
$hxClasses["h3d.anim.Skin"] = h3d_anim_Skin;
h3d_anim_Skin.__name__ = ["h3d","anim","Skin"];
h3d_anim_Skin.prototype = {
	setJoints: function(joints,roots) {
		this.rootJoints = roots;
		this.allJoints = joints;
		this.namedJoints = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < joints.length) {
			var j = joints[_g];
			++_g;
			if(j.name != null) {
				var _this = this.namedJoints;
				var key = j.name;
				if(__map_reserved[key] != null) {
					_this.setReserved(key,j);
				} else {
					_this.h[key] = j;
				}
			}
		}
	}
	,addInfluence: function(vid,j,w) {
		var il = this.envelop[vid];
		if(il == null) {
			il = this.envelop[vid] = [];
		}
		il.push(new h3d_anim__$Skin_Influence(j,w));
	}
	,sortInfluences: function(i1,i2) {
		if(i2.w > i1.w) {
			return 1;
		} else {
			return -1;
		}
	}
	,isSplit: function() {
		return this.splitJoints != null;
	}
	,initWeights: function() {
		this.boundJoints = [];
		var pos = 0;
		var _g1 = 0;
		var _g = this.vertexCount;
		while(_g1 < _g) {
			var il = this.envelop[_g1++];
			if(il == null) {
				il = [];
			}
			haxe_ds_ArraySort.sort(il,$bind(this,this.sortInfluences));
			if(il.length > this.bonesPerVertex) {
				il = il.slice(0,this.bonesPerVertex);
			}
			var tw = 0.;
			var _g2 = 0;
			while(_g2 < il.length) {
				var i = il[_g2];
				++_g2;
				tw += i.w;
			}
			tw = 1 / tw;
			var _g3 = 0;
			var _g21 = this.bonesPerVertex;
			while(_g3 < _g21) {
				var i1 = il[_g3++];
				if(i1 == null) {
					this.vertexJoints[pos] = 0;
					this.vertexWeights[pos] = 0;
				} else {
					if(i1.j.bindIndex == -1) {
						i1.j.bindIndex = this.boundJoints.length;
						this.boundJoints.push(i1.j);
					}
					this.vertexJoints[pos] = i1.j.bindIndex;
					this.vertexWeights[pos] = i1.w * tw;
				}
				++pos;
			}
		}
		this.envelop = null;
	}
	,sortByBindIndex: function(j1,j2) {
		return j1.bindIndex - j2.bindIndex;
	}
	,isSub: function(a,b) {
		var j = 0;
		var max = b.length;
		var _g = 0;
		while(_g < a.length) {
			var e = a[_g];
			++_g;
			while(e != b[j++]) {
				if(j >= max) {
					return false;
				}
				continue;
			}
		}
		return true;
	}
	,merge: function(permuts) {
		var _g = 0;
		while(_g < permuts.length) {
			var p1 = permuts[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < permuts.length) {
				var p2 = permuts[_g1];
				++_g1;
				if(p1 != p2 && p1.material == p2.material && this.isSub(p1.joints,p2.joints)) {
					var _g2 = 0;
					var _g3 = p1.triangles;
					while(_g2 < _g3.length) {
						var t = _g3[_g2];
						++_g2;
						p2.triangles.push(t);
					}
					HxOverrides.remove(permuts,p1);
					return true;
				}
			}
		}
		return false;
	}
	,jointsDiff: function(p1,p2) {
		var diff = 0;
		var i = 0;
		var j = 0;
		var imax = p1.joints.length;
		var jmax = p2.joints.length;
		while(i < imax && j < jmax) {
			var j1 = p1.joints[i];
			var j2 = p2.joints[j];
			if(j1 == j2) {
				++i;
				++j;
			} else {
				++diff;
				if(j1.bindIndex < j2.bindIndex) {
					++i;
				} else {
					++j;
				}
			}
		}
		return diff + (imax - i) + (jmax - j);
	}
	,split: function(maxBones,index,triangleMaterials) {
		if(this.splitJoints != null) {
			return true;
		}
		if(this.boundJoints.length <= maxBones) {
			return false;
		}
		this.splitJoints = [];
		var length = index.length / 3 | 0;
		this.triangleGroups = new Array(length);
		var permuts = [];
		var _g1 = 0;
		var _g = index.length / 3 | 0;
		while(_g1 < _g) {
			var tri = _g1++;
			var iid = tri * 3;
			var mid = triangleMaterials == null?0:triangleMaterials[tri];
			var jl = [];
			var _g2 = 0;
			while(_g2 < 3) {
				var vid = index[iid + _g2++];
				var _g4 = 0;
				var _g3 = this.bonesPerVertex;
				while(_g4 < _g3) {
					var bidx = vid * this.bonesPerVertex + _g4++;
					if(this.vertexWeights[bidx] == 0) {
						continue;
					}
					var j = this.boundJoints[this.vertexJoints[bidx]];
					if(j.splitIndex != iid) {
						j.splitIndex = iid;
						jl.push(j);
					}
				}
			}
			jl.sort($bind(this,this.sortByBindIndex));
			var _g21 = 0;
			while(_g21 < permuts.length) {
				var p2 = permuts[_g21];
				++_g21;
				if(p2.material == mid && this.isSub(jl,p2.joints)) {
					p2.triangles.push(tri);
					jl = null;
					break;
				}
			}
			if(jl == null) {
				continue;
			}
			var _g22 = 0;
			while(_g22 < permuts.length) {
				var p21 = permuts[_g22];
				++_g22;
				if(p21.material == mid && this.isSub(p21.joints,jl)) {
					p21.joints = jl;
					p21.triangles.push(tri);
					jl = null;
					break;
				}
			}
			if(jl == null) {
				continue;
			}
			var pr = new h3d_anim__$Skin_Permut();
			pr.joints = jl;
			pr.triangles = [tri];
			pr.material = mid;
			permuts.push(pr);
		}
		while(true) {
			while(this.merge(permuts)) {
			}
			var minDif = 100000;
			var minTot = 100000;
			var minP1 = null;
			var minP2 = null;
			var _g11 = 0;
			var _g5 = permuts.length;
			while(_g11 < _g5) {
				var i = _g11++;
				var p1 = permuts[i];
				if(p1.joints.length == maxBones) {
					continue;
				}
				var _g31 = i + 1;
				var _g23 = permuts.length;
				while(_g31 < _g23) {
					var p22 = permuts[_g31++];
					if(p22.joints.length == maxBones || p1.material != p22.material) {
						continue;
					}
					var count = this.jointsDiff(p1,p22);
					var tot = count + (p1.joints.length + p22.joints.length - count >> 1);
					if(tot > maxBones || tot > minTot || tot == minTot && count > minDif) {
						continue;
					}
					minDif = count;
					minTot = tot;
					minP1 = p1;
					minP2 = p22;
				}
			}
			if(minP1 == null) {
				break;
			}
			var p11 = minP1;
			var p23 = minP2;
			var _g6 = 0;
			var _g12 = p11.joints;
			while(_g6 < _g12.length) {
				var j1 = _g12[_g6];
				++_g6;
				HxOverrides.remove(p23.joints,j1);
				p23.joints.push(j1);
			}
			p23.joints.sort($bind(this,this.sortByBindIndex));
			var _g7 = 0;
			var _g13 = p11.triangles;
			while(_g7 < _g13.length) {
				var t = _g13[_g7];
				++_g7;
				p23.triangles.push(t);
			}
			HxOverrides.remove(permuts,p11);
		}
		var _g14 = 0;
		var _g8 = permuts.length;
		while(_g14 < _g8) {
			var i1 = _g14++;
			var _g24 = 0;
			var _g32 = permuts[i1].triangles;
			while(_g24 < _g32.length) {
				var tri1 = _g32[_g24];
				++_g24;
				this.triangleGroups[tri1] = i1;
			}
		}
		var jointsPermuts = [];
		var _g9 = 0;
		var _g15 = this.boundJoints;
		while(_g9 < _g15.length) {
			var j2 = _g15[_g9];
			++_g9;
			var pl = [];
			var _g25 = 0;
			while(_g25 < permuts.length) {
				var p = permuts[_g25];
				++_g25;
				if(p.joints.indexOf(j2) >= 0) {
					pl.push(p);
				}
			}
			jointsPermuts.push({ j : j2, pl : pl});
		}
		jointsPermuts.sort(function(j11,j21) {
			return j21.pl.length - j11.pl.length;
		});
		var _g10 = 0;
		while(_g10 < permuts.length) {
			var p3 = permuts[_g10];
			++_g10;
			p3.indexedJoints = [];
		}
		var _g16 = 0;
		while(_g16 < jointsPermuts.length) {
			var j3 = jointsPermuts[_g16];
			++_g16;
			j3.j.splitIndex = -1;
			var _g26 = 0;
			var _g17 = maxBones;
			while(_g26 < _g17) {
				var id = _g26++;
				var ok = true;
				var _g33 = 0;
				var _g41 = j3.pl;
				while(_g33 < _g41.length) {
					var p4 = _g41[_g33];
					++_g33;
					if(p4.indexedJoints[id] != null) {
						ok = false;
						break;
					}
				}
				if(ok) {
					j3.j.splitIndex = id;
					var _g34 = 0;
					var _g42 = j3.pl;
					while(_g34 < _g42.length) {
						var p5 = _g42[_g34];
						++_g34;
						p5.indexedJoints[id] = j3.j;
					}
					break;
				}
			}
			if(j3.j.splitIndex < 0) {
				throw new js__$Boot_HaxeError("Failed to assign index while spliting skin");
			}
		}
		this.splitJoints = [];
		var _g18 = 0;
		while(_g18 < permuts.length) {
			var p6 = permuts[_g18];
			++_g18;
			var jl1 = [];
			var _g27 = 0;
			var _g19 = p6.indexedJoints.length;
			while(_g27 < _g19) {
				var j4 = p6.indexedJoints[_g27++];
				if(j4 == null) {
					j4 = this.boundJoints[0];
				}
				jl1.push(j4);
			}
			this.splitJoints.push({ material : p6.material, joints : jl1});
		}
		var _g110 = 0;
		var _g20 = this.vertexJoints.length;
		while(_g110 < _g20) {
			var i2 = _g110++;
			this.vertexJoints[i2] = this.boundJoints[this.vertexJoints[i2]].splitIndex;
		}
		return true;
	}
	,__class__: h3d_anim_Skin
};
var h3d_col_Collider = function() { };
$hxClasses["h3d.col.Collider"] = h3d_col_Collider;
h3d_col_Collider.__name__ = ["h3d","col","Collider"];
h3d_col_Collider.prototype = {
	__class__: h3d_col_Collider
};
var h3d_col_Bounds = function() {
	this.xMin = 1e20;
	this.xMax = -1e20;
	this.yMin = 1e20;
	this.yMax = -1e20;
	this.zMin = 1e20;
	this.zMax = -1e20;
};
$hxClasses["h3d.col.Bounds"] = h3d_col_Bounds;
h3d_col_Bounds.__name__ = ["h3d","col","Bounds"];
h3d_col_Bounds.__interfaces__ = [h3d_col_Collider];
h3d_col_Bounds.fromPoints = function(min,max) {
	var b = new h3d_col_Bounds();
	b.xMin = min.x;
	b.yMin = min.y;
	b.zMin = min.z;
	b.xMax = max.x;
	b.yMax = max.y;
	b.zMax = max.z;
	return b;
};
h3d_col_Bounds.fromValues = function(x,y,z,dx,dy,dz) {
	var b = new h3d_col_Bounds();
	b.xMin = x;
	b.yMin = y;
	b.zMin = z;
	b.xMax = x + dx;
	b.yMax = y + dy;
	b.zMax = z + dz;
	return b;
};
h3d_col_Bounds.prototype = {
	inFrustum: function(mvp) {
		var nx = mvp._14 + mvp._11;
		var ny = mvp._24 + mvp._21;
		var nz = mvp._34 + mvp._31;
		var d = -(mvp._44 + mvp._41);
		var a = nx;
		var b = ny;
		var c = nz;
		var dd = nx * (this.xMax + this.xMin) + ny * (this.yMax + this.yMin) + nz * (this.zMax + this.zMin);
		if(nx < 0) {
			a = -nx;
		}
		if(ny < 0) {
			b = -ny;
		}
		if(nz < 0) {
			c = -nz;
		}
		if(dd + (a * (this.xMax - this.xMin) + b * (this.yMax - this.yMin) + c * (this.zMax - this.zMin)) - d * 2 < 0) {
			return false;
		}
		var nx1 = mvp._14 - mvp._11;
		var ny1 = mvp._24 - mvp._21;
		var nz1 = mvp._34 - mvp._31;
		var d1 = mvp._41 - mvp._44;
		var a1 = nx1;
		var b1 = ny1;
		var c1 = nz1;
		var dd1 = nx1 * (this.xMax + this.xMin) + ny1 * (this.yMax + this.yMin) + nz1 * (this.zMax + this.zMin);
		if(nx1 < 0) {
			a1 = -nx1;
		}
		if(ny1 < 0) {
			b1 = -ny1;
		}
		if(nz1 < 0) {
			c1 = -nz1;
		}
		if(dd1 + (a1 * (this.xMax - this.xMin) + b1 * (this.yMax - this.yMin) + c1 * (this.zMax - this.zMin)) - d1 * 2 < 0) {
			return false;
		}
		var nx2 = mvp._14 + mvp._12;
		var ny2 = mvp._24 + mvp._22;
		var nz2 = mvp._34 + mvp._32;
		var d2 = -(mvp._44 + mvp._42);
		var a2 = nx2;
		var b2 = ny2;
		var c2 = nz2;
		var dd2 = nx2 * (this.xMax + this.xMin) + ny2 * (this.yMax + this.yMin) + nz2 * (this.zMax + this.zMin);
		if(nx2 < 0) {
			a2 = -nx2;
		}
		if(ny2 < 0) {
			b2 = -ny2;
		}
		if(nz2 < 0) {
			c2 = -nz2;
		}
		if(dd2 + (a2 * (this.xMax - this.xMin) + b2 * (this.yMax - this.yMin) + c2 * (this.zMax - this.zMin)) - d2 * 2 < 0) {
			return false;
		}
		var nx3 = mvp._14 - mvp._12;
		var ny3 = mvp._24 - mvp._22;
		var nz3 = mvp._34 - mvp._32;
		var d3 = mvp._42 - mvp._44;
		var a3 = nx3;
		var b3 = ny3;
		var c3 = nz3;
		var dd3 = nx3 * (this.xMax + this.xMin) + ny3 * (this.yMax + this.yMin) + nz3 * (this.zMax + this.zMin);
		if(nx3 < 0) {
			a3 = -nx3;
		}
		if(ny3 < 0) {
			b3 = -ny3;
		}
		if(nz3 < 0) {
			c3 = -nz3;
		}
		if(dd3 + (a3 * (this.xMax - this.xMin) + b3 * (this.yMax - this.yMin) + c3 * (this.zMax - this.zMin)) - d3 * 2 < 0) {
			return false;
		}
		var nx4 = mvp._13;
		var ny4 = mvp._23;
		var nz4 = mvp._33;
		var d4 = -mvp._43;
		var a4 = nx4;
		var b4 = ny4;
		var c4 = nz4;
		var dd4 = nx4 * (this.xMax + this.xMin) + ny4 * (this.yMax + this.yMin) + nz4 * (this.zMax + this.zMin);
		if(nx4 < 0) {
			a4 = -nx4;
		}
		if(ny4 < 0) {
			b4 = -ny4;
		}
		if(nz4 < 0) {
			c4 = -nz4;
		}
		if(dd4 + (a4 * (this.xMax - this.xMin) + b4 * (this.yMax - this.yMin) + c4 * (this.zMax - this.zMin)) - d4 * 2 < 0) {
			return false;
		}
		var nx5 = mvp._14 - mvp._13;
		var ny5 = mvp._24 - mvp._23;
		var nz5 = mvp._34 - mvp._33;
		var d5 = mvp._43 - mvp._44;
		var a5 = nx5;
		var b5 = ny5;
		var c5 = nz5;
		var dd5 = nx5 * (this.xMax + this.xMin) + ny5 * (this.yMax + this.yMin) + nz5 * (this.zMax + this.zMin);
		if(nx5 < 0) {
			a5 = -nx5;
		}
		if(ny5 < 0) {
			b5 = -ny5;
		}
		if(nz5 < 0) {
			c5 = -nz5;
		}
		if(dd5 + (a5 * (this.xMax - this.xMin) + b5 * (this.yMax - this.yMin) + c5 * (this.zMax - this.zMin)) - d5 * 2 < 0) {
			return false;
		}
		return true;
	}
	,testPlane: function(p) {
		var a = p.nx;
		var b = p.ny;
		var c = p.nz;
		var dd = a * (this.xMax + this.xMin) + b * (this.yMax + this.yMin) + c * (this.zMax + this.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b < 0) {
			b = -b;
		}
		if(c < 0) {
			c = -c;
		}
		return dd + (a * (this.xMax - this.xMin) + b * (this.yMax - this.yMin) + c * (this.zMax - this.zMin)) - p.d * 2;
	}
	,rayIntersection: function(r,p) {
		var minTx = (this.xMin - r.px) / r.lx;
		var minTy = (this.yMin - r.py) / r.ly;
		var minTz = (this.zMin - r.pz) / r.lz;
		var maxTx = (this.xMax - r.px) / r.lx;
		var maxTy = (this.yMax - r.py) / r.ly;
		var maxTz = (this.zMax - r.pz) / r.lz;
		var realMinTx = minTx > maxTx?maxTx:minTx;
		var realMinTy = minTy > maxTy?maxTy:minTy;
		var realMinTz = minTz > maxTz?maxTz:minTz;
		var realMaxTx = minTx < maxTx?maxTx:minTx;
		var realMaxTy = minTy < maxTy?maxTy:minTy;
		var realMaxTz = minTz < maxTz?maxTz:minTz;
		var a = realMaxTx > realMaxTy?realMaxTy:realMaxTx;
		var minmax = a > realMaxTz?realMaxTz:a;
		var a1 = realMinTx < realMinTy?realMinTy:realMinTx;
		var maxmin = a1 < realMinTz?realMinTz:a1;
		if(minmax < maxmin) {
			return null;
		}
		if(p == null) {
			p = new h3d_col_Point();
		}
		var x = r.px + maxmin * r.lx;
		var y = r.py + maxmin * r.ly;
		var z = r.pz + maxmin * r.lz;
		p.x = x;
		p.y = y;
		p.z = z;
		return p;
	}
	,inFrustumDetails: function(mvp,checkZ) {
		if(checkZ == null) {
			checkZ = true;
		}
		var ret = 1;
		var nx = mvp._14 + mvp._11;
		var ny = mvp._24 + mvp._21;
		var nz = mvp._34 + mvp._31;
		var d = mvp._44 + mvp._41;
		if(nx * (nx > 0?this.xMax:this.xMin) + ny * (ny > 0?this.yMax:this.yMin) + nz * (nz > 0?this.zMax:this.zMin) + d < 0) {
			return -1;
		}
		if(nx * (nx > 0?this.xMin:this.xMax) + ny * (ny > 0?this.yMin:this.yMax) + nz * (nz > 0?this.zMin:this.zMax) + d < 0) {
			ret = 0;
		}
		var nx1 = mvp._14 - mvp._11;
		var ny1 = mvp._24 - mvp._21;
		var nz1 = mvp._34 - mvp._31;
		var d1 = mvp._44 - mvp._41;
		if(nx1 * (nx1 > 0?this.xMax:this.xMin) + ny1 * (ny1 > 0?this.yMax:this.yMin) + nz1 * (nz1 > 0?this.zMax:this.zMin) + d1 < 0) {
			return -1;
		}
		if(nx1 * (nx1 > 0?this.xMin:this.xMax) + ny1 * (ny1 > 0?this.yMin:this.yMax) + nz1 * (nz1 > 0?this.zMin:this.zMax) + d1 < 0) {
			ret = 0;
		}
		var nx2 = mvp._14 + mvp._12;
		var ny2 = mvp._24 + mvp._22;
		var nz2 = mvp._34 + mvp._32;
		var d2 = mvp._44 + mvp._42;
		if(nx2 * (nx2 > 0?this.xMax:this.xMin) + ny2 * (ny2 > 0?this.yMax:this.yMin) + nz2 * (nz2 > 0?this.zMax:this.zMin) + d2 < 0) {
			return -1;
		}
		if(nx2 * (nx2 > 0?this.xMin:this.xMax) + ny2 * (ny2 > 0?this.yMin:this.yMax) + nz2 * (nz2 > 0?this.zMin:this.zMax) + d2 < 0) {
			ret = 0;
		}
		var nx3 = mvp._14 - mvp._12;
		var ny3 = mvp._24 - mvp._22;
		var nz3 = mvp._34 - mvp._32;
		var d3 = mvp._44 - mvp._42;
		if(nx3 * (nx3 > 0?this.xMax:this.xMin) + ny3 * (ny3 > 0?this.yMax:this.yMin) + nz3 * (nz3 > 0?this.zMax:this.zMin) + d3 < 0) {
			return -1;
		}
		if(nx3 * (nx3 > 0?this.xMin:this.xMax) + ny3 * (ny3 > 0?this.yMin:this.yMax) + nz3 * (nz3 > 0?this.zMin:this.zMax) + d3 < 0) {
			ret = 0;
		}
		if(checkZ) {
			var nx4 = mvp._13;
			var ny4 = mvp._23;
			var nz4 = mvp._33;
			var d4 = mvp._43;
			if(nx4 * (nx4 > 0?this.xMax:this.xMin) + ny4 * (ny4 > 0?this.yMax:this.yMin) + nz4 * (nz4 > 0?this.zMax:this.zMin) + d4 < 0) {
				return -1;
			}
			if(nx4 * (nx4 > 0?this.xMin:this.xMax) + ny4 * (ny4 > 0?this.yMin:this.yMax) + nz4 * (nz4 > 0?this.zMin:this.zMax) + d4 < 0) {
				ret = 0;
			}
			var nx5 = mvp._14 - mvp._13;
			var ny5 = mvp._24 - mvp._23;
			var nz5 = mvp._34 - mvp._33;
			var d5 = mvp._44 - mvp._43;
			if(nx5 * (nx5 > 0?this.xMax:this.xMin) + ny5 * (ny5 > 0?this.yMax:this.yMin) + nz5 * (nz5 > 0?this.zMax:this.zMin) + d5 < 0) {
				return -1;
			}
			if(nx5 * (nx5 > 0?this.xMin:this.xMax) + ny5 * (ny5 > 0?this.yMin:this.yMax) + nz5 * (nz5 > 0?this.zMin:this.zMax) + d5 < 0) {
				ret = 0;
			}
		}
		return ret;
	}
	,transform3x4: function(m) {
		var xMin = this.xMin;
		var yMin = this.yMin;
		var zMin = this.zMin;
		var xMax = this.xMax;
		var yMax = this.yMax;
		var zMax = this.zMax;
		this.xMin = 1e20;
		this.xMax = -1e20;
		this.yMin = 1e20;
		this.yMax = -1e20;
		this.zMin = 1e20;
		this.zMax = -1e20;
		var v_z;
		var v_y;
		var v_x = 0.;
		v_y = 0.;
		v_z = 0.;
		v_x = xMin;
		v_y = yMin;
		v_z = zMin;
		var px = xMin * m._11 + yMin * m._21 + zMin * m._31 + m._41;
		var py = xMin * m._12 + yMin * m._22 + zMin * m._32 + m._42;
		var pz = xMin * m._13 + yMin * m._23 + zMin * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMin;
		v_y = yMin;
		v_z = zMax;
		var px1 = xMin * m._11 + yMin * m._21 + zMax * m._31 + m._41;
		var py1 = xMin * m._12 + yMin * m._22 + zMax * m._32 + m._42;
		var pz1 = xMin * m._13 + yMin * m._23 + zMax * m._33 + m._43;
		v_x = px1;
		v_y = py1;
		v_z = pz1;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMin;
		v_y = yMax;
		v_z = zMin;
		var px2 = xMin * m._11 + yMax * m._21 + zMin * m._31 + m._41;
		var py2 = xMin * m._12 + yMax * m._22 + zMin * m._32 + m._42;
		var pz2 = xMin * m._13 + yMax * m._23 + zMin * m._33 + m._43;
		v_x = px2;
		v_y = py2;
		v_z = pz2;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMin;
		v_y = yMax;
		v_z = zMax;
		var px3 = xMin * m._11 + yMax * m._21 + zMax * m._31 + m._41;
		var py3 = xMin * m._12 + yMax * m._22 + zMax * m._32 + m._42;
		var pz3 = xMin * m._13 + yMax * m._23 + zMax * m._33 + m._43;
		v_x = px3;
		v_y = py3;
		v_z = pz3;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMax;
		v_y = yMin;
		v_z = zMin;
		var px4 = xMax * m._11 + yMin * m._21 + zMin * m._31 + m._41;
		var py4 = xMax * m._12 + yMin * m._22 + zMin * m._32 + m._42;
		var pz4 = xMax * m._13 + yMin * m._23 + zMin * m._33 + m._43;
		v_x = px4;
		v_y = py4;
		v_z = pz4;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMax;
		v_y = yMin;
		v_z = zMax;
		var px5 = xMax * m._11 + yMin * m._21 + zMax * m._31 + m._41;
		var py5 = xMax * m._12 + yMin * m._22 + zMax * m._32 + m._42;
		var pz5 = xMax * m._13 + yMin * m._23 + zMax * m._33 + m._43;
		v_x = px5;
		v_y = py5;
		v_z = pz5;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMax;
		v_y = yMax;
		v_z = zMin;
		var px6 = xMax * m._11 + yMax * m._21 + zMin * m._31 + m._41;
		var py6 = xMax * m._12 + yMax * m._22 + zMin * m._32 + m._42;
		var pz6 = xMax * m._13 + yMax * m._23 + zMin * m._33 + m._43;
		v_x = px6;
		v_y = py6;
		v_z = pz6;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		v_x = xMax;
		v_y = yMax;
		v_z = zMax;
		var px7 = xMax * m._11 + yMax * m._21 + zMax * m._31 + m._41;
		var py7 = xMax * m._12 + yMax * m._22 + zMax * m._32 + m._42;
		var pz7 = xMax * m._13 + yMax * m._23 + zMax * m._33 + m._43;
		v_x = px7;
		v_y = py7;
		v_z = pz7;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
	}
	,collide: function(b) {
		return !(this.xMin > b.xMax || this.yMin > b.yMax || this.zMin > b.zMax || this.xMax < b.xMin || this.yMax < b.yMin || this.zMax < b.zMin);
	}
	,contains: function(p) {
		if(p.x >= this.xMin && p.x < this.xMax && p.y >= this.yMin && p.y < this.yMax && p.z >= this.zMin) {
			return p.z < this.zMax;
		} else {
			return false;
		}
	}
	,add: function(b) {
		if(b.xMin < this.xMin) {
			this.xMin = b.xMin;
		}
		if(b.xMax > this.xMax) {
			this.xMax = b.xMax;
		}
		if(b.yMin < this.yMin) {
			this.yMin = b.yMin;
		}
		if(b.yMax > this.yMax) {
			this.yMax = b.yMax;
		}
		if(b.zMin < this.zMin) {
			this.zMin = b.zMin;
		}
		if(b.zMax > this.zMax) {
			this.zMax = b.zMax;
		}
	}
	,addPoint: function(p) {
		if(p.x < this.xMin) {
			this.xMin = p.x;
		}
		if(p.x > this.xMax) {
			this.xMax = p.x;
		}
		if(p.y < this.yMin) {
			this.yMin = p.y;
		}
		if(p.y > this.yMax) {
			this.yMax = p.y;
		}
		if(p.z < this.zMin) {
			this.zMin = p.z;
		}
		if(p.z > this.zMax) {
			this.zMax = p.z;
		}
	}
	,addPos: function(x,y,z) {
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
		if(z < this.zMin) {
			this.zMin = z;
		}
		if(z > this.zMax) {
			this.zMax = z;
		}
	}
	,intersection: function(a,b) {
		var a1 = a.xMin;
		var b1 = b.xMin;
		var xMin = a1 < b1?b1:a1;
		var a2 = a.yMin;
		var b2 = b.yMin;
		var yMin = a2 < b2?b2:a2;
		var a3 = a.zMin;
		var b3 = b.zMin;
		var zMin = a3 < b3?b3:a3;
		var a4 = a.xMax;
		var b4 = b.xMax;
		var xMax = a4 < b4?b4:a4;
		var a5 = a.yMax;
		var b5 = b.yMax;
		var yMax = a5 < b5?b5:a5;
		var a6 = a.zMax;
		var b6 = b.zMax;
		var zMax = a6 < b6?b6:a6;
		this.xMin = xMin;
		this.xMax = xMax;
		this.yMin = yMin;
		this.yMax = yMax;
		this.zMin = zMin;
		this.zMax = zMax;
	}
	,offset: function(dx,dy,dz) {
		this.xMin += dx;
		this.xMax += dx;
		this.yMin += dy;
		this.yMax += dy;
		this.zMin += dz;
		this.zMax += dz;
	}
	,setMin: function(p) {
		this.xMin = p.x;
		this.yMin = p.y;
		this.zMin = p.z;
	}
	,setMax: function(p) {
		this.xMax = p.x;
		this.yMax = p.y;
		this.zMax = p.z;
	}
	,load: function(b) {
		this.xMin = b.xMin;
		this.xMax = b.xMax;
		this.yMin = b.yMin;
		this.yMax = b.yMax;
		this.zMin = b.zMin;
		this.zMax = b.zMax;
	}
	,scalePivot: function(v) {
		this.xMin *= v;
		this.yMin *= v;
		this.zMin *= v;
		this.xMax *= v;
		this.yMax *= v;
		this.zMax *= v;
	}
	,scaleCenter: function(v) {
		var dx = (this.xMax - this.xMin) * 0.5 * v;
		var dy = (this.yMax - this.yMin) * 0.5 * v;
		var dz = (this.zMax - this.zMin) * 0.5 * v;
		var mx = (this.xMax + this.xMin) * 0.5;
		var my = (this.yMax + this.yMin) * 0.5;
		var mz = (this.zMax + this.zMin) * 0.5;
		this.xMin = mx - dx;
		this.yMin = my - dy;
		this.zMin = mz - dz;
		this.xMax = mx + dx;
		this.yMax = my + dy;
		this.zMax = mz + dz;
	}
	,getMin: function() {
		return new h3d_col_Point(this.xMin,this.yMin,this.zMin);
	}
	,getCenter: function() {
		return new h3d_col_Point((this.xMin + this.xMax) * 0.5,(this.yMin + this.yMax) * 0.5,(this.zMin + this.zMax) * 0.5);
	}
	,getSize: function() {
		return new h3d_col_Point(this.xMax - this.xMin,this.yMax - this.yMin,this.zMax - this.zMin);
	}
	,getMax: function() {
		return new h3d_col_Point(this.xMax,this.yMax,this.zMax);
	}
	,get_xSize: function() {
		return this.xMax - this.xMin;
	}
	,get_ySize: function() {
		return this.yMax - this.yMin;
	}
	,get_zSize: function() {
		return this.zMax - this.zMin;
	}
	,set_xSize: function(v) {
		this.xMax = this.xMin + v;
		return v;
	}
	,set_ySize: function(v) {
		this.yMax = this.yMin + v;
		return v;
	}
	,set_zSize: function(v) {
		this.zMax = this.zMin + v;
		return v;
	}
	,empty: function() {
		this.xMin = 1e20;
		this.xMax = -1e20;
		this.yMin = 1e20;
		this.yMax = -1e20;
		this.zMin = 1e20;
		this.zMax = -1e20;
	}
	,all: function() {
		this.xMin = -1e20;
		this.xMax = 1e20;
		this.yMin = -1e20;
		this.yMax = 1e20;
		this.zMin = -1e20;
		this.zMax = 1e20;
	}
	,clone: function() {
		var b = new h3d_col_Bounds();
		b.xMin = this.xMin;
		b.xMax = this.xMax;
		b.yMin = this.yMin;
		b.yMax = this.yMax;
		b.zMin = this.zMin;
		b.zMax = this.zMax;
		return b;
	}
	,toString: function() {
		return "Bounds{" + Std.string(new h3d_col_Point(this.xMin,this.yMin,this.zMin)) + "," + Std.string(new h3d_col_Point(this.xMax - this.xMin,this.yMax - this.yMin,this.zMax - this.zMin)) + "}";
	}
	,toSphere: function() {
		var dx = this.xMax - this.xMin;
		var dy = this.yMax - this.yMin;
		var dz = this.zMax - this.zMin;
		return new h3d_col_Sphere((this.xMin + this.xMax) * 0.5,(this.yMin + this.yMax) * 0.5,(this.zMin + this.zMax) * 0.5,Math.sqrt(dx * dx + dy * dy + dz * dz) * 0.5);
	}
	,__class__: h3d_col_Bounds
};
var h3d_col_OptimizedCollider = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["h3d.col.OptimizedCollider"] = h3d_col_OptimizedCollider;
h3d_col_OptimizedCollider.__name__ = ["h3d","col","OptimizedCollider"];
h3d_col_OptimizedCollider.__interfaces__ = [h3d_col_Collider];
h3d_col_OptimizedCollider.prototype = {
	rayIntersection: function(r,p) {
		if(this.a.rayIntersection(r,p) == null) {
			return null;
		}
		return this.b.rayIntersection(r,p);
	}
	,contains: function(p) {
		if(this.a.contains(p)) {
			return this.b.contains(p);
		} else {
			return false;
		}
	}
	,inFrustum: function(mvp) {
		if(this.a.inFrustum(mvp)) {
			return this.b.inFrustum(mvp);
		} else {
			return false;
		}
	}
	,__class__: h3d_col_OptimizedCollider
};
var h3d_col_Frustum = function(mvp) {
	this.checkNearFar = true;
	this.pleft = new h3d_col_Plane(mvp._14 + mvp._11,mvp._24 + mvp._21,mvp._34 + mvp._31,-(mvp._44 + mvp._41));
	this.pright = new h3d_col_Plane(mvp._14 - mvp._11,mvp._24 - mvp._21,mvp._34 - mvp._31,mvp._41 - mvp._44);
	this.ptop = new h3d_col_Plane(mvp._14 - mvp._12,mvp._24 - mvp._22,mvp._34 - mvp._32,mvp._42 - mvp._44);
	this.pbottom = new h3d_col_Plane(mvp._14 + mvp._12,mvp._24 + mvp._22,mvp._34 + mvp._32,-(mvp._44 + mvp._42));
	this.pnear = new h3d_col_Plane(mvp._13,mvp._23,mvp._33,-mvp._43);
	this.pfar = new h3d_col_Plane(mvp._14 - mvp._13,mvp._24 - mvp._23,mvp._34 - mvp._33,mvp._43 - mvp._44);
	var _this = this.pleft;
	var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
	_this.nx *= len;
	_this.ny *= len;
	_this.nz *= len;
	_this.d *= len;
	var _this1 = this.pright;
	var len1 = 1. / Math.sqrt(_this1.nx * _this1.nx + _this1.ny * _this1.ny + _this1.nz * _this1.nz);
	_this1.nx *= len1;
	_this1.ny *= len1;
	_this1.nz *= len1;
	_this1.d *= len1;
	var _this2 = this.ptop;
	var len2 = 1. / Math.sqrt(_this2.nx * _this2.nx + _this2.ny * _this2.ny + _this2.nz * _this2.nz);
	_this2.nx *= len2;
	_this2.ny *= len2;
	_this2.nz *= len2;
	_this2.d *= len2;
	var _this3 = this.pbottom;
	var len3 = 1. / Math.sqrt(_this3.nx * _this3.nx + _this3.ny * _this3.ny + _this3.nz * _this3.nz);
	_this3.nx *= len3;
	_this3.ny *= len3;
	_this3.nz *= len3;
	_this3.d *= len3;
	var _this4 = this.pnear;
	var len4 = 1. / Math.sqrt(_this4.nx * _this4.nx + _this4.ny * _this4.ny + _this4.nz * _this4.nz);
	_this4.nx *= len4;
	_this4.ny *= len4;
	_this4.nz *= len4;
	_this4.d *= len4;
	var _this5 = this.pfar;
	var len5 = 1. / Math.sqrt(_this5.nx * _this5.nx + _this5.ny * _this5.ny + _this5.nz * _this5.nz);
	_this5.nx *= len5;
	_this5.ny *= len5;
	_this5.nz *= len5;
	_this5.d *= len5;
};
$hxClasses["h3d.col.Frustum"] = h3d_col_Frustum;
h3d_col_Frustum.__name__ = ["h3d","col","Frustum"];
h3d_col_Frustum.prototype = {
	hasSphere: function(s) {
		var x = s.x;
		var y = s.y;
		var z = s.z;
		var _this = this.pleft;
		if(_this.nx * x + _this.ny * y + _this.nz * z - _this.d < -s.r) {
			return false;
		}
		var _this1 = this.pright;
		if(_this1.nx * x + _this1.ny * y + _this1.nz * z - _this1.d < -s.r) {
			return false;
		}
		var _this2 = this.ptop;
		if(_this2.nx * x + _this2.ny * y + _this2.nz * z - _this2.d < -s.r) {
			return false;
		}
		var _this3 = this.pbottom;
		if(_this3.nx * x + _this3.ny * y + _this3.nz * z - _this3.d < -s.r) {
			return false;
		}
		if(this.checkNearFar) {
			var _this4 = this.pnear;
			if(_this4.nx * x + _this4.ny * y + _this4.nz * z - _this4.d < -s.r) {
				return false;
			}
			var _this5 = this.pfar;
			if(_this5.nx * x + _this5.ny * y + _this5.nz * z - _this5.d < -s.r) {
				return false;
			}
		}
		return true;
	}
	,hasBounds: function(b) {
		var p = this.pleft;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		if(dd + (a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin)) - p.d * 2 < 0) {
			return false;
		}
		var p1 = this.pright;
		var a1 = p1.nx;
		var b2 = p1.ny;
		var c1 = p1.nz;
		var dd1 = a1 * (b.xMax + b.xMin) + b2 * (b.yMax + b.yMin) + c1 * (b.zMax + b.zMin);
		if(a1 < 0) {
			a1 = -a1;
		}
		if(b2 < 0) {
			b2 = -b2;
		}
		if(c1 < 0) {
			c1 = -c1;
		}
		if(dd1 + (a1 * (b.xMax - b.xMin) + b2 * (b.yMax - b.yMin) + c1 * (b.zMax - b.zMin)) - p1.d * 2 < 0) {
			return false;
		}
		var p2 = this.ptop;
		var a2 = p2.nx;
		var b3 = p2.ny;
		var c2 = p2.nz;
		var dd2 = a2 * (b.xMax + b.xMin) + b3 * (b.yMax + b.yMin) + c2 * (b.zMax + b.zMin);
		if(a2 < 0) {
			a2 = -a2;
		}
		if(b3 < 0) {
			b3 = -b3;
		}
		if(c2 < 0) {
			c2 = -c2;
		}
		if(dd2 + (a2 * (b.xMax - b.xMin) + b3 * (b.yMax - b.yMin) + c2 * (b.zMax - b.zMin)) - p2.d * 2 < 0) {
			return false;
		}
		var p3 = this.ptop;
		var a3 = p3.nx;
		var b4 = p3.ny;
		var c3 = p3.nz;
		var dd3 = a3 * (b.xMax + b.xMin) + b4 * (b.yMax + b.yMin) + c3 * (b.zMax + b.zMin);
		if(a3 < 0) {
			a3 = -a3;
		}
		if(b4 < 0) {
			b4 = -b4;
		}
		if(c3 < 0) {
			c3 = -c3;
		}
		if(dd3 + (a3 * (b.xMax - b.xMin) + b4 * (b.yMax - b.yMin) + c3 * (b.zMax - b.zMin)) - p3.d * 2 < 0) {
			return false;
		}
		var p4 = this.pnear;
		var a4 = p4.nx;
		var b5 = p4.ny;
		var c4 = p4.nz;
		var dd4 = a4 * (b.xMax + b.xMin) + b5 * (b.yMax + b.yMin) + c4 * (b.zMax + b.zMin);
		if(a4 < 0) {
			a4 = -a4;
		}
		if(b5 < 0) {
			b5 = -b5;
		}
		if(c4 < 0) {
			c4 = -c4;
		}
		if(dd4 + (a4 * (b.xMax - b.xMin) + b5 * (b.yMax - b.yMin) + c4 * (b.zMax - b.zMin)) - p4.d * 2 < 0) {
			return false;
		}
		var p5 = this.pfar;
		var a5 = p5.nx;
		var b6 = p5.ny;
		var c5 = p5.nz;
		var dd5 = a5 * (b.xMax + b.xMin) + b6 * (b.yMax + b.yMin) + c5 * (b.zMax + b.zMin);
		if(a5 < 0) {
			a5 = -a5;
		}
		if(b6 < 0) {
			b6 = -b6;
		}
		if(c5 < 0) {
			c5 = -c5;
		}
		if(dd5 + (a5 * (b.xMax - b.xMin) + b6 * (b.yMax - b.yMin) + c5 * (b.zMax - b.zMin)) - p5.d * 2 < 0) {
			return false;
		}
		return true;
	}
	,__class__: h3d_col_Frustum
};
var h3d_col_Plane = function(nx,ny,nz,d) {
	this.nx = nx;
	this.ny = ny;
	this.nz = nz;
	this.d = d;
};
$hxClasses["h3d.col.Plane"] = h3d_col_Plane;
h3d_col_Plane.__name__ = ["h3d","col","Plane"];
h3d_col_Plane.fromPoints = function(p0,p1,p2) {
	var x = p1.x - p0.x;
	var y = p1.y - p0.y;
	var z = p1.z - p0.z;
	var x1 = p2.x - p0.x;
	var y1 = p2.y - p0.y;
	var z1 = p2.z - p0.z;
	var x2 = y * z1 - z * y1;
	var y2 = z * x1 - x * z1;
	var z2 = x * y1 - y * x1;
	return new h3d_col_Plane(x2,y2,z2,x2 * p0.x + y2 * p0.y + z2 * p0.z);
};
h3d_col_Plane.fromNormalPoint = function(n,p) {
	return new h3d_col_Plane(n.x,n.y,n.z,n.x * p.x + n.y * p.y + n.z * p.z);
};
h3d_col_Plane.X = function(v) {
	return new h3d_col_Plane(1,0,0,v);
};
h3d_col_Plane.Y = function(v) {
	return new h3d_col_Plane(0,1,0,v);
};
h3d_col_Plane.Z = function(v) {
	return new h3d_col_Plane(0,0,1,v);
};
h3d_col_Plane.frustumLeft = function(mvp) {
	return new h3d_col_Plane(mvp._14 + mvp._11,mvp._24 + mvp._21,mvp._34 + mvp._31,-(mvp._44 + mvp._41));
};
h3d_col_Plane.frustumRight = function(mvp) {
	return new h3d_col_Plane(mvp._14 - mvp._11,mvp._24 - mvp._21,mvp._34 - mvp._31,mvp._41 - mvp._44);
};
h3d_col_Plane.frustumBottom = function(mvp) {
	return new h3d_col_Plane(mvp._14 + mvp._12,mvp._24 + mvp._22,mvp._34 + mvp._32,-(mvp._44 + mvp._42));
};
h3d_col_Plane.frustumTop = function(mvp) {
	return new h3d_col_Plane(mvp._14 - mvp._12,mvp._24 - mvp._22,mvp._34 - mvp._32,mvp._42 - mvp._44);
};
h3d_col_Plane.frustumNear = function(mvp) {
	return new h3d_col_Plane(mvp._13,mvp._23,mvp._33,-mvp._43);
};
h3d_col_Plane.frustumFar = function(mvp) {
	return new h3d_col_Plane(mvp._14 - mvp._13,mvp._24 - mvp._23,mvp._34 - mvp._33,mvp._43 - mvp._44);
};
h3d_col_Plane.prototype = {
	getNormal: function() {
		return new h3d_col_Point(this.nx,this.ny,this.nz);
	}
	,getNormalDistance: function() {
		return this.d;
	}
	,normalize: function() {
		var len = 1. / Math.sqrt(this.nx * this.nx + this.ny * this.ny + this.nz * this.nz);
		this.nx *= len;
		this.ny *= len;
		this.nz *= len;
		this.d *= len;
	}
	,toString: function() {
		return "Plane{" + Std.string(new h3d_col_Point(this.nx,this.ny,this.nz)) + "," + hxd_Math.fmt(this.d) + "}";
	}
	,distance: function(p) {
		return this.nx * p.x + this.ny * p.y + this.nz * p.z - this.d;
	}
	,side: function(p) {
		return this.nx * p.x + this.ny * p.y + this.nz * p.z - this.d >= 0;
	}
	,project: function(p) {
		var d = this.nx * p.x + this.ny * p.y + this.nz * p.z - this.d;
		return new h3d_col_Point(p.x - d * this.nx,p.y - d * this.ny,p.z - d * this.nz);
	}
	,projectTo: function(p,out) {
		var d = this.nx * p.x + this.ny * p.y + this.nz * p.z - this.d;
		out.x = p.x - d * this.nx;
		out.y = p.y - d * this.ny;
		out.z = p.z - d * this.nz;
	}
	,__class__: h3d_col_Plane
};
var h3d_col_Point = function(x,y,z) {
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["h3d.col.Point"] = h3d_col_Point;
h3d_col_Point.__name__ = ["h3d","col","Point"];
h3d_col_Point.prototype = {
	inFrustum: function(mvp) {
		if(!((mvp._14 + mvp._11) * this.x + (mvp._24 + mvp._21) * this.y + (mvp._34 + mvp._31) * this.z - -(mvp._44 + mvp._41) >= 0)) {
			return false;
		}
		if(!((mvp._14 - mvp._11) * this.x + (mvp._24 - mvp._21) * this.y + (mvp._34 - mvp._31) * this.z - (mvp._41 - mvp._44) >= 0)) {
			return false;
		}
		if(!((mvp._14 + mvp._12) * this.x + (mvp._24 + mvp._22) * this.y + (mvp._34 + mvp._32) * this.z - -(mvp._44 + mvp._42) >= 0)) {
			return false;
		}
		if(!((mvp._14 - mvp._12) * this.x + (mvp._24 - mvp._22) * this.y + (mvp._34 - mvp._32) * this.z - (mvp._42 - mvp._44) >= 0)) {
			return false;
		}
		if(!(mvp._13 * this.x + mvp._23 * this.y + mvp._33 * this.z - -mvp._43 >= 0)) {
			return false;
		}
		if(!((mvp._14 - mvp._13) * this.x + (mvp._24 - mvp._23) * this.y + (mvp._34 - mvp._33) * this.z - (mvp._43 - mvp._44) >= 0)) {
			return false;
		}
		return true;
	}
	,set: function(x,y,z) {
		this.x = x;
		this.y = y;
		this.z = z;
	}
	,sub: function(p) {
		return new h3d_col_Point(this.x - p.x,this.y - p.y,this.z - p.z);
	}
	,add: function(p) {
		return new h3d_col_Point(this.x + p.x,this.y + p.y,this.z + p.z);
	}
	,cross: function(p) {
		return new h3d_col_Point(this.y * p.z - this.z * p.y,this.z * p.x - this.x * p.z,this.x * p.y - this.y * p.x);
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,setLength: function(len) {
		var k = this.x * this.x + this.y * this.y + this.z * this.z;
		k = 1. / Math.sqrt(k);
		this.x *= k;
		this.y *= k;
		this.z *= k;
		this.x *= len;
		this.y *= len;
		this.z *= len;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,dot: function(p) {
		return this.x * p.x + this.y * p.y + this.z * p.z;
	}
	,distanceSq: function(p) {
		var dx = p.x - this.x;
		var dy = p.y - this.y;
		var dz = p.z - this.z;
		return dx * dx + dy * dy + dz * dz;
	}
	,distance: function(p) {
		var dx = p.x - this.x;
		var dy = p.y - this.y;
		var dz = p.z - this.z;
		return Math.sqrt(dx * dx + dy * dy + dz * dz);
	}
	,normalize: function() {
		var k = this.x * this.x + this.y * this.y + this.z * this.z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		this.x *= k;
		this.y *= k;
		this.z *= k;
	}
	,normalizeFast: function() {
		var k = this.x * this.x + this.y * this.y + this.z * this.z;
		k = 1. / Math.sqrt(k);
		this.x *= k;
		this.y *= k;
		this.z *= k;
	}
	,transform: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31 + m._41;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32 + m._42;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33 + m._43;
		this.x = px;
		this.y = py;
		this.z = pz;
	}
	,transform3x3: function(m) {
		var px = this.x * m._11 + this.y * m._21 + this.z * m._31;
		var py = this.x * m._12 + this.y * m._22 + this.z * m._32;
		var pz = this.x * m._13 + this.y * m._23 + this.z * m._33;
		this.x = px;
		this.y = py;
		this.z = pz;
	}
	,toVector: function() {
		return new h3d_Vector(this.x,this.y,this.z);
	}
	,clone: function() {
		return new h3d_col_Point(this.x,this.y,this.z);
	}
	,toString: function() {
		return "Point{" + hxd_Math.fmt(this.x) + "," + hxd_Math.fmt(this.y) + "," + hxd_Math.fmt(this.z) + "}";
	}
	,__class__: h3d_col_Point
};
var h3d_col_TriPlane = function() {
};
$hxClasses["h3d.col.TriPlane"] = h3d_col_TriPlane;
h3d_col_TriPlane.__name__ = ["h3d","col","TriPlane"];
h3d_col_TriPlane.__interfaces__ = [h3d_col_Collider];
h3d_col_TriPlane.prototype = {
	init: function(p0,p1,p2) {
		this.p0x = p0.x;
		this.p0y = p0.y;
		this.p0z = p0.z;
		var x = p1.x - p0.x;
		var y = p1.y - p0.y;
		var z = p1.z - p0.z;
		var x1 = p2.x - p0.x;
		var y1 = p2.y - p0.y;
		var z1 = p2.z - p0.z;
		var x2 = y * z1 - z * y1;
		var y2 = z * x1 - x * z1;
		var z2 = x * y1 - y * x1;
		this.d = x2 * p0.x + y2 * p0.y + z2 * p0.z;
		this.nx = x2;
		this.ny = y2;
		this.nz = z2;
		this.d1x = x;
		this.d1y = y;
		this.d1z = z;
		this.d2x = x1;
		this.d2y = y1;
		this.d2z = z1;
		this.dot00 = x * x + y * y + z * z;
		this.dot01 = x * x1 + y * y1 + z * z1;
		this.dot11 = x1 * x1 + y1 * y1 + z1 * z1;
		this.invDenom = 1 / (this.dot00 * this.dot11 - this.dot01 * this.dot01);
	}
	,contains: function(p) {
		var x = p.x;
		var y = p.y;
		var z = p.z;
		var x1 = x - this.p0x;
		var y1 = y - this.p0y;
		var z1 = z - this.p0z;
		var dot02 = this.d1x * x1 + this.d1y * y1 + this.d1z * z1;
		var dot12 = this.d2x * x1 + this.d2y * y1 + this.d2z * z1;
		var u = (this.dot11 * dot02 - this.dot01 * dot12) * this.invDenom;
		var v = (this.dot00 * dot12 - this.dot01 * dot02) * this.invDenom;
		if(u >= 0 && v >= 0) {
			return u + v < 1;
		} else {
			return false;
		}
	}
	,side: function(p) {
		return this.nx * p.x + this.ny * p.y + this.nz * p.z - this.d >= 0;
	}
	,inFrustum: function(m) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,rayIntersection: function(r,pt) {
		var dr = r.lx * this.nx + r.ly * this.ny + r.lz * this.nz;
		if(dr > 0) {
			return null;
		}
		var k = (this.d - (r.px * this.nx + r.py * this.ny + r.pz * this.nz)) / dr;
		if(k < 0) {
			return null;
		}
		var px = r.px + r.lx * k;
		var py = r.py + r.ly * k;
		var pz = r.pz + r.lz * k;
		var x = px - this.p0x;
		var y = py - this.p0y;
		var z = pz - this.p0z;
		var dot02 = this.d1x * x + this.d1y * y + this.d1z * z;
		var dot12 = this.d2x * x + this.d2y * y + this.d2z * z;
		var u = (this.dot11 * dot02 - this.dot01 * dot12) * this.invDenom;
		var v = (this.dot00 * dot12 - this.dot01 * dot02) * this.invDenom;
		if(!(u >= 0 && v >= 0 && u + v < 1)) {
			return null;
		}
		if(pt == null) {
			pt = new h3d_col_Point();
		}
		pt.x = px;
		pt.y = py;
		pt.z = pz;
		return pt;
	}
	,isPointInTriangle: function(x,y,z) {
		var x1 = x - this.p0x;
		var y1 = y - this.p0y;
		var z1 = z - this.p0z;
		var dot02 = this.d1x * x1 + this.d1y * y1 + this.d1z * z1;
		var dot12 = this.d2x * x1 + this.d2y * y1 + this.d2z * z1;
		var u = (this.dot11 * dot02 - this.dot01 * dot12) * this.invDenom;
		var v = (this.dot00 * dot12 - this.dot01 * dot02) * this.invDenom;
		if(u >= 0 && v >= 0) {
			return u + v < 1;
		} else {
			return false;
		}
	}
	,__class__: h3d_col_TriPlane
};
var h3d_col_Polygon = function() {
};
$hxClasses["h3d.col.Polygon"] = h3d_col_Polygon;
h3d_col_Polygon.__name__ = ["h3d","col","Polygon"];
h3d_col_Polygon.__interfaces__ = [h3d_col_Collider];
h3d_col_Polygon.prototype = {
	addBuffers: function(vertexes,indexes,stride) {
		if(stride == null) {
			stride = 3;
		}
		var _g1 = 0;
		var _g = indexes.length / 3 | 0;
		while(_g1 < _g) {
			var k = _g1++ * 3;
			var t = new h3d_col_TriPlane();
			var i0 = indexes[k] * stride;
			var i1 = indexes[k + 1] * stride;
			var i2 = indexes[k + 2] * stride;
			var p0_x = vertexes[i0];
			var p0_y = vertexes[i0 + 1];
			var p0_z = vertexes[i0 + 2];
			var p1_x = vertexes[i1];
			var p1_y = vertexes[i1 + 1];
			var p1_z = vertexes[i1 + 2];
			var p2_x = vertexes[i2];
			var p2_y = vertexes[i2 + 1];
			var p2_z = vertexes[i2 + 2];
			t.p0x = p0_x;
			t.p0y = p0_y;
			t.p0z = p0_z;
			var x = p1_x - p0_x;
			var y = p1_y - p0_y;
			var z = p1_z - p0_z;
			var x1 = p2_x - p0_x;
			var y1 = p2_y - p0_y;
			var z1 = p2_z - p0_z;
			var x2 = y * z1 - z * y1;
			var y2 = z * x1 - x * z1;
			var z2 = x * y1 - y * x1;
			t.d = x2 * p0_x + y2 * p0_y + z2 * p0_z;
			t.nx = x2;
			t.ny = y2;
			t.nz = z2;
			t.d1x = x;
			t.d1y = y;
			t.d1z = z;
			t.d2x = x1;
			t.d2y = y1;
			t.d2z = z1;
			t.dot00 = x * x + y * y + z * z;
			t.dot01 = x * x1 + y * y1 + z * z1;
			t.dot11 = x1 * x1 + y1 * y1 + z1 * z1;
			t.invDenom = 1 / (t.dot00 * t.dot11 - t.dot01 * t.dot01);
			t.next = this.triPlanes;
			this.triPlanes = t;
		}
	}
	,isConvex: function() {
		return true;
	}
	,contains: function(p) {
		if(!this.isConvex()) {
			throw new js__$Boot_HaxeError("Not implemented for concave polygon");
		}
		var t = this.triPlanes;
		while(t != null) {
			if(t.nx * p.x + t.ny * p.y + t.nz * p.z - t.d >= 0) {
				return false;
			}
			t = t.next;
		}
		return true;
	}
	,rayIntersection: function(r,pt) {
		var t = this.triPlanes;
		while(t != null) {
			var pt1 = pt;
			var dr = r.lx * t.nx + r.ly * t.ny + r.lz * t.nz;
			var p;
			if(dr > 0) {
				p = null;
			} else {
				var k = (t.d - (r.px * t.nx + r.py * t.ny + r.pz * t.nz)) / dr;
				if(k < 0) {
					p = null;
				} else {
					var px = r.px + r.lx * k;
					var py = r.py + r.ly * k;
					var pz = r.pz + r.lz * k;
					var x = px - t.p0x;
					var y = py - t.p0y;
					var z = pz - t.p0z;
					var dot02 = t.d1x * x + t.d1y * y + t.d1z * z;
					var dot12 = t.d2x * x + t.d2y * y + t.d2z * z;
					var u = (t.dot11 * dot02 - t.dot01 * dot12) * t.invDenom;
					var v = (t.dot00 * dot12 - t.dot01 * dot02) * t.invDenom;
					if(!(u >= 0 && v >= 0 && u + v < 1)) {
						p = null;
					} else {
						if(pt == null) {
							pt1 = new h3d_col_Point();
						}
						pt1.x = px;
						pt1.y = py;
						pt1.z = pz;
						p = pt1;
					}
				}
			}
			if(p != null) {
				return p;
			}
			t = t.next;
		}
		return null;
	}
	,inFrustum: function(m) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,__class__: h3d_col_Polygon
};
var h3d_col_Ray = function() {
};
$hxClasses["h3d.col.Ray"] = h3d_col_Ray;
h3d_col_Ray.__name__ = ["h3d","col","Ray"];
h3d_col_Ray.fromPoints = function(p1,p2) {
	var r = new h3d_col_Ray();
	r.px = p1.x;
	r.py = p1.y;
	r.pz = p1.z;
	r.lx = p2.x - p1.x;
	r.ly = p2.y - p1.y;
	r.lz = p2.z - p1.z;
	return r;
};
h3d_col_Ray.fromValues = function(x,y,z,dx,dy,dz) {
	var r = new h3d_col_Ray();
	r.px = x;
	r.py = y;
	r.pz = z;
	r.lx = dx;
	r.ly = dy;
	r.lz = dz;
	return r;
};
h3d_col_Ray.prototype = {
	clone: function() {
		var r = new h3d_col_Ray();
		r.px = this.px;
		r.py = this.py;
		r.pz = this.pz;
		r.lx = this.lx;
		r.ly = this.ly;
		r.lz = this.lz;
		return r;
	}
	,load: function(r) {
		this.px = r.px;
		this.py = r.py;
		this.pz = r.pz;
		this.lx = r.lx;
		this.ly = r.ly;
		this.lz = r.lz;
	}
	,normalize: function() {
		var l = this.lx * this.lx + this.ly * this.ly + this.lz * this.lz;
		if(l < 1e-10) {
			l = 0;
		} else {
			l = 1. / Math.sqrt(l);
		}
		this.lx *= l;
		this.ly *= l;
		this.lz *= l;
	}
	,transform: function(m) {
		var p_z;
		var p_y;
		var p_x;
		var x = this.px;
		var y = this.py;
		var z = this.pz;
		p_x = x;
		p_y = y;
		p_z = z;
		var px = x * m._11 + y * m._21 + z * m._31 + m._41;
		var py = x * m._12 + y * m._22 + z * m._32 + m._42;
		var pz = x * m._13 + y * m._23 + z * m._33 + m._43;
		p_x = px;
		p_y = py;
		p_z = pz;
		this.px = p_x;
		this.py = p_y;
		this.pz = p_z;
		var l_z;
		var l_y;
		var l_x;
		var x1 = this.lx;
		var y1 = this.ly;
		var z1 = this.lz;
		l_x = x1;
		l_y = y1;
		l_z = z1;
		var px1 = x1 * m._11 + y1 * m._21 + z1 * m._31;
		var py1 = x1 * m._12 + y1 * m._22 + z1 * m._32;
		var pz1 = x1 * m._13 + y1 * m._23 + z1 * m._33;
		l_x = px1;
		l_y = py1;
		l_z = pz1;
		this.lx = l_x;
		this.ly = l_y;
		this.lz = l_z;
	}
	,getPos: function() {
		return new h3d_col_Point(this.px,this.py,this.pz);
	}
	,getDir: function() {
		return new h3d_col_Point(this.lx,this.ly,this.lz);
	}
	,toString: function() {
		return "Ray{" + Std.string(new h3d_col_Point(this.px,this.py,this.pz)) + "," + Std.string(new h3d_col_Point(this.lx,this.ly,this.lz)) + "}";
	}
	,intersect: function(p) {
		var d = this.lx * p.nx + this.ly * p.ny + this.lz * p.nz;
		var nd = p.d - (this.px * p.nx + this.py * p.ny + this.pz * p.nz);
		if((d < 0?-d:d) < 1e-10) {
			if((nd < 0?-nd:nd) < 1e-10) {
				return new h3d_col_Point(this.px,this.py,this.pz);
			} else {
				return null;
			}
		} else {
			var k = nd / d;
			return new h3d_col_Point(this.px + this.lx * k,this.py + this.ly * k,this.pz + this.lz * k);
		}
	}
	,collideFrustum: function(mvp) {
		var a_z;
		var a_y;
		var a_x;
		var x = this.px;
		var y = this.py;
		var z = this.pz;
		a_x = x;
		a_y = y;
		a_z = z;
		var px = x * mvp._11 + y * mvp._21 + z * mvp._31 + mvp._41;
		var py = x * mvp._12 + y * mvp._22 + z * mvp._32 + mvp._42;
		var pz = x * mvp._13 + y * mvp._23 + z * mvp._33 + mvp._43;
		var iw = 1 / (x * mvp._14 + y * mvp._24 + z * mvp._34 + mvp._44);
		a_x = px * iw;
		a_y = py * iw;
		a_z = pz * iw;
		var b_z;
		var b_y;
		var b_x;
		var x1 = this.px + this.lx;
		var y1 = this.py + this.ly;
		var z1 = this.pz + this.lz;
		b_x = x1;
		b_y = y1;
		b_z = z1;
		var px1 = x1 * mvp._11 + y1 * mvp._21 + z1 * mvp._31 + mvp._41;
		var py1 = x1 * mvp._12 + y1 * mvp._22 + z1 * mvp._32 + mvp._42;
		var pz1 = x1 * mvp._13 + y1 * mvp._23 + z1 * mvp._33 + mvp._43;
		var iw1 = 1 / (x1 * mvp._14 + y1 * mvp._24 + z1 * mvp._34 + mvp._44);
		b_x = px1 * iw1;
		b_y = py1 * iw1;
		b_z = pz1 * iw1;
		var lx = b_x - a_x;
		var ly = b_y - a_y;
		var lz = b_z - a_z;
		var dx = 1 / lx;
		var dy = 1 / ly;
		var dz = 1 / lz;
		var t1 = (-1 - a_x) * dx;
		var t2 = (1 - a_x) * dx;
		var t3 = (-1 - a_y) * dy;
		var t4 = (1 - a_y) * dy;
		var t5 = (0 - a_z) * dz;
		var t6 = (1 - a_z) * dz;
		var a = t1 > t2?t2:t1;
		var b = t3 > t4?t4:t3;
		var a1 = a < b?b:a;
		var b1 = t5 > t6?t6:t5;
		var tmin = a1 < b1?b1:a1;
		var a2 = t1 < t2?t2:t1;
		var b2 = t3 < t4?t4:t3;
		var a3 = a2 > b2?b2:a2;
		var b3 = t5 < t6?t6:t5;
		var tmax = a3 > b3?b3:a3;
		return !(tmax < 0 || tmin > tmax);
	}
	,collide: function(b) {
		var dx = 1 / this.lx;
		var dy = 1 / this.ly;
		var dz = 1 / this.lz;
		var t1 = (b.xMin - this.px) * dx;
		var t2 = (b.xMax - this.px) * dx;
		var t3 = (b.yMin - this.py) * dy;
		var t4 = (b.yMax - this.py) * dy;
		var t5 = (b.zMin - this.pz) * dz;
		var t6 = (b.zMax - this.pz) * dz;
		var a = t1 > t2?t2:t1;
		var b1 = t3 > t4?t4:t3;
		var a1 = a < b1?b1:a;
		var b2 = t5 > t6?t6:t5;
		var tmin = a1 < b2?b2:a1;
		var a2 = t1 < t2?t2:t1;
		var b3 = t3 < t4?t4:t3;
		var a3 = a2 > b3?b3:a2;
		var b4 = t5 < t6?t6:t5;
		var tmax = a3 > b4?b4:a3;
		if(tmax < 0) {
			return false;
		} else if(tmin > tmax) {
			return false;
		} else {
			return true;
		}
	}
	,__class__: h3d_col_Ray
};
var h3d_col_Sphere = function(x,y,z,r) {
	if(r == null) {
		r = 0.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.r = r;
};
$hxClasses["h3d.col.Sphere"] = h3d_col_Sphere;
h3d_col_Sphere.__name__ = ["h3d","col","Sphere"];
h3d_col_Sphere.__interfaces__ = [h3d_col_Collider];
h3d_col_Sphere.prototype = {
	getCenter: function() {
		return new h3d_col_Point(this.x,this.y,this.z);
	}
	,contains: function(p) {
		var dx = p.x - this.x;
		var dy = p.y - this.y;
		var dz = p.z - this.z;
		return dx * dx + dy * dy + dz * dz < this.r * this.r;
	}
	,rayIntersection: function(r,p) {
		var r2 = this.r * this.r;
		var px = r.px + r.lx;
		var py = r.py + r.ly;
		var pz = r.pz + r.lz;
		var a = r.lx * r.lx + r.ly * r.ly + r.lz * r.lz;
		var b = 2 * r.lx * (this.x - px) + 2 * r.ly * (this.y - py) + 2 * r.lz * (this.z - pz);
		var d = b * b - 4 * a * (this.x * this.x + this.y * this.y + this.z * this.z + (px * px + py * py + pz * pz) - 2 * (this.x * px + this.y * py + this.z * pz) - r2);
		if(d < 0) {
			return null;
		}
		d = Math.sqrt(d);
		var t = (-b + d) / (2 * a);
		if(p == null) {
			p = new h3d_col_Point();
		}
		var x = px - t * r.lx;
		var y = py - t * r.ly;
		var z = pz - t * r.lz;
		p.x = x;
		p.y = y;
		p.z = z;
		return p;
	}
	,inFrustum: function(mvp) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		var nx = mvp._14 + mvp._11;
		var ny = mvp._24 + mvp._21;
		var nz = mvp._34 + mvp._31;
		var d = -(mvp._44 + mvp._41);
		var pl_nx = nx;
		var pl_ny = ny;
		var pl_nz = nz;
		var pl_d = d;
		var len = 1. / Math.sqrt(nx * nx + ny * ny + nz * nz);
		pl_nx = nx * len;
		pl_ny = ny * len;
		pl_nz = nz * len;
		pl_d = d * len;
		if(pl_nx * x + pl_ny * y + pl_nz * z - pl_d < -this.r) {
			return false;
		}
		var nx1 = mvp._14 - mvp._11;
		var ny1 = mvp._24 - mvp._21;
		var nz1 = mvp._34 - mvp._31;
		var d1 = mvp._41 - mvp._44;
		var pl_nx1 = nx1;
		var pl_ny1 = ny1;
		var pl_nz1 = nz1;
		var pl_d1 = d1;
		var len1 = 1. / Math.sqrt(nx1 * nx1 + ny1 * ny1 + nz1 * nz1);
		pl_nx1 = nx1 * len1;
		pl_ny1 = ny1 * len1;
		pl_nz1 = nz1 * len1;
		pl_d1 = d1 * len1;
		if(pl_nx1 * x + pl_ny1 * y + pl_nz1 * z - pl_d1 < -this.r) {
			return false;
		}
		var nx2 = mvp._14 + mvp._12;
		var ny2 = mvp._24 + mvp._22;
		var nz2 = mvp._34 + mvp._32;
		var d2 = -(mvp._44 + mvp._42);
		var pl_nx2 = nx2;
		var pl_ny2 = ny2;
		var pl_nz2 = nz2;
		var pl_d2 = d2;
		var len2 = 1. / Math.sqrt(nx2 * nx2 + ny2 * ny2 + nz2 * nz2);
		pl_nx2 = nx2 * len2;
		pl_ny2 = ny2 * len2;
		pl_nz2 = nz2 * len2;
		pl_d2 = d2 * len2;
		if(pl_nx2 * x + pl_ny2 * y + pl_nz2 * z - pl_d2 < -this.r) {
			return false;
		}
		var nx3 = mvp._14 - mvp._12;
		var ny3 = mvp._24 - mvp._22;
		var nz3 = mvp._34 - mvp._32;
		var d3 = mvp._42 - mvp._44;
		var pl_nx3 = nx3;
		var pl_ny3 = ny3;
		var pl_nz3 = nz3;
		var pl_d3 = d3;
		var len3 = 1. / Math.sqrt(nx3 * nx3 + ny3 * ny3 + nz3 * nz3);
		pl_nx3 = nx3 * len3;
		pl_ny3 = ny3 * len3;
		pl_nz3 = nz3 * len3;
		pl_d3 = d3 * len3;
		if(pl_nx3 * x + pl_ny3 * y + pl_nz3 * z - pl_d3 < -this.r) {
			return false;
		}
		var nx4 = mvp._13;
		var ny4 = mvp._23;
		var nz4 = mvp._33;
		var d4 = -mvp._43;
		var pl_nx4 = nx4;
		var pl_ny4 = ny4;
		var pl_nz4 = nz4;
		var pl_d4 = d4;
		var len4 = 1. / Math.sqrt(nx4 * nx4 + ny4 * ny4 + nz4 * nz4);
		pl_nx4 = nx4 * len4;
		pl_ny4 = ny4 * len4;
		pl_nz4 = nz4 * len4;
		pl_d4 = d4 * len4;
		if(pl_nx4 * x + pl_ny4 * y + pl_nz4 * z - pl_d4 < -this.r) {
			return false;
		}
		var nx5 = mvp._13;
		var ny5 = mvp._23;
		var nz5 = mvp._33;
		var d5 = -mvp._43;
		var pl_nx5 = nx5;
		var pl_ny5 = ny5;
		var pl_nz5 = nz5;
		var pl_d5 = d5;
		var len5 = 1. / Math.sqrt(nx5 * nx5 + ny5 * ny5 + nz5 * nz5);
		pl_nx5 = nx5 * len5;
		pl_ny5 = ny5 * len5;
		pl_nz5 = nz5 * len5;
		pl_d5 = d5 * len5;
		if(pl_nx5 * x + pl_ny5 * y + pl_nz5 * z - pl_d5 < -this.r) {
			return false;
		}
		return true;
	}
	,toString: function() {
		return "Sphere{" + Std.string(new h3d_col_Point(this.x,this.y,this.z)) + "," + hxd_Math.fmt(this.r) + "}";
	}
	,__class__: h3d_col_Sphere
};
var h3d_impl_Feature = $hxClasses["h3d.impl.Feature"] = { __ename__ : ["h3d","impl","Feature"], __constructs__ : ["StandardDerivatives","FloatTextures","PerTargetDepthBuffer","TargetUseDefaultDepthBuffer","HardwareAccelerated","FullClearRequired","MultipleRenderTargets"] };
h3d_impl_Feature.StandardDerivatives = ["StandardDerivatives",0];
h3d_impl_Feature.StandardDerivatives.toString = $estr;
h3d_impl_Feature.StandardDerivatives.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.FloatTextures = ["FloatTextures",1];
h3d_impl_Feature.FloatTextures.toString = $estr;
h3d_impl_Feature.FloatTextures.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.PerTargetDepthBuffer = ["PerTargetDepthBuffer",2];
h3d_impl_Feature.PerTargetDepthBuffer.toString = $estr;
h3d_impl_Feature.PerTargetDepthBuffer.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.TargetUseDefaultDepthBuffer = ["TargetUseDefaultDepthBuffer",3];
h3d_impl_Feature.TargetUseDefaultDepthBuffer.toString = $estr;
h3d_impl_Feature.TargetUseDefaultDepthBuffer.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.HardwareAccelerated = ["HardwareAccelerated",4];
h3d_impl_Feature.HardwareAccelerated.toString = $estr;
h3d_impl_Feature.HardwareAccelerated.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.FullClearRequired = ["FullClearRequired",5];
h3d_impl_Feature.FullClearRequired.toString = $estr;
h3d_impl_Feature.FullClearRequired.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.MultipleRenderTargets = ["MultipleRenderTargets",6];
h3d_impl_Feature.MultipleRenderTargets.toString = $estr;
h3d_impl_Feature.MultipleRenderTargets.__enum__ = h3d_impl_Feature;
h3d_impl_Feature.__empty_constructs__ = [h3d_impl_Feature.StandardDerivatives,h3d_impl_Feature.FloatTextures,h3d_impl_Feature.PerTargetDepthBuffer,h3d_impl_Feature.TargetUseDefaultDepthBuffer,h3d_impl_Feature.HardwareAccelerated,h3d_impl_Feature.FullClearRequired,h3d_impl_Feature.MultipleRenderTargets];
var h3d_impl_Driver = function() { };
$hxClasses["h3d.impl.Driver"] = h3d_impl_Driver;
h3d_impl_Driver.__name__ = ["h3d","impl","Driver"];
h3d_impl_Driver.prototype = {
	hasFeature: function(f) {
		return false;
	}
	,isSupportedFormat: function(fmt) {
		return false;
	}
	,isDisposed: function() {
		return true;
	}
	,dispose: function() {
	}
	,begin: function(frame) {
	}
	,log: function(str) {
		if(this.logEnable) {
			this.logImpl(str);
		}
	}
	,getNativeShaderCode: function(shader) {
		return null;
	}
	,logImpl: function(str) {
	}
	,clear: function(color,depth,stencil) {
	}
	,captureRenderBuffer: function(pixels) {
	}
	,getDriverName: function(details) {
		return "Not available";
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
	}
	,resize: function(width,height) {
	}
	,selectShader: function(shader) {
		return false;
	}
	,selectMaterial: function(pass) {
	}
	,uploadShaderBuffers: function(buffers,which) {
	}
	,getShaderInputNames: function() {
		return null;
	}
	,selectBuffer: function(buffer) {
	}
	,selectMultiBuffers: function(buffers) {
	}
	,draw: function(ibuf,startIndex,ntriangles) {
	}
	,setRenderZone: function(x,y,width,height) {
	}
	,setRenderTarget: function(tex) {
	}
	,setRenderTargets: function(textures) {
	}
	,present: function() {
	}
	,setDebug: function(b) {
	}
	,allocTexture: function(t) {
		return null;
	}
	,allocIndexes: function(count) {
		return null;
	}
	,allocVertexes: function(m) {
		return null;
	}
	,disposeTexture: function(t) {
	}
	,disposeIndexes: function(i) {
	}
	,disposeVertexes: function(v) {
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
	}
	,uploadVertexBytes: function(v,startVertex,vertexCount,buf,bufPos) {
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
	}
	,__class__: h3d_impl_Driver
};
var h3d_impl__$GlDriver_CompiledShader = function(s,vertex,shader) {
	this.s = s;
	this.vertex = vertex;
	this.shader = shader;
};
$hxClasses["h3d.impl._GlDriver.CompiledShader"] = h3d_impl__$GlDriver_CompiledShader;
h3d_impl__$GlDriver_CompiledShader.__name__ = ["h3d","impl","_GlDriver","CompiledShader"];
h3d_impl__$GlDriver_CompiledShader.prototype = {
	__class__: h3d_impl__$GlDriver_CompiledShader
};
var h3d_impl__$GlDriver_CompiledProgram = function() {
};
$hxClasses["h3d.impl._GlDriver.CompiledProgram"] = h3d_impl__$GlDriver_CompiledProgram;
h3d_impl__$GlDriver_CompiledProgram.__name__ = ["h3d","impl","_GlDriver","CompiledProgram"];
h3d_impl__$GlDriver_CompiledProgram.prototype = {
	__class__: h3d_impl__$GlDriver_CompiledProgram
};
var h3d_impl_GlDriver = function() {
	this.canvas = hxd_Stage.getCanvas();
	if(this.canvas == null) {
		throw new js__$Boot_HaxeError("Canvas #webgl not found");
	}
	this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,{ alpha : false});
	if(this.gl == null) {
		throw new js__$Boot_HaxeError("Could not acquire GL context");
	}
	if(typeof(WebGLDebugUtils) != "undefined") {
		this.gl = WebGLDebugUtils.makeDebugContext(this.gl);
	}
	this.programs = new haxe_ds_IntMap();
	this.curAttribs = 0;
	this.curMatBits = -1;
	this.gl.pixelStorei(37440,1);
};
$hxClasses["h3d.impl.GlDriver"] = h3d_impl_GlDriver;
h3d_impl_GlDriver.__name__ = ["h3d","impl","GlDriver"];
h3d_impl_GlDriver.bytesToUint8Array = function(b) {
	return new Uint8Array(b.b.bufferValue);
};
h3d_impl_GlDriver.__super__ = h3d_impl_Driver;
h3d_impl_GlDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	logImpl: function(str) {
		console.log(str);
	}
	,begin: function(frame) {
		this.frame = frame;
		this.gl.useProgram(null);
		this.curShader = null;
		this.curBuffer = null;
	}
	,getShaderInputNames: function() {
		return this.curShader.attribNames;
	}
	,getNativeShaderCode: function(shader) {
		var glout = new hxsl_GlslOut();
		return "// vertex:\n" + glout.run(shader.vertex.data) + "// fragment:\n" + glout.run(shader.fragment.data);
	}
	,compileShader: function(glout,shader) {
		var s = this.gl.createShader(shader.vertex?35633:35632);
		var code = glout.run(shader.data);
		this.gl.shaderSource(s,code);
		this.gl.compileShader(s);
		if(this.gl.getShaderParameter(s,35713) != 1) {
			var log = this.gl.getShaderInfoLog(s);
			var lid = Std.parseInt(HxOverrides.substr(log,9,null));
			var line = lid == null?null:code.split("\n")[lid - 1];
			if(line == null) {
				line = "";
			} else {
				line = "(" + StringTools.trim(line) + ")";
			}
			throw new js__$Boot_HaxeError("An error occurred compiling the shaders: " + log + line + "\n\n" + code);
		}
		return new h3d_impl__$GlDriver_CompiledShader(s,shader.vertex,shader);
	}
	,initShader: function(p,s,shader) {
		var prefix = s.vertex?"vertex":"fragment";
		s.globals = this.gl.getUniformLocation(p.p,prefix + "Globals");
		s.params = this.gl.getUniformLocation(p.p,prefix + "Params");
		var _g = [];
		var _g2 = 0;
		var _g1 = shader.textures2DCount;
		while(_g2 < _g1) _g.push(this.gl.getUniformLocation(p.p,prefix + "Textures[" + _g2++ + "]"));
		s.textures = _g;
	}
	,selectShader: function(shader) {
		var p = this.programs.h[shader.id];
		if(p == null) {
			p = new h3d_impl__$GlDriver_CompiledProgram();
			var glout = new hxsl_GlslOut();
			p.vertex = this.compileShader(glout,shader.vertex);
			p.fragment = this.compileShader(glout,shader.fragment);
			p.p = this.gl.createProgram();
			this.gl.attachShader(p.p,p.vertex.s);
			this.gl.attachShader(p.p,p.fragment.s);
			this.gl.linkProgram(p.p);
			this.gl.deleteShader(p.vertex.s);
			this.gl.deleteShader(p.fragment.s);
			if(this.gl.getProgramParameter(p.p,35714) != 1) {
				throw new js__$Boot_HaxeError("Program linkage failure: " + this.gl.getProgramInfoLog(p.p));
			}
			this.initShader(p,p.vertex,shader.vertex);
			this.initShader(p,p.fragment,shader.fragment);
			p.attribNames = [];
			p.attribs = [];
			p.stride = 0;
			var _g = 0;
			var _g1 = shader.vertex.data.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v.kind[1] == 1) {
					var t = 5126;
					var size;
					var _g2 = v.type;
					switch(_g2[1]) {
					case 3:
						size = 1;
						break;
					case 5:
						size = _g2[2];
						break;
					case 9:
						var n = _g2[2];
						t = 5120;
						size = n;
						break;
					default:
						throw new js__$Boot_HaxeError("assert " + Std.string(v.type));
					}
					var index = this.gl.getAttribLocation(p.p,glout.varNames.h[v.id]);
					if(index < 0) {
						continue;
					}
					p.attribs.push({ offset : p.stride, index : index, size : size, type : t});
					p.attribNames.push(v.name);
					p.stride += size;
				}
			}
			this.programs.h[shader.id] = p;
		}
		if(this.curShader == p) {
			return false;
		}
		this.gl.useProgram(p.p);
		var _g11 = this.curAttribs;
		var _g3 = p.attribs.length;
		while(_g11 < _g3) {
			this.gl.enableVertexAttribArray(_g11++);
			this.curAttribs++;
		}
		while(this.curAttribs > p.attribs.length) this.gl.disableVertexAttribArray(--this.curAttribs);
		this.curShader = p;
		this.curBuffer = null;
		return true;
	}
	,uploadShaderBuffers: function(buf,which) {
		this.uploadBuffer(this.curShader.vertex,buf.vertex,which);
		this.uploadBuffer(this.curShader.fragment,buf.fragment,which);
	}
	,uploadBuffer: function(s,buf,which) {
		switch(which) {
		case 0:
			if(s.globals != null) {
				this.gl.uniform4fv(s.globals,new Float32Array(buf.globals).subarray(0,s.shader.globalsSize * 4));
			}
			break;
		case 1:
			if(s.params != null) {
				this.gl.uniform4fv(s.params,new Float32Array(buf.params).subarray(0,s.shader.paramsSize * 4));
			}
			break;
		case 2:
			var _g1 = 0;
			var _g = s.textures.length;
			while(_g1 < _g) {
				var i = _g1++;
				var t = buf.tex[i];
				if(t == null || t.t == null && t.realloc == null) {
					var color = h3d_mat_Defaults.loadingTextureColor;
					t = h3d_mat_Texture.fromColor(color,(color >>> 24) / 255,{ fileName : "GlDriver.hx", lineNumber : 246, className : "h3d.impl.GlDriver", methodName : "uploadBuffer"});
				}
				if(t != null && t.t == null && t.realloc != null) {
					t.alloc();
					t.realloc();
				}
				t.lastFrame = this.frame;
				this.gl.activeTexture(33984 + i);
				this.gl.uniform1i(s.textures[i],i);
				this.gl.bindTexture(3553,t.t.t);
				var flags = h3d_impl_GlDriver.TFILTERS[t.mipMap[1]][t.filter[1]];
				this.gl.texParameteri(3553,10240,flags[0]);
				this.gl.texParameteri(3553,10241,flags[1]);
				var w = h3d_impl_GlDriver.TWRAP[t.wrap[1]];
				this.gl.texParameteri(3553,10242,w);
				this.gl.texParameteri(3553,10243,w);
			}
			break;
		}
	}
	,selectMaterial: function(pass) {
		this.selectMaterialBits(pass.bits);
	}
	,selectMaterialBits: function(bits) {
		var diff = bits ^ this.curMatBits;
		if(this.curMatBits < 0) {
			diff = -1;
		}
		if(diff == 0) {
			return;
		}
		if((diff & 3) != 0) {
			var cull = bits & 3;
			if(cull == 0) {
				this.gl.disable(2884);
			} else {
				if((this.curMatBits & 3) == 0) {
					this.gl.enable(2884);
				}
				this.gl.cullFace(h3d_impl_GlDriver.FACES[cull]);
			}
		}
		if((diff & 4194240) != 0) {
			var csrc = bits >> 6 & 15;
			var cdst = bits >> 10 & 15;
			var asrc = bits >> 14 & 15;
			var adst = bits >> 18 & 15;
			if(csrc == asrc && cdst == adst) {
				if(csrc == 0 && cdst == 1) {
					this.gl.disable(3042);
				} else {
					if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
						this.gl.enable(3042);
					}
					this.gl.blendFunc(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst]);
				}
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
					this.gl.enable(3042);
				}
				this.gl.blendFuncSeparate(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst],h3d_impl_GlDriver.BLEND[asrc],h3d_impl_GlDriver.BLEND[adst]);
			}
		}
		if((diff & 62914560) != 0) {
			var cop = bits >> 22 & 3;
			var aop = bits >> 24 & 3;
			if(cop == aop) {
				this.gl.blendEquation(h3d_impl_GlDriver.OP[cop]);
			} else {
				this.gl.blendEquationSeparate(h3d_impl_GlDriver.OP[cop],h3d_impl_GlDriver.OP[aop]);
			}
		}
		if((diff & 4) != 0) {
			this.gl.depthMask((bits >> 2 & 1) != 0);
		}
		if((diff & 56) != 0) {
			var cmp = bits >> 3 & 7;
			if(cmp == 0) {
				this.gl.disable(2929);
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 3 & 7) == 0) {
					this.gl.enable(2929);
				}
				this.gl.depthFunc(h3d_impl_GlDriver.COMPARE[cmp]);
			}
		}
		if((diff & 1006632960) != 0) {
			var m = bits >> 26 & 15;
			this.gl.colorMask((m & 1) != 0,(m & 2) != 0,(m & 4) != 0,(m & 8) != 0);
		}
		this.curMatBits = bits;
	}
	,clear: function(color,depth,stencil) {
		var bits = 0;
		if(color != null) {
			this.gl.colorMask(true,true,true,true);
			if(this.curMatBits >= 0) {
				this.curMatBits |= 1006632960;
			}
			this.gl.clearColor(color.x,color.y,color.z,color.w);
			bits = 16384;
		}
		if(depth != null) {
			this.gl.depthMask(true);
			if(this.curMatBits >= 0) {
				this.curMatBits |= 4;
			}
			this.gl.clearDepth(depth);
			bits |= 256;
		}
		if(stencil != null) {
			this.gl.clearStencil(stencil);
			bits |= 1024;
		}
		if(bits != 0) {
			this.gl.clear(bits);
		}
		if(this.curTarget != null) {
			this.curTarget.flags |= 512;
		}
	}
	,resize: function(width,height) {
		if(this.canvas.style.width == "") {
			this.canvas.style.width = (width / window.devicePixelRatio | 0) + "px";
			this.canvas.style.height = (height / window.devicePixelRatio | 0) + "px";
		}
		this.canvas.width = width;
		this.canvas.height = height;
		this.bufferWidth = width;
		this.bufferHeight = height;
		this.gl.viewport(0,0,width,height);
	}
	,getChannels: function(t) {
		switch(t.internalFmt) {
		case 6406:
			return 6406;
		case 6408:
			return 6408;
		default:
			throw new js__$Boot_HaxeError("Invalid format " + t.internalFmt);
		}
	}
	,isSupportedFormat: function(fmt) {
		switch(fmt[1]) {
		case 2:case 5:
			return true;
		case 4:
			return this.hasFeature(h3d_impl_Feature.FloatTextures);
		default:
			return false;
		}
	}
	,allocTexture: function(t) {
		if((t.flags & 4) != 0) {
			throw new js__$Boot_HaxeError("TargetUseDefaultDepth not supported in GL");
		}
		var tt = { t : this.gl.createTexture(), width : t.width, height : t.height, internalFmt : 6408, pixelFmt : 5121};
		switch(t.format[1]) {
		case 2:
			break;
		case 4:
			if(this.hasFeature(h3d_impl_Feature.FloatTextures)) {
				tt.pixelFmt = 5126;
			} else {
				throw new js__$Boot_HaxeError("Unsupported texture format " + Std.string(t.format));
			}
			break;
		case 5:
			tt.internalFmt = 6406;
			break;
		default:
			throw new js__$Boot_HaxeError("Unsupported texture format " + Std.string(t.format));
		}
		t.lastFrame = this.frame;
		t.flags &= 268434943;
		this.gl.bindTexture(3553,tt.t);
		var mipMap = (t.flags & 16) != 0?9985:9729;
		this.gl.texParameteri(3553,10240,mipMap);
		this.gl.texParameteri(3553,10241,mipMap);
		this.gl.texImage2D(3553,0,tt.internalFmt,tt.width,tt.height,0,this.getChannels(tt),tt.pixelFmt,null);
		if((t.flags & 1) != 0) {
			var fb = this.gl.createFramebuffer();
			this.gl.bindFramebuffer(36160,fb);
			this.gl.framebufferTexture2D(36160,36064,3553,tt.t,0);
			tt.fb = fb;
			if((t.flags & 2) != 0) {
				tt.rb = this.gl.createRenderbuffer();
				this.gl.bindRenderbuffer(36161,tt.rb);
				this.gl.renderbufferStorage(36161,33189,tt.width,tt.height);
				this.gl.framebufferRenderbuffer(36160,36096,36161,tt.rb);
				this.gl.bindRenderbuffer(36161,null);
			}
			this.gl.bindFramebuffer(36160,this.curTarget == null?null:this.curTarget.t.fb);
		}
		this.gl.bindTexture(3553,null);
		return tt;
	}
	,allocVertexes: function(m) {
		var b = this.gl.createBuffer();
		this.gl.bindBuffer(34962,b);
		if(m.size * m.stride == 0) {
			throw new js__$Boot_HaxeError("assert");
		}
		this.gl.bufferData(34962,m.size * m.stride * 4,(m.flags & 1) != 0?35048:35044);
		this.gl.bindBuffer(34962,null);
		return { b : b, stride : m.stride};
	}
	,allocIndexes: function(count) {
		var b = this.gl.createBuffer();
		this.gl.bindBuffer(34963,b);
		this.gl.bufferData(34963,count * 2,35044);
		this.gl.bindBuffer(34963,null);
		return b;
	}
	,disposeTexture: function(t) {
		var tt = t.t;
		if(tt == null) {
			return;
		}
		t.t = null;
		this.gl.deleteTexture(tt.t);
		if(tt.rb != null) {
			this.gl.deleteRenderbuffer(tt.rb);
		}
		if(tt.fb != null) {
			this.gl.deleteFramebuffer(tt.fb);
		}
	}
	,disposeIndexes: function(i) {
		this.gl.deleteBuffer(i);
	}
	,disposeVertexes: function(v) {
		this.gl.deleteBuffer(v.b);
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
		if(t.format != hxd_PixelFormat.RGBA) {
			var pixels = bmp.getPixels();
			this.uploadTexturePixels(t,pixels,mipLevel,side);
			pixels.dispose();
		} else {
			var img = bmp.ctx;
			this.gl.bindTexture(3553,t.t.t);
			this.gl.texImage2D(3553,mipLevel,t.t.internalFmt,this.getChannels(t.t),t.t.pixelFmt,img.getImageData(0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height));
			if((t.flags & 16) != 0) {
				this.gl.generateMipmap(3553);
			}
			this.gl.bindTexture(3553,null);
			t.flags |= 512;
		}
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
		this.gl.bindTexture(3553,t.t.t);
		pixels.convert(t.format);
		this.gl.texImage2D(3553,mipLevel,t.t.internalFmt,pixels.width,pixels.height,0,this.getChannels(t.t),t.t.pixelFmt,new Uint8Array(pixels.bytes.b.bufferValue));
		this.gl.bindTexture(3553,null);
		t.flags |= 512;
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
		var stride = v.stride;
		this.gl.bindBuffer(34962,v.b);
		this.gl.bufferSubData(34962,startVertex * stride * 4,new Float32Array(new Float32Array(buf).buffer,bufPos,vertexCount * stride));
		this.gl.bindBuffer(34962,null);
	}
	,uploadVertexBytes: function(v,startVertex,vertexCount,buf,bufPos) {
		var stride = v.stride;
		this.gl.bindBuffer(34962,v.b);
		this.gl.bufferSubData(34962,startVertex * stride * 4,new Uint8Array(new Uint8Array(buf.b.bufferValue).buffer,bufPos,vertexCount * stride * 4));
		this.gl.bindBuffer(34962,null);
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
		this.gl.bindBuffer(34963,i);
		this.gl.bufferSubData(34963,startIndice * 2,new Uint16Array(new Uint16Array(buf).buffer,bufPos,indiceCount));
		this.gl.bindBuffer(34963,null);
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
		this.gl.bindBuffer(34963,i);
		this.gl.bufferSubData(34963,startIndice * 2,new Uint8Array(new Uint8Array(buf.b.bufferValue).buffer,bufPos,indiceCount * 2));
		this.gl.bindBuffer(34963,null);
	}
	,selectBuffer: function(v) {
		if(v == this.curBuffer) {
			return;
		}
		if(this.curBuffer != null && v.buffer == this.curBuffer.buffer && (v.buffer.flags & 16) != 0 == ((this.curBuffer.flags & 16) != 0)) {
			this.curBuffer = v;
			return;
		}
		if(this.curShader == null) {
			throw new js__$Boot_HaxeError("No shader selected");
		}
		this.curBuffer = v;
		var m = v.buffer.vbuf;
		if(m.stride < this.curShader.stride) {
			throw new js__$Boot_HaxeError("Buffer stride (" + m.stride + ") and shader stride (" + this.curShader.stride + ") mismatch");
		}
		this.gl.bindBuffer(34962,m.b);
		if((v.flags & 16) != 0) {
			var _g = 0;
			var _g1 = this.curShader.attribs;
			while(_g < _g1.length) {
				var a = _g1[_g];
				++_g;
				this.gl.vertexAttribPointer(a.index,a.size,a.type,false,m.stride * 4,a.offset * 4);
			}
		} else {
			var offset = 8;
			var _g11 = 0;
			var _g2 = this.curShader.attribs.length;
			while(_g11 < _g2) {
				var i = _g11++;
				var a1 = this.curShader.attribs[i];
				var _g21 = this.curShader.attribNames[i];
				switch(_g21) {
				case "normal":
					if(m.stride < 6) {
						throw new js__$Boot_HaxeError("Buffer is missing NORMAL data, set it to RAW format ?" + Std.string(v.allocPos));
					}
					this.gl.vertexAttribPointer(a1.index,a1.size,a1.type,false,m.stride * 4,12);
					break;
				case "position":
					this.gl.vertexAttribPointer(a1.index,a1.size,a1.type,false,m.stride * 4,0);
					break;
				case "uv":
					if(m.stride < 8) {
						throw new js__$Boot_HaxeError("Buffer is missing UV data, set it to RAW format ?" + Std.string(v.allocPos));
					}
					this.gl.vertexAttribPointer(a1.index,a1.size,a1.type,false,m.stride * 4,24);
					break;
				default:
					this.gl.vertexAttribPointer(a1.index,a1.size,a1.type,false,m.stride * 4,offset * 4);
					offset += a1.size;
					if(offset > m.stride) {
						throw new js__$Boot_HaxeError("Buffer is missing '" + _g21 + "' data, set it to RAW format ?" + Std.string(v.allocPos));
					}
				}
			}
		}
	}
	,selectMultiBuffers: function(buffers) {
		var _g = 0;
		var _g1 = this.curShader.attribs;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			this.gl.bindBuffer(34962,buffers.buffer.buffer.vbuf.b);
			this.gl.vertexAttribPointer(a.index,a.size,a.type,false,buffers.buffer.buffer.stride * 4,buffers.offset * 4);
			buffers = buffers.next;
		}
		this.curBuffer = null;
	}
	,draw: function(ibuf,startIndex,ntriangles) {
		this.gl.bindBuffer(34963,ibuf);
		this.gl.drawElements(4,ntriangles * 3,5123,startIndex * 2);
		this.gl.bindBuffer(34963,null);
	}
	,present: function() {
		this.gl.finish();
	}
	,isDisposed: function() {
		return this.gl.isContextLost();
	}
	,setRenderZone: function(x,y,width,height) {
		if(x == 0 && y == 0 && width < 0 && height < 0) {
			this.gl.disable(3089);
		} else {
			this.gl.enable(3089);
			this.gl.scissor(x,this.bufferHeight - (y + height),width,height);
		}
	}
	,setRenderTarget: function(tex) {
		this.curTarget = tex;
		if(tex == null) {
			this.gl.bindFramebuffer(36160,null);
			this.gl.viewport(0,0,this.bufferWidth,this.bufferHeight);
			return;
		}
		if(tex.t == null) {
			tex.alloc();
		}
		tex.lastFrame = this.frame;
		this.gl.bindFramebuffer(36160,tex.t.fb);
		this.gl.viewport(0,0,tex.width,tex.height);
	}
	,setRenderTargets: function(textures) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		var ready = false;
		window.addEventListener("load",function(_) {
			if(!ready) {
				ready = true;
				onCreate(false);
			}
		});
	}
	,hasFeature: function(f) {
		switch(f[1]) {
		case 0:
			return this.gl.getExtension("OES_standard_derivatives") != null;
		case 1:
			if(this.gl.getExtension("OES_texture_float") != null) {
				return this.gl.getExtension("OES_texture_float_linear") != null;
			} else {
				return false;
			}
			break;
		case 2:
			return true;
		case 3:
			return false;
		case 4:
			return true;
		case 5:
			return false;
		case 6:
			return this.gl.getExtension("WEBGL_draw_buffers") != null;
		}
	}
	,captureRenderBuffer: function(pixels) {
		if(this.curTarget == null) {
			throw new js__$Boot_HaxeError("Can't capture main render buffer in GL");
		}
		this.gl.readPixels(0,0,pixels.width,pixels.height,6408,5121,pixels.bytes.b);
		pixels.set_format(hxd_PixelFormat.RGBA);
	}
	,__class__: h3d_impl_GlDriver
});
var h3d_impl_LogDriver = function(driver) {
	this.logLines = null;
	this.loggedShaders = new haxe_ds_IntMap();
	this.d = driver;
	this.logEnable = true;
	driver.logEnable = true;
};
$hxClasses["h3d.impl.LogDriver"] = h3d_impl_LogDriver;
h3d_impl_LogDriver.__name__ = ["h3d","impl","LogDriver"];
h3d_impl_LogDriver.debug = function(f) {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	var engine = h3d_Engine.CURRENT;
	var driver = engine.driver;
	var old = driver.logEnable;
	engine.setDriver(new h3d_impl_LogDriver(driver));
	f();
	driver.logEnable = old;
	engine.setDriver(driver);
};
h3d_impl_LogDriver.__super__ = h3d_impl_Driver;
h3d_impl_LogDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	logImpl: function(str) {
		if(this.logLines == null) {
			this.d.logImpl(str);
		} else {
			this.logLines.push(str);
		}
	}
	,hasFeature: function(f) {
		return this.d.hasFeature(f);
	}
	,isSupportedFormat: function(fmt) {
		return this.d.isSupportedFormat(fmt);
	}
	,isDisposed: function() {
		return this.d.isDisposed();
	}
	,dispose: function() {
		if(this.logEnable) {
			this.logImpl("Dispose");
		}
		this.d.dispose();
	}
	,begin: function(frame) {
		if(this.logEnable) {
			this.logImpl("Begin " + frame);
		}
		this.d.begin(frame);
	}
	,clear: function(color,depth,stencil) {
		if(this.logEnable) {
			this.logImpl("Clear color=" + Std.string(color) + " depth=" + depth + " stencil=" + stencil);
		}
		this.d.clear(color,depth,stencil);
	}
	,captureRenderBuffer: function(pixels) {
		var str = "CaptureRenderBuffer " + pixels.width + "x" + pixels.height;
		if(this.logEnable) {
			this.logImpl(str);
		}
		this.d.captureRenderBuffer(pixels);
	}
	,getDriverName: function(details) {
		return this.d.getDriverName(details);
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		var _gthis = this;
		if(this.logEnable) {
			this.logImpl("Init");
		}
		this.d.init(function(b) {
			if(_gthis.logEnable) {
				_gthis.logImpl("OnCreate " + (b == null?"null":"" + b));
			}
			onCreate(b);
		},forceSoftware);
	}
	,resize: function(width,height) {
		if(this.logEnable) {
			this.logImpl("Resize " + width + " x " + height);
		}
		this.d.resize(width,height);
	}
	,selectShader: function(shader) {
		var str = "Select shader #" + shader.id;
		if(this.logEnable) {
			this.logImpl(str);
		}
		this.currentShader = shader;
		var ret = this.d.selectShader(shader);
		if(!this.loggedShaders.h[shader.id]) {
			var fmt = function(shader1) {
				var str1 = hxsl_Printer.shaderToString(shader1.data);
				str1 = new EReg("((fragment)|(vertex))Globals\\[([0-9]+)\\](.[xyz]+)?","g").map(str1,function(r) {
					var name = null;
					var cid = Std.parseInt(r.matched(4)) << 2;
					var swiz = r.matched(5);
					if(swiz != null) {
						var d = HxOverrides.cca(swiz,1) - 120;
						cid += d;
						var _g = [];
						var _g2 = 1;
						var _g1 = swiz.length;
						while(_g2 < _g1) _g.push(String.fromCharCode(HxOverrides.cca(swiz,_g2++) - d));
						swiz = "." + _g.join("");
					}
					var g = shader1.globals;
					while(g != null) {
						var tmp;
						var tmp1;
						if(g.path == "__consts__" && cid >= g.pos) {
							var _g3 = g.type;
							tmp1 = cid < g.pos + _g3[1] == 14?_g3[2][1] == 3?_g3[3][1] == 0?_g3[3][2]:0:0:0;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							tmp = swiz == ".x";
						} else {
							tmp = false;
						}
						if(tmp) {
							swiz = null;
							name = "" + shader1.consts[cid - g.pos];
							break;
						}
						if(g.pos == cid) {
							name = g.path;
							break;
						}
						g = g.next;
					}
					if(name == null) {
						return r.matched(0);
					}
					if(swiz != null) {
						name += swiz;
					}
					return name;
				});
				str1 = new EReg("((fragment)|(vertex))Params\\[([0-9]+)\\](.[xyz]+)?","g").map(str1,function(r1) {
					var name1 = null;
					var cid1 = Std.parseInt(r1.matched(4)) << 2;
					var swiz1 = r1.matched(5);
					if(swiz1 != null) {
						var d1 = HxOverrides.cca(swiz1,1) - 120;
						cid1 += d1;
						var _g4 = [];
						var _g21 = 1;
						var _g11 = swiz1.length;
						while(_g21 < _g11) _g4.push(String.fromCharCode(HxOverrides.cca(swiz1,_g21++) - d1));
						swiz1 = "." + _g4.join("");
					}
					var p = shader1.params;
					while(p != null) {
						if(p.pos == cid1) {
							name1 = p.name;
							break;
						}
						p = p.next;
					}
					if(name1 == null) {
						return r1.matched(0);
					}
					if(swiz1 != null) {
						name1 += swiz1;
					}
					return name1;
				});
				str1 = new EReg("((fragment)|(vertex))Textures\\[([0-9]+)\\]","g").map(str1,function(r2) {
					var cid2 = Std.parseInt(r2.matched(4));
					var t = shader1.textures2D;
					while(t != null) {
						if(t.pos == cid2) {
							return t.name;
						}
						t = t.next;
					}
					return r2.matched(0);
				});
				str1 = new EReg("((fragment)|(vertex))TexturesCube\\[([0-9]+)\\]","g").map(str1,function(r3) {
					var cid3 = Std.parseInt(r3.matched(4));
					var t1 = shader1.texturesCube;
					while(t1 != null) {
						if(t1.pos == cid3) {
							return t1.name;
						}
						t1 = t1.next;
					}
					return r3.matched(0);
				});
				return str1;
			};
			var str2 = fmt(shader.vertex) + "\n" + fmt(shader.fragment);
			if(this.logEnable) {
				this.logImpl("");
			}
			if(this.logEnable) {
				this.logImpl("HXSL=");
			}
			var str3 = "\t" + str2.split("\n").join("\n\t");
			if(this.logEnable) {
				this.logImpl(str3);
			}
			var str4 = this.getNativeShaderCode(shader);
			if(str4 != null) {
				if(this.logEnable) {
					this.logImpl("NATIVE=");
				}
				var str5 = "\t" + str4.split("\n").join("\n\t");
				if(this.logEnable) {
					this.logImpl(str5);
				}
			}
			if(this.logEnable) {
				this.logImpl("");
			}
			this.loggedShaders.h[shader.id] = true;
		}
		return ret;
	}
	,getNativeShaderCode: function(shader) {
		return this.d.getNativeShaderCode(shader);
	}
	,selectMaterial: function(pass) {
		var str = "Select Material Cull=" + Std.string(pass.culling) + " depth=" + Std.string(pass.depthTest) + (pass.depthWrite?"":" nowrite") + " blend=" + Std.string(pass.blendSrc) + "," + Std.string(pass.blendDst) + " color=" + pass.colorMask;
		if(this.logEnable) {
			this.logImpl(str);
		}
		this.d.selectMaterial(pass);
	}
	,sizeOf: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 1:case 3:
			return 1;
		case 5:
			return t[2];
		case 6:
			return 9;
		case 7:
			return 16;
		case 8:
			return 12;
		case 14:
			if(t[3][1] == 0) {
				return this.sizeOf(t[2]) * t[3][2];
			} else {
				throw new js__$Boot_HaxeError("assert " + Std.string(t));
			}
			break;
		default:
			throw new js__$Boot_HaxeError("assert " + Std.string(t));
		}
	}
	,uploadShaderBuffers: function(buffers,which) {
		var _gthis = this;
		switch(which) {
		case 0:
			var s = this.currentShader.vertex;
			var buf = buffers.vertex;
			if(s.globalsSize != 0) {
				var str = "Upload " + (s.vertex?"vertex":"fragment") + " globals";
				if(_gthis.logEnable) {
					_gthis.logImpl(str);
				}
				var g = s.globals;
				while(g != null) {
					var tmp = "\t@" + g.pos + " " + g.path + "=";
					var _g = [];
					var _g2 = 0;
					var _g1 = _gthis.sizeOf(g.type);
					while(_g2 < _g1) _g.push(hxd_Math.fmt(buf.globals[g.pos + _g2++]));
					var str1 = tmp + Std.string(_g);
					if(_gthis.logEnable) {
						_gthis.logImpl(str1);
					}
					g = g.next;
				}
			}
			var s1 = this.currentShader.fragment;
			var buf1 = buffers.fragment;
			if(s1.globalsSize != 0) {
				var str2 = "Upload " + (s1.vertex?"vertex":"fragment") + " globals";
				if(_gthis.logEnable) {
					_gthis.logImpl(str2);
				}
				var g1 = s1.globals;
				while(g1 != null) {
					var tmp1 = "\t@" + g1.pos + " " + g1.path + "=";
					var _g3 = [];
					var _g21 = 0;
					var _g11 = _gthis.sizeOf(g1.type);
					while(_g21 < _g11) _g3.push(hxd_Math.fmt(buf1.globals[g1.pos + _g21++]));
					var str3 = tmp1 + Std.string(_g3);
					if(_gthis.logEnable) {
						_gthis.logImpl(str3);
					}
					g1 = g1.next;
				}
			}
			break;
		case 1:
			var s2 = this.currentShader.vertex;
			var buf2 = buffers.vertex;
			if(s2.paramsSize != 0) {
				var str4 = "Upload " + (s2.vertex?"vertex":"fragment") + " params";
				if(_gthis.logEnable) {
					_gthis.logImpl(str4);
				}
				var p = s2.params;
				while(p != null) {
					var tmp2 = "\t@" + p.pos + " " + p.name + "=";
					var _g4 = [];
					var _g22 = 0;
					var _g12 = _gthis.sizeOf(p.type);
					while(_g22 < _g12) _g4.push(hxd_Math.fmt(buf2.params[p.pos + _g22++]));
					var str5 = tmp2 + Std.string(_g4);
					if(_gthis.logEnable) {
						_gthis.logImpl(str5);
					}
					p = p.next;
				}
			}
			var s3 = this.currentShader.fragment;
			var buf3 = buffers.fragment;
			if(s3.paramsSize != 0) {
				var str6 = "Upload " + (s3.vertex?"vertex":"fragment") + " params";
				if(_gthis.logEnable) {
					_gthis.logImpl(str6);
				}
				var p1 = s3.params;
				while(p1 != null) {
					var tmp3 = "\t@" + p1.pos + " " + p1.name + "=";
					var _g5 = [];
					var _g23 = 0;
					var _g13 = _gthis.sizeOf(p1.type);
					while(_g23 < _g13) _g5.push(hxd_Math.fmt(buf3.params[p1.pos + _g23++]));
					var str7 = tmp3 + Std.string(_g5);
					if(_gthis.logEnable) {
						_gthis.logImpl(str7);
					}
					p1 = p1.next;
				}
			}
			break;
		case 2:
			var s4 = this.currentShader.vertex;
			var buf4 = buffers.vertex;
			var t = s4.textures2D;
			while(t != null) {
				var str8 = "Set " + (s4.vertex?"Vertex":"Fragment") + " Texture@" + t.pos + " " + t.name + "=" + _gthis.textureInfos(buf4.tex,t.pos);
				if(_gthis.logEnable) {
					_gthis.logImpl(str8);
				}
				t = t.next;
			}
			t = s4.texturesCube;
			while(t != null) {
				var str9 = "Set " + (s4.vertex?"Vertex":"Fragment") + " TextureCube@" + t.pos + " " + t.name + "=" + _gthis.textureInfos(buf4.tex,t.pos + s4.textures2DCount);
				if(_gthis.logEnable) {
					_gthis.logImpl(str9);
				}
				t = t.next;
			}
			var s5 = this.currentShader.fragment;
			var buf5 = buffers.fragment;
			var t1 = s5.textures2D;
			while(t1 != null) {
				var str10 = "Set " + (s5.vertex?"Vertex":"Fragment") + " Texture@" + t1.pos + " " + t1.name + "=" + _gthis.textureInfos(buf5.tex,t1.pos);
				if(_gthis.logEnable) {
					_gthis.logImpl(str10);
				}
				t1 = t1.next;
			}
			t1 = s5.texturesCube;
			while(t1 != null) {
				var str11 = "Set " + (s5.vertex?"Vertex":"Fragment") + " TextureCube@" + t1.pos + " " + t1.name + "=" + _gthis.textureInfos(buf5.tex,t1.pos + s5.textures2DCount);
				if(_gthis.logEnable) {
					_gthis.logImpl(str11);
				}
				t1 = t1.next;
			}
			break;
		}
		this.d.uploadShaderBuffers(buffers,which);
	}
	,textureInfos: function(buf,tid) {
		if(tid < 0 || tid >= buf.length) {
			return "OUT OF BOUNDS";
		}
		var t = buf[tid];
		if(t == null) {
			return "NULL";
		}
		var inf = "" + Std.string(t);
		if(t.wrap != h3d_mat_Wrap.Clamp) {
			inf += " wrap=" + Std.string(t.wrap);
		}
		if(t.mipMap != h3d_mat_MipMap.None) {
			inf += " mip=" + Std.string(t.mipMap);
		}
		return inf;
	}
	,getShaderInputNames: function() {
		return this.d.getShaderInputNames();
	}
	,selectBuffer: function(buffer) {
		if(this.logEnable) {
			this.logImpl("SelectBuffer");
		}
		this.d.selectBuffer(buffer);
	}
	,selectMultiBuffers: function(buffers) {
		if(this.logEnable) {
			this.logImpl("SelectMultiBuffers");
		}
		this.d.selectMultiBuffers(buffers);
	}
	,draw: function(ibuf,startIndex,ntriangles) {
		if(this.logEnable) {
			this.logImpl("Draw " + ntriangles);
		}
		this.d.draw(ibuf,startIndex,ntriangles);
	}
	,setRenderZone: function(x,y,width,height) {
		if(this.logEnable) {
			this.logImpl("SetRenderZone [" + x + " " + y + " " + width + " " + height + "]");
		}
		this.d.setRenderZone(x,y,width,height);
	}
	,setRenderTarget: function(tex) {
		if(this.logEnable) {
			this.logImpl("SetRenderTarget " + Std.string(tex));
		}
		this.d.setRenderTarget(tex);
	}
	,setRenderTargets: function(textures) {
		if(this.logEnable) {
			this.logImpl("SetRenderTargets " + Std.string(textures));
		}
		this.d.setRenderTargets(textures);
	}
	,present: function() {
		if(this.logEnable) {
			this.logImpl("Present");
		}
		this.d.present();
	}
	,setDebug: function(b) {
		if(this.logEnable) {
			this.logImpl("SetDebug " + (b == null?"null":"" + b));
		}
		this.d.setDebug(b);
	}
	,allocTexture: function(t) {
		if(this.logEnable) {
			this.logImpl("AllocTexture " + Std.string(t));
		}
		return this.d.allocTexture(t);
	}
	,allocIndexes: function(count) {
		if(this.logEnable) {
			this.logImpl("AllocIndexes " + count);
		}
		return this.d.allocIndexes(count);
	}
	,allocVertexes: function(m) {
		var str = "AllocVertexes size=" + m.size + " stride=" + m.stride;
		if(this.logEnable) {
			this.logImpl(str);
		}
		return this.d.allocVertexes(m);
	}
	,disposeTexture: function(t) {
		if(this.logEnable) {
			this.logImpl("Dispose texture");
		}
		this.d.disposeTexture(t);
	}
	,disposeIndexes: function(i) {
		if(this.logEnable) {
			this.logImpl("DisposeIndexes");
		}
		this.d.disposeIndexes(i);
	}
	,disposeVertexes: function(v) {
		if(this.logEnable) {
			this.logImpl("DisposeIndexes");
		}
		this.d.disposeVertexes(v);
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
		if(this.logEnable) {
			this.logImpl("UploadIndexBuffer");
		}
		this.d.uploadIndexBuffer(i,startIndice,indiceCount,buf,bufPos);
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
		if(this.logEnable) {
			this.logImpl("UploadIndexBytes");
		}
		this.d.uploadIndexBytes(i,startIndice,indiceCount,buf,bufPos);
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
		if(this.logEnable) {
			this.logImpl("UploadVertexBuffer");
		}
		this.d.uploadVertexBuffer(v,startVertex,vertexCount,buf,bufPos);
	}
	,uploadVertexBytes: function(v,startVertex,vertexCount,buf,bufPos) {
		if(this.logEnable) {
			this.logImpl("UploadVertexBytes");
		}
		this.d.uploadVertexBytes(v,startVertex,vertexCount,buf,bufPos);
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
		if(this.logEnable) {
			this.logImpl("UploadTextureBitmap " + Std.string(t) + " mip=" + mipLevel + " side=" + side);
		}
		this.d.uploadTextureBitmap(t,bmp,mipLevel,side);
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
		if(this.logEnable) {
			this.logImpl("UploadTexturePixels " + Std.string(t) + " mip=" + mipLevel + " side=" + side);
		}
		this.d.uploadTexturePixels(t,pixels,mipLevel,side);
	}
	,__class__: h3d_impl_LogDriver
});
var h3d_impl__$ManagedBuffer_FreeCell = function(pos,count,next) {
	this.pos = pos;
	this.count = count;
	this.next = next;
};
$hxClasses["h3d.impl._ManagedBuffer.FreeCell"] = h3d_impl__$ManagedBuffer_FreeCell;
h3d_impl__$ManagedBuffer_FreeCell.__name__ = ["h3d","impl","_ManagedBuffer","FreeCell"];
h3d_impl__$ManagedBuffer_FreeCell.prototype = {
	__class__: h3d_impl__$ManagedBuffer_FreeCell
};
var h3d_impl_ManagedBuffer = function(stride,size,flags) {
	this.flags = 0;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f[1];
		}
	}
	this.size = size;
	this.stride = stride;
	this.freeList = new h3d_impl__$ManagedBuffer_FreeCell(0,size,null);
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	this.mem = h3d_Engine.CURRENT.mem;
	this.mem.allocManaged(this);
};
$hxClasses["h3d.impl.ManagedBuffer"] = h3d_impl_ManagedBuffer;
h3d_impl_ManagedBuffer.__name__ = ["h3d","impl","ManagedBuffer"];
h3d_impl_ManagedBuffer.prototype = {
	uploadVertexBuffer: function(start,vertices,buf,bufPos) {
		if(bufPos == null) {
			bufPos = 0;
		}
		this.mem.driver.uploadVertexBuffer(this.vbuf,start,vertices,buf,bufPos);
	}
	,uploadVertexBytes: function(start,vertices,data,dataPos) {
		if(dataPos == null) {
			dataPos = 0;
		}
		this.mem.driver.uploadVertexBytes(this.vbuf,start,vertices,data,dataPos);
	}
	,alloc: function(vertices,align) {
		var p = this.allocPosition(vertices,align);
		if(p < 0) {
			return null;
		}
		var b = new h3d_Buffer(vertices,this.stride,[h3d_BufferFlag.NoAlloc],{ fileName : "ManagedBuffer.hx", lineNumber : 56, className : "h3d.impl.ManagedBuffer", methodName : "alloc"});
		b.position = p;
		b.buffer = this;
		b.allocNext = this.allocHead;
		this.allocHead = b;
		return b;
	}
	,getFreeVertices: function() {
		var m = 0;
		var l = this.freeList;
		while(l != null) {
			m += l.count;
			l = l.next;
		}
		return m;
	}
	,allocPosition: function(nvert,align) {
		var free = this.freeList;
		while(free != null) {
			if(free.count >= nvert) {
				var d = (align - free.pos % align) % align;
				if(d == 0) {
					break;
				}
				if(free.count >= nvert + d) {
					free.next = new h3d_impl__$ManagedBuffer_FreeCell(free.pos + d,free.count - d,free.next);
					free.count = d;
					free = free.next;
					break;
				}
			}
			free = free.next;
		}
		if(free == null) {
			return -1;
		}
		var pos = free.pos;
		free.pos += nvert;
		free.count -= nvert;
		return pos;
	}
	,allocBuffer: function(b) {
		var p = this.allocPosition(b.vertices,(b.flags & 4) != 0?4:(b.flags & 2) != 0?3:1);
		if(p < 0) {
			return false;
		}
		b.position = p;
		b.buffer = this;
		b.allocNext = this.allocHead;
		this.allocHead = b;
		return true;
	}
	,freeBuffer: function(b) {
		var prev = null;
		var f = this.freeList;
		var nvert = b.vertices;
		var end = b.position + nvert;
		while(f != null) {
			if(f.pos == end) {
				f.pos -= nvert;
				f.count += nvert;
				if(prev != null && prev.pos + prev.count == f.pos) {
					prev.count += f.count;
					prev.next = f.next;
				}
				nvert = 0;
				break;
			}
			if(f.pos > end) {
				if(prev != null && prev.pos + prev.count == b.position) {
					prev.count += nvert;
				} else {
					var n = new h3d_impl__$ManagedBuffer_FreeCell(b.position,nvert,f);
					if(prev == null) {
						this.freeList = n;
					} else {
						prev.next = n;
					}
				}
				nvert = 0;
				break;
			}
			prev = f;
			f = f.next;
		}
		if(nvert != 0) {
			throw new js__$Boot_HaxeError("assert");
		}
		var cur = this.allocHead;
		var prev1 = null;
		while(cur != null) {
			if(cur == b) {
				if(prev1 == null) {
					this.allocHead = b.allocNext;
				} else {
					prev1.allocNext = b.allocNext;
				}
				break;
			}
			prev1 = cur;
			cur = cur.allocNext;
		}
		if(this.freeList.count == this.size && (this.flags & 8) == 0) {
			this.dispose();
		}
	}
	,dispose: function() {
		this.mem.freeManaged(this);
	}
	,isDisposed: function() {
		return this.vbuf == null;
	}
	,__class__: h3d_impl_ManagedBuffer
};
var h3d_impl_MemoryManager = function(driver) {
	this.bufferCount = 0;
	this.texMemory = 0;
	this.usedMemory = 0;
	this.driver = driver;
};
$hxClasses["h3d.impl.MemoryManager"] = h3d_impl_MemoryManager;
h3d_impl_MemoryManager.__name__ = ["h3d","impl","MemoryManager"];
h3d_impl_MemoryManager.prototype = {
	init: function() {
		this.indexes = [];
		this.textures = [];
		this.buffers = [];
		this.initIndexes();
	}
	,initIndexes: function() {
		var indices = new Array(0);
		var _g = 0;
		while(_g < 65533) indices.push(_g++);
		this.triIndexes = h3d_Indexes.alloc(indices);
		var indices1 = new Array(0);
		var p = 0;
		var _g1 = 0;
		var _g2 = 16383;
		while(_g1 < _g2) {
			var k = _g1++ << 2;
			indices1.push(k);
			indices1.push(k + 1);
			indices1.push(k + 2);
			indices1.push(k + 2);
			indices1.push(k + 1);
			indices1.push(k + 3);
		}
		indices1.push(65533);
		this.quadIndexes = h3d_Indexes.alloc(indices1);
	}
	,garbage: function() {
	}
	,cleanManagedBuffers: function() {
		var _g1 = 1;
		var _g = this.buffers.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.buffers[i];
			var prev = null;
			while(b != null) {
				if(b.freeList.count == b.size) {
					b.dispose();
					if(prev == null) {
						this.buffers[i] = b.next;
					} else {
						prev.next = b.next;
					}
				} else {
					prev = b;
				}
				b = b.next;
			}
		}
	}
	,allocManaged: function(m) {
		if(m.vbuf != null) {
			return;
		}
		var mem = m.size * m.stride * 4;
		while(this.usedMemory + mem > 262144000 || this.bufferCount >= 4096 || (m.vbuf = this.driver.allocVertexes(m)) == null) {
			var size = this.usedMemory - this.freeMemorySize();
			this.garbage();
			this.cleanManagedBuffers();
			if(this.usedMemory - this.freeMemorySize() == size) {
				if(this.bufferCount >= 4096) {
					throw new js__$Boot_HaxeError("Too many buffers");
				}
				throw new js__$Boot_HaxeError("Memory full (" + (size >> 10) + " KB," + this.bufferCount + " buffers)");
			}
		}
		this.usedMemory += mem;
		this.bufferCount++;
	}
	,freeManaged: function(m) {
		if(m.vbuf == null) {
			return;
		}
		this.driver.disposeVertexes(m.vbuf);
		m.vbuf = null;
		this.usedMemory -= m.size * m.stride * 4;
		this.bufferCount--;
		if((m.flags & 8) == 0) {
			var c = this.buffers[0];
			var prev = null;
			while(c != null) {
				if(c == m) {
					if(prev == null) {
						this.buffers[0] = m.next;
					} else {
						prev.next = m.next;
					}
					break;
				}
				prev = c;
				c = c.next;
			}
		}
	}
	,allocBuffer: function(b,stride) {
		var max = (b.flags & 4) != 0?65532:(b.flags & 2) != 0?65533:65534;
		if(b.vertices > max) {
			if(max == 65534) {
				throw new js__$Boot_HaxeError("Cannot split buffer with " + b.vertices + " vertices if it's not Quads/Triangles");
			}
			var rem = b.vertices - max;
			b.vertices = max;
			this.allocBuffer(b,stride);
			var n = b;
			while(n.next != null) n = n.next;
			var flags = [];
			var _g = 0;
			var _g1 = h3d_impl_MemoryManager.ALL_FLAGS;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if((b.flags & 1 << f[1]) != 0) {
					flags.push(f);
				}
			}
			n.next = new h3d_Buffer(rem,stride,flags,{ fileName : "MemoryManager.hx", lineNumber : 143, className : "h3d.impl.MemoryManager", methodName : "allocBuffer"});
			return;
		}
		if((b.flags & 8) == 0) {
			var m = new h3d_impl_ManagedBuffer(stride,b.vertices);
			m.next = this.buffers[0];
			this.buffers[0] = m;
			if(!m.allocBuffer(b)) {
				throw new js__$Boot_HaxeError("assert");
			}
			return;
		}
		var m1 = this.buffers[stride];
		var prev = null;
		while(m1 != null) {
			if(m1.allocBuffer(b)) {
				return;
			}
			prev = m1;
			m1 = m1.next;
		}
		var align = (b.flags & 2) != 0?3:(b.flags & 4) != 0?4:0;
		if(m1 == null && align > 0) {
			var total = b.vertices;
			var size = total;
			while(size > 2048) {
				m1 = this.buffers[stride];
				size >>= 1;
				size -= size % align;
				b.vertices = size;
				while(m1 != null) {
					if(m1.allocBuffer(b)) {
						var flags1 = [];
						var _g2 = 0;
						var _g11 = h3d_impl_MemoryManager.ALL_FLAGS;
						while(_g2 < _g11.length) {
							var f1 = _g11[_g2];
							++_g2;
							if((b.flags & 1 << f1[1]) != 0) {
								flags1.push(f1);
							}
						}
						b.next = new h3d_Buffer(total - size,stride,flags1,{ fileName : "MemoryManager.hx", lineNumber : 182, className : "h3d.impl.MemoryManager", methodName : "allocBuffer"});
						return;
					}
					m1 = m1.next;
				}
			}
			b.vertices = total;
		}
		m1 = new h3d_impl_ManagedBuffer(stride,65533,[h3d_BufferFlag.Managed]);
		if(prev == null) {
			this.buffers[stride] = m1;
		} else {
			prev.next = m1;
		}
		if(!m1.allocBuffer(b)) {
			throw new js__$Boot_HaxeError("assert");
		}
	}
	,deleteIndexes: function(i) {
		HxOverrides.remove(this.indexes,i);
		this.driver.disposeIndexes(i.ibuf);
		i.ibuf = null;
		this.usedMemory -= i.count * 2;
	}
	,allocIndexes: function(i) {
		i.ibuf = this.driver.allocIndexes(i.count);
		this.indexes.push(i);
		this.usedMemory += i.count * 2;
	}
	,bpp: function(t) {
		return 4;
	}
	,cleanTextures: function(force) {
		if(force == null) {
			force = true;
		}
		this.textures.sort($bind(this,this.sortByLRU));
		var _g = 0;
		var _g1 = this.textures;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.realloc == null) {
				continue;
			}
			var tmp;
			if(!force) {
				var tmp1 = t.lastFrame;
				if(h3d_Engine.CURRENT == null) {
					throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
				}
				tmp = tmp1 < h3d_Engine.CURRENT.frameCount - 3600;
			} else {
				tmp = true;
			}
			if(tmp) {
				t.dispose();
				return true;
			}
		}
		return false;
	}
	,sortByLRU: function(t1,t2) {
		return t1.lastFrame - t2.lastFrame;
	}
	,deleteTexture: function(t) {
		HxOverrides.remove(this.textures,t);
		this.driver.disposeTexture(t);
		this.texMemory -= t.width * t.height * this.bpp(t);
	}
	,allocTexture: function(t) {
		this.cleanTextures(false);
		t.t = this.driver.allocTexture(t);
		if(t.t == null) {
			if(!this.cleanTextures(true)) {
				throw new js__$Boot_HaxeError("Maximum texture memory reached");
			}
			this.allocTexture(t);
			return;
		}
		this.textures.push(t);
		this.texMemory += t.width * t.height * this.bpp(t);
	}
	,onContextLost: function() {
		this.dispose();
		this.initIndexes();
	}
	,dispose: function() {
		this.triIndexes.dispose();
		this.quadIndexes.dispose();
		this.triIndexes = null;
		this.quadIndexes = null;
		var _g = 0;
		var _g1 = this.textures.slice();
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.dispose();
		}
		var _g2 = 0;
		var _g11 = this.buffers.slice();
		while(_g2 < _g11.length) {
			var b = _g11[_g2];
			++_g2;
			var b1 = b;
			while(b1 != null) {
				b1.dispose();
				b1 = b1.next;
			}
		}
		var _g3 = 0;
		var _g12 = this.indexes.slice();
		while(_g3 < _g12.length) {
			var i = _g12[_g3];
			++_g3;
			i.dispose();
		}
		this.buffers = [];
		this.indexes = [];
		this.textures = [];
		this.bufferCount = 0;
		this.usedMemory = 0;
		this.texMemory = 0;
	}
	,freeMemorySize: function() {
		var size = 0;
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var b1 = b;
			while(b1 != null) {
				var free = b1.freeList;
				while(free != null) {
					size += free.count * b1.stride * 4;
					free = free.next;
				}
				b1 = b1.next;
			}
		}
		return size;
	}
	,stats: function() {
		var total = 0;
		var free = 0;
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var b1 = b;
			while(b1 != null) {
				total += b1.stride * b1.size * 4;
				var f = b1.freeList;
				while(f != null) {
					free += f.count * b1.stride * 4;
					f = f.next;
				}
				b1 = b1.next;
			}
		}
		return { bufferCount : this.bufferCount, freeManagedMemory : free, managedMemory : total, totalMemory : this.usedMemory + this.texMemory, textureCount : this.textures.length, textureMemory : this.texMemory};
	}
	,allocStats: function() {
		var h = new haxe_ds_StringMap();
		var all = [];
		var _g = 0;
		var _g1 = this.textures;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			var key = "$" + t.allocPos.fileName + ":" + t.allocPos.lineNumber;
			var inf = __map_reserved[key] != null?h.getReserved(key):h.h[key];
			if(inf == null) {
				inf = { file : t.allocPos.fileName, line : t.allocPos.lineNumber, count : 0, size : 0, tex : true};
				if(__map_reserved[key] != null) {
					h.setReserved(key,inf);
				} else {
					h.h[key] = inf;
				}
				all.push(inf);
			}
			inf.count++;
			inf.size += t.width * t.height * this.bpp(t);
		}
		var _g2 = 0;
		var _g11 = this.buffers;
		while(_g2 < _g11.length) {
			var buf = _g11[_g2];
			++_g2;
			var buf1 = buf;
			while(buf1 != null) {
				var b = buf1.allocHead;
				while(b != null) {
					var key1 = b.allocPos.fileName + ":" + b.allocPos.lineNumber;
					var inf1 = __map_reserved[key1] != null?h.getReserved(key1):h.h[key1];
					if(inf1 == null) {
						inf1 = { file : b.allocPos.fileName, line : b.allocPos.lineNumber, count : 0, size : 0, tex : false};
						if(__map_reserved[key1] != null) {
							h.setReserved(key1,inf1);
						} else {
							h.h[key1] = inf1;
						}
						all.push(inf1);
					}
					inf1.count++;
					inf1.size += b.vertices * b.buffer.stride * 4;
					b = b.allocNext;
				}
				buf1 = buf1.next;
			}
		}
		all.sort(function(a,b1) {
			if(a.size == b1.size) {
				return a.line - b1.line;
			} else {
				return b1.size - a.size;
			}
		});
		return all;
	}
	,__class__: h3d_impl_MemoryManager
};
var h3d_impl_ScnDriver = function(driver) {
	this.frame = 0;
	this.UID = 0;
	this.d = driver;
	this.ops = [];
	this.tmpPass = new h3d_mat_Pass("");
	this.tmpShader = new hxsl_RuntimeShader();
	var s = this.tmpShader;
	s.vertex = new hxsl_RuntimeShaderData();
	s.fragment = new hxsl_RuntimeShaderData();
	s.vertex.globalsSize = 0;
	s.vertex.paramsSize = 0;
	s.fragment.globalsSize = 0;
	s.fragment.paramsSize = 0;
	s.vertex.textures2DCount = s.vertex.texturesCubeCount = 0;
	s.fragment.textures2DCount = s.fragment.texturesCubeCount = 0;
	this.tmpBytes = new haxe_io_Bytes(new ArrayBuffer(655536));
	this.tmpBuf = new h3d_shader_Buffers(s);
	this.tmpVBuf = new h3d_Buffer(0,0,[h3d_BufferFlag.NoAlloc],{ fileName : "ScnDriver.hx", lineNumber : 42, className : "h3d.impl.ScnDriver", methodName : "new"});
	this.logEnable = true;
	this.savedShaders = new haxe_ds_IntMap();
	this.textureMap = new haxe_ds_IntMap();
	this.vertexBuffers = [];
	this.indexBuffers = [];
	this.indexMap = new haxe_ds_ObjectMap();
	this.vertexMap = new haxe_ds_ObjectMap();
	this.vertexStride = [];
};
$hxClasses["h3d.impl.ScnDriver"] = h3d_impl_ScnDriver;
h3d_impl_ScnDriver.__name__ = ["h3d","impl","ScnDriver"];
h3d_impl_ScnDriver.__super__ = h3d_impl_Driver;
h3d_impl_ScnDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	getDriver: function() {
		return this.d;
	}
	,getBytes: function() {
		return new hxd_fmt_scn_Writer().write({ version : 1, ops : this.ops});
	}
	,logImpl: function(str) {
		this.ops.push(hxd_fmt_scn_Operation.Log(str));
	}
	,hasFeature: function(f) {
		return this.d.hasFeature(f);
	}
	,isSupportedFormat: function(fmt) {
		return this.d.isSupportedFormat(fmt);
	}
	,isDisposed: function() {
		return this.d.isDisposed();
	}
	,dispose: function() {
		this.d.dispose();
	}
	,begin: function(frame) {
		this.ops.push(hxd_fmt_scn_Operation.Begin);
		this.d.begin(frame);
	}
	,clear: function(color,depth,stencil) {
		this.ops.push(hxd_fmt_scn_Operation.Clear(color,depth,stencil));
		this.d.clear(color,depth,stencil);
	}
	,captureRenderBuffer: function(pixels) {
		this.d.captureRenderBuffer(pixels);
	}
	,getDriverName: function(details) {
		return this.d.getDriverName(details);
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		this.d.init(function(b) {
			onCreate(b);
		},forceSoftware);
	}
	,resize: function(width,height) {
		this.ops.push(hxd_fmt_scn_Operation.Resize(width,height));
		this.d.resize(width,height);
	}
	,selectShader: function(shader) {
		if(this.savedShaders.h[shader.id] != null) {
			this.ops.push(hxd_fmt_scn_Operation.SelectShader(shader.id,null));
		} else {
			var s = new haxe_Serializer();
			s.useCache = true;
			s.serialize(shader);
			this.ops.push(hxd_fmt_scn_Operation.SelectShader(shader.id,haxe_io_Bytes.ofString(s.toString())));
			this.savedShaders.h[shader.id] = shader;
		}
		return this.d.selectShader(shader);
	}
	,getNativeShaderCode: function(shader) {
		return this.d.getNativeShaderCode(shader);
	}
	,selectMaterial: function(pass) {
		this.ops.push(hxd_fmt_scn_Operation.Material(pass.bits));
		this.d.selectMaterial(pass);
	}
	,uploadShaderBuffers: function(buffers,which) {
		switch(which) {
		case 0:
			this.ops.push(hxd_fmt_scn_Operation.UploadShaderBuffers(true,haxe_ds__$Vector_Vector_$Impl_$.toArray(buffers.vertex.globals),haxe_ds__$Vector_Vector_$Impl_$.toArray(buffers.fragment.globals)));
			break;
		case 1:
			this.ops.push(hxd_fmt_scn_Operation.UploadShaderBuffers(false,haxe_ds__$Vector_Vector_$Impl_$.toArray(buffers.vertex.params),haxe_ds__$Vector_Vector_$Impl_$.toArray(buffers.fragment.params)));
			break;
		case 2:
			var _g = [];
			var _g1 = 0;
			var _g2 = buffers.vertex.tex;
			while(_g1 < _g2.length) {
				var t = _g2[_g1];
				++_g1;
				_g.push(t.id);
			}
			var _g11 = [];
			var _g21 = 0;
			var _g3 = buffers.fragment.tex;
			while(_g21 < _g3.length) {
				var t1 = _g3[_g21];
				++_g21;
				_g11.push(t1.id);
			}
			this.ops.push(hxd_fmt_scn_Operation.UploadShaderTextures(_g,_g11));
			break;
		}
		this.d.uploadShaderBuffers(buffers,which);
	}
	,getShaderInputNames: function() {
		return this.d.getShaderInputNames();
	}
	,selectBuffer: function(buffer) {
		this.ops.push(hxd_fmt_scn_Operation.SelectBuffer(this.vertexMap.h[buffer.buffer.vbuf.__id__],(buffer.flags & 16) != 0));
		this.d.selectBuffer(buffer);
	}
	,selectMultiBuffers: function(buffers) {
		var bufs = [];
		var b = buffers;
		while(b != null) {
			bufs.push({ vbuf : this.vertexMap.h[buffers.buffer.buffer.vbuf.__id__], offset : b.offset});
			b = b.next;
		}
		this.ops.push(hxd_fmt_scn_Operation.SelectMultiBuffer(bufs));
		this.d.selectMultiBuffers(buffers);
	}
	,draw: function(ibuf,startIndex,ntriangles) {
		this.ops.push(hxd_fmt_scn_Operation.Draw(this.indexMap.h[ibuf.__id__],startIndex,ntriangles));
		this.d.draw(ibuf,startIndex,ntriangles);
	}
	,setRenderZone: function(x,y,width,height) {
		this.ops.push(hxd_fmt_scn_Operation.RenderZone(x,y,width,height));
		this.d.setRenderZone(x,y,width,height);
	}
	,setRenderTarget: function(tex) {
		this.d.setRenderTarget(tex);
		this.ops.push(hxd_fmt_scn_Operation.RenderTarget(tex == null?-1:tex.id));
	}
	,present: function() {
		this.d.present();
		this.ops.push(hxd_fmt_scn_Operation.Present);
	}
	,setDebug: function(b) {
		this.d.setDebug(b);
	}
	,allocTexture: function(t) {
		this.ops.push(hxd_fmt_scn_Operation.AllocTexture(t.id,t.name,t.width,t.height,t.flags));
		return this.d.allocTexture(t);
	}
	,allocIndexes: function(count) {
		var ibuf = this.d.allocIndexes(count);
		var id = ++this.UID;
		this.indexMap.set(ibuf,id);
		this.ops.push(hxd_fmt_scn_Operation.AllocIndexes(id,count));
		return ibuf;
	}
	,allocVertexes: function(m) {
		var vbuf = this.d.allocVertexes(m);
		var id = ++this.UID;
		this.vertexMap.set(vbuf,id);
		this.ops.push(hxd_fmt_scn_Operation.AllocVertexes(id,m.size,m.stride,m.flags));
		this.vertexStride[id] = m.stride;
		return vbuf;
	}
	,disposeTexture: function(t) {
		this.d.disposeTexture(t);
		this.ops.push(hxd_fmt_scn_Operation.DisposeTexture(t.id));
	}
	,indexID: function(i) {
		return this.indexMap.h[i.__id__];
	}
	,vertexID: function(v) {
		return this.vertexMap.h[v.__id__];
	}
	,disposeIndexes: function(i) {
		this.d.disposeIndexes(i);
		this.ops.push(hxd_fmt_scn_Operation.DisposeIndexes(this.indexMap.h[i.__id__]));
		this.indexMap.remove(i);
	}
	,disposeVertexes: function(v) {
		this.d.disposeVertexes(v);
		this.ops.push(hxd_fmt_scn_Operation.DisposeVertexes(this.vertexMap.h[v.__id__]));
		this.vertexMap.remove(v);
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
		this.d.uploadIndexBuffer(i,startIndice,indiceCount,buf,bufPos);
		var bytes = new haxe_io_Bytes(new ArrayBuffer(indiceCount * 2));
		var _g1 = 0;
		while(_g1 < indiceCount) {
			var i1 = _g1++;
			bytes.setUInt16(i1 << 1,buf[bufPos + i1]);
		}
		this.ops.push(hxd_fmt_scn_Operation.UploadIndexes(this.indexMap.h[i.__id__],startIndice,indiceCount,bytes));
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
		this.d.uploadIndexBytes(i,startIndice,indiceCount,buf,bufPos);
		this.ops.push(hxd_fmt_scn_Operation.UploadIndexes(this.indexMap.h[i.__id__],startIndice,indiceCount,buf.sub(bufPos,indiceCount * 2)));
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
		this.d.uploadVertexBuffer(v,startVertex,vertexCount,buf,bufPos);
		var stride = this.vertexStride[this.vertexMap.h[v.__id__]];
		var bytes = new haxe_io_Bytes(new ArrayBuffer(stride * vertexCount * 4));
		var _g1 = 0;
		var _g = vertexCount * stride;
		while(_g1 < _g) {
			var i = _g1++;
			bytes.setFloat(i << 2,buf[i + bufPos]);
		}
		this.ops.push(hxd_fmt_scn_Operation.UploadVertexes(this.vertexMap.h[v.__id__],startVertex,vertexCount,bytes));
	}
	,uploadVertexBytes: function(v,startVertex,vertexCount,buf,bufPos) {
		this.d.uploadVertexBytes(v,startVertex,vertexCount,buf,bufPos);
		this.ops.push(hxd_fmt_scn_Operation.UploadVertexes(this.vertexMap.h[v.__id__],startVertex,vertexCount,buf.sub(bufPos,this.vertexStride[this.vertexMap.h[v.__id__]] * vertexCount * 4)));
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
		this.d.uploadTextureBitmap(t,bmp,mipLevel,side);
		var pixels = bmp.getPixels();
		if(pixels.bytes.length != bmp.ctx.canvas.width * bmp.ctx.canvas.height * 4) {
			pixels.bytes = pixels.bytes.sub(0,bmp.ctx.canvas.width * bmp.ctx.canvas.height * 4);
		}
		this.ops.push(hxd_fmt_scn_Operation.UploadTexture(t.id,pixels,mipLevel,side));
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
		this.d.uploadTexturePixels(t,pixels,mipLevel,side);
		var pixels1 = pixels.clone();
		if(pixels1.bytes.length != pixels1.width * pixels1.height * 4) {
			pixels1.bytes = pixels1.bytes.sub(0,pixels1.width * pixels1.height * 4);
		}
		this.ops.push(hxd_fmt_scn_Operation.UploadTexture(t.id,pixels1,mipLevel,side));
	}
	,defaultTexture: function() {
		var tmp;
		if(this.defTex != null) {
			var _this = this.defTex;
			if(_this.t == null) {
				tmp = _this.realloc == null;
			} else {
				tmp = false;
			}
		} else {
			tmp = true;
		}
		if(tmp) {
			this.defTex = new h3d_mat_Texture(1,1,[h3d_mat_TextureFlags.NoAlloc],null,{ fileName : "ScnDriver.hx", lineNumber : 310, className : "h3d.impl.ScnDriver", methodName : "defaultTexture"});
			this.defTex.t = this.d.allocTexture(this.defTex);
			var pix = new hxd_Pixels(1,1,new haxe_io_Bytes(new ArrayBuffer(4)),hxd_PixelFormat.ARGB);
			pix.setPixel(0,0,-256);
			this.d.uploadTexturePixels(this.defTex,pix,0,0);
		}
		return this.defTex;
	}
	,getTexture: function(id) {
		return this.textureMap.h[id];
	}
	,replay: function(op) {
		switch(op[1]) {
		case 0:
			var str = op[2];
			var _this = this.d;
			if(_this.logEnable) {
				_this.logImpl(str);
			}
			break;
		case 1:
			this.d.begin(++this.frame);
			break;
		case 2:
			this.d.clear(op[2],op[3],op[4]);
			break;
		case 3:
			this.d.resize(op[2],op[3]);
			break;
		case 4:
			var data = op[3];
			var id = op[2];
			if(data != null) {
				var s = haxe_Unserializer.run(data.toString());
				s.id = hxsl_RuntimeShader.UID++;
				this.savedShaders.h[id] = s;
			}
			this.d.selectShader(this.savedShaders.h[id]);
			break;
		case 5:
			this.tmpPass.bits = op[2];
			this.d.selectMaterial(this.tmpPass);
			break;
		case 6:
			var fragment = op[4];
			var vertex = op[3];
			var globals = op[2];
			var b = this.tmpBuf;
			if(globals) {
				this.tmpShader.vertex.globalsSize = vertex.length >> 2;
				this.tmpShader.fragment.globalsSize = fragment.length >> 2;
				var s1 = this.tmpShader;
				b.vertex.grow(s1.vertex);
				b.fragment.grow(s1.fragment);
				var _g1 = 0;
				var _g = vertex.length;
				while(_g1 < _g) {
					var i = _g1++;
					b.vertex.globals[i] = vertex[i];
				}
				var _g11 = 0;
				var _g2 = fragment.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					b.fragment.globals[i1] = fragment[i1];
				}
			} else {
				this.tmpShader.vertex.paramsSize = vertex.length >> 2;
				this.tmpShader.fragment.paramsSize = fragment.length >> 2;
				var s2 = this.tmpShader;
				b.vertex.grow(s2.vertex);
				b.fragment.grow(s2.fragment);
				var _g12 = 0;
				var _g3 = vertex.length;
				while(_g12 < _g3) {
					var i2 = _g12++;
					b.vertex.params[i2] = vertex[i2];
				}
				var _g13 = 0;
				var _g4 = fragment.length;
				while(_g13 < _g4) {
					var i3 = _g13++;
					b.fragment.params[i3] = fragment[i3];
				}
			}
			this.d.uploadShaderBuffers(b,globals?0:1);
			break;
		case 7:
			var fragment1 = op[3];
			var vertex1 = op[2];
			var b1 = this.tmpBuf;
			this.tmpShader.vertex.textures2DCount = vertex1.length;
			this.tmpShader.fragment.textures2DCount = fragment1.length;
			var s3 = this.tmpShader;
			b1.vertex.grow(s3.vertex);
			b1.fragment.grow(s3.fragment);
			var _g14 = 0;
			var _g5 = vertex1.length;
			while(_g14 < _g5) {
				var i4 = _g14++;
				var t = this.textureMap.h[vertex1[i4]];
				b1.vertex.tex[i4] = t == null?this.defaultTexture():t;
			}
			var _g15 = 0;
			var _g6 = fragment1.length;
			while(_g15 < _g6) {
				var i5 = _g15++;
				var t1 = this.textureMap.h[fragment1[i5]];
				b1.fragment.tex[i5] = t1 == null?this.defaultTexture():t1;
			}
			this.d.uploadShaderBuffers(b1,2);
			break;
		case 8:
			var fl = [h3d_mat_TextureFlags.NoAlloc];
			var flbits = op[6];
			var flcount = 0;
			while(flbits != 0) {
				if((flbits & 1) != 0) {
					fl.push(Type.createEnumIndex(h3d_mat_TextureFlags,flcount,null));
				}
				flbits >>>= 1;
				++flcount;
			}
			var t2 = new h3d_mat_Texture(op[4],op[5],fl,null,{ fileName : "ScnDriver.hx", lineNumber : 388, className : "h3d.impl.ScnDriver", methodName : "replay"});
			t2.name = op[3];
			t2.t = this.d.allocTexture(t2);
			t2.flags &= 268434943;
			this.textureMap.h[op[2]] = t2;
			break;
		case 9:
			this.indexBuffers[op[2]] = this.d.allocIndexes(op[3]);
			break;
		case 10:
			var m = new h3d_impl_ManagedBuffer(op[4],op[3],[h3d_BufferFlag.NoAlloc]);
			m.flags = op[5];
			m.vbuf = this.d.allocVertexes(m);
			this.vertexBuffers[op[2]] = m;
			break;
		case 11:
			var id1 = op[2];
			var t3 = this.textureMap.h[id1];
			if(t3 != null) {
				this.textureMap.remove(id1);
				this.d.disposeTexture(t3);
			}
			break;
		case 12:
			var id2 = op[2];
			var i6 = this.indexBuffers[id2];
			if(i6 != null) {
				this.indexBuffers[id2] = null;
				this.d.disposeIndexes(i6);
			}
			break;
		case 13:
			var id3 = op[2];
			var v = this.vertexBuffers[id3];
			if(v != null) {
				this.vertexBuffers[id3] = null;
				this.d.disposeVertexes(v.vbuf);
			}
			break;
		case 14:
			this.d.uploadTexturePixels(this.textureMap.h[op[2]],op[3],op[4],op[5]);
			break;
		case 15:
			this.d.uploadIndexBytes(this.indexBuffers[op[2]],op[3],op[4],op[5],0);
			break;
		case 16:
			this.d.uploadVertexBytes(this.vertexBuffers[op[2]].vbuf,op[3],op[4],op[5],0);
			break;
		case 17:
			var m1 = this.vertexBuffers[op[2]];
			var buf = new h3d_Buffer(0,0,[h3d_BufferFlag.NoAlloc],{ fileName : "ScnDriver.hx", lineNumber : 443, className : "h3d.impl.ScnDriver", methodName : "replay"});
			buf.buffer = m1;
			if(op[3]) {
				buf.flags |= 16;
			}
			this.d.selectBuffer(buf);
			break;
		case 18:
			var bufs = op[2];
			var head = null;
			var cur = null;
			var _g7 = 0;
			while(_g7 < bufs.length) {
				var b2 = bufs[_g7];
				++_g7;
				var buf1 = new h3d_Buffer(0,0,[h3d_BufferFlag.NoAlloc],{ fileName : "ScnDriver.hx", lineNumber : 451, className : "h3d.impl.ScnDriver", methodName : "replay"});
				buf1.buffer = this.vertexBuffers[b2.vbuf];
				var b3 = new h3d_BufferOffset(buf1,b2.offset);
				if(head == null) {
					head = b3;
				} else {
					cur.next = b3;
				}
				cur = b3;
			}
			this.d.selectMultiBuffers(head);
			break;
		case 19:
			this.d.draw(this.indexBuffers[op[2]],op[3],op[4]);
			break;
		case 20:
			this.d.setRenderZone(op[2],op[3],op[4],op[5]);
			break;
		case 21:
			this.d.setRenderTarget(this.textureMap.h[op[2]]);
			break;
		case 22:
			this.d.present();
			break;
		}
	}
	,__class__: h3d_impl_ScnDriver
});
var h3d_impl_TextureCache = function() {
	this.position = 0;
	this.cache = [];
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	var engine = h3d_Engine.CURRENT;
	this.hasDefaultDepth = engine.driver.hasFeature(h3d_impl_Feature.TargetUseDefaultDepthBuffer);
	this.fullClearRequired = engine.driver.hasFeature(h3d_impl_Feature.FullClearRequired);
	this.defaultFormat = h3d_mat_Texture.nativeFormat;
};
$hxClasses["h3d.impl.TextureCache"] = h3d_impl_TextureCache;
h3d_impl_TextureCache.__name__ = ["h3d","impl","TextureCache"];
h3d_impl_TextureCache.prototype = {
	get: function(index) {
		if(index == null) {
			index = 0;
		}
		return this.cache[index];
	}
	,set: function(t,index) {
		this.cache[index] = t;
	}
	,begin: function(ctx) {
		if(this.frame != ctx.frame) {
			while(this.cache.length > this.position) {
				var t = this.cache.pop();
				if(t != null) {
					t.dispose();
				}
			}
			this.frame = ctx.frame;
			this.position = 0;
		}
	}
	,allocTarget: function(name,ctx,width,height,hasDepth,format) {
		if(hasDepth == null) {
			hasDepth = true;
		}
		this.begin(ctx);
		var t = this.cache[this.position];
		if(format == null) {
			format = this.defaultFormat;
		}
		if(t == null || t.t == null && t.realloc == null || t.width != width || t.height != height || (t.flags & 1 << (this.hasDefaultDepth?h3d_mat_TextureFlags.TargetUseDefaultDepth:h3d_mat_TextureFlags.TargetDepth)[1]) != 0 != hasDepth || t.format != format) {
			if(t != null) {
				t.dispose();
			}
			var flags = [h3d_mat_TextureFlags.Target];
			if(hasDepth) {
				flags.push(this.hasDefaultDepth?h3d_mat_TextureFlags.TargetUseDefaultDepth:h3d_mat_TextureFlags.TargetDepth);
			}
			t = new h3d_mat_Texture(width,height,flags,format,{ fileName : "TextureCache.hx", lineNumber : 48, className : "h3d.impl.TextureCache", methodName : "allocTarget"});
			this.cache[this.position] = t;
		}
		t.setName(name);
		this.position++;
		return t;
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.cache;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.dispose();
		}
		this.cache = [];
		this.frame = -1;
	}
	,__class__: h3d_impl_TextureCache
};
var h3d_mat_Face = $hxClasses["h3d.mat.Face"] = { __ename__ : ["h3d","mat","Face"], __constructs__ : ["None","Back","Front","Both"] };
h3d_mat_Face.None = ["None",0];
h3d_mat_Face.None.toString = $estr;
h3d_mat_Face.None.__enum__ = h3d_mat_Face;
h3d_mat_Face.Back = ["Back",1];
h3d_mat_Face.Back.toString = $estr;
h3d_mat_Face.Back.__enum__ = h3d_mat_Face;
h3d_mat_Face.Front = ["Front",2];
h3d_mat_Face.Front.toString = $estr;
h3d_mat_Face.Front.__enum__ = h3d_mat_Face;
h3d_mat_Face.Both = ["Both",3];
h3d_mat_Face.Both.toString = $estr;
h3d_mat_Face.Both.__enum__ = h3d_mat_Face;
h3d_mat_Face.__empty_constructs__ = [h3d_mat_Face.None,h3d_mat_Face.Back,h3d_mat_Face.Front,h3d_mat_Face.Both];
var h3d_mat_Blend = $hxClasses["h3d.mat.Blend"] = { __ename__ : ["h3d","mat","Blend"], __constructs__ : ["One","Zero","SrcAlpha","SrcColor","DstAlpha","DstColor","OneMinusSrcAlpha","OneMinusSrcColor","OneMinusDstAlpha","OneMinusDstColor","ConstantColor","ConstantAlpha","OneMinusConstantColor","OneMinusConstantAlpha","SrcAlphaSaturate"] };
h3d_mat_Blend.One = ["One",0];
h3d_mat_Blend.One.toString = $estr;
h3d_mat_Blend.One.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.Zero = ["Zero",1];
h3d_mat_Blend.Zero.toString = $estr;
h3d_mat_Blend.Zero.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.SrcAlpha = ["SrcAlpha",2];
h3d_mat_Blend.SrcAlpha.toString = $estr;
h3d_mat_Blend.SrcAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.SrcColor = ["SrcColor",3];
h3d_mat_Blend.SrcColor.toString = $estr;
h3d_mat_Blend.SrcColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.DstAlpha = ["DstAlpha",4];
h3d_mat_Blend.DstAlpha.toString = $estr;
h3d_mat_Blend.DstAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.DstColor = ["DstColor",5];
h3d_mat_Blend.DstColor.toString = $estr;
h3d_mat_Blend.DstColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusSrcAlpha = ["OneMinusSrcAlpha",6];
h3d_mat_Blend.OneMinusSrcAlpha.toString = $estr;
h3d_mat_Blend.OneMinusSrcAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusSrcColor = ["OneMinusSrcColor",7];
h3d_mat_Blend.OneMinusSrcColor.toString = $estr;
h3d_mat_Blend.OneMinusSrcColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusDstAlpha = ["OneMinusDstAlpha",8];
h3d_mat_Blend.OneMinusDstAlpha.toString = $estr;
h3d_mat_Blend.OneMinusDstAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusDstColor = ["OneMinusDstColor",9];
h3d_mat_Blend.OneMinusDstColor.toString = $estr;
h3d_mat_Blend.OneMinusDstColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.ConstantColor = ["ConstantColor",10];
h3d_mat_Blend.ConstantColor.toString = $estr;
h3d_mat_Blend.ConstantColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.ConstantAlpha = ["ConstantAlpha",11];
h3d_mat_Blend.ConstantAlpha.toString = $estr;
h3d_mat_Blend.ConstantAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusConstantColor = ["OneMinusConstantColor",12];
h3d_mat_Blend.OneMinusConstantColor.toString = $estr;
h3d_mat_Blend.OneMinusConstantColor.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.OneMinusConstantAlpha = ["OneMinusConstantAlpha",13];
h3d_mat_Blend.OneMinusConstantAlpha.toString = $estr;
h3d_mat_Blend.OneMinusConstantAlpha.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.SrcAlphaSaturate = ["SrcAlphaSaturate",14];
h3d_mat_Blend.SrcAlphaSaturate.toString = $estr;
h3d_mat_Blend.SrcAlphaSaturate.__enum__ = h3d_mat_Blend;
h3d_mat_Blend.__empty_constructs__ = [h3d_mat_Blend.One,h3d_mat_Blend.Zero,h3d_mat_Blend.SrcAlpha,h3d_mat_Blend.SrcColor,h3d_mat_Blend.DstAlpha,h3d_mat_Blend.DstColor,h3d_mat_Blend.OneMinusSrcAlpha,h3d_mat_Blend.OneMinusSrcColor,h3d_mat_Blend.OneMinusDstAlpha,h3d_mat_Blend.OneMinusDstColor,h3d_mat_Blend.ConstantColor,h3d_mat_Blend.ConstantAlpha,h3d_mat_Blend.OneMinusConstantColor,h3d_mat_Blend.OneMinusConstantAlpha,h3d_mat_Blend.SrcAlphaSaturate];
var h3d_mat_Compare = $hxClasses["h3d.mat.Compare"] = { __ename__ : ["h3d","mat","Compare"], __constructs__ : ["Always","Never","Equal","NotEqual","Greater","GreaterEqual","Less","LessEqual"] };
h3d_mat_Compare.Always = ["Always",0];
h3d_mat_Compare.Always.toString = $estr;
h3d_mat_Compare.Always.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.Never = ["Never",1];
h3d_mat_Compare.Never.toString = $estr;
h3d_mat_Compare.Never.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.Equal = ["Equal",2];
h3d_mat_Compare.Equal.toString = $estr;
h3d_mat_Compare.Equal.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.NotEqual = ["NotEqual",3];
h3d_mat_Compare.NotEqual.toString = $estr;
h3d_mat_Compare.NotEqual.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.Greater = ["Greater",4];
h3d_mat_Compare.Greater.toString = $estr;
h3d_mat_Compare.Greater.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.GreaterEqual = ["GreaterEqual",5];
h3d_mat_Compare.GreaterEqual.toString = $estr;
h3d_mat_Compare.GreaterEqual.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.Less = ["Less",6];
h3d_mat_Compare.Less.toString = $estr;
h3d_mat_Compare.Less.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.LessEqual = ["LessEqual",7];
h3d_mat_Compare.LessEqual.toString = $estr;
h3d_mat_Compare.LessEqual.__enum__ = h3d_mat_Compare;
h3d_mat_Compare.__empty_constructs__ = [h3d_mat_Compare.Always,h3d_mat_Compare.Never,h3d_mat_Compare.Equal,h3d_mat_Compare.NotEqual,h3d_mat_Compare.Greater,h3d_mat_Compare.GreaterEqual,h3d_mat_Compare.Less,h3d_mat_Compare.LessEqual];
var h3d_mat_MipMap = $hxClasses["h3d.mat.MipMap"] = { __ename__ : ["h3d","mat","MipMap"], __constructs__ : ["None","Nearest","Linear"] };
h3d_mat_MipMap.None = ["None",0];
h3d_mat_MipMap.None.toString = $estr;
h3d_mat_MipMap.None.__enum__ = h3d_mat_MipMap;
h3d_mat_MipMap.Nearest = ["Nearest",1];
h3d_mat_MipMap.Nearest.toString = $estr;
h3d_mat_MipMap.Nearest.__enum__ = h3d_mat_MipMap;
h3d_mat_MipMap.Linear = ["Linear",2];
h3d_mat_MipMap.Linear.toString = $estr;
h3d_mat_MipMap.Linear.__enum__ = h3d_mat_MipMap;
h3d_mat_MipMap.__empty_constructs__ = [h3d_mat_MipMap.None,h3d_mat_MipMap.Nearest,h3d_mat_MipMap.Linear];
var h3d_mat_Filter = $hxClasses["h3d.mat.Filter"] = { __ename__ : ["h3d","mat","Filter"], __constructs__ : ["Nearest","Linear"] };
h3d_mat_Filter.Nearest = ["Nearest",0];
h3d_mat_Filter.Nearest.toString = $estr;
h3d_mat_Filter.Nearest.__enum__ = h3d_mat_Filter;
h3d_mat_Filter.Linear = ["Linear",1];
h3d_mat_Filter.Linear.toString = $estr;
h3d_mat_Filter.Linear.__enum__ = h3d_mat_Filter;
h3d_mat_Filter.__empty_constructs__ = [h3d_mat_Filter.Nearest,h3d_mat_Filter.Linear];
var h3d_mat_Wrap = $hxClasses["h3d.mat.Wrap"] = { __ename__ : ["h3d","mat","Wrap"], __constructs__ : ["Clamp","Repeat"] };
h3d_mat_Wrap.Clamp = ["Clamp",0];
h3d_mat_Wrap.Clamp.toString = $estr;
h3d_mat_Wrap.Clamp.__enum__ = h3d_mat_Wrap;
h3d_mat_Wrap.Repeat = ["Repeat",1];
h3d_mat_Wrap.Repeat.toString = $estr;
h3d_mat_Wrap.Repeat.__enum__ = h3d_mat_Wrap;
h3d_mat_Wrap.__empty_constructs__ = [h3d_mat_Wrap.Clamp,h3d_mat_Wrap.Repeat];
var h3d_mat_Operation = $hxClasses["h3d.mat.Operation"] = { __ename__ : ["h3d","mat","Operation"], __constructs__ : ["Add","Sub","ReverseSub"] };
h3d_mat_Operation.Add = ["Add",0];
h3d_mat_Operation.Add.toString = $estr;
h3d_mat_Operation.Add.__enum__ = h3d_mat_Operation;
h3d_mat_Operation.Sub = ["Sub",1];
h3d_mat_Operation.Sub.toString = $estr;
h3d_mat_Operation.Sub.__enum__ = h3d_mat_Operation;
h3d_mat_Operation.ReverseSub = ["ReverseSub",2];
h3d_mat_Operation.ReverseSub.toString = $estr;
h3d_mat_Operation.ReverseSub.__enum__ = h3d_mat_Operation;
h3d_mat_Operation.__empty_constructs__ = [h3d_mat_Operation.Add,h3d_mat_Operation.Sub,h3d_mat_Operation.ReverseSub];
var h3d_mat_TextureFlags = $hxClasses["h3d.mat.TextureFlags"] = { __ename__ : ["h3d","mat","TextureFlags"], __constructs__ : ["Target","TargetDepth","TargetUseDefaultDepth","Cubic","MipMapped","IsNPOT","NoAlloc","Dynamic","AlphaPremultiplied","WasCleared","Loading"] };
h3d_mat_TextureFlags.Target = ["Target",0];
h3d_mat_TextureFlags.Target.toString = $estr;
h3d_mat_TextureFlags.Target.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.TargetDepth = ["TargetDepth",1];
h3d_mat_TextureFlags.TargetDepth.toString = $estr;
h3d_mat_TextureFlags.TargetDepth.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.TargetUseDefaultDepth = ["TargetUseDefaultDepth",2];
h3d_mat_TextureFlags.TargetUseDefaultDepth.toString = $estr;
h3d_mat_TextureFlags.TargetUseDefaultDepth.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.Cubic = ["Cubic",3];
h3d_mat_TextureFlags.Cubic.toString = $estr;
h3d_mat_TextureFlags.Cubic.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.MipMapped = ["MipMapped",4];
h3d_mat_TextureFlags.MipMapped.toString = $estr;
h3d_mat_TextureFlags.MipMapped.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.IsNPOT = ["IsNPOT",5];
h3d_mat_TextureFlags.IsNPOT.toString = $estr;
h3d_mat_TextureFlags.IsNPOT.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.NoAlloc = ["NoAlloc",6];
h3d_mat_TextureFlags.NoAlloc.toString = $estr;
h3d_mat_TextureFlags.NoAlloc.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.Dynamic = ["Dynamic",7];
h3d_mat_TextureFlags.Dynamic.toString = $estr;
h3d_mat_TextureFlags.Dynamic.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.AlphaPremultiplied = ["AlphaPremultiplied",8];
h3d_mat_TextureFlags.AlphaPremultiplied.toString = $estr;
h3d_mat_TextureFlags.AlphaPremultiplied.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.WasCleared = ["WasCleared",9];
h3d_mat_TextureFlags.WasCleared.toString = $estr;
h3d_mat_TextureFlags.WasCleared.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.Loading = ["Loading",10];
h3d_mat_TextureFlags.Loading.toString = $estr;
h3d_mat_TextureFlags.Loading.__enum__ = h3d_mat_TextureFlags;
h3d_mat_TextureFlags.__empty_constructs__ = [h3d_mat_TextureFlags.Target,h3d_mat_TextureFlags.TargetDepth,h3d_mat_TextureFlags.TargetUseDefaultDepth,h3d_mat_TextureFlags.Cubic,h3d_mat_TextureFlags.MipMapped,h3d_mat_TextureFlags.IsNPOT,h3d_mat_TextureFlags.NoAlloc,h3d_mat_TextureFlags.Dynamic,h3d_mat_TextureFlags.AlphaPremultiplied,h3d_mat_TextureFlags.WasCleared,h3d_mat_TextureFlags.Loading];
var h3d_mat_MaterialKind = $hxClasses["h3d.mat.MaterialKind"] = { __ename__ : ["h3d","mat","MaterialKind"], __constructs__ : ["Opaque","Alpha","AlphaKill","Add","SoftAdd"] };
h3d_mat_MaterialKind.Opaque = ["Opaque",0];
h3d_mat_MaterialKind.Opaque.toString = $estr;
h3d_mat_MaterialKind.Opaque.__enum__ = h3d_mat_MaterialKind;
h3d_mat_MaterialKind.Alpha = ["Alpha",1];
h3d_mat_MaterialKind.Alpha.toString = $estr;
h3d_mat_MaterialKind.Alpha.__enum__ = h3d_mat_MaterialKind;
h3d_mat_MaterialKind.AlphaKill = ["AlphaKill",2];
h3d_mat_MaterialKind.AlphaKill.toString = $estr;
h3d_mat_MaterialKind.AlphaKill.__enum__ = h3d_mat_MaterialKind;
h3d_mat_MaterialKind.Add = ["Add",3];
h3d_mat_MaterialKind.Add.toString = $estr;
h3d_mat_MaterialKind.Add.__enum__ = h3d_mat_MaterialKind;
h3d_mat_MaterialKind.SoftAdd = ["SoftAdd",4];
h3d_mat_MaterialKind.SoftAdd.toString = $estr;
h3d_mat_MaterialKind.SoftAdd.__enum__ = h3d_mat_MaterialKind;
h3d_mat_MaterialKind.__empty_constructs__ = [h3d_mat_MaterialKind.Opaque,h3d_mat_MaterialKind.Alpha,h3d_mat_MaterialKind.AlphaKill,h3d_mat_MaterialKind.Add,h3d_mat_MaterialKind.SoftAdd];
var h3d_mat_ShadowsMode = $hxClasses["h3d.mat.ShadowsMode"] = { __ename__ : ["h3d","mat","ShadowsMode"], __constructs__ : ["None","Active","CastOnly","ReceiveOnly"] };
h3d_mat_ShadowsMode.None = ["None",0];
h3d_mat_ShadowsMode.None.toString = $estr;
h3d_mat_ShadowsMode.None.__enum__ = h3d_mat_ShadowsMode;
h3d_mat_ShadowsMode.Active = ["Active",1];
h3d_mat_ShadowsMode.Active.toString = $estr;
h3d_mat_ShadowsMode.Active.__enum__ = h3d_mat_ShadowsMode;
h3d_mat_ShadowsMode.CastOnly = ["CastOnly",2];
h3d_mat_ShadowsMode.CastOnly.toString = $estr;
h3d_mat_ShadowsMode.CastOnly.__enum__ = h3d_mat_ShadowsMode;
h3d_mat_ShadowsMode.ReceiveOnly = ["ReceiveOnly",3];
h3d_mat_ShadowsMode.ReceiveOnly.toString = $estr;
h3d_mat_ShadowsMode.ReceiveOnly.__enum__ = h3d_mat_ShadowsMode;
h3d_mat_ShadowsMode.__empty_constructs__ = [h3d_mat_ShadowsMode.None,h3d_mat_ShadowsMode.Active,h3d_mat_ShadowsMode.CastOnly,h3d_mat_ShadowsMode.ReceiveOnly];
var h3d_mat_DefaultMaterialProps = function(kind,shadows,cull) {
	this.kind = kind == null?h3d_mat_MaterialKind.Opaque:kind;
	this.shadows = shadows == null?h3d_mat_ShadowsMode.Active:shadows;
	this.cull = cull == null?true:cull;
};
$hxClasses["h3d.mat.DefaultMaterialProps"] = h3d_mat_DefaultMaterialProps;
h3d_mat_DefaultMaterialProps.__name__ = ["h3d","mat","DefaultMaterialProps"];
h3d_mat_DefaultMaterialProps.particlesDefault = function() {
	return new h3d_mat_DefaultMaterialProps(h3d_mat_MaterialKind.Alpha,h3d_mat_ShadowsMode.None,false);
};
h3d_mat_DefaultMaterialProps.prototype = {
	apply: function(m) {
		var mainPass = m.passes;
		switch(this.kind[1]) {
		case 1:
			mainPass.setBlendMode(h2d_BlendMode.Alpha);
			mainPass.set_depthWrite(true);
			mainPass.setPassName("alpha");
			break;
		case 0:case 2:
			mainPass.setBlendMode(h2d_BlendMode.None);
			mainPass.set_depthWrite(true);
			mainPass.setPassName("default");
			break;
		case 3:
			mainPass.setBlendMode(h2d_BlendMode.Add);
			mainPass.set_depthWrite(false);
			mainPass.setPassName("additive");
			break;
		case 4:
			mainPass.setBlendMode(h2d_BlendMode.SoftAdd);
			mainPass.set_depthWrite(false);
			mainPass.setPassName("additive");
			break;
		}
		var tshader = mainPass.getShader(h3d_shader_Texture);
		if(tshader != null) {
			tshader.constModified = true;
			tshader.killAlpha__ = this.kind == h3d_mat_MaterialKind.AlphaKill;
			tshader.killAlphaThreshold__ = 0.5;
		}
		switch(this.shadows[1]) {
		case 0:
			m.set_castShadows(false);
			m.set_receiveShadows(false);
			break;
		case 1:
			m.set_castShadows(true);
			m.set_receiveShadows(true);
			break;
		case 2:
			m.set_castShadows(true);
			m.set_receiveShadows(false);
			break;
		case 3:
			m.set_castShadows(false);
			m.set_receiveShadows(true);
			break;
		}
		mainPass.set_culling(this.cull?h3d_mat_Face.Back:h3d_mat_Face.None);
	}
	,inspect: function(onChange) {
		var _gthis = this;
		return [hxd_inspect_Property.PEnum("kind",h3d_mat_MaterialKind,function() {
			return _gthis.kind;
		},function(v) {
			_gthis.kind = v;
			onChange();
		}),hxd_inspect_Property.PEnum("shadows",h3d_mat_ShadowsMode,function() {
			return _gthis.shadows;
		},function(v1) {
			_gthis.shadows = v1;
			onChange();
		}),hxd_inspect_Property.PBool("cull",function() {
			return _gthis.cull;
		},function(v2) {
			_gthis.cull = v2;
			onChange();
		})];
	}
	,getData: function() {
		return { kind : this.kind[0], shadows : this.shadows[0], cull : this.cull};
	}
	,loadData: function(o) {
		this.kind = Type.createEnum(h3d_mat_MaterialKind,o.kind,null);
		this.shadows = Type.createEnum(h3d_mat_ShadowsMode,o.shadows,null);
		this.cull = o.cull;
	}
	,__class__: h3d_mat_DefaultMaterialProps
};
var h3d_mat_Defaults = function() { };
$hxClasses["h3d.mat.Defaults"] = h3d_mat_Defaults;
h3d_mat_Defaults.__name__ = ["h3d","mat","Defaults"];
h3d_mat_Defaults.get_shadowShader = function() {
	var s = h3d_mat_Defaults.shadowShader;
	if(s == null) {
		s = new h3d_shader_Shadow();
		h3d_mat_Defaults.set_shadowShader(s);
	}
	return s;
};
h3d_mat_Defaults.set_shadowShader = function(s) {
	return h3d_mat_Defaults.shadowShader = s;
};
h3d_mat_Defaults.makeVolumeDecal = function(bounds) {
	return new h3d_shader_VolumeDecal(bounds.xMax - bounds.xMin,bounds.yMax - bounds.yMin);
};
var h3d_mat_Material = function(shader) {
	if(shader != null) {
		this.addPass(new h3d_mat_Pass("default",null)).addShader(shader);
	}
};
$hxClasses["h3d.mat.Material"] = h3d_mat_Material;
h3d_mat_Material.__name__ = ["h3d","mat","Material"];
h3d_mat_Material.prototype = {
	set_props: function(p) {
		this.props = p;
		if(p != null) {
			p.apply(this);
		}
		return p;
	}
	,addPass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			prev = cur;
			cur = cur.nextPass;
		}
		if(prev == null) {
			this.passes = p;
		} else {
			prev.nextPass = p;
		}
		p.nextPass = null;
		return p;
	}
	,removePass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			if(cur == p) {
				if(prev == null) {
					this.passes = p.nextPass;
				} else {
					prev.nextPass = p.nextPass;
				}
				p.nextPass = null;
				return true;
			}
			prev = cur;
			cur = cur.nextPass;
		}
		return false;
	}
	,get_mainPass: function() {
		return this.passes;
	}
	,getPasses: function() {
		var p = this.passes;
		var out = [];
		while(p != null) {
			out.push(p);
			p = p.nextPass;
		}
		return HxOverrides.iter(out);
	}
	,getPass: function(name) {
		var p = this.passes;
		while(p != null) {
			if(p.name == name) {
				return p;
			}
			p = p.nextPass;
		}
		return null;
	}
	,allocPass: function(name,inheritMain) {
		if(inheritMain == null) {
			inheritMain = true;
		}
		var p = this.getPass(name);
		if(p != null) {
			return p;
		}
		var p1 = new h3d_mat_Pass(name,null,inheritMain?this.passes:null);
		this.addPass(p1);
		return p1;
	}
	,clone: function(m) {
		if(m == null) {
			m = new h3d_mat_Material();
		}
		if((m == null?null:js_Boot.getClass(m)) != js_Boot.getClass(this)) {
			throw new js__$Boot_HaxeError(Std.string(this) + " is missing clone()");
		}
		m.passes.loadProps(this.passes);
		m.set_castShadows(this.castShadows);
		m.set_receiveShadows(this.receiveShadows);
		m.name = this.name;
		return m;
	}
	,get_shadows: function() {
		if(this.castShadows) {
			return this.receiveShadows;
		} else {
			return false;
		}
	}
	,set_shadows: function(v) {
		this.set_castShadows(v);
		this.set_receiveShadows(v);
		return v;
	}
	,set_castShadows: function(v) {
		if(this.castShadows == v) {
			return v;
		}
		if(v) {
			this.addPass(new h3d_mat_Pass("shadow",null,this.passes));
		} else {
			this.removePass(this.getPass("shadow"));
		}
		return this.castShadows = v;
	}
	,set_receiveShadows: function(v) {
		if(v == this.receiveShadows) {
			return v;
		}
		var shadows = h3d_mat_Defaults.get_shadowShader();
		if(v) {
			this.passes.addShader(shadows);
		} else {
			this.passes.removeShader(shadows);
		}
		return this.receiveShadows = v;
	}
	,__class__: h3d_mat_Material
};
var h3d_mat_MeshMaterial = function(texture) {
	this.mshader = new h3d_shader_BaseMesh();
	this.set_blendMode(h2d_BlendMode.None);
	h3d_mat_Material.call(this,this.mshader);
	this.set_texture(texture);
};
$hxClasses["h3d.mat.MeshMaterial"] = h3d_mat_MeshMaterial;
h3d_mat_MeshMaterial.__name__ = ["h3d","mat","MeshMaterial"];
h3d_mat_MeshMaterial.__super__ = h3d_mat_Material;
h3d_mat_MeshMaterial.prototype = $extend(h3d_mat_Material.prototype,{
	get_specularPower: function() {
		return this.mshader.specularPower__;
	}
	,set_specularPower: function(v) {
		return this.mshader.specularPower__ = v;
	}
	,get_specularAmount: function() {
		return this.mshader.specularAmount__;
	}
	,set_specularAmount: function(v) {
		return this.mshader.specularAmount__ = v;
	}
	,get_color: function() {
		return this.mshader.color__;
	}
	,set_color: function(v) {
		return this.mshader.color__ = v;
	}
	,clone: function(m) {
		var m1 = m == null?new h3d_mat_MeshMaterial():m;
		h3d_mat_Material.prototype.clone.call(this,m1);
		m1.set_texture(this.get_texture());
		if(this.textureShader != null) {
			var _this = m1.textureShader;
			var _v = this.textureShader.additive__;
			_this.constModified = true;
			_this.additive__ = _v;
			var _this1 = m1.textureShader;
			var _v1 = this.textureShader.killAlpha__;
			_this1.constModified = true;
			_this1.killAlpha__ = _v1;
			m1.textureShader.killAlphaThreshold__ = this.textureShader.killAlphaThreshold__;
		}
		m1.mshader.color__ = this.mshader.color__;
		m1.set_blendMode(this.blendMode);
		return m1;
	}
	,set_blendMode: function(v) {
		if(this.passes != null) {
			this.passes.setBlendMode(v);
			switch(v[1]) {
			case 0:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("default");
				break;
			case 1:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("alpha");
				break;
			case 2:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			case 3:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			case 4:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			case 5:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			case 6:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			}
		}
		return this.blendMode = v;
	}
	,get_specularTexture: function() {
		if(this.specularShader == null) {
			return null;
		} else {
			return this.specularShader.texture__;
		}
	}
	,get_texture: function() {
		if(this.textureShader == null) {
			return null;
		} else {
			return this.textureShader.texture__;
		}
	}
	,set_texture: function(t) {
		if(t == null) {
			if(this.textureShader != null) {
				this.passes.removeShader(this.textureShader);
				this.textureShader = null;
			}
		} else {
			if(this.textureShader == null) {
				this.textureShader = new h3d_shader_Texture();
				this.passes.addShader(this.textureShader);
			}
			this.textureShader.texture__ = t;
		}
		return t;
	}
	,set_specularTexture: function(t) {
		if(t == null) {
			if(this.specularShader != null) {
				this.passes.removeShader(this.specularShader);
				this.specularShader = null;
			}
		} else {
			if(this.specularShader == null) {
				this.specularShader = new h3d_shader_SpecularTexture();
				this.passes.addShader(this.specularShader);
			}
			this.specularShader.texture__ = t;
		}
		return t;
	}
	,__class__: h3d_mat_MeshMaterial
});
var h3d_mat_Pass = function(name,shaders,parent) {
	this.bits = 0;
	this.parentPass = parent;
	this.shaders = shaders;
	this.setPassName(name);
	this.set_culling(h3d_mat_Face.Back);
	var src = h3d_mat_Blend.One;
	var dst = h3d_mat_Blend.Zero;
	this.set_blendSrc(src);
	this.set_blendAlphaSrc(src);
	this.set_blendDst(dst);
	this.set_blendAlphaDst(dst);
	this.depth(true,h3d_mat_Compare.Less);
	this.set_blendOp(this.set_blendAlphaOp(h3d_mat_Operation.Add));
	this.set_colorMask(15);
};
$hxClasses["h3d.mat.Pass"] = h3d_mat_Pass;
h3d_mat_Pass.__name__ = ["h3d","mat","Pass"];
h3d_mat_Pass.getCulling = function(v) {
	return v & 3;
};
h3d_mat_Pass.getDepthWrite = function(v) {
	return v >> 2 & 1;
};
h3d_mat_Pass.getDepthTest = function(v) {
	return v >> 3 & 7;
};
h3d_mat_Pass.getBlendSrc = function(v) {
	return v >> 6 & 15;
};
h3d_mat_Pass.getBlendDst = function(v) {
	return v >> 10 & 15;
};
h3d_mat_Pass.getBlendAlphaSrc = function(v) {
	return v >> 14 & 15;
};
h3d_mat_Pass.getBlendAlphaDst = function(v) {
	return v >> 18 & 15;
};
h3d_mat_Pass.getBlendOp = function(v) {
	return v >> 22 & 3;
};
h3d_mat_Pass.getBlendAlphaOp = function(v) {
	return v >> 24 & 3;
};
h3d_mat_Pass.getColorMask = function(v) {
	return v >> 26 & 15;
};
h3d_mat_Pass.prototype = {
	loadProps: function(p) {
		this.name = p.name;
		this.passId = p.passId;
		this.bits = p.bits;
		this.enableLights = p.enableLights;
		this.dynamicParameters = p.dynamicParameters;
		this.set_culling(p.culling);
		this.set_depthWrite(p.depthWrite);
		this.set_depthTest(p.depthTest);
		this.set_blendSrc(p.blendSrc);
		this.set_blendDst(p.blendDst);
		this.set_blendOp(p.blendOp);
		this.set_blendAlphaSrc(p.blendAlphaSrc);
		this.set_blendAlphaDst(p.blendAlphaDst);
		this.set_blendAlphaOp(p.blendAlphaOp);
		this.set_colorMask(p.colorMask);
	}
	,setPassName: function(name) {
		this.name = name;
		this.passId = hxsl_Globals.allocID(name);
	}
	,blend: function(src,dst) {
		this.set_blendSrc(src);
		this.set_blendAlphaSrc(src);
		this.set_blendDst(dst);
		this.set_blendAlphaDst(dst);
	}
	,setBlendMode: function(b) {
		switch(b[1]) {
		case 0:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.Zero;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 1:
			var src1 = h3d_mat_Blend.SrcAlpha;
			var dst1 = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src1);
			this.set_blendAlphaSrc(src1);
			this.set_blendDst(dst1);
			this.set_blendAlphaDst(dst1);
			break;
		case 2:
			var src2 = h3d_mat_Blend.SrcAlpha;
			var dst2 = h3d_mat_Blend.One;
			this.set_blendSrc(src2);
			this.set_blendAlphaSrc(src2);
			this.set_blendDst(dst2);
			this.set_blendAlphaDst(dst2);
			break;
		case 3:
			var src3 = h3d_mat_Blend.OneMinusDstColor;
			var dst3 = h3d_mat_Blend.One;
			this.set_blendSrc(src3);
			this.set_blendAlphaSrc(src3);
			this.set_blendDst(dst3);
			this.set_blendAlphaDst(dst3);
			break;
		case 4:
			var src4 = h3d_mat_Blend.DstColor;
			var dst4 = h3d_mat_Blend.Zero;
			this.set_blendSrc(src4);
			this.set_blendAlphaSrc(src4);
			this.set_blendDst(dst4);
			this.set_blendAlphaDst(dst4);
			break;
		case 5:
			var src5 = h3d_mat_Blend.Zero;
			var dst5 = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src5);
			this.set_blendAlphaSrc(src5);
			this.set_blendDst(dst5);
			this.set_blendAlphaDst(dst5);
			break;
		case 6:
			var src6 = h3d_mat_Blend.One;
			var dst6 = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src6);
			this.set_blendAlphaSrc(src6);
			this.set_blendDst(dst6);
			this.set_blendAlphaDst(dst6);
			break;
		}
	}
	,depth: function(write,test) {
		this.set_depthWrite(write);
		this.set_depthTest(test);
	}
	,setColorMask: function(r,g,b,a) {
		this.set_colorMask((r?1:0) | (g?2:0) | (b?4:0) | (a?8:0));
	}
	,addShader: function(s) {
		this.shaders = new hxsl_ShaderList(s,this.shaders);
		return s;
	}
	,addShaderAt: function(s,index) {
		var prev = null;
		var cur = this.shaders;
		while(index > 0 && cur != this.parentShaders) {
			prev = cur;
			cur = cur.next;
			--index;
		}
		if(prev == null) {
			this.shaders = new hxsl_ShaderList(s,cur);
		} else {
			prev.next = new hxsl_ShaderList(s,cur);
		}
		return s;
	}
	,removeShader: function(s) {
		var sl = this.shaders;
		var prev = null;
		while(sl != null) {
			if(sl.s == s) {
				if(prev == null) {
					this.shaders = sl.next;
				} else {
					prev.next = sl.next;
				}
				return true;
			}
			prev = sl;
			sl = sl.next;
		}
		return false;
	}
	,getShader: function(t) {
		var s = this.shaders;
		while(s != this.parentShaders) {
			var value = s.s;
			var sh = (value instanceof t)?value:null;
			if(sh != null) {
				return sh;
			}
			s = s.next;
		}
		return null;
	}
	,getShaders: function() {
		return new hxsl__$ShaderList_ShaderIterator(this.shaders,this.parentShaders);
	}
	,getShadersRec: function() {
		if(this.parentPass == null || this.parentShaders == this.parentPass.shaders) {
			return this.shaders;
		}
		var s = this.shaders;
		var prev = null;
		while(s != null && s != this.parentShaders) {
			prev = s;
			s = s.next;
		}
		this.parentShaders = this.parentPass.shaders;
		if(prev == null) {
			this.shaders = this.parentShaders;
		} else {
			prev.next = this.parentShaders;
		}
		return this.shaders;
	}
	,clone: function() {
		var p = new h3d_mat_Pass(this.name,this.shaders.clone());
		p.bits = this.bits;
		p.enableLights = this.enableLights;
		return p;
	}
	,getDebugShaderCode: function(scene,toHxsl) {
		if(toHxsl == null) {
			toHxsl = true;
		}
		var shader = scene.renderer.compileShader(this);
		var toString = toHxsl?function(s) {
			return hxsl_Printer.shaderToString(s,true);
		}:hxsl_GlslOut.toGlsl;
		return "VERTEX=\n" + toString(shader.vertex.data) + "\n\nFRAGMENT=\n" + toString(shader.fragment.data);
	}
	,set_culling: function(v) {
		this.bits = this.bits & -4 | v[1];
		return this.culling = v;
	}
	,set_depthWrite: function(v) {
		this.bits = this.bits & -5 | (v?1:0) << 2;
		return this.depthWrite = v;
	}
	,set_depthTest: function(v) {
		this.bits = this.bits & -57 | v[1] << 3;
		return this.depthTest = v;
	}
	,set_blendSrc: function(v) {
		this.bits = this.bits & -961 | v[1] << 6;
		return this.blendSrc = v;
	}
	,set_blendDst: function(v) {
		this.bits = this.bits & -15361 | v[1] << 10;
		return this.blendDst = v;
	}
	,set_blendAlphaSrc: function(v) {
		this.bits = this.bits & -245761 | v[1] << 14;
		return this.blendAlphaSrc = v;
	}
	,set_blendAlphaDst: function(v) {
		this.bits = this.bits & -3932161 | v[1] << 18;
		return this.blendAlphaDst = v;
	}
	,set_blendOp: function(v) {
		this.bits = this.bits & -12582913 | v[1] << 22;
		return this.blendOp = v;
	}
	,set_blendAlphaOp: function(v) {
		this.bits = this.bits & -50331649 | v[1] << 24;
		return this.blendAlphaOp = v;
	}
	,set_colorMask: function(v) {
		this.bits = this.bits & -1006632961 | (v & 15) << 26;
		return this.colorMask = v;
	}
	,__class__: h3d_mat_Pass
};
var hxd_PixelFormat = $hxClasses["hxd.PixelFormat"] = { __ename__ : ["hxd","PixelFormat"], __constructs__ : ["ARGB","BGRA","RGBA","RGBA16F","RGBA32F","ALPHA"] };
hxd_PixelFormat.ARGB = ["ARGB",0];
hxd_PixelFormat.ARGB.toString = $estr;
hxd_PixelFormat.ARGB.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.BGRA = ["BGRA",1];
hxd_PixelFormat.BGRA.toString = $estr;
hxd_PixelFormat.BGRA.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.RGBA = ["RGBA",2];
hxd_PixelFormat.RGBA.toString = $estr;
hxd_PixelFormat.RGBA.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.RGBA16F = ["RGBA16F",3];
hxd_PixelFormat.RGBA16F.toString = $estr;
hxd_PixelFormat.RGBA16F.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.RGBA32F = ["RGBA32F",4];
hxd_PixelFormat.RGBA32F.toString = $estr;
hxd_PixelFormat.RGBA32F.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.ALPHA = ["ALPHA",5];
hxd_PixelFormat.ALPHA.toString = $estr;
hxd_PixelFormat.ALPHA.__enum__ = hxd_PixelFormat;
hxd_PixelFormat.__empty_constructs__ = [hxd_PixelFormat.ARGB,hxd_PixelFormat.BGRA,hxd_PixelFormat.RGBA,hxd_PixelFormat.RGBA16F,hxd_PixelFormat.RGBA32F,hxd_PixelFormat.ALPHA];
var h3d_mat_Texture = function(w,h,flags,format,allocPos) {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	this.mem = h3d_Engine.CURRENT.mem;
	if(format == null) {
		format = h3d_mat_Texture.nativeFormat;
	}
	this.id = ++h3d_mat_Texture.UID;
	this.format = format;
	this.flags = 0;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f[1];
		}
	}
	var tw = 1;
	var th = 1;
	while(tw < w) tw <<= 1;
	while(th < h) th <<= 1;
	if(tw != w || th != h) {
		this.flags |= 32;
	}
	if((this.flags & 1) != 0) {
		this.realloc = function() {
		};
	}
	this.width = w;
	this.height = h;
	this.set_mipMap((this.flags & 16) != 0?h3d_mat_MipMap.Nearest:h3d_mat_MipMap.None);
	this.set_filter(h3d_mat_Filter.Linear);
	this.set_wrap(h3d_mat_Wrap.Clamp);
	this.bits &= 32767;
	this.allocPos = allocPos;
	if((this.flags & 64) == 0) {
		this.alloc();
	}
};
$hxClasses["h3d.mat.Texture"] = h3d_mat_Texture;
h3d_mat_Texture.__name__ = ["h3d","mat","Texture"];
h3d_mat_Texture.fromBitmap = function(bmp,allocPos) {
	var t = new h3d_mat_Texture(bmp.ctx.canvas.width,bmp.ctx.canvas.height,null,null,allocPos);
	t.uploadBitmap(bmp);
	return t;
};
h3d_mat_Texture.fromPixels = function(pixels,allocPos) {
	var t = new h3d_mat_Texture(pixels.width,pixels.height,null,null,allocPos);
	t.uploadPixels(pixels);
	return t;
};
h3d_mat_Texture.fromColor = function(color,alpha,allocPos) {
	if(alpha == null) {
		alpha = 1.;
	}
	var aval = alpha * 255 | 0;
	if(aval < 0) {
		aval = 0;
	} else if(aval > 255) {
		aval = 255;
	}
	var key = color & 16777215 | aval << 24;
	var t = h3d_mat_Texture.COLOR_CACHE.h[key];
	if(t != null) {
		return t;
	}
	var t1 = new h3d_mat_Texture(1,1,null,null,allocPos);
	t1.clear(color,alpha);
	t1.realloc = function() {
		t1.clear(color,alpha);
	};
	h3d_mat_Texture.COLOR_CACHE.h[key] = t1;
	return t1;
};
h3d_mat_Texture.genNoise = function(size) {
	var t = h3d_mat_Texture.noiseTextures.h[size];
	if(t != null && !(t.t == null && t.realloc == null)) {
		return t;
	}
	var t1 = new h3d_mat_Texture(size,size,[h3d_mat_TextureFlags.NoAlloc],null,{ fileName : "Texture.hx", lineNumber : 330, className : "h3d.mat.Texture", methodName : "genNoise"});
	var t2 = t1;
	var a1 = size;
	t1.realloc = function() {
		h3d_mat_Texture.allocNoise(t2,a1);
	};
	h3d_mat_Texture.noiseTextures.h[size] = t1;
	return t1;
};
h3d_mat_Texture.allocNoise = function(t,size) {
	var b = new hxd_BitmapData(size,size);
	var _g1 = 0;
	while(_g1 < size) {
		var x = _g1++;
		var _g3 = 0;
		while(_g3 < size) {
			var y = _g3++;
			var n = Std.random(256);
			b.setPixel(x,y,-16777216 | n | n << 8 | n << 16);
		}
	}
	t.uploadBitmap(b);
	b.ctx = null;
	b.pixel = null;
};
h3d_mat_Texture.prototype = {
	alloc: function() {
		if(this.t == null) {
			this.mem.allocTexture(this);
		}
	}
	,set_onLoaded: function(v) {
		this.onLoaded = v;
		if(v != null && (this.flags & 1024) == 0) {
			v();
		}
		return v;
	}
	,toString: function() {
		var str = this.name;
		if(this.name == null) {
			str = "Texture_" + this.id;
			if(this.allocPos != null) {
				str += "(" + this.allocPos.className + ":" + this.allocPos.lineNumber + ")";
			}
		}
		return str + "(" + this.width + "x" + this.height + ")";
	}
	,setName: function(n) {
		this.name = n;
	}
	,set_mipMap: function(m) {
		this.bits |= 524288;
		this.bits = this.bits & -4 | m[1];
		return this.mipMap = m;
	}
	,set_filter: function(f) {
		this.bits |= 524288;
		this.bits = this.bits & -25 | f[1] << 3;
		return this.filter = f;
	}
	,set_wrap: function(w) {
		this.bits |= 524288;
		this.bits = this.bits & -193 | w[1] << 6;
		return this.wrap = w;
	}
	,hasDefaultFlags: function() {
		return (this.bits & 524288) == 0;
	}
	,isDisposed: function() {
		if(this.t == null) {
			return this.realloc == null;
		} else {
			return false;
		}
	}
	,resize: function(width,height) {
		this.dispose();
		var tw = 1;
		var th = 1;
		while(tw < width) tw <<= 1;
		while(th < height) th <<= 1;
		if(tw != width || th != height) {
			this.flags |= 32;
		} else {
			this.flags &= 268435423;
		}
		this.width = width;
		this.height = height;
		if((this.flags & 64) == 0) {
			this.alloc();
		}
	}
	,clear: function(color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		this.alloc();
		var p = hxd_Pixels.alloc(this.width,this.height,hxd_PixelFormat.BGRA);
		var k = 0;
		var b = color & 255;
		var g = color >> 8 & 255;
		var r = color >> 16 & 255;
		var a = alpha * 255 | 0;
		if(a < 0) {
			a = 0;
		} else if(a > 255) {
			a = 255;
		}
		var _g1 = 0;
		var _g = this.width * this.height;
		while(_g1 < _g) {
			++_g1;
			p.bytes.b[k++] = b & 255;
			p.bytes.b[k++] = g & 255;
			p.bytes.b[k++] = r & 255;
			p.bytes.b[k++] = a & 255;
		}
		this.uploadPixels(p);
		p.dispose();
	}
	,uploadBitmap: function(bmp,mipLevel,side) {
		if(side == null) {
			side = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		this.mem.driver.uploadTextureBitmap(this,bmp,mipLevel,side);
		this.flags |= 512;
	}
	,uploadPixels: function(pixels,mipLevel,side) {
		if(side == null) {
			side = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		this.mem.driver.uploadTexturePixels(this,pixels,mipLevel,side);
		this.flags |= 512;
	}
	,dispose: function() {
		if(this.t != null) {
			this.mem.deleteTexture(this);
			this.allocPos.customParams = ["#DISPOSED"];
		}
	}
	,capturePixels: function(withAlpha) {
		if(withAlpha == null) {
			withAlpha = false;
		}
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var e = h3d_Engine.CURRENT;
		e.pushTarget(this);
		if(e.needFlushTarget) {
			e.doFlushTarget();
		}
		var pixels = hxd_Pixels.alloc(this.width,this.height,hxd_PixelFormat.RGBA);
		e.driver.captureRenderBuffer(pixels);
		e.popTarget();
		return pixels;
	}
	,__class__: h3d_mat_Texture
};
var h3d_pass_Base = function() {
	this.forceProcessing = false;
	this.priority = 0;
};
$hxClasses["h3d.pass.Base"] = h3d_pass_Base;
h3d_pass_Base.__name__ = ["h3d","pass","Base"];
h3d_pass_Base.prototype = {
	getTexture: function(index) {
		if(index == null) {
			index = 0;
		}
		return null;
	}
	,setTexture: function(t,index) {
		if(index == null) {
			index = 0;
		}
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,compileShader: function(p) {
		throw new js__$Boot_HaxeError("Not implemented for this pass");
	}
	,setContext: function(ctx) {
		this.ctx = ctx;
	}
	,dispose: function() {
	}
	,draw: function(passes) {
		return passes;
	}
	,__class__: h3d_pass_Base
};
var h3d_pass_ScreenFx = function(shader) {
	this.shader = shader;
	this.shaders = new hxsl_ShaderList(shader);
	this.manager = new h3d_shader_Manager(["output.position","output.color"]);
	this.pass = new h3d_mat_Pass(Std.string(this),new hxsl_ShaderList(shader));
	this.pass.set_culling(h3d_mat_Face.None);
	this.pass.depth(false,h3d_mat_Compare.Always);
	this.plan = h3d_prim_Plan2D.get();
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	this.engine = h3d_Engine.CURRENT;
	this.fullClearRequired = this.engine.hasFeature(h3d_impl_Feature.FullClearRequired);
};
$hxClasses["h3d.pass.ScreenFx"] = h3d_pass_ScreenFx;
h3d_pass_ScreenFx.__name__ = ["h3d","pass","ScreenFx"];
h3d_pass_ScreenFx.prototype = {
	setGlobals: function(ctx) {
		var _g = 0;
		var _g1 = ctx.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			this.manager.globals.map.h[g.gid] = g.value;
		}
	}
	,render: function() {
		var rts = this.manager.compileShaders(this.shaders);
		this.engine.selectMaterial(this.pass);
		this.engine.selectShader(rts);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(rts);
		} else {
			var _this = this.buffers;
			_this.vertex.grow(rts.vertex);
			_this.fragment.grow(rts.fragment);
		}
		this.manager.fillGlobals(this.buffers,rts);
		this.manager.fillParams(this.buffers,rts,this.shaders);
		this.engine.uploadShaderBuffers(this.buffers,0);
		this.engine.uploadShaderBuffers(this.buffers,1);
		this.engine.uploadShaderBuffers(this.buffers,2);
		this.plan.render(this.engine);
	}
	,dispose: function() {
	}
	,__class__: h3d_pass_ScreenFx
};
var h3d_pass_Blur = function(quality,passes,sigma) {
	if(sigma == null) {
		sigma = 1.;
	}
	if(passes == null) {
		passes = 1;
	}
	if(quality == null) {
		quality = 1;
	}
	h3d_pass_ScreenFx.call(this,new h3d_shader_Blur());
	this.set_quality(quality);
	this.passes = passes;
	this.set_sigma(sigma);
};
$hxClasses["h3d.pass.Blur"] = h3d_pass_Blur;
h3d_pass_Blur.__name__ = ["h3d","pass","Blur"];
h3d_pass_Blur.__super__ = h3d_pass_ScreenFx;
h3d_pass_Blur.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	set_quality: function(q) {
		this.values = null;
		return this.quality = q;
	}
	,set_sigma: function(s) {
		this.values = null;
		return this.sigma = s;
	}
	,set_depthBlur: function(d) {
		this.depthBlur = d;
		if(d == null) {
			var _this = this.shader;
			_this.constModified = true;
			_this.isDepthDependant__ = false;
			this.shader.depthTexture__ = null;
			this.shader.normalTexture__ = null;
		} else {
			var _this1 = this.shader;
			_this1.constModified = true;
			_this1.isDepthDependant__ = true;
			this.shader.depthTexture__ = d.depths;
			this.shader.normalTexture__ = d.normals;
		}
		return d;
	}
	,gauss: function(x,s) {
		if(s <= 0) {
			if(x == 0) {
				return 1;
			} else {
				return 0;
			}
		}
		var sq = s * s;
		return Math.pow(2.718281828459,-(x * x) / (2 * sq)) / Math.sqrt(2 * Math.PI * sq);
	}
	,calcValues: function() {
		this.values = [];
		var tot = 0.;
		var _g1 = 0;
		var _g = this.quality + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var g = this.gauss(i,this.sigma);
			this.values[i] = g;
			tot += g;
			if(i > 0) {
				tot += g;
			}
		}
		var _g11 = 0;
		var _g2 = this.quality + 1;
		while(_g11 < _g2) this.values[_g11++] /= tot;
	}
	,apply: function(src,tmp,output,isDepth) {
		if(isDepth == null) {
			isDepth = false;
		}
		if((this.quality <= 0 || this.passes <= 0 || this.sigma <= 0) && this.shader.fixedColor__ == null) {
			return;
		}
		if(output == null) {
			output = src;
		}
		var alloc = tmp == null;
		if(alloc) {
			tmp = new h3d_mat_Texture(src.width,src.height,[h3d_mat_TextureFlags.Target],null,{ fileName : "Blur.hx", lineNumber : 93, className : "h3d.pass.Blur", methodName : "apply"});
		}
		if(this.values == null) {
			this.calcValues();
		}
		var _this = this.shader;
		var _v = this.quality + 1;
		_this.constModified = true;
		_this.Quality__ = _v;
		this.shader.values__ = this.values;
		var _this1 = this.shader;
		_this1.constModified = true;
		_this1.isDepth__ = isDepth;
		if(this.depthBlur != null) {
			this.shader.cameraInverseViewProj__ = this.depthBlur.camera.getInverseViewProj();
		}
		var _g1 = 0;
		var _g = this.passes;
		while(_g1 < _g) {
			++_g1;
			this.shader.texture__ = src;
			var _this2 = this.shader.pixel__;
			_this2.x = 1 / src.width;
			_this2.y = 0;
			_this2.z = 0.;
			_this2.w = 1.;
			this.engine.pushTarget(tmp);
			if(this.fullClearRequired) {
				this.engine.clear(0,1,0);
			}
			this.render();
			this.engine.popTarget();
			this.shader.texture__ = tmp;
			var _this3 = this.shader.pixel__;
			var y = 1 / tmp.height;
			_this3.x = 0;
			_this3.y = y;
			_this3.z = 0.;
			_this3.w = 1.;
			this.engine.pushTarget(output);
			if(this.fullClearRequired) {
				this.engine.clear(0,1,0);
			}
			this.render();
			this.engine.popTarget();
		}
		if(alloc) {
			tmp.dispose();
		}
	}
	,__class__: h3d_pass_Blur
});
var hxsl_Shader = function() {
	this.priority = 0;
	var cl = js_Boot.getClass(this);
	this.shader = cl._SHADER;
	this.constModified = true;
	if(this.shader == null) {
		this.shader = new hxsl_SharedShader(cl.SRC);
		cl._SHADER = this.shader;
	}
};
$hxClasses["hxsl.Shader"] = hxsl_Shader;
hxsl_Shader.__name__ = ["hxsl","Shader"];
hxsl_Shader.prototype = {
	getParamValue: function(index) {
		throw new js__$Boot_HaxeError("assert");
	}
	,updateConstants: function(globals) {
		throw new js__$Boot_HaxeError("assert");
	}
	,updateConstantsFinal: function(globals) {
		var c = this.shader.consts;
		while(c != null) {
			if(c.globalId == 0) {
				c = c.next;
				continue;
			}
			var v = globals.map.h[c.globalId];
			switch(c.v.type[1]) {
			case 1:
				var v1 = v;
				if(v1 >>> c.bits != 0) {
					throw new js__$Boot_HaxeError("Constant " + c.v.name + " is outside range (" + v1 + " > " + ((1 << c.bits) - 1) + ")");
				}
				this.constBits |= v1 << c.pos;
				break;
			case 2:
				var v2 = v;
				if(v2) {
					this.constBits |= 1 << c.pos;
				}
				break;
			default:
				throw new js__$Boot_HaxeError("assert");
			}
			c = c.next;
		}
		var _this = this.shader;
		var constBits = this.constBits;
		var i = _this.instanceCache.h[constBits];
		this.instance = i == null?_this.makeInstance(constBits):i;
	}
	,clone: function() {
		return this;
	}
	,__class__: hxsl_Shader
};
var h3d_pass__$Border_BorderShader = function() {
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
};
$hxClasses["h3d.pass._Border.BorderShader"] = h3d_pass__$Border_BorderShader;
h3d_pass__$Border_BorderShader.__name__ = ["h3d","pass","_Border","BorderShader"];
h3d_pass__$Border_BorderShader.__super__ = hxsl_Shader;
h3d_pass__$Border_BorderShader.prototype = $extend(hxsl_Shader.prototype,{
	get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.color__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_pass__$Border_BorderShader);
		s.shader = this.shader;
		s.color__ = this.color__;
		return s;
	}
	,__class__: h3d_pass__$Border_BorderShader
});
var h3d_pass_Border = function(width,height,size) {
	if(size == null) {
		size = 1;
	}
	h3d_pass_ScreenFx.call(this,new h3d_pass__$Border_BorderShader());
	var bbuf = new Array(0);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - size / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - size / height * 2);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push(size / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	bbuf.push(size / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - (height - size) / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - (height - size) / height * 2);
	bbuf.push(0 / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	bbuf.push((width - size) / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - 0 / height * 2);
	bbuf.push((width - size) / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	bbuf.push(width / width * 2 - 1);
	bbuf.push(1 - height / height * 2);
	this.plan = new h3d_prim_RawPrimitive({ vbuf : bbuf, stride : 2, quads : true},true);
	var _this = this.shader.color__;
	_this.x = 1;
	_this.y = 1;
	_this.z = 1;
	_this.w = 1;
};
$hxClasses["h3d.pass.Border"] = h3d_pass_Border;
h3d_pass_Border.__name__ = ["h3d","pass","Border"];
h3d_pass_Border.__super__ = h3d_pass_ScreenFx;
h3d_pass_Border.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	__class__: h3d_pass_Border
});
var h3d_pass_Default = function() {
	this.sortPasses = true;
	this.textureCount = 1;
	this.shaderCount = 1;
	h3d_pass_Base.call(this);
	this.manager = new h3d_shader_Manager(this.getOutputs());
	this.tcache = new h3d_impl_TextureCache();
	this.shaderIdMap = [];
	this.textureIdMap = [];
	this.initGlobals();
};
$hxClasses["h3d.pass.Default"] = h3d_pass_Default;
h3d_pass_Default.__name__ = ["h3d","pass","Default"];
h3d_pass_Default.__super__ = h3d_pass_Base;
h3d_pass_Default.prototype = $extend(h3d_pass_Base.prototype,{
	get_globals: function() {
		return this.manager.globals;
	}
	,getTexture: function(index) {
		if(index == null) {
			index = 0;
		}
		return this.tcache.cache[index];
	}
	,setTexture: function(t,index) {
		if(index == null) {
			index = 0;
		}
		this.tcache.set(t,index);
	}
	,dispose: function() {
		h3d_pass_Base.prototype.dispose.call(this);
		this.tcache.dispose();
	}
	,getOutputs: function() {
		return ["output.position","output.color"];
	}
	,compileShader: function(p) {
		var o = new h3d_pass_Object();
		o.pass = p;
		this.setupShaders(o);
		return this.manager.compileShaders(o.shaders);
	}
	,processShaders: function(p,shaders) {
		var p1 = this.ctx.extraShaders;
		while(p1 != null) {
			shaders = this.ctx.allocShaderList(p1.s,shaders);
			p1 = p1.next;
		}
		return shaders;
	}
	,setupShaders: function(passes) {
		var p = passes;
		var lightInit = false;
		while(p != null) {
			var shaders = p.pass.getShadersRec();
			shaders = this.processShaders(p,shaders);
			if(p.pass.enableLights && this.ctx.lightSystem != null) {
				if(!lightInit) {
					this.ctx.lightSystem.initGlobals(this.manager.globals);
					lightInit = true;
				}
				shaders = this.ctx.lightSystem.computeLight(p.obj,shaders);
			}
			p.shader = this.manager.compileShaders(shaders);
			p.shaders = shaders;
			var t = p.shader.fragment.textures2D;
			if(t == null) {
				p.texture = 0;
			} else {
				var tmp;
				if(t.perObjectGlobal != null) {
					var v = this.manager.globals.map.h[t.perObjectGlobal.gid];
					if(v == null) {
						throw new js__$Boot_HaxeError("Missing global value " + t.perObjectGlobal.path);
					}
					tmp = v;
				} else {
					var si = shaders;
					var n = t.instance;
					while(n-- > 0) si = si.next;
					var v1 = si.s.getParamValue(t.index);
					if(v1 == null) {
						throw new js__$Boot_HaxeError("Missing param value " + Std.string(si.s) + "." + t.name);
					}
					tmp = v1;
				}
				var t1 = tmp;
				p.texture = t1 == null?0:t1.id;
			}
			p = p.next;
		}
	}
	,uploadParams: function() {
		this.manager.fillParams(this.cachedBuffer,this.ctx.drawPass.shader,this.ctx.drawPass.shaders);
		this.ctx.engine.uploadShaderBuffers(this.cachedBuffer,1);
		this.ctx.engine.uploadShaderBuffers(this.cachedBuffer,2);
	}
	,log: function(str) {
		var _this = this.ctx.engine.driver;
		if(_this.logEnable) {
			_this.logImpl(str);
		}
	}
	,drawObject: function(p) {
		this.ctx.drawPass = p;
		this.ctx.engine.selectMaterial(p.pass);
		p.obj.draw(this.ctx);
	}
	,draw: function(passes) {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.ctx.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			this.manager.globals.map.h[g.gid] = g.value;
		}
		this.setGlobals();
		this.setupShaders(passes);
		var p = passes;
		var shaderStart = this.shaderCount;
		var textureStart = this.textureCount;
		while(p != null) {
			if(this.shaderIdMap[p.shader.id] < shaderStart) {
				this.shaderIdMap[p.shader.id] = this.shaderCount++;
			}
			if(this.textureIdMap[p.texture] < textureStart) {
				this.textureIdMap[p.texture] = this.textureCount++;
			}
			p = p.next;
		}
		if(this.sortPasses) {
			var list = passes;
			if(list == null) {
				passes = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p1;
				var q;
				var e;
				var tail;
				while(true) {
					p1 = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p1 != null) {
						++nmerges;
						q = p1;
						psize = 0;
						var _g11 = 0;
						var _g2 = insize;
						while(_g11 < _g2) {
							++_g11;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else {
								var tmp;
								if(!(qsize == 0 || q == null)) {
									var d = _gthis.shaderIdMap[p1.shader.id] - _gthis.shaderIdMap[q.shader.id];
									tmp = (d != 0?d:_gthis.textureIdMap[p1.texture] - _gthis.textureIdMap[q.texture]) <= 0;
								} else {
									tmp = true;
								}
								if(tmp) {
									e = p1;
									p1 = p1.next;
									--psize;
								} else {
									e = q;
									q = q.next;
									--qsize;
								}
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p1 = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				passes = list;
			}
		}
		this.ctx.uploadParams = $bind(this,this.uploadParams);
		var p2 = passes;
		var buf = this.cachedBuffer;
		var prevShader = null;
		var drawTri = 0;
		var drawCalls = 0;
		var shaderSwitches = 0;
		if(this.ctx.engine.driver.logEnable) {
			var _this = this.ctx.engine.driver;
			if(_this.logEnable) {
				_this.logImpl("Pass " + (passes == null?"???":passes.pass.name) + " start");
			}
			drawTri = this.ctx.engine.drawTriangles;
			drawCalls = this.ctx.engine.drawCalls;
			shaderSwitches = this.ctx.engine.shaderSwitches;
		}
		while(p2 != null) {
			var _this1 = this.ctx.engine.driver;
			if(_this1.logEnable) {
				_this1.logImpl("Render " + Std.string(p2.obj) + "." + p2.pass.name);
			}
			this.manager.globals.map.h[this.globalModelView_id] = p2.obj.absPos;
			if(p2.shader.globals.h.hasOwnProperty(this.globalModelViewInverse_id)) {
				var v = p2.obj.getInvPos();
				this.manager.globals.map.h[this.globalModelViewInverse_id] = v;
			}
			if(prevShader != p2.shader) {
				prevShader = p2.shader;
				this.ctx.engine.selectShader(p2.shader);
				if(buf == null) {
					buf = this.cachedBuffer = new h3d_shader_Buffers(p2.shader);
				} else {
					var s = p2.shader;
					buf.vertex.grow(s.vertex);
					buf.fragment.grow(s.fragment);
				}
				this.manager.fillGlobals(buf,p2.shader);
				this.ctx.engine.uploadShaderBuffers(buf,0);
			}
			if(!p2.pass.dynamicParameters) {
				this.manager.fillParams(buf,p2.shader,p2.shaders);
				this.ctx.engine.uploadShaderBuffers(buf,1);
				this.ctx.engine.uploadShaderBuffers(buf,2);
			}
			this.drawObject(p2);
			p2 = p2.next;
		}
		if(this.ctx.engine.driver.logEnable) {
			var _this2 = this.ctx.engine.driver;
			if(_this2.logEnable) {
				_this2.logImpl("Pass " + (passes == null?"???":passes.pass.name) + " end");
			}
			var str = "\t" + (this.ctx.engine.drawTriangles - drawTri) + " tri " + (this.ctx.engine.drawCalls - drawCalls) + " calls " + (this.ctx.engine.shaderSwitches - shaderSwitches) + " shaders";
			var _this3 = this.ctx.engine.driver;
			if(_this3.logEnable) {
				_this3.logImpl(str);
			}
		}
		var _this4 = this.ctx;
		_this4.cachedPos = 0;
		_this4.drawPass = null;
		return passes;
	}
	,get_cameraView: function() {
		return this.manager.globals.map.h[this.cameraView_id];
	}
	,set_cameraView: function(v) {
		this.manager.globals.map.h[this.cameraView_id] = v;
		return v;
	}
	,get_cameraNear: function() {
		return this.manager.globals.map.h[this.cameraNear_id];
	}
	,set_cameraNear: function(v) {
		this.manager.globals.map.h[this.cameraNear_id] = v;
		return v;
	}
	,get_cameraFar: function() {
		return this.manager.globals.map.h[this.cameraFar_id];
	}
	,set_cameraFar: function(v) {
		this.manager.globals.map.h[this.cameraFar_id] = v;
		return v;
	}
	,get_cameraProj: function() {
		return this.manager.globals.map.h[this.cameraProj_id];
	}
	,set_cameraProj: function(v) {
		this.manager.globals.map.h[this.cameraProj_id] = v;
		return v;
	}
	,get_cameraPos: function() {
		return this.manager.globals.map.h[this.cameraPos_id];
	}
	,set_cameraPos: function(v) {
		this.manager.globals.map.h[this.cameraPos_id] = v;
		return v;
	}
	,get_cameraProjDiag: function() {
		return this.manager.globals.map.h[this.cameraProjDiag_id];
	}
	,set_cameraProjDiag: function(v) {
		this.manager.globals.map.h[this.cameraProjDiag_id] = v;
		return v;
	}
	,get_cameraViewProj: function() {
		return this.manager.globals.map.h[this.cameraViewProj_id];
	}
	,set_cameraViewProj: function(v) {
		this.manager.globals.map.h[this.cameraViewProj_id] = v;
		return v;
	}
	,get_cameraInverseViewProj: function() {
		return this.manager.globals.map.h[this.cameraInverseViewProj_id];
	}
	,set_cameraInverseViewProj: function(v) {
		this.manager.globals.map.h[this.cameraInverseViewProj_id] = v;
		return v;
	}
	,get_globalTime: function() {
		return this.manager.globals.map.h[this.globalTime_id];
	}
	,set_globalTime: function(v) {
		this.manager.globals.map.h[this.globalTime_id] = v;
		return v;
	}
	,get_pixelSize: function() {
		return this.manager.globals.map.h[this.pixelSize_id];
	}
	,set_pixelSize: function(v) {
		this.manager.globals.map.h[this.pixelSize_id] = v;
		return v;
	}
	,get_globalModelView: function() {
		return this.manager.globals.map.h[this.globalModelView_id];
	}
	,set_globalModelView: function(v) {
		this.manager.globals.map.h[this.globalModelView_id] = v;
		return v;
	}
	,get_globalModelViewInverse: function() {
		return this.manager.globals.map.h[this.globalModelViewInverse_id];
	}
	,set_globalModelViewInverse: function(v) {
		this.manager.globals.map.h[this.globalModelViewInverse_id] = v;
		return v;
	}
	,initGlobals: function() {
		this.cameraView_id = hxsl_Globals.allocID("camera.view");
		this.cameraNear_id = hxsl_Globals.allocID("camera.zNear");
		this.cameraFar_id = hxsl_Globals.allocID("camera.zFar");
		this.cameraProj_id = hxsl_Globals.allocID("camera.proj");
		this.cameraPos_id = hxsl_Globals.allocID("camera.position");
		this.cameraProjDiag_id = hxsl_Globals.allocID("camera.projDiag");
		this.cameraViewProj_id = hxsl_Globals.allocID("camera.viewProj");
		this.cameraInverseViewProj_id = hxsl_Globals.allocID("camera.inverseViewProj");
		this.globalTime_id = hxsl_Globals.allocID("global.time");
		this.pixelSize_id = hxsl_Globals.allocID("global.pixelSize");
		this.globalModelView_id = hxsl_Globals.allocID("global.modelView");
		this.globalModelViewInverse_id = hxsl_Globals.allocID("global.modelViewInverse");
	}
	,setGlobals: function() {
		this.manager.globals.map.h[this.cameraView_id] = this.ctx.camera.mcam;
		this.manager.globals.map.h[this.cameraNear_id] = this.ctx.camera.zNear;
		this.manager.globals.map.h[this.cameraFar_id] = this.ctx.camera.zFar;
		this.manager.globals.map.h[this.cameraProj_id] = this.ctx.camera.mproj;
		this.manager.globals.map.h[this.cameraPos_id] = this.ctx.camera.pos;
		this.manager.globals.map.h[this.cameraProjDiag_id] = new h3d_Vector(this.ctx.camera.mproj._11,this.ctx.camera.mproj._22,this.ctx.camera.mproj._33,this.ctx.camera.mproj._44);
		this.manager.globals.map.h[this.cameraViewProj_id] = this.ctx.camera.m;
		var v = this.ctx.camera.getInverseViewProj();
		this.manager.globals.map.h[this.cameraInverseViewProj_id] = v;
		this.manager.globals.map.h[this.globalTime_id] = this.ctx.time;
		this.manager.globals.map.h[this.pixelSize_id] = new h3d_Vector(2 / this.ctx.engine.width,2 / this.ctx.engine.height);
	}
	,__class__: h3d_pass_Default
});
var h3d_pass_Depth = function() {
	this.reduceSize = 0;
	this.enableSky = false;
	h3d_pass_Default.call(this);
	this.priority = 10;
	this.depthMapId = hxsl_Globals.allocID("depthMap");
};
$hxClasses["h3d.pass.Depth"] = h3d_pass_Depth;
h3d_pass_Depth.__name__ = ["h3d","pass","Depth"];
h3d_pass_Depth.__super__ = h3d_pass_Default;
h3d_pass_Depth.prototype = $extend(h3d_pass_Default.prototype,{
	getOutputs: function() {
		return ["output.position","output.depth"];
	}
	,draw: function(passes) {
		var texture = this.tcache.allocTarget("depthMap",this.ctx,this.ctx.engine.width >> this.reduceSize,this.ctx.engine.height >> this.reduceSize);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(this.enableSky?0:16711680,1);
		passes = h3d_pass_Default.prototype.draw.call(this,passes);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.depthMapId,texture);
		return passes;
	}
	,__class__: h3d_pass_Depth
});
var h3d_pass_HardwarePick = function() {
	this.pickedIndex = -1;
	this.fixedColor = new h3d_shader_FixedColor();
	h3d_pass_Default.call(this);
	this.material = new h3d_mat_Pass("");
	var _this = this.material;
	var src = h3d_mat_Blend.One;
	var dst = h3d_mat_Blend.Zero;
	_this.set_blendSrc(src);
	_this.set_blendAlphaSrc(src);
	_this.set_blendDst(dst);
	_this.set_blendAlphaDst(dst);
	this.texOut = new h3d_mat_Texture(3,3,[h3d_mat_TextureFlags.Target,h3d_mat_TextureFlags.TargetUseDefaultDepth],null,{ fileName : "HardwarePick.hx", lineNumber : 18, className : "h3d.pass.HardwarePick", methodName : "new"});
};
$hxClasses["h3d.pass.HardwarePick"] = h3d_pass_HardwarePick;
h3d_pass_HardwarePick.__name__ = ["h3d","pass","HardwarePick"];
h3d_pass_HardwarePick.__super__ = h3d_pass_Default;
h3d_pass_HardwarePick.prototype = $extend(h3d_pass_Default.prototype,{
	dispose: function() {
		h3d_pass_Default.prototype.dispose.call(this);
		this.texOut.dispose();
	}
	,getOutputs: function() {
		return ["output.pickPosition","output.colorID"];
	}
	,drawObject: function(p) {
		h3d_pass_Default.prototype.drawObject.call(this,p);
		var _this = this.fixedColor.colorID__;
		var c = -16777216 | ++this.colorID;
		_this.x = (c >> 16 & 255) * 0.00392156862745098;
		_this.y = (c >> 8 & 255) * 0.00392156862745098;
		_this.z = (c & 255) * 0.00392156862745098;
		_this.w = (c >>> 24) * 0.00392156862745098;
	}
	,nextID: function() {
		var _this = this.fixedColor.colorID__;
		var c = -16777216 | ++this.colorID;
		_this.x = (c >> 16 & 255) * 0.00392156862745098;
		_this.y = (c >> 8 & 255) * 0.00392156862745098;
		_this.z = (c & 255) * 0.00392156862745098;
		_this.w = (c >>> 24) * 0.00392156862745098;
	}
	,draw: function(passes) {
		var cur = passes;
		while(cur != null) {
			cur.pass.bits &= -1073741761;
			cur.pass.bits |= this.material.bits & 1073741760;
			cur = cur.next;
		}
		this.colorID = 0;
		var _this = this.fixedColor.colorID__;
		var c = -16777216 | ++this.colorID;
		_this.x = (c >> 16 & 255) * 0.00392156862745098;
		_this.y = (c >> 8 & 255) * 0.00392156862745098;
		_this.z = (c & 255) * 0.00392156862745098;
		_this.w = (c >>> 24) * 0.00392156862745098;
		var _this1 = this.fixedColor.viewport__;
		var x = -(this.pickX * 2 / this.ctx.engine.width - 1);
		var y = this.pickY * 2 / this.ctx.engine.height - 1;
		var z = this.ctx.engine.width / this.texOut.width;
		var w = this.ctx.engine.height / this.texOut.height;
		_this1.x = x;
		_this1.y = y;
		_this1.z = z;
		_this1.w = w;
		this.ctx.engine.pushTarget(this.texOut);
		this.ctx.engine.clear(-16777216,1);
		this.ctx.extraShaders = this.ctx.allocShaderList(this.fixedColor);
		var passes1 = h3d_pass_Default.prototype.draw.call(this,passes);
		this.ctx.extraShaders = null;
		this.ctx.engine.popTarget();
		var cur1 = passes1;
		while(cur1 != null) {
			cur1.pass.set_blendSrc(cur1.pass.blendSrc);
			cur1.pass.set_blendDst(cur1.pass.blendDst);
			cur1.pass.set_blendOp(cur1.pass.blendOp);
			cur1.pass.set_blendAlphaSrc(cur1.pass.blendAlphaSrc);
			cur1.pass.set_blendAlphaDst(cur1.pass.blendAlphaDst);
			cur1.pass.set_blendAlphaOp(cur1.pass.blendAlphaOp);
			cur1.pass.set_colorMask(cur1.pass.colorMask);
			cur1 = cur1.next;
		}
		this.ctx.engine.clear(null,null,0);
		var pix = this.texOut.capturePixels();
		this.pickedIndex = (pix.getPixel(pix.width >> 1,pix.height >> 1) & 16777215) - 1;
		return passes1;
	}
	,__class__: h3d_pass_HardwarePick
});
var h3d_pass_LightSystem = function() {
	this.perPixelLighting = true;
	this.maxLightsPerObject = 6;
	this.ambientLight = new h3d_Vector(0.5,0.5,0.5);
	this.ambientShader = new h3d_shader_AmbientLight();
	this.set_additiveLighting(true);
};
$hxClasses["h3d.pass.LightSystem"] = h3d_pass_LightSystem;
h3d_pass_LightSystem.__name__ = ["h3d","pass","LightSystem"];
h3d_pass_LightSystem.prototype = {
	get_additiveLighting: function() {
		var value = this.ambientShader;
		return ((value instanceof h3d_shader_AmbientLight)?value:null).additive__;
	}
	,set_additiveLighting: function(b) {
		var value = this.ambientShader;
		var _this = (value instanceof h3d_shader_AmbientLight)?value:null;
		_this.constModified = true;
		return _this.additive__ = b;
	}
	,initLights: function(ctx) {
		this.lightCount = 0;
		this.ctx = ctx;
		var l = ctx.lights;
		var prev = null;
		var frustum = new h3d_col_Frustum(ctx.camera.m);
		var s = new h3d_col_Sphere();
		while(l != null) {
			s.x = l.absPos._41;
			s.y = l.absPos._42;
			s.z = l.absPos._43;
			s.r = l.cullingDistance;
			if(!frustum.hasSphere(s)) {
				if(prev == null) {
					ctx.lights = l.next;
				} else {
					prev.next = l.next;
				}
				l = l.next;
				continue;
			}
			this.lightCount++;
			l.objectDistance = 0.;
			prev = l;
			l = l.next;
		}
		if(this.lightCount <= this.maxLightsPerObject) {
			var list = ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g1 = 0;
						var _g = insize;
						while(_g1 < _g) {
							var i = _g1++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			ctx.lights = tmp;
		}
		if(this.shadowLight == null || this.shadowLight.parent == null) {
			var l1 = ctx.lights;
			while(l1 != null) {
				var dl = (l1 instanceof h3d_scene_DirLight)?l1:null;
				if(dl != null) {
					this.shadowLight = dl;
					break;
				}
				l1 = l1.next;
			}
		}
	}
	,initGlobals: function(globals) {
		globals.set("global.ambientLight",this.ambientLight);
		globals.set("global.perPixelLighting",this.perPixelLighting);
	}
	,sortLight: function(l1,l2) {
		var p = l1.priority - l2.priority;
		if(p != 0) {
			return -p;
		}
		if(l1.objectDistance < l2.objectDistance) {
			return -1;
		} else {
			return 1;
		}
	}
	,computeLight: function(obj,shaders) {
		var _gthis = this;
		if(this.lightCount > this.maxLightsPerObject) {
			var l = this.ctx.lights;
			while(l != null) {
				if((obj.flags & 16) != 0) {
					var dx = l.absPos._41 - this.ctx.camera.target.x;
					var dy = l.absPos._42 - this.ctx.camera.target.y;
					var dz = l.absPos._43 - this.ctx.camera.target.z;
					l.objectDistance = dx * dx + dy * dy + dz * dz;
				} else {
					var dx1 = l.absPos._41 - obj.absPos._41;
					var dy1 = l.absPos._42 - obj.absPos._42;
					var dz1 = l.absPos._43 - obj.absPos._43;
					l.objectDistance = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
				}
				l = l.next;
			}
			var list = this.ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g1 = 0;
						var _g = insize;
						while(_g1 < _g) {
							++_g1;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			this.ctx.lights = tmp;
		}
		shaders = _gthis.ctx.allocShaderList(this.ambientShader,shaders);
		var l1 = this.ctx.lights;
		var i = 0;
		while(l1 != null) {
			if(i++ == this.maxLightsPerObject) {
				break;
			}
			shaders = _gthis.ctx.allocShaderList(l1.shader,shaders);
			l1 = l1.next;
		}
		return shaders;
	}
	,__class__: h3d_pass_LightSystem
};
var h3d_pass_Normal = function() {
	h3d_pass_Default.call(this);
	this.priority = 10;
	this.normalMapId = hxsl_Globals.allocID("normalMap");
};
$hxClasses["h3d.pass.Normal"] = h3d_pass_Normal;
h3d_pass_Normal.__name__ = ["h3d","pass","Normal"];
h3d_pass_Normal.__super__ = h3d_pass_Default;
h3d_pass_Normal.prototype = $extend(h3d_pass_Default.prototype,{
	getOutputs: function() {
		return ["output.position","output.normal"];
	}
	,draw: function(passes) {
		var texture = this.tcache.allocTarget("normalMal",this.ctx,this.ctx.engine.width,this.ctx.engine.height);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(8421504,1);
		passes = h3d_pass_Default.prototype.draw.call(this,passes);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.normalMapId,texture);
		return passes;
	}
	,__class__: h3d_pass_Normal
});
var h3d_pass_Object = function() {
	this.texture = 0;
};
$hxClasses["h3d.pass.Object"] = h3d_pass_Object;
h3d_pass_Object.__name__ = ["h3d","pass","Object"];
h3d_pass_Object.prototype = {
	__class__: h3d_pass_Object
};
var h3d_pass_ShadowMap = function(size) {
	this.bias = 0.01;
	this.power = 10.0;
	h3d_pass_Default.call(this);
	this.set_size(size);
	this.priority = 9;
	this.lightCamera = new h3d_Camera();
	this.lightCamera.orthoBounds = new h3d_col_Bounds();
	this.shadowMapId = hxsl_Globals.allocID("shadow.map");
	this.shadowProjId = hxsl_Globals.allocID("shadow.proj");
	this.shadowColorId = hxsl_Globals.allocID("shadow.color");
	this.shadowPowerId = hxsl_Globals.allocID("shadow.power");
	this.shadowBiasId = hxsl_Globals.allocID("shadow.bias");
	this.color = new h3d_Vector();
	this.blur = new h3d_pass_Blur(2,3);
	this.border = new h3d_pass_Border(size,size);
};
$hxClasses["h3d.pass.ShadowMap"] = h3d_pass_ShadowMap;
h3d_pass_ShadowMap.__name__ = ["h3d","pass","ShadowMap"];
h3d_pass_ShadowMap.__super__ = h3d_pass_Default;
h3d_pass_ShadowMap.prototype = $extend(h3d_pass_Default.prototype,{
	set_size: function(s) {
		if(this.border != null && this.size != s) {
			this.border.dispose();
			this.border = new h3d_pass_Border(s,s);
		}
		return this.size = s;
	}
	,dispose: function() {
		h3d_pass_Default.prototype.dispose.call(this);
		this.blur.dispose();
		if(this.border != null) {
			this.border.dispose();
		}
	}
	,calcShadowBounds: function(camera) {
		var bounds = camera.orthoBounds;
		bounds.xMin = -10;
		bounds.yMin = -10;
		bounds.zMin = -10;
		bounds.xMax = 10;
		bounds.yMax = 10;
		bounds.zMax = 10;
	}
	,getOutputs: function() {
		return ["output.position","output.depth"];
	}
	,setGlobals: function() {
		h3d_pass_Default.prototype.setGlobals.call(this);
		var _this = this.lightCamera.orthoBounds;
		_this.xMin = 1e20;
		_this.xMax = -1e20;
		_this.yMin = 1e20;
		_this.yMax = -1e20;
		_this.zMin = 1e20;
		_this.zMax = -1e20;
		this.calcShadowBounds(this.lightCamera);
		this.lightCamera.update();
		this.manager.globals.map.h[this.cameraViewProj_id] = this.lightCamera.m;
	}
	,draw: function(passes) {
		var texture = this.tcache.allocTarget("shadowMap",this.ctx,this.size,this.size);
		var ct = this.ctx.camera.target;
		var slight = this.ctx.lightSystem.shadowLight;
		if(slight == null) {
			var _this = this.lightCamera.target;
			_this.x = 0;
			_this.y = 0;
			_this.z = -1;
			_this.w = 1.;
		} else {
			var _this1 = this.lightCamera.target;
			var x = slight.direction.x;
			var y = slight.direction.y;
			var z = slight.direction.z;
			_this1.x = x;
			_this1.y = y;
			_this1.z = z;
			_this1.w = 1.;
			this.lightCamera.target.normalize();
		}
		this.lightCamera.target.x += ct.x;
		this.lightCamera.target.y += ct.y;
		this.lightCamera.target.z += ct.z;
		var _this2 = this.lightCamera.pos;
		_this2.x = ct.x;
		_this2.y = ct.y;
		_this2.z = ct.z;
		_this2.w = ct.w;
		this.lightCamera.update();
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(16777215,1,this.tcache.fullClearRequired?0:null);
		passes = h3d_pass_Default.prototype.draw.call(this,passes);
		if(this.border != null) {
			this.border.render();
		}
		this.ctx.engine.popTarget();
		if(this.blur.quality > 0 && this.blur.passes > 0) {
			this.blur.apply(texture,this.tcache.allocTarget("tmpBlur",this.ctx,this.size,this.size,false),null,true);
		}
		this.ctx.setGlobalID(this.shadowMapId,texture);
		this.ctx.setGlobalID(this.shadowProjId,this.lightCamera.m);
		this.ctx.setGlobalID(this.shadowColorId,this.color);
		this.ctx.setGlobalID(this.shadowPowerId,this.power);
		this.ctx.setGlobalID(this.shadowBiasId,this.bias);
		return passes;
	}
	,__class__: h3d_pass_ShadowMap
});
var h3d_prim_BigPrimitive = function(stride,isRaw,pos) {
	if(isRaw == null) {
		isRaw = false;
	}
	this.isRaw = isRaw;
	this.buffers = [];
	this.allIndexes = [];
	this.bounds = new h3d_col_Bounds();
	this.stride = stride;
	if(stride < 3) {
		throw new js__$Boot_HaxeError("Minimum stride = 3");
	}
	this.allocPos = pos;
};
$hxClasses["h3d.prim.BigPrimitive"] = h3d_prim_BigPrimitive;
h3d_prim_BigPrimitive.__name__ = ["h3d","prim","BigPrimitive"];
h3d_prim_BigPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_BigPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	begin: function(vcount,icount) {
		this.startIndex = this.bufPos / this.stride | 0;
		if(this.startIndex + vcount >= 65535) {
			if(vcount >= 65535) {
				throw new js__$Boot_HaxeError("Too many vertices in begin()");
			}
			this.flush();
		}
		if(this.tmpBuf == null) {
			this.tmpBuf = h3d_prim_BigPrimitive.PREV_BUFFER;
			if(this.tmpBuf == null) {
				this.tmpBuf = new Array(0);
			} else {
				h3d_prim_BigPrimitive.PREV_BUFFER = null;
			}
			var this1 = this.tmpBuf;
			var v = 65535 * this.stride;
			while(this1.length < v) this1.push(0.);
		}
		if(this.tmpIdx == null) {
			this.tmpIdx = h3d_prim_BigPrimitive.PREV_INDEX;
			if(this.tmpIdx == null) {
				this.tmpIdx = new Array(0);
			} else {
				h3d_prim_BigPrimitive.PREV_INDEX = null;
			}
		}
		if(this.idxPos + icount > this.tmpIdx.length) {
			var size = this.tmpIdx.length == 0?1024:this.tmpIdx.length;
			var req = this.idxPos + icount;
			while(size < req) size <<= 1;
			var this2 = this.tmpIdx;
			while(this2.length < size) this2.push(0);
		}
	}
	,addPoint: function(x,y,z) {
		this.tmpBuf[this.bufPos++] = x;
		this.tmpBuf[this.bufPos++] = y;
		this.tmpBuf[this.bufPos++] = z;
		var _this = this.bounds;
		if(x < _this.xMin) {
			_this.xMin = x;
		}
		if(x > _this.xMax) {
			_this.xMax = x;
		}
		if(y < _this.yMin) {
			_this.yMin = y;
		}
		if(y > _this.yMax) {
			_this.yMax = y;
		}
		if(z < _this.zMin) {
			_this.zMin = z;
		}
		if(z > _this.zMax) {
			_this.zMax = z;
		}
	}
	,addBounds: function(x,y,z) {
		var _this = this.bounds;
		if(x < _this.xMin) {
			_this.xMin = x;
		}
		if(x > _this.xMax) {
			_this.xMax = x;
		}
		if(y < _this.yMin) {
			_this.yMin = y;
		}
		if(y > _this.yMax) {
			_this.yMax = y;
		}
		if(z < _this.zMin) {
			_this.zMin = z;
		}
		if(z > _this.zMax) {
			_this.zMax = z;
		}
	}
	,addVertexValue: function(v) {
		this.tmpBuf[this.bufPos++] = v;
	}
	,addIndex: function(i) {
		this.tmpIdx[this.idxPos++] = i + this.startIndex;
	}
	,triCount: function() {
		var count = 0;
		var _g = 0;
		var _g1 = this.allIndexes;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			count += i.count;
		}
		count += this.idxPos;
		return count / 3 | 0;
	}
	,vertexCount: function() {
		var count = 0;
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			count += b.vertices;
		}
		count += this.bufPos / this.stride | 0;
		return count;
	}
	,flush: function() {
		if(this.tmpBuf != null) {
			if(this.bufPos > 0 && this.idxPos > 0) {
				var b = h3d_Buffer.ofSubFloats(this.tmpBuf,this.stride,this.bufPos / this.stride | 0,null,this.allocPos);
				if(this.isRaw) {
					b.flags |= 16;
				}
				this.buffers.push(b);
				this.allIndexes.push(h3d_Indexes.alloc(this.tmpIdx,0,this.idxPos));
			}
			if(h3d_prim_BigPrimitive.PREV_BUFFER == null || h3d_prim_BigPrimitive.PREV_BUFFER.length < this.tmpBuf.length) {
				h3d_prim_BigPrimitive.PREV_BUFFER = this.tmpBuf;
			}
			if(h3d_prim_BigPrimitive.PREV_INDEX == null || h3d_prim_BigPrimitive.PREV_INDEX.length < this.tmpIdx.length) {
				h3d_prim_BigPrimitive.PREV_INDEX = this.tmpIdx;
			}
			this.tmpBuf = null;
			this.tmpIdx = null;
			this.bufPos = 0;
			this.idxPos = 0;
			this.startIndex = 0;
		}
	}
	,render: function(engine) {
		if(this.tmpBuf != null) {
			this.flush();
		}
		var _g1 = 0;
		var _g = this.buffers.length;
		while(_g1 < _g) {
			var i = _g1++;
			engine.renderIndexed(this.buffers[i],this.allIndexes[i]);
		}
	}
	,getBounds: function() {
		return this.bounds;
	}
	,dispose: function() {
		this.clear();
	}
	,clear: function() {
		var _this = this.bounds;
		_this.xMin = 1e20;
		_this.xMax = -1e20;
		_this.yMin = 1e20;
		_this.yMax = -1e20;
		_this.zMin = 1e20;
		_this.zMax = -1e20;
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.dispose();
		}
		var _g2 = 0;
		var _g11 = this.allIndexes;
		while(_g2 < _g11.length) {
			var i = _g11[_g2];
			++_g2;
			i.dispose();
		}
		this.buffers = [];
		this.allIndexes = [];
		this.bufPos = 0;
		this.tmpBuf = null;
		this.tmpIdx = null;
	}
	,add: function(buf,idx,dx,dy,dz,rotation,scale,stride) {
		if(stride == null) {
			stride = -1;
		}
		if(scale == null) {
			scale = 1.;
		}
		if(rotation == null) {
			rotation = 0.;
		}
		if(dz == null) {
			dz = 0.;
		}
		if(dy == null) {
			dy = 0.;
		}
		if(dx == null) {
			dx = 0.;
		}
		this.addSub(buf,idx,0,0,buf.length / (stride < 0?this.stride:stride) | 0,idx.length / 3 | 0,dx,dy,dz,rotation,scale,stride);
		return;
	}
	,addSub: function(buf,idx,startVert,startTri,nvert,triCount,dx,dy,dz,rotation,scale,stride,deltaU,deltaV,color) {
		if(color == null) {
			color = 1.;
		}
		if(deltaV == null) {
			deltaV = 0.;
		}
		if(deltaU == null) {
			deltaU = 0.;
		}
		if(stride == null) {
			stride = -1;
		}
		if(scale == null) {
			scale = 1.;
		}
		if(rotation == null) {
			rotation = 0.;
		}
		if(dz == null) {
			dz = 0.;
		}
		if(dy == null) {
			dy = 0.;
		}
		if(dx == null) {
			dx = 0.;
		}
		if(stride < 0) {
			stride = this.stride;
		}
		if(stride < this.stride) {
			throw new js__$Boot_HaxeError("only stride >= " + this.stride + " allowed");
		}
		this.begin(nvert,triCount * 3);
		var start = this.startIndex;
		var cr = Math.cos(rotation);
		var sr = Math.sin(rotation);
		var pos = this.bufPos;
		var tmpBuf = this.tmpBuf;
		var _g1 = 0;
		while(_g1 < nvert) {
			var p = (_g1++ + startVert) * stride;
			var x = buf[p++];
			var y = buf[p++];
			var z = buf[p++];
			var tx = (x * cr - y * sr) * scale;
			var ty = (x * sr + y * cr) * scale;
			var vx = dx + tx;
			var vy = dy + ty;
			var vz = dz + z * scale;
			tmpBuf[pos++] = vx;
			tmpBuf[pos++] = vy;
			tmpBuf[pos++] = vz;
			var _this = this.bounds;
			if(vx < _this.xMin) {
				_this.xMin = vx;
			}
			if(vx > _this.xMax) {
				_this.xMax = vx;
			}
			if(vy < _this.yMin) {
				_this.yMin = vy;
			}
			if(vy > _this.yMax) {
				_this.yMax = vy;
			}
			if(vz < _this.zMin) {
				_this.zMin = vz;
			}
			if(vz > _this.zMax) {
				_this.zMax = vz;
			}
			switch(this.stride) {
			case 3:
				continue;
				break;
			case 4:
				tmpBuf[pos++] = buf[p++];
				break;
			case 5:
				tmpBuf[pos++] = buf[p++] + deltaU;
				tmpBuf[pos++] = buf[p++] + deltaV;
				break;
			case 6:
				var nx = buf[p++];
				var ny = buf[p++];
				var nz = buf[p++];
				var tnx = nx * cr - ny * sr;
				var tny = nx * sr + ny * cr;
				tmpBuf[pos++] = tnx;
				tmpBuf[pos++] = tny;
				tmpBuf[pos++] = nz;
				break;
			case 7:
				var nx1 = buf[p++];
				var ny1 = buf[p++];
				var nz1 = buf[p++];
				var tnx1 = nx1 * cr - ny1 * sr;
				var tny1 = nx1 * sr + ny1 * cr;
				tmpBuf[pos++] = tnx1;
				tmpBuf[pos++] = tny1;
				tmpBuf[pos++] = nz1;
				tmpBuf[pos++] = buf[p++] + deltaU;
				break;
			case 8:case 9:case 10:
				var nx2 = buf[p++];
				var ny2 = buf[p++];
				var nz2 = buf[p++];
				var tnx2 = nx2 * cr - ny2 * sr;
				var tny2 = nx2 * sr + ny2 * cr;
				tmpBuf[pos++] = tnx2;
				tmpBuf[pos++] = tny2;
				tmpBuf[pos++] = nz2;
				tmpBuf[pos++] = buf[p++] + deltaU;
				tmpBuf[pos++] = buf[p++] + deltaV;
				var _g3 = 8;
				var _g2 = this.stride;
				while(_g3 < _g2) {
					++_g3;
					tmpBuf[pos++] = buf[p++];
				}
				break;
			default:
				var nx3 = buf[p++];
				var ny3 = buf[p++];
				var nz3 = buf[p++];
				var tnx3 = nx3 * cr - ny3 * sr;
				var tny3 = nx3 * sr + ny3 * cr;
				tmpBuf[pos++] = tnx3;
				tmpBuf[pos++] = tny3;
				tmpBuf[pos++] = nz3;
				tmpBuf[pos++] = buf[p++] + deltaU;
				tmpBuf[pos++] = buf[p++] + deltaV;
				tmpBuf[pos++] = buf[p++] * color;
				tmpBuf[pos++] = buf[p++] * color;
				tmpBuf[pos++] = buf[p++] * color;
				var _g31 = 11;
				var _g21 = this.stride;
				while(_g31 < _g21) {
					++_g31;
					tmpBuf[pos++] = buf[p++];
				}
			}
		}
		this.bufPos = pos;
		start -= startVert;
		var _g11 = 0;
		var _g = triCount * 3;
		while(_g11 < _g) {
			var i = _g11++;
			this.tmpIdx[this.idxPos++] = idx[i + startTri * 3] + start;
		}
	}
	,__class__: h3d_prim_BigPrimitive
});
var h3d_prim_MeshPrimitive = function() { };
$hxClasses["h3d.prim.MeshPrimitive"] = h3d_prim_MeshPrimitive;
h3d_prim_MeshPrimitive.__name__ = ["h3d","prim","MeshPrimitive"];
h3d_prim_MeshPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_MeshPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	allocBuffer: function(engine,name) {
		return null;
	}
	,hasBuffer: function(name) {
		if(this.bufferCache == null) {
			return false;
		}
		var key = hxsl_Globals.allocID(name);
		return this.bufferCache.h.hasOwnProperty(key);
	}
	,addBuffer: function(name,buf,offset) {
		if(offset == null) {
			offset = 0;
		}
		if(this.bufferCache == null) {
			this.bufferCache = new haxe_ds_IntMap();
		}
		var id = hxsl_Globals.allocID(name);
		var old = this.bufferCache.h[id];
		if(old != null) {
			old.dispose();
		}
		var value = new h3d_BufferOffset(buf,offset);
		this.bufferCache.h[id] = value;
	}
	,dispose: function() {
		h3d_prim_Primitive.prototype.dispose.call(this);
		if(this.bufferCache != null) {
			var tmp = this.bufferCache.iterator();
			while(tmp.hasNext()) tmp.next().dispose();
		}
		this.bufferCache = null;
		this.prevNames = null;
	}
	,getBuffers: function(engine) {
		if(this.bufferCache == null) {
			this.bufferCache = new haxe_ds_IntMap();
		}
		var names = engine.driver.getShaderInputNames();
		if(names == this.prevNames) {
			return this.prevBuffers;
		}
		var buffers = null;
		var prev = null;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			var id = hxsl_Globals.allocID(name);
			var b = this.bufferCache.h[id];
			if(b == null) {
				b = this.allocBuffer(engine,name);
				if(b == null) {
					throw new js__$Boot_HaxeError("Buffer " + name + " is not available");
				}
				this.bufferCache.h[id] = b;
			}
			b.next = null;
			if(prev == null) {
				prev = b;
				buffers = prev;
			} else {
				prev.next = b;
				prev = b;
			}
		}
		this.prevNames = names;
		return this.prevBuffers = buffers;
	}
	,render: function(engine) {
		if(this.indexes == null || this.indexes.isDisposed()) {
			this.alloc(engine);
		}
		engine.renderMultiBuffers(this.getBuffers(engine),this.indexes);
	}
	,__class__: h3d_prim_MeshPrimitive
});
var h3d_prim_HMDModel = function(data,dataPos,lib) {
	this.bufferAliases = new haxe_ds_StringMap();
	this.data = data;
	this.dataPosition = dataPos;
	this.lib = lib;
};
$hxClasses["h3d.prim.HMDModel"] = h3d_prim_HMDModel;
h3d_prim_HMDModel.__name__ = ["h3d","prim","HMDModel"];
h3d_prim_HMDModel.__super__ = h3d_prim_MeshPrimitive;
h3d_prim_HMDModel.prototype = $extend(h3d_prim_MeshPrimitive.prototype,{
	triCount: function() {
		return this.data.get_indexCount() / 3 | 0;
	}
	,vertexCount: function() {
		return this.data.vertexCount;
	}
	,getBounds: function() {
		return this.data.bounds;
	}
	,selectMaterial: function(i) {
		this.curMaterial = i;
	}
	,getDataBuffers: function(fmt,defaults,material) {
		return this.lib.getBuffers(this.data,fmt,defaults,material);
	}
	,addAlias: function(name,realName,offset) {
		if(offset == null) {
			offset = 0;
		}
		var _this = this.bufferAliases;
		var value = { realName : realName, offset : offset};
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,alloc: function(engine) {
		this.dispose();
		this.buffer = new h3d_Buffer(this.data.vertexCount,this.data.vertexStride,null,{ fileName : "HMDModel.hx", lineNumber : 47, className : "h3d.prim.HMDModel", methodName : "alloc"});
		var entry = this.lib.entry;
		entry.open();
		entry.skip(this.dataPosition + this.data.vertexPosition);
		var size = this.data.vertexCount * this.data.vertexStride * 4;
		var bytes = hxd_impl_Tmp.getBytes(size);
		entry.read(bytes,0,size);
		this.buffer.uploadBytes(bytes,0,this.data.vertexCount);
		hxd_impl_Tmp.saveBytes(bytes);
		this.indexCount = 0;
		this.indexesTriPos = [];
		var _g = 0;
		var _g1 = this.data.indexCounts;
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			this.indexesTriPos.push(this.indexCount / 3 | 0);
			this.indexCount += n;
		}
		this.indexes = new h3d_Indexes(this.indexCount);
		entry.skip(this.data.indexPosition - (this.data.vertexPosition + size));
		var bytes1 = hxd_impl_Tmp.getBytes(this.indexCount * 2);
		entry.read(bytes1,0,this.indexCount * 2);
		this.indexes.uploadBytes(bytes1,0,this.indexCount);
		hxd_impl_Tmp.saveBytes(bytes1);
		entry.close();
		var pos = 0;
		var _g2 = 0;
		var _g11 = this.data.vertexFormat;
		while(_g2 < _g11.length) {
			var f = _g11[_g2];
			++_g2;
			this.addBuffer(f.name,this.buffer,pos);
			pos += f.format & 7;
		}
		if(this.normalsRecomputed != null) {
			this.recomputeNormals(this.normalsRecomputed);
		}
		var tmp = this.bufferAliases.keys();
		while(tmp.hasNext()) {
			var name = tmp.next();
			var _this = this.bufferAliases;
			var alias = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
			var key = hxsl_Globals.allocID(alias.realName);
			var buffer = this.bufferCache.h[key];
			if(buffer == null) {
				throw new js__$Boot_HaxeError("Buffer " + alias.realName + " not found for alias " + name);
			}
			if(buffer.offset + alias.offset > buffer.buffer.buffer.stride) {
				throw new js__$Boot_HaxeError("Alias " + name + " for buffer " + alias.realName + " outside stride");
			}
			this.addBuffer(name,buffer.buffer,buffer.offset + alias.offset);
		}
	}
	,recomputeNormals: function(name) {
		if(name == null) {
			name = "normal";
		}
		var pos = this.lib.getBuffers(this.data,[new hxd_fmt_hmd_GeometryFormat("position",3)]);
		var ids = [];
		var pts = [];
		var _g1 = 0;
		var _g = this.data.vertexCount;
		while(_g1 < _g) {
			var i = _g1++;
			var added = false;
			var pt = new h3d_col_Point(pos.vertexes[i * 3],pos.vertexes[i * 3 + 1],pos.vertexes[i * 3 + 2]);
			var _g3 = 0;
			var _g2 = pts.length;
			while(_g3 < _g2) {
				var i1 = _g3++;
				var p = pts[i1];
				if(p.x == pt.x && p.y == pt.y && p.z == pt.z) {
					ids.push(i1);
					added = true;
					break;
				}
			}
			if(!added) {
				ids.push(pts.length);
				pts.push(pt);
			}
		}
		var idx = new Array(0);
		var _g4 = 0;
		var _g11 = pos.indexes;
		while(_g4 < _g11.length) {
			var i2 = _g11[_g4];
			++_g4;
			idx.push(ids[i2]);
		}
		var pol = new h3d_prim_Polygon(pts,idx);
		pol.addNormals();
		var v = new Array(0);
		var _g12 = 0;
		var _g5 = this.data.vertexCount;
		while(_g12 < _g5) {
			var n = pol.normals[ids[_g12++]];
			v.push(n.x);
			v.push(n.y);
			v.push(n.z);
		}
		this.addBuffer(name,h3d_Buffer.ofFloats(v,3,null,{ fileName : "HMDModel.hx", lineNumber : 132, className : "h3d.prim.HMDModel", methodName : "recomputeNormals"}),0);
		this.normalsRecomputed = name;
	}
	,render: function(engine) {
		if(this.curMaterial < 0) {
			h3d_prim_MeshPrimitive.prototype.render.call(this,engine);
			return;
		}
		if(this.indexes == null || this.indexes.isDisposed()) {
			this.alloc(engine);
		}
		engine.renderMultiBuffers(this.getBuffers(engine),this.indexes,this.indexesTriPos[this.curMaterial],this.data.indexCounts[this.curMaterial] / 3 | 0);
		this.curMaterial = -1;
	}
	,getCollider: function() {
		if(this.collider != null) {
			return this.collider;
		}
		var pos = this.lib.getBuffers(this.data,[new hxd_fmt_hmd_GeometryFormat("position",3)]);
		var poly = new h3d_col_Polygon();
		poly.addBuffers(pos.vertexes,pos.indexes);
		var _this = this.data.bounds;
		var dx = _this.xMax - _this.xMin;
		var dy = _this.yMax - _this.yMin;
		var dz = _this.zMax - _this.zMin;
		this.collider = new h3d_col_OptimizedCollider(new h3d_col_Sphere((_this.xMin + _this.xMax) * 0.5,(_this.yMin + _this.yMax) * 0.5,(_this.zMin + _this.zMax) * 0.5,Math.sqrt(dx * dx + dy * dy + dz * dz) * 0.5),poly);
		return this.collider;
	}
	,__class__: h3d_prim_HMDModel
});
var h3d_prim_Plan2D = function() {
};
$hxClasses["h3d.prim.Plan2D"] = h3d_prim_Plan2D;
h3d_prim_Plan2D.__name__ = ["h3d","prim","Plan2D"];
h3d_prim_Plan2D.get = function() {
	if(h3d_prim_Plan2D.inst == null) {
		h3d_prim_Plan2D.inst = new h3d_prim_Plan2D();
	}
	return h3d_prim_Plan2D.inst;
};
h3d_prim_Plan2D.__super__ = h3d_prim_Primitive;
h3d_prim_Plan2D.prototype = $extend(h3d_prim_Primitive.prototype,{
	triCount: function() {
		return 2;
	}
	,vertexCount: function() {
		return 4;
	}
	,alloc: function(engine) {
		var v = new Array(0);
		v.push(-1);
		v.push(-1);
		v.push(0);
		v.push(1);
		v.push(-1);
		v.push(1);
		v.push(0);
		v.push(0);
		v.push(1);
		v.push(-1);
		v.push(1);
		v.push(1);
		v.push(1);
		v.push(1);
		v.push(1);
		v.push(0);
		this.buffer = h3d_Buffer.ofFloats(v,4,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat],{ fileName : "Plan2D.hx", lineNumber : 38, className : "h3d.prim.Plan2D", methodName : "alloc"});
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(engine);
		}
		engine.renderBuffer(this.buffer,engine.mem.quadIndexes,2,0,-1);
	}
	,__class__: h3d_prim_Plan2D
});
var h3d_prim_Polygon = function(points,idx) {
	this.translatedZ = 0.;
	this.translatedY = 0.;
	this.translatedX = 0.;
	this.scaled = 1.;
	this.points = points;
	this.idx = idx;
};
$hxClasses["h3d.prim.Polygon"] = h3d_prim_Polygon;
h3d_prim_Polygon.__name__ = ["h3d","prim","Polygon"];
h3d_prim_Polygon.__super__ = h3d_prim_Primitive;
h3d_prim_Polygon.prototype = $extend(h3d_prim_Primitive.prototype,{
	getBounds: function() {
		var b = new h3d_col_Bounds();
		var _g = 0;
		var _g1 = this.points;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(p.x < b.xMin) {
				b.xMin = p.x;
			}
			if(p.x > b.xMax) {
				b.xMax = p.x;
			}
			if(p.y < b.yMin) {
				b.yMin = p.y;
			}
			if(p.y > b.yMax) {
				b.yMax = p.y;
			}
			if(p.z < b.zMin) {
				b.zMin = p.z;
			}
			if(p.z > b.zMax) {
				b.zMax = p.z;
			}
		}
		return b;
	}
	,alloc: function(engine) {
		this.dispose();
		var size = 3;
		if(this.normals != null) {
			size += 3;
		}
		if(this.uvs != null) {
			size += 2;
		}
		if(this.colors != null) {
			size += 3;
		}
		var buf = new Array(0);
		var _g1 = 0;
		var _g = this.points.length;
		while(_g1 < _g) {
			var k = _g1++;
			var p = this.points[k];
			buf.push(p.x);
			buf.push(p.y);
			buf.push(p.z);
			if(this.normals != null) {
				var n = this.normals[k];
				buf.push(n.x);
				buf.push(n.y);
				buf.push(n.z);
			}
			if(this.uvs != null) {
				var t = this.uvs[k];
				buf.push(t.u);
				buf.push(t.v);
			}
			if(this.colors != null) {
				var c = this.colors[k];
				buf.push(c.x);
				buf.push(c.y);
				buf.push(c.z);
			}
		}
		var flags = [];
		if(this.idx == null) {
			flags.push(h3d_BufferFlag.Triangles);
		}
		if(this.normals == null) {
			flags.push(h3d_BufferFlag.RawFormat);
		}
		this.buffer = h3d_Buffer.ofFloats(buf,size,flags,{ fileName : "Polygon.hx", lineNumber : 66, className : "h3d.prim.Polygon", methodName : "alloc"});
		if(this.idx != null) {
			this.indexes = h3d_Indexes.alloc(this.idx);
		}
	}
	,unindex: function() {
		if(this.idx != null && this.points.length != this.idx.length) {
			var p = [];
			var _g1 = 0;
			var _g = this.idx.length;
			while(_g1 < _g) {
				var _this = this.points[this.idx[_g1++]];
				p.push(new h3d_col_Point(_this.x,_this.y,_this.z));
			}
			if(this.normals != null) {
				var n = [];
				var _g11 = 0;
				var _g2 = this.idx.length;
				while(_g11 < _g2) {
					var _this1 = this.normals[this.idx[_g11++]];
					n.push(new h3d_col_Point(_this1.x,_this1.y,_this1.z));
				}
				this.normals = n;
			}
			if(this.colors != null) {
				var n1 = [];
				var _g12 = 0;
				var _g3 = this.idx.length;
				while(_g12 < _g3) {
					var _this2 = this.colors[this.idx[_g12++]];
					n1.push(new h3d_col_Point(_this2.x,_this2.y,_this2.z));
				}
				this.colors = n1;
			}
			if(this.uvs != null) {
				var t = [];
				var _g13 = 0;
				var _g4 = this.idx.length;
				while(_g13 < _g4) t.push(this.uvs[this.idx[_g13++]].clone());
				this.uvs = t;
			}
			this.points = p;
			this.idx = null;
		}
	}
	,translate: function(dx,dy,dz) {
		this.translatedX += dx;
		this.translatedY += dy;
		this.translatedZ += dz;
		var _g = 0;
		var _g1 = this.points;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.x += dx;
			p.y += dy;
			p.z += dz;
		}
	}
	,scale: function(s) {
		this.scaled *= s;
		var _g = 0;
		var _g1 = this.points;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.x *= s;
			p.y *= s;
			p.z *= s;
		}
	}
	,addNormals: function() {
		this.normals = [];
		var _g1 = 0;
		var _g = this.points.length;
		while(_g1 < _g) this.normals[_g1++] = new h3d_col_Point();
		var pos = 0;
		var _g11 = 0;
		var _g2 = this.triCount();
		while(_g11 < _g2) {
			++_g11;
			var i0;
			var i1;
			var i2;
			if(this.idx == null) {
				i0 = pos++;
				i1 = pos++;
				i2 = pos++;
			} else {
				i0 = this.idx[pos++];
				i1 = this.idx[pos++];
				i2 = this.idx[pos++];
			}
			var p0 = this.points[i0];
			var p1 = this.points[i1];
			var p2 = this.points[i2];
			var x = p1.x - p0.x;
			var y = p1.y - p0.y;
			var z = p1.z - p0.z;
			var x1 = p2.x - p0.x;
			var y1 = p2.y - p0.y;
			var z1 = p2.z - p0.z;
			var x2 = y * z1 - z * y1;
			var y2 = z * x1 - x * z1;
			var z2 = x * y1 - y * x1;
			this.normals[i0].x += x2;
			this.normals[i0].y += y2;
			this.normals[i0].z += z2;
			this.normals[i1].x += x2;
			this.normals[i1].y += y2;
			this.normals[i1].z += z2;
			this.normals[i2].x += x2;
			this.normals[i2].y += y2;
			this.normals[i2].z += z2;
		}
		var _g3 = 0;
		var _g12 = this.normals;
		while(_g3 < _g12.length) {
			var n = _g12[_g3];
			++_g3;
			n.normalize();
		}
	}
	,addUVs: function() {
		throw new js__$Boot_HaxeError("Not implemented for this polygon");
	}
	,uvScale: function(su,sv) {
		if(this.uvs == null) {
			throw new js__$Boot_HaxeError("Missing UVs");
		}
		var m = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = this.uvs;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(m.h.__keys__[t.__id__] != null) {
				continue;
			}
			m.set(t,true);
			t.u *= su;
			t.v *= sv;
		}
	}
	,triCount: function() {
		var n = h3d_prim_Primitive.prototype.triCount.call(this);
		if(n != 0) {
			return n;
		}
		return (this.idx == null?this.points.length:this.idx.length) / 3 | 0;
	}
	,vertexCount: function() {
		return this.points.length;
	}
	,getCollider: function() {
		var length = this.points.length * 3;
		var vertexes = new Array(length);
		var length1 = this.idx.length;
		var indexes = new Array(length1);
		var vid = 0;
		var _g = 0;
		var _g1 = this.points;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			vertexes[vid++] = p.x;
			vertexes[vid++] = p.y;
			vertexes[vid++] = p.z;
		}
		var _g11 = 0;
		var _g2 = this.idx.length;
		while(_g11 < _g2) {
			var i = _g11++;
			indexes[i] = this.idx[i];
		}
		var poly = new h3d_col_Polygon();
		poly.addBuffers(vertexes,indexes);
		return poly;
	}
	,__class__: h3d_prim_Polygon
});
var h3d_prim_RawPrimitive = function(inf,persist) {
	if(persist == null) {
		persist = false;
	}
	this.onContextLost = function() {
		return inf;
	};
	this.bounds = inf.bounds;
	this.alloc(null);
	if(!persist) {
		this.onContextLost = null;
	}
};
$hxClasses["h3d.prim.RawPrimitive"] = h3d_prim_RawPrimitive;
h3d_prim_RawPrimitive.__name__ = ["h3d","prim","RawPrimitive"];
h3d_prim_RawPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_RawPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	alloc: function(engine) {
		if(this.onContextLost == null) {
			throw new js__$Boot_HaxeError("Cannot realloc " + Std.string(this));
		}
		var inf = this.onContextLost();
		var flags = [];
		if(inf.ibuf == null) {
			flags.push(inf.quads?h3d_BufferFlag.Quads:h3d_BufferFlag.Triangles);
		}
		if(inf.stride < 8) {
			flags.push(h3d_BufferFlag.RawFormat);
		}
		this.buffer = h3d_Buffer.ofFloats(inf.vbuf,inf.stride,flags,{ fileName : "RawPrimitive.hx", lineNumber : 23, className : "h3d.prim.RawPrimitive", methodName : "alloc"});
		this.vcount = this.buffer.vertices;
		this.tcount = inf.ibuf != null?inf.ibuf.length / 3 | 0:inf.quads?this.vcount >> 1:this.vcount / 3 | 0;
		if(inf.ibuf != null) {
			this.indexes = h3d_Indexes.alloc(inf.ibuf);
		} else if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,getBounds: function() {
		if(this.bounds == null) {
			throw new js__$Boot_HaxeError("Bounds not defined for " + Std.string(this));
		}
		return this.bounds;
	}
	,triCount: function() {
		return this.tcount;
	}
	,vertexCount: function() {
		return this.vcount;
	}
	,__class__: h3d_prim_RawPrimitive
});
var h3d_prim_UV = function(u,v) {
	this.u = u;
	this.v = v;
};
$hxClasses["h3d.prim.UV"] = h3d_prim_UV;
h3d_prim_UV.__name__ = ["h3d","prim","UV"];
h3d_prim_UV.prototype = {
	clone: function() {
		return new h3d_prim_UV(this.u,this.v);
	}
	,toString: function() {
		return "{" + hxd_Math.fmt(this.u) + "," + hxd_Math.fmt(this.v) + "}";
	}
	,__class__: h3d_prim_UV
};
var h3d_scene_Object = function(parent) {
	this.flags = 0;
	this.absPos = new h3d_Matrix();
	this.absPos.identity();
	this.x = 0;
	this.flags |= 1;
	this.y = 0;
	this.flags |= 1;
	this.z = 0;
	this.flags |= 1;
	this.scaleX = 1;
	this.flags |= 1;
	this.scaleY = 1;
	this.flags |= 1;
	this.scaleZ = 1;
	this.flags |= 1;
	this.qRot = new h3d_Quat();
	this.flags &= ~1;
	var f = 4;
	this.flags &= ~f;
	this.flags |= 2;
	this.childs = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h3d.scene.Object"] = h3d_scene_Object;
h3d_scene_Object.__name__ = ["h3d","scene","Object"];
h3d_scene_Object.prototype = {
	get_visible: function() {
		return (this.flags & 2) != 0;
	}
	,get_allocated: function() {
		return (this.flags & 32) != 0;
	}
	,get_posChanged: function() {
		return (this.flags & 1) != 0;
	}
	,get_culled: function() {
		return (this.flags & 4) != 0;
	}
	,get_followPositionOnly: function() {
		return (this.flags & 8) != 0;
	}
	,get_lightCameraCenter: function() {
		return (this.flags & 16) != 0;
	}
	,get_alwaysSync: function() {
		return (this.flags & 64) != 0;
	}
	,get_inheritCulled: function() {
		return (this.flags & 128) != 0;
	}
	,set_posChanged: function(b) {
		var f = 1;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_culled: function(b) {
		var f = 4;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_visible: function(b) {
		var b1 = !b;
		var f = 4;
		if(b1) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		var f1 = 2;
		if(b) {
			this.flags |= f1;
		} else {
			this.flags &= ~f1;
		}
		return b;
	}
	,set_allocated: function(b) {
		var f = 32;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_followPositionOnly: function(b) {
		var f = 8;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_lightCameraCenter: function(b) {
		var f = 16;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_alwaysSync: function(b) {
		var f = 64;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,set_inheritCulled: function(b) {
		var f = 128;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		return b;
	}
	,playAnimation: function(a) {
		return this.currentAnimation = a.createInstance(this);
	}
	,switchToAnimation: function(a) {
		return this.currentAnimation = a;
	}
	,stopAnimation: function() {
		this.currentAnimation = null;
	}
	,applyAnimationTransform: function(recursive) {
		if(recursive == null) {
			recursive = true;
		}
		if(this.defaultTransform != null) {
			var _this = this.defaultTransform;
			var v = new h3d_Vector();
			v.x = Math.sqrt(_this._11 * _this._11 + _this._12 * _this._12 + _this._13 * _this._13);
			v.y = Math.sqrt(_this._21 * _this._21 + _this._22 * _this._22 + _this._23 * _this._23);
			v.z = Math.sqrt(_this._31 * _this._31 + _this._32 * _this._32 + _this._33 * _this._33);
			if(_this._11 * (_this._22 * _this._33 - _this._23 * _this._32) + _this._12 * (_this._23 * _this._31 - _this._21 * _this._33) + _this._13 * (_this._21 * _this._32 - _this._22 * _this._31) < 0) {
				v.x *= -1;
				v.y *= -1;
				v.z *= -1;
			}
			this.scaleX = v.x;
			this.flags |= 1;
			this.scaleY = v.y;
			this.flags |= 1;
			this.scaleZ = v.z;
			this.flags |= 1;
			this.qRot.initRotateMatrix(this.defaultTransform);
			this.x = this.defaultTransform._41;
			this.flags |= 1;
			this.y = this.defaultTransform._42;
			this.flags |= 1;
			this.z = this.defaultTransform._43;
			this.flags |= 1;
			this.defaultTransform = null;
			this.flags |= 1;
		}
		if(recursive) {
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.applyAnimationTransform();
			}
		}
	}
	,getObjectsCount: function() {
		var k = 0;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			k += c.getObjectsCount() + 1;
		}
		return k;
	}
	,getMaterialByName: function(name) {
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			var m = o.getMaterialByName(name);
			if(m != null) {
				return m;
			}
		}
		return null;
	}
	,getMaterials: function(a) {
		if(a == null) {
			a = [];
		}
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.getMaterials(a);
		}
		return a;
	}
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h3d_Vector();
		}
		var m = this.absPos;
		var px = pt.x * m._11 + pt.y * m._21 + pt.z * m._31 + pt.w * m._41;
		var py = pt.x * m._12 + pt.y * m._22 + pt.z * m._32 + pt.w * m._42;
		var pz = pt.x * m._13 + pt.y * m._23 + pt.z * m._33 + pt.w * m._43;
		pt.x = px;
		pt.y = py;
		pt.z = pz;
		return pt;
	}
	,globalToLocal: function(pt) {
		var m = this.getInvPos();
		var px = pt.x * m._11 + pt.y * m._21 + pt.z * m._31 + pt.w * m._41;
		var py = pt.x * m._12 + pt.y * m._22 + pt.z * m._32 + pt.w * m._42;
		var pz = pt.x * m._13 + pt.y * m._23 + pt.z * m._33 + pt.w * m._43;
		pt.x = px;
		pt.y = py;
		pt.z = pz;
		return pt;
	}
	,getInvPos: function() {
		this.syncPos();
		if(this.invPos == null) {
			this.invPos = new h3d_Matrix();
			this.invPos._44 = 0;
		}
		if(this.invPos._44 == 0) {
			this.invPos.inverse3x4(this.absPos);
		}
		return this.invPos;
	}
	,getBounds: function(b,rec) {
		if(rec == null) {
			rec = false;
		}
		if(!rec) {
			this.syncPos();
		}
		if(b == null) {
			b = new h3d_col_Bounds();
		}
		if((this.flags & 1) != 0) {
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.flags |= 1;
			}
			this.flags &= ~1;
			this.calcAbsPos();
		}
		var _g2 = 0;
		var _g11 = this.childs;
		while(_g2 < _g11.length) {
			var c1 = _g11[_g2];
			++_g2;
			c1.getBounds(b,true);
		}
		return b;
	}
	,getMeshes: function(out) {
		if(out == null) {
			out = [];
		}
		var m = (this instanceof h3d_scene_Mesh)?this:null;
		if(m != null) {
			out.push(m);
		}
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.getMeshes(out);
		}
		return out;
	}
	,getObjectByName: function(name) {
		if(this.name == name) {
			return this;
		}
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var o = c.getObjectByName(name);
			if(o != null) {
				return o;
			}
		}
		return null;
	}
	,clone: function(o) {
		if(o == null) {
			o = new h3d_scene_Object();
		}
		if((o == null?null:js_Boot.getClass(o)) != js_Boot.getClass(this)) {
			throw new js__$Boot_HaxeError(Std.string(this) + " is missing clone()");
		}
		o.x = this.x;
		o.flags |= 1;
		o.y = this.y;
		o.flags |= 1;
		o.z = this.z;
		o.flags |= 1;
		o.scaleX = this.scaleX;
		o.flags |= 1;
		o.scaleY = this.scaleY;
		o.flags |= 1;
		o.scaleZ = this.scaleZ;
		o.flags |= 1;
		o.name = this.name;
		o.set_follow(this.follow);
		var b = (this.flags & 8) != 0;
		var f = 8;
		if(b) {
			o.flags |= f;
		} else {
			o.flags &= ~f;
		}
		var b1 = (this.flags & 2) != 0;
		var b2 = !b1;
		var f1 = 4;
		if(b2) {
			o.flags |= f1;
		} else {
			o.flags &= ~f1;
		}
		var f2 = 2;
		if(b1) {
			o.flags |= f2;
		} else {
			o.flags &= ~f2;
		}
		if(this.defaultTransform != null) {
			o.defaultTransform = this.defaultTransform.clone();
			o.flags |= 1;
		}
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var c1 = c.clone();
			c1.parent = o;
			o.childs.push(c1);
		}
		return o;
	}
	,addChild: function(o) {
		this.addChildAt(o,this.childs.length);
	}
	,addChildAt: function(o,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.childs.length) {
			pos = this.childs.length;
		}
		var p = this;
		while(p != null) {
			if(p == o) {
				throw new js__$Boot_HaxeError("Recursive addChild");
			}
			p = p.parent;
		}
		if(o.parent != null) {
			var old = (o.flags & 32) != 0;
			o.flags &= ~32;
			o.parent.removeChild(o);
			var f = 32;
			if(old) {
				o.flags |= f;
			} else {
				o.flags &= ~f;
			}
		}
		this.childs.splice(pos,0,o);
		if((this.flags & 32) == 0 && (o.flags & 32) != 0) {
			o.onDelete();
		}
		o.parent = this;
		o.flags |= 1;
		if((this.flags & 32) != 0) {
			if((o.flags & 32) == 0) {
				o.onAlloc();
			} else {
				o.onParentChangedRec();
			}
		}
	}
	,hardwarePickEmit: function(r,ctx) {
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			return;
		}
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.hardwarePickEmit(r,ctx);
		}
	}
	,onParentChangedRec: function() {
		this.onParentChanged();
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onParentChangedRec();
		}
	}
	,onParentChanged: function() {
	}
	,onAlloc: function() {
		this.flags |= 32;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAlloc();
		}
	}
	,onDelete: function() {
		this.flags &= ~32;
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onDelete();
		}
	}
	,removeChild: function(o) {
		if(HxOverrides.remove(this.childs,o)) {
			if((o.flags & 32) != 0) {
				o.onDelete();
			}
			o.parent = null;
			o.flags |= 1;
		}
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		return (p instanceof h3d_scene_Scene)?p:null;
	}
	,getAbsPos: function() {
		this.syncPos();
		return this.absPos;
	}
	,isMesh: function() {
		return ((this instanceof h3d_scene_Mesh)?this:null) != null;
	}
	,toMesh: function() {
		var m = (this instanceof h3d_scene_Mesh)?this:null;
		if(m != null) {
			return m;
		}
		throw new js__$Boot_HaxeError(Std.string(this) + " is not a Mesh");
	}
	,remove: function() {
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
	}
	,draw: function(ctx) {
	}
	,set_follow: function(v) {
		this.flags |= 1;
		return this.follow = v;
	}
	,calcAbsPos: function() {
		this.qRot.saveToMatrix(this.absPos);
		this.absPos._11 *= this.scaleX;
		this.absPos._12 *= this.scaleX;
		this.absPos._13 *= this.scaleX;
		this.absPos._21 *= this.scaleY;
		this.absPos._22 *= this.scaleY;
		this.absPos._23 *= this.scaleY;
		this.absPos._31 *= this.scaleZ;
		this.absPos._32 *= this.scaleZ;
		this.absPos._33 *= this.scaleZ;
		this.absPos._41 = this.x;
		this.absPos._42 = this.y;
		this.absPos._43 = this.z;
		if(this.follow != null) {
			this.follow.syncPos();
			if((this.flags & 8) != 0) {
				var _g = this.absPos;
				_g._41 = _g._41 + this.follow.absPos._41;
				var _g1 = this.absPos;
				_g1._42 = _g1._42 + this.follow.absPos._42;
				var _g2 = this.absPos;
				_g2._43 = _g2._43 + this.follow.absPos._43;
			} else {
				this.absPos.multiply3x4(this.absPos,this.follow.absPos);
			}
		} else if(this.parent != null) {
			var _this = this.absPos;
			var a = this.absPos;
			var b = this.parent.absPos;
			var m11 = a._11;
			var m12 = a._12;
			var m13 = a._13;
			var m21 = a._21;
			var m22 = a._22;
			var m23 = a._23;
			var a31 = a._31;
			var a32 = a._32;
			var a33 = a._33;
			var a41 = a._41;
			var a42 = a._42;
			var a43 = a._43;
			var b11 = b._11;
			var b12 = b._12;
			var b13 = b._13;
			var b21 = b._21;
			var b22 = b._22;
			var b23 = b._23;
			var b31 = b._31;
			var b32 = b._32;
			var b33 = b._33;
			var b41 = b._41;
			var b42 = b._42;
			var b43 = b._43;
			_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
			_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
			_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
			_this._14 = 0;
			_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
			_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
			_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
			_this._24 = 0;
			_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
			_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
			_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
			_this._34 = 0;
			_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
			_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
			_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
			_this._44 = 1;
		}
		if(this.defaultTransform != null) {
			var _this1 = this.absPos;
			var a1 = this.defaultTransform;
			var b1 = this.absPos;
			var m111 = a1._11;
			var m121 = a1._12;
			var m131 = a1._13;
			var m211 = a1._21;
			var m221 = a1._22;
			var m231 = a1._23;
			var a311 = a1._31;
			var a321 = a1._32;
			var a331 = a1._33;
			var a411 = a1._41;
			var a421 = a1._42;
			var a431 = a1._43;
			var b111 = b1._11;
			var b121 = b1._12;
			var b131 = b1._13;
			var b211 = b1._21;
			var b221 = b1._22;
			var b231 = b1._23;
			var b311 = b1._31;
			var b321 = b1._32;
			var b331 = b1._33;
			var b411 = b1._41;
			var b421 = b1._42;
			var b431 = b1._43;
			_this1._11 = m111 * b111 + m121 * b211 + m131 * b311;
			_this1._12 = m111 * b121 + m121 * b221 + m131 * b321;
			_this1._13 = m111 * b131 + m121 * b231 + m131 * b331;
			_this1._14 = 0;
			_this1._21 = m211 * b111 + m221 * b211 + m231 * b311;
			_this1._22 = m211 * b121 + m221 * b221 + m231 * b321;
			_this1._23 = m211 * b131 + m221 * b231 + m231 * b331;
			_this1._24 = 0;
			_this1._31 = a311 * b111 + a321 * b211 + a331 * b311;
			_this1._32 = a311 * b121 + a321 * b221 + a331 * b321;
			_this1._33 = a311 * b131 + a321 * b231 + a331 * b331;
			_this1._34 = 0;
			_this1._41 = a411 * b111 + a421 * b211 + a431 * b311 + b411;
			_this1._42 = a411 * b121 + a421 * b221 + a431 * b321 + b421;
			_this1._43 = a411 * b131 + a421 * b231 + a431 * b331 + b431;
			_this1._44 = 1;
		}
		if(this.invPos != null) {
			this.invPos._44 = 0;
		}
	}
	,sync: function(ctx) {
	}
	,syncRec: function(ctx) {
		if(this.currentAnimation != null) {
			var old = this.parent;
			var dt = ctx.elapsedTime;
			while(dt > 0 && this.currentAnimation != null) dt = this.currentAnimation.update(dt);
			if(this.currentAnimation != null && (ctx.visibleFlag && (this.flags & 2) != 0 && (this.flags & 4) == 0 || (this.flags & 64) != 0)) {
				this.currentAnimation.sync();
			}
			if(this.parent == null && old != null) {
				return;
			}
		}
		var old1 = ctx.visibleFlag;
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			ctx.visibleFlag = false;
		}
		var changed = (this.flags & 1) != 0;
		if(changed) {
			this.calcAbsPos();
		}
		this.sync(ctx);
		var b = this.follow == null;
		var f = 1;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.childs.length;
		while(p < len) {
			var c = this.childs[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					c.flags |= 1;
				}
				c.syncRec(ctx);
			}
			if(this.childs[p] != c) {
				p = 0;
				len = this.childs.length;
			} else {
				++p;
			}
		}
		ctx.visibleFlag = old1;
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if((this.flags & 1) != 0) {
			this.flags &= ~1;
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.flags |= 1;
			}
		}
	}
	,emit: function(ctx) {
	}
	,emitRec: function(ctx) {
		if((this.flags & 4) != 0) {
			return;
		}
		if((this.flags & 1) != 0) {
			if(this.currentAnimation != null) {
				this.currentAnimation.sync();
			}
			this.flags &= ~1;
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.childs;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.flags |= 1;
			}
		}
		this.emit(ctx);
		var _g2 = 0;
		var _g11 = this.childs;
		while(_g2 < _g11.length) {
			var c1 = _g11[_g2];
			++_g2;
			c1.emitRec(ctx);
		}
	}
	,set_x: function(v) {
		this.x = v;
		this.flags |= 1;
		return v;
	}
	,set_y: function(v) {
		this.y = v;
		this.flags |= 1;
		return v;
	}
	,set_z: function(v) {
		this.z = v;
		this.flags |= 1;
		return v;
	}
	,set_scaleX: function(v) {
		this.scaleX = v;
		this.flags |= 1;
		return v;
	}
	,set_scaleY: function(v) {
		this.scaleY = v;
		this.flags |= 1;
		return v;
	}
	,set_scaleZ: function(v) {
		this.scaleZ = v;
		this.flags |= 1;
		return v;
	}
	,set_defaultTransform: function(v) {
		this.defaultTransform = v;
		this.flags |= 1;
		return v;
	}
	,setPos: function(x,y,z) {
		this.x = x;
		this.flags |= 1;
		this.y = y;
		this.flags |= 1;
		this.z = z;
		this.flags |= 1;
		this.flags |= 1;
	}
	,rotate: function(rx,ry,rz) {
		var qTmp = new h3d_Quat();
		qTmp.initRotate(rx,ry,rz);
		this.qRot.multiply(qTmp,this.qRot);
		this.flags |= 1;
	}
	,setRotate: function(rx,ry,rz) {
		this.qRot.initRotate(rx,ry,rz);
		this.flags |= 1;
	}
	,setRotateAxis: function(ax,ay,az,angle) {
		this.qRot.initRotateAxis(ax,ay,az,angle);
		this.flags |= 1;
	}
	,getRotationQuat: function() {
		return this.qRot;
	}
	,setRotationQuat: function(q) {
		this.qRot = q;
		this.flags |= 1;
	}
	,scale: function(v) {
		var _g = this;
		_g.scaleX = _g.scaleX * v;
		_g.flags |= 1;
		var _g1 = this;
		_g1.scaleY = _g1.scaleY * v;
		_g1.flags |= 1;
		var _g2 = this;
		_g2.scaleZ = _g2.scaleZ * v;
		_g2.flags |= 1;
		this.flags |= 1;
	}
	,setScale: function(v) {
		this.scaleX = v;
		this.flags |= 1;
		this.scaleY = v;
		this.flags |= 1;
		this.scaleZ = v;
		this.flags |= 1;
		this.flags |= 1;
	}
	,toString: function() {
		return Type.getClassName(js_Boot.getClass(this)).split(".").pop() + (this.name == null?"":"(" + this.name + ")");
	}
	,getChildAt: function(n) {
		return this.childs[n];
	}
	,get_numChildren: function() {
		return this.childs.length;
	}
	,iterator: function() {
		return new hxd_impl_ArrayIterator_$h3d_$scene_$Object(this.childs);
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.childs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.dispose();
		}
	}
	,__class__: h3d_scene_Object
};
var h3d_scene_Light = function(shader,parent) {
	this.priority = 0;
	this.cullingDistance = 1e10;
	h3d_scene_Object.call(this,parent);
	this.shader = shader;
};
$hxClasses["h3d.scene.Light"] = h3d_scene_Light;
h3d_scene_Light.__name__ = ["h3d","scene","Light"];
h3d_scene_Light.__super__ = h3d_scene_Object;
h3d_scene_Light.prototype = $extend(h3d_scene_Object.prototype,{
	get_color: function() {
		return new h3d_Vector();
	}
	,get_enableSpecular: function() {
		return false;
	}
	,set_enableSpecular: function(b) {
		if(b) {
			throw new js__$Boot_HaxeError("Not implemented for this light");
		}
		return false;
	}
	,emit: function(ctx) {
		ctx.emitLight(this);
	}
	,__class__: h3d_scene_Light
});
var h3d_scene_DirLight = function(dir,parent) {
	this.dshader = new h3d_shader_DirLight();
	this.direction = dir;
	h3d_scene_Light.call(this,this.dshader,parent);
	this.priority = 100;
};
$hxClasses["h3d.scene.DirLight"] = h3d_scene_DirLight;
h3d_scene_DirLight.__name__ = ["h3d","scene","DirLight"];
h3d_scene_DirLight.__super__ = h3d_scene_Light;
h3d_scene_DirLight.prototype = $extend(h3d_scene_Light.prototype,{
	get_color: function() {
		return this.dshader.color__;
	}
	,get_enableSpecular: function() {
		return this.dshader.enableSpecular__;
	}
	,set_enableSpecular: function(b) {
		var _this = this.dshader;
		_this.constModified = true;
		return _this.enableSpecular__ = b;
	}
	,emit: function(ctx) {
		var _this = this.dshader.direction__;
		var x = this.direction.x;
		var y = this.direction.y;
		var z = this.direction.z;
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.dshader.direction__.normalize();
		h3d_scene_Light.prototype.emit.call(this,ctx);
	}
	,__class__: h3d_scene_DirLight
});
var h3d_scene__$Graphics_GPoint = function(x,y,z,r,g,b,a) {
	this.x = x;
	this.y = y;
	this.z = z;
	this.r = r;
	this.g = g;
	this.b = b;
	this.a = a;
};
$hxClasses["h3d.scene._Graphics.GPoint"] = h3d_scene__$Graphics_GPoint;
h3d_scene__$Graphics_GPoint.__name__ = ["h3d","scene","_Graphics","GPoint"];
h3d_scene__$Graphics_GPoint.prototype = {
	__class__: h3d_scene__$Graphics_GPoint
};
var h3d_scene_Mesh = function(prim,mat,parent) {
	h3d_scene_Object.call(this,parent);
	this.primitive = prim;
	if(mat == null) {
		mat = new h3d_mat_MeshMaterial(null);
	}
	this.material = mat;
};
$hxClasses["h3d.scene.Mesh"] = h3d_scene_Mesh;
h3d_scene_Mesh.__name__ = ["h3d","scene","Mesh"];
h3d_scene_Mesh.__super__ = h3d_scene_Object;
h3d_scene_Mesh.prototype = $extend(h3d_scene_Object.prototype,{
	getBounds: function(b,rec) {
		if(rec == null) {
			rec = false;
		}
		b = h3d_scene_Object.prototype.getBounds.call(this,b,rec);
		if(this.primitive == null) {
			return b;
		}
		var _this = this.primitive.getBounds();
		var b1 = new h3d_col_Bounds();
		b1.xMin = _this.xMin;
		b1.xMax = _this.xMax;
		b1.yMin = _this.yMin;
		b1.yMax = _this.yMax;
		b1.zMin = _this.zMin;
		b1.zMax = _this.zMax;
		b1.transform3x4(this.absPos);
		if(b1.xMin < b.xMin) {
			b.xMin = b1.xMin;
		}
		if(b1.xMax > b.xMax) {
			b.xMax = b1.xMax;
		}
		if(b1.yMin < b.yMin) {
			b.yMin = b1.yMin;
		}
		if(b1.yMax > b.yMax) {
			b.yMax = b1.yMax;
		}
		if(b1.zMin < b.zMin) {
			b.zMin = b1.zMin;
		}
		if(b1.zMax > b.zMax) {
			b.zMax = b1.zMax;
		}
		return b;
	}
	,clone: function(o) {
		var m = o == null?new h3d_scene_Mesh(null,this.material):o;
		m.primitive = this.primitive;
		m.material = this.material.clone();
		h3d_scene_Object.prototype.clone.call(this,m);
		return m;
	}
	,hardwarePickEmit: function(r,ctx) {
		if((this.flags & 2) != 0 && (this.flags & 4) == 0 && this.primitive != null) {
			var r1 = new h3d_col_Ray();
			r1.px = r.px;
			r1.py = r.py;
			r1.pz = r.pz;
			r1.lx = r.lx;
			r1.ly = r.ly;
			r1.lz = r.lz;
			var m = this.getInvPos();
			var p_z;
			var p_y;
			var p_x;
			var x = r.px;
			var y = r.py;
			var z = r.pz;
			p_x = x;
			p_y = y;
			p_z = z;
			var px = x * m._11 + y * m._21 + z * m._31 + m._41;
			var py = x * m._12 + y * m._22 + z * m._32 + m._42;
			var pz = x * m._13 + y * m._23 + z * m._33 + m._43;
			p_x = px;
			p_y = py;
			p_z = pz;
			r.px = p_x;
			r.py = p_y;
			r.pz = p_z;
			var l_z;
			var l_y;
			var l_x;
			var x1 = r.lx;
			var y1 = r.ly;
			var z1 = r.lz;
			l_x = x1;
			l_y = y1;
			l_z = z1;
			var px1 = x1 * m._11 + y1 * m._21 + z1 * m._31;
			var py1 = x1 * m._12 + y1 * m._22 + z1 * m._32;
			var pz1 = x1 * m._13 + y1 * m._23 + z1 * m._33;
			l_x = px1;
			l_y = py1;
			l_z = pz1;
			r.lx = l_x;
			r.ly = l_y;
			r.lz = l_z;
			if(this.primitive.getBounds().rayIntersection(r) != null) {
				ctx.emitPass(this.material.passes,this);
			}
			r.px = r1.px;
			r.py = r1.py;
			r.pz = r1.pz;
			r.lx = r1.lx;
			r.ly = r1.ly;
			r.lz = r1.lz;
		}
		h3d_scene_Object.prototype.hardwarePickEmit.call(this,r,ctx);
	}
	,draw: function(ctx) {
		this.primitive.render(ctx.engine);
	}
	,emit: function(ctx) {
		var p = this.material.passes;
		while(p != null) {
			ctx.emitPass(p,this).index = 0;
			p = p.nextPass;
		}
	}
	,getMaterialByName: function(name) {
		if(this.material != null && this.material.name == name) {
			return this.material;
		}
		return h3d_scene_Object.prototype.getMaterialByName.call(this,name);
	}
	,getMaterials: function(a) {
		if(a == null) {
			a = [];
		}
		if(this.material != null) {
			a.push(this.material);
		}
		return h3d_scene_Object.prototype.getMaterials.call(this,a);
	}
	,dispose: function() {
		if(this.primitive != null) {
			this.primitive.dispose();
		}
		h3d_scene_Object.prototype.dispose.call(this);
	}
	,__class__: h3d_scene_Mesh
});
var h3d_scene_Graphics = function(parent) {
	this.lineSize = 0.;
	this.curR = 0.;
	this.curZ = 0.;
	this.curY = 0.;
	this.curX = 0.;
	this.bprim = new h3d_prim_BigPrimitive(12,null,{ fileName : "Graphics.hx", lineNumber : 43, className : "h3d.scene.Graphics", methodName : "new"});
	h3d_scene_Mesh.call(this,this.bprim,null,parent);
	this.tmpPoints = [];
	this.lineShader = new h3d_shader_LineShader();
	this.material.passes.addShader(this.lineShader);
	this.material.passes.addShader(new h3d_shader_VertexColorAlpha());
	this.material.passes.set_culling(h3d_mat_Face.None);
};
$hxClasses["h3d.scene.Graphics"] = h3d_scene_Graphics;
h3d_scene_Graphics.__name__ = ["h3d","scene","Graphics"];
h3d_scene_Graphics.__super__ = h3d_scene_Mesh;
h3d_scene_Graphics.prototype = $extend(h3d_scene_Mesh.prototype,{
	set_is3D: function(v) {
		if(this.is3D == v) {
			return v;
		}
		if(v) {
			this.material.passes.removeShader(this.lineShader);
		} else {
			this.material.passes.addShaderAt(this.lineShader,0);
		}
		this.bprim.clear();
		this.tmpPoints = [];
		return this.is3D = v;
	}
	,flushLine: function() {
		var _gthis = this;
		var pts = this.tmpPoints;
		var last = pts.length - 1;
		var prev = pts[last];
		var p = pts[0];
		var closed = p.x == prev.x && p.y == prev.y && p.z == prev.z;
		var count = pts.length;
		if(!closed) {
			var prevLast = pts[last - 1];
			if(prevLast == null) {
				prevLast = p;
			}
			pts.push(new h3d_scene__$Graphics_GPoint(prev.x * 2 - prevLast.x,prev.y * 2 - prevLast.y,prev.z * 2 - prevLast.z,0,0,0,0));
			var pNext = pts[1];
			if(pNext == null) {
				pNext = p;
			}
			prev = new h3d_scene__$Graphics_GPoint(p.x * 2 - pNext.x,p.y * 2 - pNext.y,p.z * 2 - pNext.z,0,0,0,0);
		} else if(p != prev) {
			--count;
			--last;
			prev = pts[last];
		}
		var start = this.bprim.vertexCount();
		var pindex = start;
		var v = 0.;
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var next = pts[(i + 1) % pts.length];
			var nx1 = prev.y - p.y;
			var ny1 = p.x - prev.x;
			var ns1 = 1. / Math.sqrt(nx1 * nx1 + ny1 * ny1);
			var nx2 = p.y - next.y;
			var ny2 = next.x - p.x;
			var ns2 = 1. / Math.sqrt(nx2 * nx2 + ny2 * ny2);
			var nx = nx1 * ns1 + nx2 * ns2;
			var ny = ny1 * ns1 + ny2 * ns2;
			var ns = 1. / Math.sqrt(nx * nx + ny * ny);
			nx *= ns;
			ny *= ns;
			var d = this.lineSize * 0.5 / (nx * nx1 * ns1 + ny * ny1 * ns1);
			nx *= d;
			ny *= d;
			var hasIndex = i < count - 1 || closed;
			this.bprim.begin(2,hasIndex?6:0);
			var v1 = p.x + nx;
			var _this = _gthis.bprim;
			_this.tmpBuf[_this.bufPos++] = v1;
			var v2 = p.y + ny;
			var _this1 = _gthis.bprim;
			_this1.tmpBuf[_this1.bufPos++] = v2;
			var v3 = p.z;
			var _this2 = _gthis.bprim;
			_this2.tmpBuf[_this2.bufPos++] = v3;
			var _this3 = _gthis.bprim;
			_this3.tmpBuf[_this3.bufPos++] = 0;
			var _this4 = _gthis.bprim;
			_this4.tmpBuf[_this4.bufPos++] = 0;
			var _this5 = _gthis.bprim;
			_this5.tmpBuf[_this5.bufPos++] = 1;
			var _this6 = _gthis.bprim;
			_this6.tmpBuf[_this6.bufPos++] = 0;
			var _this7 = _gthis.bprim;
			_this7.tmpBuf[_this7.bufPos++] = v;
			var v4 = p.r;
			var _this8 = _gthis.bprim;
			_this8.tmpBuf[_this8.bufPos++] = v4;
			var v5 = p.g;
			var _this9 = _gthis.bprim;
			_this9.tmpBuf[_this9.bufPos++] = v5;
			var v6 = p.b;
			var _this10 = _gthis.bprim;
			_this10.tmpBuf[_this10.bufPos++] = v6;
			var v7 = p.a;
			var _this11 = _gthis.bprim;
			_this11.tmpBuf[_this11.bufPos++] = v7;
			var v8 = p.x - nx;
			var _this12 = _gthis.bprim;
			_this12.tmpBuf[_this12.bufPos++] = v8;
			var v9 = p.y - ny;
			var _this13 = _gthis.bprim;
			_this13.tmpBuf[_this13.bufPos++] = v9;
			var v10 = p.z;
			var _this14 = _gthis.bprim;
			_this14.tmpBuf[_this14.bufPos++] = v10;
			var _this15 = _gthis.bprim;
			_this15.tmpBuf[_this15.bufPos++] = 0;
			var _this16 = _gthis.bprim;
			_this16.tmpBuf[_this16.bufPos++] = 0;
			var _this17 = _gthis.bprim;
			_this17.tmpBuf[_this17.bufPos++] = 1;
			var _this18 = _gthis.bprim;
			_this18.tmpBuf[_this18.bufPos++] = 1;
			var _this19 = _gthis.bprim;
			_this19.tmpBuf[_this19.bufPos++] = v;
			var v11 = p.r;
			var _this20 = _gthis.bprim;
			_this20.tmpBuf[_this20.bufPos++] = v11;
			var v12 = p.g;
			var _this21 = _gthis.bprim;
			_this21.tmpBuf[_this21.bufPos++] = v12;
			var v13 = p.b;
			var _this22 = _gthis.bprim;
			_this22.tmpBuf[_this22.bufPos++] = v13;
			var v14 = p.a;
			var _this23 = _gthis.bprim;
			_this23.tmpBuf[_this23.bufPos++] = v14;
			v = 1 - v;
			if(hasIndex) {
				var pnext = i == last?start - pindex:2;
				var _this24 = this.bprim;
				_this24.tmpIdx[_this24.idxPos++] = _this24.startIndex;
				var _this25 = this.bprim;
				_this25.tmpIdx[_this25.idxPos++] = 1 + _this25.startIndex;
				var _this26 = this.bprim;
				_this26.tmpIdx[_this26.idxPos++] = pnext + _this26.startIndex;
				var _this27 = this.bprim;
				_this27.tmpIdx[_this27.idxPos++] = pnext + _this27.startIndex;
				var _this28 = this.bprim;
				_this28.tmpIdx[_this28.idxPos++] = 1 + _this28.startIndex;
				var _this29 = this.bprim;
				_this29.tmpIdx[_this29.idxPos++] = pnext + 1 + _this29.startIndex;
			}
			pindex += 2;
			prev = p;
			p = next;
		}
	}
	,flush: function() {
		if(this.tmpPoints.length == 0) {
			return;
		}
		if(this.is3D) {
			this.flushLine();
			this.tmpPoints = [];
		}
	}
	,draw: function(ctx) {
		this.flush();
		this.bprim.flush();
		h3d_scene_Mesh.prototype.draw.call(this,ctx);
	}
	,clear: function() {
		this.flush();
		this.bprim.clear();
	}
	,lineStyle: function(size,color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		if(size == null) {
			size = 0.;
		}
		this.flush();
		if(size > 0 && this.lineSize != size) {
			this.lineSize = size;
			if(!this.is3D) {
				this.lineShader.width__ = this.lineSize;
			}
		}
		this.setColor(color,alpha);
	}
	,setColor: function(color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		this.curA = alpha;
		this.curR = (color >> 16 & 255) / 255.;
		this.curG = (color >> 8 & 255) / 255.;
		this.curB = (color & 255) / 255.;
	}
	,drawLine: function(p1,p2) {
		this.moveTo(p1.x,p1.y,p1.z);
		this.lineTo(p2.x,p2.y,p2.z);
	}
	,moveTo: function(x,y,z) {
		if(this.is3D) {
			this.flush();
			this.lineTo(x,y,z);
		} else {
			this.curX = x;
			this.curY = y;
			this.curZ = z;
		}
	}
	,addVertex: function(x,y,z,r,g,b,a) {
		this.tmpPoints.push(new h3d_scene__$Graphics_GPoint(x,y,z,r,g,b,a));
	}
	,lineTo: function(x,y,z) {
		var _gthis = this;
		if(this.is3D) {
			this.tmpPoints.push(new h3d_scene__$Graphics_GPoint(x,y,z,this.curR,this.curG,this.curB,this.curA));
			return;
		}
		this.bprim.begin(4,6);
		var nx = x - this.curX;
		var ny = y - this.curY;
		var nz = z - this.curZ;
		var x1 = this.curX;
		var y1 = this.curY;
		var z1 = this.curZ;
		var _this = this.bprim.bounds;
		if(x1 < _this.xMin) {
			_this.xMin = x1;
		}
		if(x1 > _this.xMax) {
			_this.xMax = x1;
		}
		if(y1 < _this.yMin) {
			_this.yMin = y1;
		}
		if(y1 > _this.yMax) {
			_this.yMax = y1;
		}
		if(z1 < _this.zMin) {
			_this.zMin = z1;
		}
		if(z1 > _this.zMax) {
			_this.zMax = z1;
		}
		var _this1 = this.bprim.bounds;
		if(x < _this1.xMin) {
			_this1.xMin = x;
		}
		if(x > _this1.xMax) {
			_this1.xMax = x;
		}
		if(y < _this1.yMin) {
			_this1.yMin = y;
		}
		if(y > _this1.yMax) {
			_this1.yMax = y;
		}
		if(z < _this1.zMin) {
			_this1.zMin = z;
		}
		if(z > _this1.zMax) {
			_this1.zMax = z;
		}
		var v = _gthis.curX;
		var _this2 = _gthis.bprim;
		_this2.tmpBuf[_this2.bufPos++] = v;
		var v1 = _gthis.curY;
		var _this3 = _gthis.bprim;
		_this3.tmpBuf[_this3.bufPos++] = v1;
		var v2 = _gthis.curZ;
		var _this4 = _gthis.bprim;
		_this4.tmpBuf[_this4.bufPos++] = v2;
		var _this5 = _gthis.bprim;
		_this5.tmpBuf[_this5.bufPos++] = nx;
		var _this6 = _gthis.bprim;
		_this6.tmpBuf[_this6.bufPos++] = ny;
		var _this7 = _gthis.bprim;
		_this7.tmpBuf[_this7.bufPos++] = nz;
		var _this8 = _gthis.bprim;
		_this8.tmpBuf[_this8.bufPos++] = 0;
		var _this9 = _gthis.bprim;
		_this9.tmpBuf[_this9.bufPos++] = 0;
		var v3 = _gthis.curR;
		var _this10 = _gthis.bprim;
		_this10.tmpBuf[_this10.bufPos++] = v3;
		var v4 = _gthis.curG;
		var _this11 = _gthis.bprim;
		_this11.tmpBuf[_this11.bufPos++] = v4;
		var v5 = _gthis.curB;
		var _this12 = _gthis.bprim;
		_this12.tmpBuf[_this12.bufPos++] = v5;
		var v6 = _gthis.curA;
		var _this13 = _gthis.bprim;
		_this13.tmpBuf[_this13.bufPos++] = v6;
		var v7 = _gthis.curX;
		var _this14 = _gthis.bprim;
		_this14.tmpBuf[_this14.bufPos++] = v7;
		var v8 = _gthis.curY;
		var _this15 = _gthis.bprim;
		_this15.tmpBuf[_this15.bufPos++] = v8;
		var v9 = _gthis.curZ;
		var _this16 = _gthis.bprim;
		_this16.tmpBuf[_this16.bufPos++] = v9;
		var _this17 = _gthis.bprim;
		_this17.tmpBuf[_this17.bufPos++] = nx;
		var _this18 = _gthis.bprim;
		_this18.tmpBuf[_this18.bufPos++] = ny;
		var _this19 = _gthis.bprim;
		_this19.tmpBuf[_this19.bufPos++] = nz;
		var _this20 = _gthis.bprim;
		_this20.tmpBuf[_this20.bufPos++] = 0;
		var _this21 = _gthis.bprim;
		_this21.tmpBuf[_this21.bufPos++] = 1;
		var v10 = _gthis.curR;
		var _this22 = _gthis.bprim;
		_this22.tmpBuf[_this22.bufPos++] = v10;
		var v11 = _gthis.curG;
		var _this23 = _gthis.bprim;
		_this23.tmpBuf[_this23.bufPos++] = v11;
		var v12 = _gthis.curB;
		var _this24 = _gthis.bprim;
		_this24.tmpBuf[_this24.bufPos++] = v12;
		var v13 = _gthis.curA;
		var _this25 = _gthis.bprim;
		_this25.tmpBuf[_this25.bufPos++] = v13;
		var v14 = _gthis.curX;
		var _this26 = _gthis.bprim;
		_this26.tmpBuf[_this26.bufPos++] = v14;
		var v15 = _gthis.curY;
		var _this27 = _gthis.bprim;
		_this27.tmpBuf[_this27.bufPos++] = v15;
		var v16 = _gthis.curZ;
		var _this28 = _gthis.bprim;
		_this28.tmpBuf[_this28.bufPos++] = v16;
		var _this29 = _gthis.bprim;
		_this29.tmpBuf[_this29.bufPos++] = nx;
		var _this30 = _gthis.bprim;
		_this30.tmpBuf[_this30.bufPos++] = ny;
		var _this31 = _gthis.bprim;
		_this31.tmpBuf[_this31.bufPos++] = nz;
		var _this32 = _gthis.bprim;
		_this32.tmpBuf[_this32.bufPos++] = 1;
		var _this33 = _gthis.bprim;
		_this33.tmpBuf[_this33.bufPos++] = 0;
		var v17 = _gthis.curR;
		var _this34 = _gthis.bprim;
		_this34.tmpBuf[_this34.bufPos++] = v17;
		var v18 = _gthis.curG;
		var _this35 = _gthis.bprim;
		_this35.tmpBuf[_this35.bufPos++] = v18;
		var v19 = _gthis.curB;
		var _this36 = _gthis.bprim;
		_this36.tmpBuf[_this36.bufPos++] = v19;
		var v20 = _gthis.curA;
		var _this37 = _gthis.bprim;
		_this37.tmpBuf[_this37.bufPos++] = v20;
		var v21 = _gthis.curX;
		var _this38 = _gthis.bprim;
		_this38.tmpBuf[_this38.bufPos++] = v21;
		var v22 = _gthis.curY;
		var _this39 = _gthis.bprim;
		_this39.tmpBuf[_this39.bufPos++] = v22;
		var v23 = _gthis.curZ;
		var _this40 = _gthis.bprim;
		_this40.tmpBuf[_this40.bufPos++] = v23;
		var _this41 = _gthis.bprim;
		_this41.tmpBuf[_this41.bufPos++] = nx;
		var _this42 = _gthis.bprim;
		_this42.tmpBuf[_this42.bufPos++] = ny;
		var _this43 = _gthis.bprim;
		_this43.tmpBuf[_this43.bufPos++] = nz;
		var _this44 = _gthis.bprim;
		_this44.tmpBuf[_this44.bufPos++] = 1;
		var _this45 = _gthis.bprim;
		_this45.tmpBuf[_this45.bufPos++] = 1;
		var v24 = _gthis.curR;
		var _this46 = _gthis.bprim;
		_this46.tmpBuf[_this46.bufPos++] = v24;
		var v25 = _gthis.curG;
		var _this47 = _gthis.bprim;
		_this47.tmpBuf[_this47.bufPos++] = v25;
		var v26 = _gthis.curB;
		var _this48 = _gthis.bprim;
		_this48.tmpBuf[_this48.bufPos++] = v26;
		var v27 = _gthis.curA;
		var _this49 = _gthis.bprim;
		_this49.tmpBuf[_this49.bufPos++] = v27;
		var _this50 = this.bprim;
		_this50.tmpIdx[_this50.idxPos++] = _this50.startIndex;
		var _this51 = this.bprim;
		_this51.tmpIdx[_this51.idxPos++] = 1 + _this51.startIndex;
		var _this52 = this.bprim;
		_this52.tmpIdx[_this52.idxPos++] = 2 + _this52.startIndex;
		var _this53 = this.bprim;
		_this53.tmpIdx[_this53.idxPos++] = 2 + _this53.startIndex;
		var _this54 = this.bprim;
		_this54.tmpIdx[_this54.idxPos++] = 3 + _this54.startIndex;
		var _this55 = this.bprim;
		_this55.tmpIdx[_this55.idxPos++] = 1 + _this55.startIndex;
		this.curX = x;
		this.curY = y;
		this.curZ = z;
	}
	,__class__: h3d_scene_Graphics
});
var h3d_scene_Interactive = function(shape,parent) {
	this.hitPoint = new h3d_Vector();
	this.mouseDownButton = -1;
	this.propagateEvents = false;
	this.cancelEvents = false;
	h3d_scene_Object.call(this,parent);
	this.shape = shape;
	this.set_cursor(hxd_Cursor.Button);
};
$hxClasses["h3d.scene.Interactive"] = h3d_scene_Interactive;
h3d_scene_Interactive.__name__ = ["h3d","scene","Interactive"];
h3d_scene_Interactive.__interfaces__ = [hxd_Interactive];
h3d_scene_Interactive.__super__ = h3d_scene_Object;
h3d_scene_Interactive.prototype = $extend(h3d_scene_Object.prototype,{
	onAlloc: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		h3d_scene_Object.prototype.onAlloc.call(this);
	}
	,onDelete: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene = null;
		}
		h3d_scene_Object.prototype.onDelete.call(this);
	}
	,preventClick: function() {
		this.mouseDownButton = -1;
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind[1]) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onClick(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			hxd_System.setCursor(this.cursor);
			this.onOver(e);
			break;
		case 4:
			this.mouseDownButton = -1;
			hxd_System.setCursor(hxd_Cursor.Default);
			this.onOut(e);
			break;
		case 5:
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				e.kind = hxd_EventKind.ERelease;
				this.onRelease(e);
				e.kind = hxd_EventKind.EReleaseOutside;
			}
			this.mouseDownButton = -1;
			break;
		}
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.isOver()) {
			hxd_System.setCursor(this.cursor);
		}
		return c;
	}
	,focus: function() {
		if(this.scene == null || this.scene.events == null) {
			return;
		}
		this.scene.events.focus(this);
	}
	,blur: function() {
		if(this.hasFocus()) {
			this.scene.events.blur();
		}
	}
	,isOver: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentOver == this;
		} else {
			return false;
		}
	}
	,hasFocus: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentFocus == this;
		} else {
			return false;
		}
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,__class__: h3d_scene_Interactive
});
var h3d_scene_MultiMaterial = function(prim,mats,parent) {
	h3d_scene_Mesh.call(this,prim,mats == null?null:mats[0],parent);
	this.materials = mats == null?[this.material]:mats;
};
$hxClasses["h3d.scene.MultiMaterial"] = h3d_scene_MultiMaterial;
h3d_scene_MultiMaterial.__name__ = ["h3d","scene","MultiMaterial"];
h3d_scene_MultiMaterial.__super__ = h3d_scene_Mesh;
h3d_scene_MultiMaterial.prototype = $extend(h3d_scene_Mesh.prototype,{
	clone: function(o) {
		var m = o == null?new h3d_scene_MultiMaterial(null,this.materials):o;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.materials;
		while(_g1 < _g2.length) {
			var m1 = _g2[_g1];
			++_g1;
			_g.push(m1.clone());
		}
		m.materials = _g;
		h3d_scene_Mesh.prototype.clone.call(this,m);
		m.material = m.materials[0];
		return m;
	}
	,emit: function(ctx) {
		var _g1 = 0;
		var _g = this.materials.length;
		while(_g1 < _g) {
			var i = _g1++;
			var m = this.materials[i];
			if(m != null) {
				var p = m.passes;
				while(p != null) {
					ctx.emitPass(p,this).index = i;
					p = p.nextPass;
				}
			}
		}
	}
	,getMaterialByName: function(name) {
		var _g = 0;
		var _g1 = this.materials;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			if(m.name == name) {
				return m;
			}
		}
		return h3d_scene_Mesh.prototype.getMaterialByName.call(this,name);
	}
	,getMaterials: function(a) {
		if(a == null) {
			a = [];
		}
		var _g = 0;
		var _g1 = this.materials;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			if(m != null) {
				a.push(m);
			}
		}
		var _g2 = 0;
		var _g11 = this.childs;
		while(_g2 < _g11.length) {
			var o = _g11[_g2];
			++_g2;
			o.getMaterials(a);
		}
		return a;
	}
	,draw: function(ctx) {
		if(this.materials.length > 1) {
			this.primitive.selectMaterial(ctx.drawPass.index);
		}
		h3d_scene_Mesh.prototype.draw.call(this,ctx);
	}
	,__class__: h3d_scene_MultiMaterial
});
var h3d_scene__$Object_ObjectFlags_$Impl_$ = {};
$hxClasses["h3d.scene._Object.ObjectFlags_Impl_"] = h3d_scene__$Object_ObjectFlags_$Impl_$;
h3d_scene__$Object_ObjectFlags_$Impl_$.__name__ = ["h3d","scene","_Object","ObjectFlags_Impl_"];
h3d_scene__$Object_ObjectFlags_$Impl_$._new = function() {
	return 0;
};
h3d_scene__$Object_ObjectFlags_$Impl_$.toInt = function(this1) {
	return this1;
};
h3d_scene__$Object_ObjectFlags_$Impl_$.has = function(this1,f) {
	return (this1 & f) != 0;
};
h3d_scene__$Object_ObjectFlags_$Impl_$.set = function(this1,f,b) {
	if(b) {
		this1 |= f;
	} else {
		this1 &= ~f;
	}
	return b;
};
var h3d_scene__$RenderContext_SharedGlobal = function(gid,value) {
	this.gid = gid;
	this.value = value;
};
$hxClasses["h3d.scene._RenderContext.SharedGlobal"] = h3d_scene__$RenderContext_SharedGlobal;
h3d_scene__$RenderContext_SharedGlobal.__name__ = ["h3d","scene","_RenderContext","SharedGlobal"];
h3d_scene__$RenderContext_SharedGlobal.prototype = {
	__class__: h3d_scene__$RenderContext_SharedGlobal
};
var h3d_scene_RenderContext = function() {
	h3d_impl_RenderContext.call(this);
	this.cachedShaderList = [];
};
$hxClasses["h3d.scene.RenderContext"] = h3d_scene_RenderContext;
h3d_scene_RenderContext.__name__ = ["h3d","scene","RenderContext"];
h3d_scene_RenderContext.__super__ = h3d_impl_RenderContext;
h3d_scene_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	emit: function(mat,obj,index) {
		if(index == null) {
			index = 0;
		}
		var p = mat.passes;
		while(p != null) {
			this.emitPass(p,obj).index = index;
			p = p.nextPass;
		}
	}
	,start: function() {
		this.sharedGlobals = [];
		this.lights = null;
		this.drawPass = null;
		this.passes = null;
		this.lights = null;
		this.uploadParams = null;
		this.cachedPos = 0;
		this.visibleFlag = true;
		this.time += this.elapsedTime;
		this.frame++;
	}
	,nextPass: function() {
		this.cachedPos = 0;
		this.drawPass = null;
	}
	,getGlobal: function(name) {
		var id = hxsl_Globals.allocID(name);
		var _g = 0;
		var _g1 = this.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.gid == id) {
				return g.value;
			}
		}
		return null;
	}
	,setGlobal: function(name,value) {
		this.setGlobalID(hxsl_Globals.allocID(name),value);
	}
	,setGlobalID: function(gid,value) {
		var _g = 0;
		var _g1 = this.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.gid == gid) {
				g.value = value;
				return;
			}
		}
		this.sharedGlobals.push(new h3d_scene__$RenderContext_SharedGlobal(gid,value));
	}
	,emitPass: function(pass,obj) {
		var o = this.pool;
		if(o == null) {
			o = new h3d_pass_Object();
			o.nextAlloc = this.firstAlloc;
			this.firstAlloc = o;
		} else {
			this.pool = o.nextAlloc;
		}
		o.pass = pass;
		o.obj = obj;
		o.next = this.passes;
		this.passes = o;
		return o;
	}
	,allocShaderList: function(s,next) {
		var sl = this.cachedShaderList[this.cachedPos++];
		if(sl == null) {
			sl = new hxsl_ShaderList(null);
			this.cachedShaderList[this.cachedPos - 1] = sl;
		}
		sl.s = s;
		sl.next = next;
		return sl;
	}
	,emitLight: function(l) {
		l.next = this.lights;
		this.lights = l;
	}
	,done: function() {
		this.drawPass = null;
		this.uploadParams = null;
		var p = this.firstAlloc;
		while(p != null) {
			p.obj = null;
			p.pass = null;
			p.shader = null;
			p.shaders = null;
			p.next = null;
			p.index = 0;
			p = p.nextAlloc;
		}
		this.pool = this.firstAlloc;
		var _g = 0;
		var _g1 = this.cachedShaderList;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.s = null;
			c.next = null;
		}
		this.passes = null;
		this.lights = null;
	}
	,__class__: h3d_scene_RenderContext
});
var h3d_scene_PassGroup = function(name,passes) {
	this.name = name;
	this.passes = passes;
};
$hxClasses["h3d.scene.PassGroup"] = h3d_scene_PassGroup;
h3d_scene_PassGroup.__name__ = ["h3d","scene","PassGroup"];
h3d_scene_PassGroup.prototype = {
	__class__: h3d_scene_PassGroup
};
var h3d_scene_Renderer = function() {
	this.hasSetTarget = false;
	this.passes = new haxe_ds_StringMap();
	this.allPasses = [];
	this.tcache = new h3d_impl_TextureCache();
	this.passGroups = new haxe_ds_StringMap();
};
$hxClasses["h3d.scene.Renderer"] = h3d_scene_Renderer;
h3d_scene_Renderer.__name__ = ["h3d","scene","Renderer"];
h3d_scene_Renderer.prototype = {
	dispose: function() {
		var _g = 0;
		var _g1 = this.allPasses;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.p.dispose();
		}
		this.passes = new haxe_ds_StringMap();
		this.allPasses = [];
		this.passGroups = new haxe_ds_StringMap();
		this.tcache.dispose();
		this.def = this.depth = this.normal = this.shadow = null;
	}
	,compileShader: function(pass) {
		var p = this.getPass(pass.name);
		p.setContext(this.ctx);
		return p.compileShader(pass);
	}
	,createDefaultPass: function(name) {
		switch(name) {
		case "depth":
			if(this.depth != null) {
				return this.depth;
			}
			return this.depth = new h3d_pass_Depth();
		case "normal":
			if(this.normal != null) {
				return this.normal;
			}
			return this.normal = new h3d_pass_Normal();
		case "shadow":
			if(this.shadow != null) {
				return this.shadow;
			}
			return this.shadow = new h3d_pass_ShadowMap(1024);
		default:
			if(this.def != null) {
				return this.def;
			}
			return this.def = new h3d_pass_Default();
		}
	}
	,getPass: function(name,create) {
		if(create == null) {
			create = true;
		}
		var _this = this.passes;
		var p = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
		if(p == null && create) {
			p = this.createDefaultPass(name);
			this.setPass(name,p);
		}
		return p;
	}
	,getPassPriority: function(p) {
		var pr = p.p.priority * 10;
		switch(p.name) {
		case "additive":
			pr -= 2;
			break;
		case "alpha":
			--pr;
			break;
		}
		return pr;
	}
	,setPass: function(name,p) {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.allPasses;
		while(_g < _g1.length) {
			var p1 = _g1[_g];
			++_g;
			if(p1.name == name) {
				HxOverrides.remove(this.allPasses,p1);
			}
		}
		var _this = this.passes;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,p);
		} else {
			_this.h[name] = p;
		}
		this.allPasses.push({ name : name, p : p});
		this.allPasses.sort(function(p11,p2) {
			return _gthis.getPassPriority(p2) - _gthis.getPassPriority(p11);
		});
	}
	,depthSort: function(passes,frontToBack) {
		if(frontToBack == null) {
			frontToBack = false;
		}
		var p = passes;
		var cam = this.ctx.camera.m;
		while(p != null) {
			p.depth = (p.obj.absPos._41 * cam._13 + p.obj.absPos._42 * cam._23 + p.obj.absPos._43 * cam._33 + cam._43) / (p.obj.absPos._41 * cam._14 + p.obj.absPos._42 * cam._24 + p.obj.absPos._43 * cam._34 + cam._44);
			p = p.next;
		}
		if(frontToBack) {
			var list = passes;
			if(passes == null) {
				return null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p1;
				var q;
				var e;
				var tail;
				while(true) {
					p1 = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p1 != null) {
						++nmerges;
						q = p1;
						psize = 0;
						var _g1 = 0;
						var _g = insize;
						while(_g1 < _g) {
							++_g1;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || (p1.depth > q.depth?1:-1) <= 0) {
								e = p1;
								p1 = p1.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p1 = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				return list;
			}
		} else {
			var list1 = passes;
			if(passes == null) {
				return null;
			} else {
				var insize1 = 1;
				var nmerges1;
				var psize1 = 0;
				var qsize1 = 0;
				var p2;
				var q1;
				var e1;
				var tail1;
				while(true) {
					p2 = list1;
					list1 = null;
					tail1 = null;
					nmerges1 = 0;
					while(p2 != null) {
						++nmerges1;
						q1 = p2;
						psize1 = 0;
						var _g11 = 0;
						var _g2 = insize1;
						while(_g11 < _g2) {
							++_g11;
							++psize1;
							q1 = q1.next;
							if(q1 == null) {
								break;
							}
						}
						qsize1 = insize1;
						while(psize1 > 0 || qsize1 > 0 && q1 != null) {
							if(psize1 == 0) {
								e1 = q1;
								q1 = q1.next;
								--qsize1;
							} else if(qsize1 == 0 || q1 == null || (p2.depth > q1.depth?-1:1) <= 0) {
								e1 = p2;
								p2 = p2.next;
								--psize1;
							} else {
								e1 = q1;
								q1 = q1.next;
								--qsize1;
							}
							if(tail1 != null) {
								tail1.next = e1;
							} else {
								list1 = e1;
							}
							tail1 = e1;
						}
						p2 = q1;
					}
					tail1.next = null;
					if(nmerges1 <= 1) {
						break;
					}
					insize1 *= 2;
				}
				return list1;
			}
		}
	}
	,front2back: function(passes) {
		return this.depthSort(passes,true);
	}
	,back2front: function(passes) {
		return this.depthSort(passes,false);
	}
	,allocTarget: function(name,size,depth) {
		if(depth == null) {
			depth = true;
		}
		if(size == null) {
			size = 0;
		}
		return this.tcache.allocTarget(name,this.ctx,this.ctx.engine.width >> size,this.ctx.engine.height >> size,depth);
	}
	,clear: function(color,depth,stencil) {
		this.ctx.engine.clear(color,depth,stencil);
	}
	,pushTarget: function(tex) {
		this.ctx.engine.pushTarget(tex);
	}
	,setTarget: function(tex) {
		if(this.hasSetTarget) {
			this.ctx.engine.popTarget();
		}
		this.ctx.engine.pushTarget(tex);
		this.hasSetTarget = true;
	}
	,popTarget: function() {
		this.ctx.engine.popTarget();
	}
	,get: function(name) {
		var _this = this.passGroups;
		var p = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
		if(p == null) {
			return null;
		}
		p.rendered = true;
		return p.passes;
	}
	,draw: function(name) {
		if(this.def == null) {
			this.def = new h3d_pass_Default();
		}
		this.def.draw(this.get(name));
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.allPasses;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var _this = this.passGroups;
			var key = p.name;
			var pdata = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
			if(pdata != null && pdata.rendered) {
				continue;
			}
			if(pdata != null || p.p.forceProcessing) {
				p.p.setContext(this.ctx);
				var passes = pdata == null?null:pdata.passes;
				if(p.name == "alpha") {
					passes = this.depthSort(passes);
				}
				if(p.name == "default") {
					passes = this.depthSort(passes,true);
				}
				passes = p.p.draw(passes);
				if(pdata != null) {
					pdata.passes = passes;
					pdata.rendered = true;
				}
			}
		}
	}
	,process: function(passes) {
		this.hasSetTarget = false;
		var _g = 0;
		while(_g < passes.length) {
			var p = passes[_g];
			++_g;
			this.getPass(p.name).setContext(this.ctx);
			var _this = this.passGroups;
			var key = p.name;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,p);
			} else {
				_this.h[key] = p;
			}
		}
		this.render();
		if(this.hasSetTarget) {
			this.ctx.engine.popTarget();
			this.hasSetTarget = false;
		}
		var _g1 = 0;
		while(_g1 < passes.length) {
			var p1 = passes[_g1];
			++_g1;
			var _this1 = this.passGroups;
			var key1 = p1.name;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,null);
			} else {
				_this1.h[key1] = null;
			}
		}
	}
	,__class__: h3d_scene_Renderer
};
var h3d_scene_Scene = function() {
	h3d_scene_Object.call(this,null);
	this.hitInteractives = [];
	this.interactives = [];
	this.camera = new h3d_Camera();
	this.ctx = new h3d_scene_RenderContext();
	this.set_renderer(new h3d_scene_Renderer());
	this.lightSystem = new h3d_pass_LightSystem();
	this.postPasses = [];
	this.prePasses = [];
};
$hxClasses["h3d.scene.Scene"] = h3d_scene_Scene;
h3d_scene_Scene.__name__ = ["h3d","scene","Scene"];
h3d_scene_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h3d_scene_Scene.__super__ = h3d_scene_Object;
h3d_scene_Scene.prototype = $extend(h3d_scene_Object.prototype,{
	setEvents: function(events) {
		this.events = events;
	}
	,dispatchListeners: function(event) {
	}
	,set_renderer: function(r) {
		this.renderer = r;
		if(r != null) {
			r.ctx = this.ctx;
		}
		return r;
	}
	,sortHitPointByCameraDistance: function(i1,i2) {
		if(i1.hitPoint.w > i2.hitPoint.w) {
			return -1;
		}
		return 1;
	}
	,dispatchEvent: function(event,to) {
		to.handleEvent(event);
	}
	,handleEvent: function(event,last) {
		if(this.interactives.length == 0) {
			return null;
		}
		if(this.hitInteractives.length == 0) {
			var stage = hxd_Stage.getInstance();
			var screenX = (event.relX / stage.get_width() - 0.5) * 2;
			var screenY = -(event.relY / stage.get_height() - 0.5) * 2;
			var p0 = this.camera.unproject(screenX,screenY,0);
			var p1 = this.camera.unproject(screenX,screenY,1);
			var x = p0.x;
			var y = p0.y;
			var z = p0.z;
			var x1 = p1.x;
			var y1 = p1.y;
			var z1 = p1.z;
			var r = new h3d_col_Ray();
			r.px = x;
			r.py = y;
			r.pz = z;
			r.lx = x1 - x;
			r.ly = y1 - y;
			r.lz = z1 - z;
			var r1 = new h3d_col_Ray();
			r1.px = r.px;
			r1.py = r.py;
			r1.pz = r.pz;
			r1.lx = r.lx;
			r1.ly = r.ly;
			r1.lz = r.lz;
			var hitTmp = new h3d_col_Point();
			var _g = 0;
			var _g1 = this.interactives;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				var p = i;
				while(p != null && (p.flags & 2) != 0) p = p.parent;
				if(p != null) {
					continue;
				}
				var minv = i.getInvPos();
				var p_z;
				var p_y;
				var p_x;
				var x2 = r.px;
				var y2 = r.py;
				var z2 = r.pz;
				p_x = x2;
				p_y = y2;
				p_z = z2;
				var px = x2 * minv._11 + y2 * minv._21 + z2 * minv._31 + minv._41;
				var py = x2 * minv._12 + y2 * minv._22 + z2 * minv._32 + minv._42;
				var pz = x2 * minv._13 + y2 * minv._23 + z2 * minv._33 + minv._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				r.px = p_x;
				r.py = p_y;
				r.pz = p_z;
				var l_z;
				var l_y;
				var l_x;
				var x3 = r.lx;
				var y3 = r.ly;
				var z3 = r.lz;
				l_x = x3;
				l_y = y3;
				l_z = z3;
				var px1 = x3 * minv._11 + y3 * minv._21 + z3 * minv._31;
				var py1 = x3 * minv._12 + y3 * minv._22 + z3 * minv._32;
				var pz1 = x3 * minv._13 + y3 * minv._23 + z3 * minv._33;
				l_x = px1;
				l_y = py1;
				l_z = pz1;
				r.lx = l_x;
				r.ly = l_y;
				r.lz = l_z;
				r.normalize();
				if(r.lx != r.lx) {
					r.px = r1.px;
					r.py = r1.py;
					r.pz = r1.pz;
					r.lx = r1.lx;
					r.ly = r1.ly;
					r.lz = r1.lz;
					continue;
				}
				var hit = i.shape.rayIntersection(r,hitTmp);
				r.px = r1.px;
				r.py = r1.py;
				r.pz = r1.pz;
				r.lx = r1.lx;
				r.ly = r1.ly;
				r.lz = r1.lz;
				if(hit == null) {
					continue;
				}
				i.hitPoint.x = hit.x;
				i.hitPoint.y = hit.y;
				i.hitPoint.z = hit.z;
				this.hitInteractives.push(i);
			}
			if(this.hitInteractives.length == 0) {
				return null;
			}
			if(this.hitInteractives.length > 1) {
				var _g2 = 0;
				var _g11 = this.hitInteractives;
				while(_g2 < _g11.length) {
					var i1 = _g11[_g2];
					++_g2;
					var p_z1;
					var p_y1;
					var p_x1;
					var _this = i1.hitPoint;
					var x4 = _this.x;
					var y4 = _this.y;
					var z4 = _this.z;
					var w = _this.w;
					p_x1 = x4;
					p_y1 = y4;
					p_z1 = z4;
					var m = i1.absPos;
					var px2 = x4 * m._11 + y4 * m._21 + z4 * m._31 + w * m._41;
					var py2 = x4 * m._12 + y4 * m._22 + z4 * m._32 + w * m._42;
					var pz2 = x4 * m._13 + y4 * m._23 + z4 * m._33 + w * m._43;
					p_x1 = px2;
					p_y1 = py2;
					p_z1 = pz2;
					var m1 = this.camera.m;
					var px3 = p_x1 * m1._11 + p_y1 * m1._21 + p_z1 * m1._31 + w * m1._41;
					var py3 = p_x1 * m1._12 + p_y1 * m1._22 + p_z1 * m1._32 + w * m1._42;
					var pz3 = p_x1 * m1._13 + p_y1 * m1._23 + p_z1 * m1._33 + w * m1._43;
					var iw = 1 / (p_x1 * m1._14 + p_y1 * m1._24 + p_z1 * m1._34 + w * m1._44);
					p_x1 = px3 * iw;
					p_y1 = py3 * iw;
					p_z1 = pz3 * iw;
					i1.hitPoint.w = p_z1;
				}
				this.hitInteractives.sort($bind(this,this.sortHitPointByCameraDistance));
			}
			this.hitInteractives.unshift(null);
		}
		while(this.hitInteractives.length > 0) {
			var i2 = this.hitInteractives.pop();
			if(i2 == null) {
				return null;
			}
			event.relX = i2.hitPoint.x;
			event.relY = i2.hitPoint.y;
			event.relZ = i2.hitPoint.z;
			i2.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			if(!event.propagate) {
				this.hitInteractives = [];
			}
			return i2;
		}
		return null;
	}
	,clone: function(o) {
		var s = o == null?new h3d_scene_Scene():o;
		s.camera = this.camera.clone();
		h3d_scene_Object.prototype.clone.call(this,s);
		return s;
	}
	,dispose: function() {
		h3d_scene_Object.prototype.dispose.call(this);
		if(this.hardwarePass != null) {
			this.hardwarePass.dispose();
			this.hardwarePass = null;
		}
		this.renderer.dispose();
		this.set_renderer(new h3d_scene_Renderer());
	}
	,addPass: function(p,before) {
		if(before == null) {
			before = false;
		}
		if(before) {
			this.prePasses.push(p);
		} else {
			this.postPasses.push(p);
		}
	}
	,removePass: function(p) {
		HxOverrides.remove(this.postPasses,p);
		HxOverrides.remove(this.prePasses,p);
	}
	,addEventTarget: function(i) {
		this.interactives.push(i);
	}
	,removeEventTarget: function(i) {
		if(HxOverrides.remove(this.interactives,i) && this.events != null) {
			this.events.onRemove(i);
		}
	}
	,setElapsedTime: function(elapsedTime) {
		this.ctx.elapsedTime = elapsedTime;
	}
	,hardwarePick: function(pixelX,pixelY) {
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		var engine = h3d_Engine.CURRENT;
		this.camera.screenRatio = engine.width / engine.height;
		this.camera.update();
		this.ctx.camera = this.camera;
		this.ctx.engine = engine;
		this.ctx.start();
		this.hardwarePickEmit(this.camera.rayFromScreen(pixelX,pixelY),this.ctx);
		this.ctx.lightSystem = null;
		var found = null;
		var passes = this.ctx.passes;
		if(passes != null) {
			var p = this.hardwarePass;
			if(p == null) {
				p = new h3d_pass_HardwarePick();
				this.hardwarePass = p;
			}
			var value = h3d_mat_Texture.fromColor(267386880,0,{ fileName : "Scene.hx", lineNumber : 216, className : "h3d.scene.Scene", methodName : "hardwarePick"});
			this.ctx.setGlobalID(hxsl_Globals.allocID("depthMap"),value);
			p.pickX = pixelX;
			p.pickY = pixelY;
			p.setContext(this.ctx);
			passes = p.draw(passes);
			this.ctx.passes = passes;
			if(p.pickedIndex >= 0) {
				while(p.pickedIndex > 0) {
					p.pickedIndex--;
					passes = passes.next;
				}
				found = passes.obj;
			}
		}
		this.ctx.done();
		this.ctx.camera = null;
		this.ctx.engine = null;
		return found;
	}
	,render: function(engine) {
		if((this.flags & 32) == 0) {
			this.onAlloc();
		}
		this.camera.screenRatio = engine.width / engine.height;
		this.camera.update();
		this.ctx.camera = this.camera;
		this.ctx.engine = engine;
		this.ctx.start();
		var _g = 0;
		var _g1 = this.prePasses;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.render(engine);
		}
		this.syncRec(this.ctx);
		this.emitRec(this.ctx);
		var list = this.ctx.passes;
		var tmp;
		if(list == null) {
			tmp = null;
		} else {
			var insize = 1;
			var nmerges;
			var psize = 0;
			var qsize = 0;
			var p1;
			var q;
			var e;
			var tail;
			while(true) {
				p1 = list;
				list = null;
				tail = null;
				nmerges = 0;
				while(p1 != null) {
					++nmerges;
					q = p1;
					psize = 0;
					var _g11 = 0;
					var _g2 = insize;
					while(_g11 < _g2) {
						++_g11;
						++psize;
						q = q.next;
						if(q == null) {
							break;
						}
					}
					qsize = insize;
					while(psize > 0 || qsize > 0 && q != null) {
						if(psize == 0) {
							e = q;
							q = q.next;
							--qsize;
						} else if(qsize == 0 || q == null || p1.pass.passId - q.pass.passId <= 0) {
							e = p1;
							p1 = p1.next;
							--psize;
						} else {
							e = q;
							q = q.next;
							--qsize;
						}
						if(tail != null) {
							tail.next = e;
						} else {
							list = e;
						}
						tail = e;
					}
					p1 = q;
				}
				tail.next = null;
				if(nmerges <= 1) {
					break;
				}
				insize *= 2;
			}
			tmp = list;
		}
		this.ctx.passes = tmp;
		var curPass = this.ctx.passes;
		var passes = [];
		while(curPass != null) {
			var passId = curPass.pass.passId;
			var p2 = curPass;
			var prev = null;
			while(p2 != null && p2.pass.passId == passId) {
				prev = p2;
				p2 = p2.next;
			}
			prev.next = null;
			passes.push(new h3d_scene_PassGroup(curPass.pass.name,curPass));
			curPass = p2;
		}
		this.ctx.lightSystem = this.lightSystem;
		this.lightSystem.initLights(this.ctx);
		this.renderer.process(passes);
		var _g3 = 0;
		while(_g3 < passes.length) {
			var p3 = passes[_g3];
			++_g3;
			if(!p3.rendered) {
				haxe_Log.trace("Pass " + p3.name + " has not been rendered : don't know how to handle.",{ fileName : "Scene.hx", lineNumber : 281, className : "h3d.scene.Scene", methodName : "render"});
				var o = p3.passes;
				while(o != null) {
					haxe_Log.trace(" used by " + o.obj.name == null?"" + Std.string(o.obj):o.obj.name,{ fileName : "Scene.hx", lineNumber : 284, className : "h3d.scene.Scene", methodName : "render"});
					o = o.next;
				}
			}
		}
		this.ctx.done();
		var _g4 = 0;
		var _g12 = this.postPasses;
		while(_g4 < _g12.length) {
			var p4 = _g12[_g4];
			++_g4;
			p4.render(engine);
		}
		this.ctx.camera = null;
		this.ctx.engine = null;
	}
	,__class__: h3d_scene_Scene
});
var h3d_scene_Joint = function(skin,j) {
	h3d_scene_Object.call(this,null);
	this.name = j.name;
	this.skin = skin;
	this.parent = skin;
	this.index = j.index;
};
$hxClasses["h3d.scene.Joint"] = h3d_scene_Joint;
h3d_scene_Joint.__name__ = ["h3d","scene","Joint"];
h3d_scene_Joint.__super__ = h3d_scene_Object;
h3d_scene_Joint.prototype = $extend(h3d_scene_Object.prototype,{
	syncPos: function() {
		var p = this.parent;
		while(p != null) {
			if((p.flags & 1) != 0) {
				if(this.skin.jointsAbsPosInv == null) {
					this.skin.jointsAbsPosInv = new h3d_Matrix();
					this.skin.jointsAbsPosInv.zero();
				}
				if(this.skin.jointsAbsPosInv._44 == 0) {
					this.skin.jointsAbsPosInv.inverse3x4(this.parent.absPos);
				}
				this.parent.syncPos();
				this.lastFrame = -1;
				break;
			}
			p = p.parent;
		}
		if(this.lastFrame != this.skin.lastFrame) {
			this.lastFrame = this.skin.lastFrame;
			this.absPos.loadFrom(this.skin.currentAbsPose[this.index]);
			if(this.skin.jointsAbsPosInv != null && this.skin.jointsAbsPosInv._44 != 0) {
				this.absPos.multiply3x4(this.absPos,this.skin.jointsAbsPosInv);
				this.absPos.multiply3x4(this.absPos,this.parent.absPos);
			}
		}
	}
	,__class__: h3d_scene_Joint
});
var h3d_scene_Skin = function(s,mat,parent) {
	h3d_scene_MultiMaterial.call(this,null,mat,parent);
	if(s != null) {
		this.setSkinData(s);
	}
};
$hxClasses["h3d.scene.Skin"] = h3d_scene_Skin;
h3d_scene_Skin.__name__ = ["h3d","scene","Skin"];
h3d_scene_Skin.__super__ = h3d_scene_MultiMaterial;
h3d_scene_Skin.prototype = $extend(h3d_scene_MultiMaterial.prototype,{
	clone: function(o) {
		var s = o == null?new h3d_scene_Skin(null,this.materials.slice()):o;
		h3d_scene_MultiMaterial.prototype.clone.call(this,s);
		s.setSkinData(this.skinData);
		s.currentRelPose = this.currentRelPose.slice();
		return s;
	}
	,getBounds: function(b,rec) {
		if(rec == null) {
			rec = false;
		}
		b = h3d_scene_MultiMaterial.prototype.getBounds.call(this,b,rec);
		var _this = this.primitive.getBounds();
		var b1 = new h3d_col_Bounds();
		b1.xMin = _this.xMin;
		b1.xMax = _this.xMax;
		b1.yMin = _this.yMin;
		b1.yMax = _this.yMax;
		b1.zMin = _this.zMin;
		b1.zMax = _this.zMax;
		var b0 = this.skinData.allJoints[0];
		if(b0 != null && b0.parent == null) {
			var mtmp = this.absPos.clone();
			var r = this.currentRelPose[b0.index];
			if(r != null) {
				mtmp.multiply3x4(r,mtmp);
			} else {
				mtmp.multiply3x4(b0.defMat,mtmp);
			}
			if(b0.transPos != null) {
				mtmp.multiply3x4(b0.transPos,mtmp);
			}
			b1.transform3x4(mtmp);
		} else {
			b1.transform3x4(this.absPos);
		}
		if(b1.xMin < b.xMin) {
			b.xMin = b1.xMin;
		}
		if(b1.xMax > b.xMax) {
			b.xMax = b1.xMax;
		}
		if(b1.yMin < b.yMin) {
			b.yMin = b1.yMin;
		}
		if(b1.yMax > b.yMax) {
			b.yMax = b1.yMax;
		}
		if(b1.zMin < b.zMin) {
			b.zMin = b1.zMin;
		}
		if(b1.zMax > b.zMax) {
			b.zMax = b1.zMax;
		}
		return b;
	}
	,getObjectByName: function(name) {
		if(this.skinData != null && this.skinData.name == name) {
			return this;
		}
		var o = h3d_scene_MultiMaterial.prototype.getObjectByName.call(this,name);
		if(o != null) {
			return o;
		}
		if(this.skinData != null) {
			var _this = this.skinData.namedJoints;
			var j = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
			if(j != null) {
				return new h3d_scene_Joint(this,j);
			}
		}
		return null;
	}
	,calcAbsPos: function() {
		h3d_scene_MultiMaterial.prototype.calcAbsPos.call(this);
		this.jointsUpdated = true;
	}
	,getSkinData: function() {
		return this.skinData;
	}
	,setSkinData: function(s) {
		this.skinData = s;
		this.jointsUpdated = true;
		this.primitive = s.primitive;
		this.skinShader = new h3d_shader_Skin();
		var maxBones = 0;
		if(this.skinData.splitJoints != null) {
			var _g = 0;
			var _g1 = this.skinData.splitJoints;
			while(_g < _g1.length) {
				var s1 = _g1[_g];
				++_g;
				if(s1.joints.length > maxBones) {
					maxBones = s1.joints.length;
				}
			}
		} else {
			maxBones = this.skinData.boundJoints.length;
		}
		if(this.skinShader.MaxBones__ < maxBones) {
			var _this = this.skinShader;
			_this.constModified = true;
			_this.MaxBones__ = maxBones;
		}
		var _g2 = 0;
		var _g11 = this.materials;
		while(_g2 < _g11.length) {
			var m = _g11[_g2];
			++_g2;
			if(m != null) {
				m.passes.addShader(this.skinShader);
				if(this.skinData.splitJoints != null) {
					m.passes.dynamicParameters = true;
				}
			}
		}
		this.currentRelPose = [];
		this.currentAbsPose = [];
		this.currentPalette = [];
		this.paletteChanged = true;
		var _g3 = 0;
		var _g12 = this.skinData.allJoints;
		while(_g3 < _g12.length) {
			++_g3;
			this.currentAbsPose.push(h3d_Matrix.I());
		}
		var _g13 = 0;
		var _g4 = this.skinData.boundJoints.length;
		while(_g13 < _g4) {
			++_g13;
			this.currentPalette.push(h3d_Matrix.I());
		}
		if(this.skinData.splitJoints != null) {
			this.splitPalette = [];
			var _g5 = 0;
			var _g14 = this.skinData.splitJoints;
			while(_g5 < _g14.length) {
				var a = _g14[_g5];
				++_g5;
				var _g21 = [];
				var _g31 = 0;
				var _g41 = a.joints;
				while(_g31 < _g41.length) {
					var j = _g41[_g31];
					++_g31;
					_g21.push(this.currentPalette[j.bindIndex]);
				}
				this.splitPalette.push(_g21);
			}
		} else {
			this.splitPalette = null;
		}
	}
	,sync: function(ctx) {
		if(!ctx.visibleFlag) {
			return;
		}
		if(this.jointsUpdated || (this.flags & 1) != 0) {
			var _g = 0;
			var _g1 = this.skinData.allJoints;
			while(_g < _g1.length) {
				var j = _g1[_g];
				++_g;
				var id = j.index;
				var m = this.currentAbsPose[id];
				var r = this.currentRelPose[id];
				var bid = j.bindIndex;
				if(r == null) {
					r = j.defMat;
				} else if(j.retargetAnim) {
					r._41 = j.defMat._41;
					r._42 = j.defMat._42;
					r._43 = j.defMat._43;
				}
				if(j.parent == null) {
					var b = this.absPos;
					var m11 = r._11;
					var m12 = r._12;
					var m13 = r._13;
					var m21 = r._21;
					var m22 = r._22;
					var m23 = r._23;
					var a31 = r._31;
					var a32 = r._32;
					var a33 = r._33;
					var a41 = r._41;
					var a42 = r._42;
					var a43 = r._43;
					var b11 = b._11;
					var b12 = b._12;
					var b13 = b._13;
					var b21 = b._21;
					var b22 = b._22;
					var b23 = b._23;
					var b31 = b._31;
					var b32 = b._32;
					var b33 = b._33;
					var b41 = b._41;
					var b42 = b._42;
					var b43 = b._43;
					m._11 = m11 * b11 + m12 * b21 + m13 * b31;
					m._12 = m11 * b12 + m12 * b22 + m13 * b32;
					m._13 = m11 * b13 + m12 * b23 + m13 * b33;
					m._14 = 0;
					m._21 = m21 * b11 + m22 * b21 + m23 * b31;
					m._22 = m21 * b12 + m22 * b22 + m23 * b32;
					m._23 = m21 * b13 + m22 * b23 + m23 * b33;
					m._24 = 0;
					m._31 = a31 * b11 + a32 * b21 + a33 * b31;
					m._32 = a31 * b12 + a32 * b22 + a33 * b32;
					m._33 = a31 * b13 + a32 * b23 + a33 * b33;
					m._34 = 0;
					m._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
					m._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
					m._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
					m._44 = 1;
				} else {
					var b1 = this.currentAbsPose[j.parent.index];
					var m111 = r._11;
					var m121 = r._12;
					var m131 = r._13;
					var m211 = r._21;
					var m221 = r._22;
					var m231 = r._23;
					var a311 = r._31;
					var a321 = r._32;
					var a331 = r._33;
					var a411 = r._41;
					var a421 = r._42;
					var a431 = r._43;
					var b111 = b1._11;
					var b121 = b1._12;
					var b131 = b1._13;
					var b211 = b1._21;
					var b221 = b1._22;
					var b231 = b1._23;
					var b311 = b1._31;
					var b321 = b1._32;
					var b331 = b1._33;
					var b411 = b1._41;
					var b421 = b1._42;
					var b431 = b1._43;
					m._11 = m111 * b111 + m121 * b211 + m131 * b311;
					m._12 = m111 * b121 + m121 * b221 + m131 * b321;
					m._13 = m111 * b131 + m121 * b231 + m131 * b331;
					m._14 = 0;
					m._21 = m211 * b111 + m221 * b211 + m231 * b311;
					m._22 = m211 * b121 + m221 * b221 + m231 * b321;
					m._23 = m211 * b131 + m221 * b231 + m231 * b331;
					m._24 = 0;
					m._31 = a311 * b111 + a321 * b211 + a331 * b311;
					m._32 = a311 * b121 + a321 * b221 + a331 * b321;
					m._33 = a311 * b131 + a321 * b231 + a331 * b331;
					m._34 = 0;
					m._41 = a411 * b111 + a421 * b211 + a431 * b311 + b411;
					m._42 = a411 * b121 + a421 * b221 + a431 * b321 + b421;
					m._43 = a411 * b131 + a421 * b231 + a431 * b331 + b431;
					m._44 = 1;
				}
				if(bid >= 0) {
					var _this = this.currentPalette[bid];
					var a = j.transPos;
					var m112 = a._11;
					var m122 = a._12;
					var m132 = a._13;
					var m212 = a._21;
					var m222 = a._22;
					var m232 = a._23;
					var a312 = a._31;
					var a322 = a._32;
					var a332 = a._33;
					var a412 = a._41;
					var a422 = a._42;
					var a432 = a._43;
					var b112 = m._11;
					var b122 = m._12;
					var b132 = m._13;
					var b212 = m._21;
					var b222 = m._22;
					var b232 = m._23;
					var b312 = m._31;
					var b322 = m._32;
					var b332 = m._33;
					var b412 = m._41;
					var b422 = m._42;
					var b432 = m._43;
					_this._11 = m112 * b112 + m122 * b212 + m132 * b312;
					_this._12 = m112 * b122 + m122 * b222 + m132 * b322;
					_this._13 = m112 * b132 + m122 * b232 + m132 * b332;
					_this._14 = 0;
					_this._21 = m212 * b112 + m222 * b212 + m232 * b312;
					_this._22 = m212 * b122 + m222 * b222 + m232 * b322;
					_this._23 = m212 * b132 + m222 * b232 + m232 * b332;
					_this._24 = 0;
					_this._31 = a312 * b112 + a322 * b212 + a332 * b312;
					_this._32 = a312 * b122 + a322 * b222 + a332 * b322;
					_this._33 = a312 * b132 + a322 * b232 + a332 * b332;
					_this._34 = 0;
					_this._41 = a412 * b112 + a422 * b212 + a432 * b312 + b412;
					_this._42 = a412 * b122 + a422 * b222 + a432 * b322 + b422;
					_this._43 = a412 * b132 + a422 * b232 + a432 * b332 + b432;
					_this._44 = 1;
				}
			}
			this.skinShader.bonesMatrixes__ = this.currentPalette;
			if(this.jointsAbsPosInv != null) {
				this.jointsAbsPosInv._44 = 0;
			}
			this.jointsUpdated = false;
		}
	}
	,emit: function(ctx) {
		if(this.splitPalette == null) {
			h3d_scene_MultiMaterial.prototype.emit.call(this,ctx);
		} else {
			var _g1 = 0;
			var _g = this.splitPalette.length;
			while(_g1 < _g) {
				var i = _g1++;
				var m = this.materials[this.skinData.splitJoints[i].material];
				if(m != null) {
					var p = m.passes;
					while(p != null) {
						ctx.emitPass(p,this).index = i;
						p = p.nextPass;
					}
				}
			}
		}
		if(this.showJoints) {
			if(this.jointsGraphics == null) {
				this.jointsGraphics = new h3d_scene_Graphics(this);
				this.jointsGraphics.material.passes.depth(false,h3d_mat_Compare.Always);
				this.jointsGraphics.material.passes.setPassName("add");
			}
			var topParent = this;
			while(topParent.parent != null) topParent = topParent.parent;
			this.jointsGraphics.set_follow(topParent);
			var g = this.jointsGraphics;
			g.clear();
			var _g2 = 0;
			var _g11 = this.skinData.allJoints;
			while(_g2 < _g11.length) {
				var j = _g11[_g2];
				++_g2;
				var m1 = this.currentAbsPose[j.index];
				var mp = j.parent == null?this.absPos:this.currentAbsPose[j.parent.index];
				g.lineStyle(1,j.parent == null?-16776961:-256);
				g.moveTo(mp._41,mp._42,mp._43);
				g.lineTo(m1._41,m1._42,m1._43);
			}
		} else if(this.jointsGraphics != null) {
			var _this = this.jointsGraphics;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.jointsGraphics = null;
		}
	}
	,draw: function(ctx) {
		if(this.splitPalette == null) {
			h3d_scene_MultiMaterial.prototype.draw.call(this,ctx);
		} else {
			var i = ctx.drawPass.index;
			this.skinShader.bonesMatrixes__ = this.splitPalette[i];
			this.primitive.selectMaterial(i);
			ctx.uploadParams();
			this.primitive.render(ctx.engine);
		}
	}
	,__class__: h3d_scene_Skin
});
var h3d_shader_AmbientLight = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.AmbientLight"] = h3d_shader_AmbientLight;
h3d_shader_AmbientLight.__name__ = ["h3d","shader","AmbientLight"];
h3d_shader_AmbientLight.__super__ = hxsl_Shader;
h3d_shader_AmbientLight.prototype = $extend(hxsl_Shader.prototype,{
	get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_AmbientLight);
		s.shader = this.shader;
		s.additive__ = this.additive__;
		return s;
	}
	,__class__: h3d_shader_AmbientLight
});
var h3d_shader_Base2d = function() {
	this.viewport__ = new h3d_Vector();
	this.filterMatrixB__ = new h3d_Vector();
	this.filterMatrixA__ = new h3d_Vector();
	this.color__ = new h3d_Vector();
	this.absoluteMatrixB__ = new h3d_Vector();
	this.uvPos__ = new h3d_Vector();
	this.halfPixelInverse__ = new h3d_Vector();
	this.absoluteMatrixA__ = new h3d_Vector();
	this.zValue__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Base2d"] = h3d_shader_Base2d;
h3d_shader_Base2d.__name__ = ["h3d","shader","Base2d"];
h3d_shader_Base2d.__super__ = hxsl_Shader;
h3d_shader_Base2d.prototype = $extend(hxsl_Shader.prototype,{
	get_zValue: function() {
		return this.zValue__;
	}
	,set_zValue: function(_v) {
		return this.zValue__ = _v;
	}
	,get_absoluteMatrixA: function() {
		return this.absoluteMatrixA__;
	}
	,set_absoluteMatrixA: function(_v) {
		return this.absoluteMatrixA__ = _v;
	}
	,get_hasUVPos: function() {
		return this.hasUVPos__;
	}
	,set_hasUVPos: function(_v) {
		this.constModified = true;
		return this.hasUVPos__ = _v;
	}
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,get_pixelAlign: function() {
		return this.pixelAlign__;
	}
	,set_pixelAlign: function(_v) {
		this.constModified = true;
		return this.pixelAlign__ = _v;
	}
	,get_halfPixelInverse: function() {
		return this.halfPixelInverse__;
	}
	,set_halfPixelInverse: function(_v) {
		return this.halfPixelInverse__ = _v;
	}
	,get_uvPos: function() {
		return this.uvPos__;
	}
	,set_uvPos: function(_v) {
		return this.uvPos__ = _v;
	}
	,get_isRelative: function() {
		return this.isRelative__;
	}
	,set_isRelative: function(_v) {
		this.constModified = true;
		return this.isRelative__ = _v;
	}
	,get_absoluteMatrixB: function() {
		return this.absoluteMatrixB__;
	}
	,set_absoluteMatrixB: function(_v) {
		return this.absoluteMatrixB__ = _v;
	}
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,get_filterMatrixA: function() {
		return this.filterMatrixA__;
	}
	,set_filterMatrixA: function(_v) {
		return this.filterMatrixA__ = _v;
	}
	,get_filterMatrixB: function() {
		return this.filterMatrixB__;
	}
	,set_filterMatrixB: function(_v) {
		return this.filterMatrixB__ = _v;
	}
	,get_viewport: function() {
		return this.viewport__;
	}
	,set_viewport: function(_v) {
		return this.viewport__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.hasUVPos__) {
			this.constBits |= 1;
		}
		if(this.pixelAlign__) {
			this.constBits |= 2;
		}
		if(this.isRelative__) {
			this.constBits |= 4;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.zValue__;
		case 1:
			return this.absoluteMatrixA__;
		case 2:
			return this.hasUVPos__;
		case 3:
			return this.texture__;
		case 4:
			return this.pixelAlign__;
		case 5:
			return this.halfPixelInverse__;
		case 6:
			return this.uvPos__;
		case 7:
			return this.isRelative__;
		case 8:
			return this.absoluteMatrixB__;
		case 9:
			return this.color__;
		case 10:
			return this.filterMatrixA__;
		case 11:
			return this.filterMatrixB__;
		case 12:
			return this.viewport__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_Base2d);
		s.shader = this.shader;
		s.zValue__ = this.zValue__;
		s.absoluteMatrixA__ = this.absoluteMatrixA__;
		s.hasUVPos__ = this.hasUVPos__;
		s.texture__ = this.texture__;
		s.pixelAlign__ = this.pixelAlign__;
		s.halfPixelInverse__ = this.halfPixelInverse__;
		s.uvPos__ = this.uvPos__;
		s.isRelative__ = this.isRelative__;
		s.absoluteMatrixB__ = this.absoluteMatrixB__;
		s.color__ = this.color__;
		s.filterMatrixA__ = this.filterMatrixA__;
		s.filterMatrixB__ = this.filterMatrixB__;
		s.viewport__ = this.viewport__;
		return s;
	}
	,__class__: h3d_shader_Base2d
});
var h3d_shader_BaseMesh = function() {
	this.color__ = new h3d_Vector();
	this.specularPower__ = 0;
	this.specularColor__ = new h3d_Vector();
	this.specularAmount__ = 0;
	hxsl_Shader.call(this);
	var _this = this.color__;
	_this.x = 1;
	_this.y = 1;
	_this.z = 1;
	_this.w = 1.;
	var _this1 = this.specularColor__;
	_this1.x = 1;
	_this1.y = 1;
	_this1.z = 1;
	_this1.w = 1.;
	this.specularPower__ = 50;
	this.specularAmount__ = 1;
};
$hxClasses["h3d.shader.BaseMesh"] = h3d_shader_BaseMesh;
h3d_shader_BaseMesh.__name__ = ["h3d","shader","BaseMesh"];
h3d_shader_BaseMesh.__super__ = hxsl_Shader;
h3d_shader_BaseMesh.prototype = $extend(hxsl_Shader.prototype,{
	get_specularAmount: function() {
		return this.specularAmount__;
	}
	,set_specularAmount: function(_v) {
		return this.specularAmount__ = _v;
	}
	,get_specularColor: function() {
		return this.specularColor__;
	}
	,set_specularColor: function(_v) {
		return this.specularColor__ = _v;
	}
	,get_specularPower: function() {
		return this.specularPower__;
	}
	,set_specularPower: function(_v) {
		return this.specularPower__ = _v;
	}
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.specularAmount__;
		case 1:
			return this.specularColor__;
		case 2:
			return this.specularPower__;
		case 3:
			return this.color__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_BaseMesh);
		s.shader = this.shader;
		s.specularAmount__ = this.specularAmount__;
		s.specularColor__ = this.specularColor__;
		s.specularPower__ = this.specularPower__;
		s.color__ = this.color__;
		return s;
	}
	,__class__: h3d_shader_BaseMesh
});
var h3d_shader_ScreenShader = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.ScreenShader"] = h3d_shader_ScreenShader;
h3d_shader_ScreenShader.__name__ = ["h3d","shader","ScreenShader"];
h3d_shader_ScreenShader.__super__ = hxsl_Shader;
h3d_shader_ScreenShader.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		return null;
	}
	,__class__: h3d_shader_ScreenShader
});
var h3d_shader_Blur = function() {
	this.cameraInverseViewProj__ = new h3d_Matrix();
	this.values__ = [];
	this.fixedColor__ = new h3d_Vector();
	this.pixel__ = new h3d_Vector();
	this.Quality__ = 0;
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.Blur"] = h3d_shader_Blur;
h3d_shader_Blur.__name__ = ["h3d","shader","Blur"];
h3d_shader_Blur.__super__ = h3d_shader_ScreenShader;
h3d_shader_Blur.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	get_Quality: function() {
		return this.Quality__;
	}
	,set_Quality: function(_v) {
		this.constModified = true;
		return this.Quality__ = _v;
	}
	,get_pixel: function() {
		return this.pixel__;
	}
	,set_pixel: function(_v) {
		return this.pixel__ = _v;
	}
	,get_hasFixedColor: function() {
		return this.hasFixedColor__;
	}
	,set_hasFixedColor: function(_v) {
		this.constModified = true;
		return this.hasFixedColor__ = _v;
	}
	,get_fixedColor: function() {
		return this.fixedColor__;
	}
	,set_fixedColor: function(_v) {
		return this.fixedColor__ = _v;
	}
	,get_values: function() {
		return this.values__;
	}
	,set_values: function(_v) {
		return this.values__ = _v;
	}
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,get_isDepth: function() {
		return this.isDepth__;
	}
	,set_isDepth: function(_v) {
		this.constModified = true;
		return this.isDepth__ = _v;
	}
	,get_normalTexture: function() {
		return this.normalTexture__;
	}
	,set_normalTexture: function(_v) {
		return this.normalTexture__ = _v;
	}
	,get_isDepthDependant: function() {
		return this.isDepthDependant__;
	}
	,set_isDepthDependant: function(_v) {
		this.constModified = true;
		return this.isDepthDependant__ = _v;
	}
	,get_hasNormal: function() {
		return this.hasNormal__;
	}
	,set_hasNormal: function(_v) {
		this.constModified = true;
		return this.hasNormal__ = _v;
	}
	,get_cameraInverseViewProj: function() {
		return this.cameraInverseViewProj__;
	}
	,set_cameraInverseViewProj: function(_v) {
		return this.cameraInverseViewProj__ = _v;
	}
	,get_depthTexture: function() {
		return this.depthTexture__;
	}
	,set_depthTexture: function(_v) {
		return this.depthTexture__ = _v;
	}
	,get_smoothFixedColor: function() {
		return this.smoothFixedColor__;
	}
	,set_smoothFixedColor: function(_v) {
		this.constModified = true;
		return this.smoothFixedColor__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.Quality__;
		if(v >>> 8 != 0) {
			throw new js__$Boot_HaxeError("Quality" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.hasFixedColor__) {
			this.constBits |= 256;
		}
		if(this.isDepth__) {
			this.constBits |= 512;
		}
		if(this.isDepthDependant__) {
			this.constBits |= 1024;
		}
		if(this.hasNormal__) {
			this.constBits |= 2048;
		}
		if(this.smoothFixedColor__) {
			this.constBits |= 4096;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.Quality__;
		case 1:
			return this.pixel__;
		case 2:
			return this.hasFixedColor__;
		case 3:
			return this.fixedColor__;
		case 4:
			return this.values__;
		case 5:
			return this.texture__;
		case 6:
			return this.isDepth__;
		case 7:
			return this.normalTexture__;
		case 8:
			return this.isDepthDependant__;
		case 9:
			return this.hasNormal__;
		case 10:
			return this.cameraInverseViewProj__;
		case 11:
			return this.depthTexture__;
		case 12:
			return this.smoothFixedColor__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_Blur);
		s.shader = this.shader;
		s.Quality__ = this.Quality__;
		s.pixel__ = this.pixel__;
		s.hasFixedColor__ = this.hasFixedColor__;
		s.fixedColor__ = this.fixedColor__;
		s.values__ = this.values__;
		s.texture__ = this.texture__;
		s.isDepth__ = this.isDepth__;
		s.normalTexture__ = this.normalTexture__;
		s.isDepthDependant__ = this.isDepthDependant__;
		s.hasNormal__ = this.hasNormal__;
		s.cameraInverseViewProj__ = this.cameraInverseViewProj__;
		s.depthTexture__ = this.depthTexture__;
		s.smoothFixedColor__ = this.smoothFixedColor__;
		return s;
	}
	,__class__: h3d_shader_Blur
});
var h3d_shader_ShaderBuffers = function(s) {
	var length = s.globalsSize << 2;
	this.globals = new Array(length);
	var length1 = s.paramsSize << 2;
	this.params = new Array(length1);
	var length2 = s.textures2DCount + s.texturesCubeCount;
	this.tex = new Array(length2);
};
$hxClasses["h3d.shader.ShaderBuffers"] = h3d_shader_ShaderBuffers;
h3d_shader_ShaderBuffers.__name__ = ["h3d","shader","ShaderBuffers"];
h3d_shader_ShaderBuffers.prototype = {
	grow: function(s) {
		var ng = s.globalsSize << 2;
		var np = s.paramsSize << 2;
		var nt = s.textures2DCount + s.texturesCubeCount;
		if(this.globals.length < ng) {
			this.globals = new Array(ng);
		}
		if(this.params.length < np) {
			this.params = new Array(np);
		}
		if(this.tex.length < nt) {
			this.tex = new Array(nt);
		}
	}
	,__class__: h3d_shader_ShaderBuffers
};
var h3d_shader_Buffers = function(s) {
	this.vertex = new h3d_shader_ShaderBuffers(s.vertex);
	this.fragment = new h3d_shader_ShaderBuffers(s.fragment);
};
$hxClasses["h3d.shader.Buffers"] = h3d_shader_Buffers;
h3d_shader_Buffers.__name__ = ["h3d","shader","Buffers"];
h3d_shader_Buffers.prototype = {
	grow: function(s) {
		this.vertex.grow(s.vertex);
		this.fragment.grow(s.fragment);
	}
	,__class__: h3d_shader_Buffers
};
var h3d_shader_ColorAdd = function(color) {
	if(color == null) {
		color = 0;
	}
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	_this.x = (color >> 16 & 255) * 0.00392156862745098;
	_this.y = (color >> 8 & 255) * 0.00392156862745098;
	_this.z = (color & 255) * 0.00392156862745098;
	_this.w = (color >>> 24) * 0.00392156862745098;
};
$hxClasses["h3d.shader.ColorAdd"] = h3d_shader_ColorAdd;
h3d_shader_ColorAdd.__name__ = ["h3d","shader","ColorAdd"];
h3d_shader_ColorAdd.__super__ = hxsl_Shader;
h3d_shader_ColorAdd.prototype = $extend(hxsl_Shader.prototype,{
	get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.color__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_ColorAdd);
		s.shader = this.shader;
		s.color__ = this.color__;
		return s;
	}
	,__class__: h3d_shader_ColorAdd
});
var h3d_shader_ColorKey = function(v) {
	if(v == null) {
		v = 0;
	}
	this.colorKey__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.colorKey__;
	_this.x = (v >> 16 & 255) * 0.00392156862745098;
	_this.y = (v >> 8 & 255) * 0.00392156862745098;
	_this.z = (v & 255) * 0.00392156862745098;
	_this.w = (v >>> 24) * 0.00392156862745098;
};
$hxClasses["h3d.shader.ColorKey"] = h3d_shader_ColorKey;
h3d_shader_ColorKey.__name__ = ["h3d","shader","ColorKey"];
h3d_shader_ColorKey.__super__ = hxsl_Shader;
h3d_shader_ColorKey.prototype = $extend(hxsl_Shader.prototype,{
	get_colorKey: function() {
		return this.colorKey__;
	}
	,set_colorKey: function(_v) {
		return this.colorKey__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.colorKey__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_ColorKey);
		s.shader = this.shader;
		s.colorKey__ = this.colorKey__;
		return s;
	}
	,__class__: h3d_shader_ColorKey
});
var h3d_shader_ColorMatrix = function(m) {
	this.matrix__ = new h3d_Matrix();
	hxsl_Shader.call(this);
	if(m != null) {
		this.matrix__.load(m);
	} else {
		this.matrix__.identity();
	}
};
$hxClasses["h3d.shader.ColorMatrix"] = h3d_shader_ColorMatrix;
h3d_shader_ColorMatrix.__name__ = ["h3d","shader","ColorMatrix"];
h3d_shader_ColorMatrix.__super__ = hxsl_Shader;
h3d_shader_ColorMatrix.prototype = $extend(hxsl_Shader.prototype,{
	get_matrix: function() {
		return this.matrix__;
	}
	,set_matrix: function(_v) {
		return this.matrix__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.matrix__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_ColorMatrix);
		s.shader = this.shader;
		s.matrix__ = this.matrix__;
		return s;
	}
	,__class__: h3d_shader_ColorMatrix
});
var h3d_shader_DirLight = function() {
	this.direction__ = new h3d_Vector();
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	_this.x = 1;
	_this.y = 1;
	_this.z = 1;
	_this.w = 1.;
};
$hxClasses["h3d.shader.DirLight"] = h3d_shader_DirLight;
h3d_shader_DirLight.__name__ = ["h3d","shader","DirLight"];
h3d_shader_DirLight.__super__ = hxsl_Shader;
h3d_shader_DirLight.prototype = $extend(hxsl_Shader.prototype,{
	get_enableSpecular: function() {
		return this.enableSpecular__;
	}
	,set_enableSpecular: function(_v) {
		this.constModified = true;
		return this.enableSpecular__ = _v;
	}
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,get_direction: function() {
		return this.direction__;
	}
	,set_direction: function(_v) {
		return this.direction__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.enableSpecular__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.enableSpecular__;
		case 1:
			return this.color__;
		case 2:
			return this.direction__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_DirLight);
		s.shader = this.shader;
		s.enableSpecular__ = this.enableSpecular__;
		s.color__ = this.color__;
		s.direction__ = this.direction__;
		return s;
	}
	,__class__: h3d_shader_DirLight
});
var h3d_shader_FixedColor = function() {
	this.viewport__ = new h3d_Vector();
	this.colorID__ = new h3d_Vector();
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.FixedColor"] = h3d_shader_FixedColor;
h3d_shader_FixedColor.__name__ = ["h3d","shader","FixedColor"];
h3d_shader_FixedColor.__super__ = hxsl_Shader;
h3d_shader_FixedColor.prototype = $extend(hxsl_Shader.prototype,{
	get_colorID: function() {
		return this.colorID__;
	}
	,set_colorID: function(_v) {
		return this.colorID__ = _v;
	}
	,get_viewport: function() {
		return this.viewport__;
	}
	,set_viewport: function(_v) {
		return this.viewport__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.colorID__;
		case 1:
			return this.viewport__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_FixedColor);
		s.shader = this.shader;
		s.colorID__ = this.colorID__;
		s.viewport__ = this.viewport__;
		return s;
	}
	,__class__: h3d_shader_FixedColor
});
var h3d_shader_LineShader = function(width,lengthScale) {
	if(lengthScale == null) {
		lengthScale = 1.;
	}
	if(width == null) {
		width = 1.5;
	}
	this.width__ = 0;
	this.lengthScale__ = 0;
	hxsl_Shader.call(this);
	this.width__ = width;
	this.lengthScale__ = lengthScale;
};
$hxClasses["h3d.shader.LineShader"] = h3d_shader_LineShader;
h3d_shader_LineShader.__name__ = ["h3d","shader","LineShader"];
h3d_shader_LineShader.__super__ = hxsl_Shader;
h3d_shader_LineShader.prototype = $extend(hxsl_Shader.prototype,{
	get_lengthScale: function() {
		return this.lengthScale__;
	}
	,set_lengthScale: function(_v) {
		return this.lengthScale__ = _v;
	}
	,get_width: function() {
		return this.width__;
	}
	,set_width: function(_v) {
		return this.width__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.lengthScale__;
		case 1:
			return this.width__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_LineShader);
		s.shader = this.shader;
		s.lengthScale__ = this.lengthScale__;
		s.width__ = this.width__;
		return s;
	}
	,__class__: h3d_shader_LineShader
});
var h3d_shader_Manager = function(output) {
	this.shaderCache = hxsl_Cache.get();
	this.globals = new hxsl_Globals();
	this.output = this.shaderCache.allocOutputVars(output);
};
$hxClasses["h3d.shader.Manager"] = h3d_shader_Manager;
h3d_shader_Manager.__name__ = ["h3d","shader","Manager"];
h3d_shader_Manager.prototype = {
	fillRec: function(v,type,out,pos) {
		switch(type[1]) {
		case 3:
			out[pos] = v;
			return 1;
		case 5:
			var n = type[2];
			var v1 = v;
			out[pos++] = v1.x;
			out[pos++] = v1.y;
			switch(n) {
			case 3:
				out[pos++] = v1.z;
				break;
			case 4:
				out[pos++] = v1.z;
				out[pos++] = v1.w;
				break;
			}
			return n;
		case 6:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = 0;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = 0;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = 0;
			return 12;
		case 7:
			var m1 = v;
			out[pos++] = m1._11;
			out[pos++] = m1._21;
			out[pos++] = m1._31;
			out[pos++] = m1._41;
			out[pos++] = m1._12;
			out[pos++] = m1._22;
			out[pos++] = m1._32;
			out[pos++] = m1._42;
			out[pos++] = m1._13;
			out[pos++] = m1._23;
			out[pos++] = m1._33;
			out[pos++] = m1._43;
			out[pos++] = m1._14;
			out[pos++] = m1._24;
			out[pos++] = m1._34;
			out[pos++] = m1._44;
			return 16;
		case 8:
			var m2 = v;
			out[pos++] = m2._11;
			out[pos++] = m2._21;
			out[pos++] = m2._31;
			out[pos++] = m2._41;
			out[pos++] = m2._12;
			out[pos++] = m2._22;
			out[pos++] = m2._32;
			out[pos++] = m2._42;
			out[pos++] = m2._13;
			out[pos++] = m2._23;
			out[pos++] = m2._33;
			out[pos++] = m2._43;
			return 12;
		case 12:
			var vl = type[2];
			var tot = 0;
			var _g = 0;
			while(_g < vl.length) {
				var vv = vl[_g];
				++_g;
				tot += this.fillRec(Reflect.field(v,vv.name),vv.type,out,pos + tot);
			}
			return tot;
		case 14:
			switch(type[2][1]) {
			case 5:
				if(type[2][2] == 4) {
					if(type[2][3][1] == 1) {
						if(type[3][1] == 0) {
							var len = type[3][2];
							var v2 = v;
							var _g1 = 0;
							while(_g1 < len) {
								var n1 = v2[_g1++];
								if(n1 == null) {
									break;
								}
								out[pos++] = n1.x;
								out[pos++] = n1.y;
								out[pos++] = n1.z;
								out[pos++] = n1.w;
							}
							return len * 4;
						} else {
							throw new js__$Boot_HaxeError("assert " + Std.string(type));
						}
					} else if(type[3][1] == 0) {
						var len1 = type[3][2];
						var t = type[2];
						var v3 = v;
						var size = 0;
						var _g11 = 0;
						while(_g11 < len1) {
							var n2 = v3[_g11++];
							if(n2 == null) {
								break;
							}
							size = this.fillRec(n2,t,out,pos);
							pos += size;
						}
						return len1 * size;
					} else {
						throw new js__$Boot_HaxeError("assert " + Std.string(type));
					}
				} else if(type[3][1] == 0) {
					var len2 = type[3][2];
					var t1 = type[2];
					var v4 = v;
					var size1 = 0;
					var _g12 = 0;
					while(_g12 < len2) {
						var n3 = v4[_g12++];
						if(n3 == null) {
							break;
						}
						size1 = this.fillRec(n3,t1,out,pos);
						pos += size1;
					}
					return len2 * size1;
				} else {
					throw new js__$Boot_HaxeError("assert " + Std.string(type));
				}
				break;
			case 8:
				if(type[3][1] == 0) {
					var len3 = type[3][2];
					var v5 = v;
					var _g13 = 0;
					while(_g13 < len3) {
						var m3 = v5[_g13++];
						if(m3 == null) {
							break;
						}
						out[pos++] = m3._11;
						out[pos++] = m3._21;
						out[pos++] = m3._31;
						out[pos++] = m3._41;
						out[pos++] = m3._12;
						out[pos++] = m3._22;
						out[pos++] = m3._32;
						out[pos++] = m3._42;
						out[pos++] = m3._13;
						out[pos++] = m3._23;
						out[pos++] = m3._33;
						out[pos++] = m3._43;
					}
					return len3 * 12;
				} else {
					throw new js__$Boot_HaxeError("assert " + Std.string(type));
				}
				break;
			default:
				if(type[3][1] == 0) {
					var len4 = type[3][2];
					var t2 = type[2];
					var v6 = v;
					var size2 = 0;
					var _g14 = 0;
					while(_g14 < len4) {
						var n4 = v6[_g14++];
						if(n4 == null) {
							break;
						}
						size2 = this.fillRec(n4,t2,out,pos);
						pos += size2;
					}
					return len4 * size2;
				} else {
					throw new js__$Boot_HaxeError("assert " + Std.string(type));
				}
			}
			break;
		default:
			throw new js__$Boot_HaxeError("assert " + Std.string(type));
		}
	}
	,getParamValue: function(p,shaders) {
		if(p.perObjectGlobal != null) {
			var v = this.globals.map.h[p.perObjectGlobal.gid];
			if(v == null) {
				throw new js__$Boot_HaxeError("Missing global value " + p.perObjectGlobal.path);
			}
			return v;
		}
		var si = shaders;
		var n = p.instance;
		while(n-- > 0) si = si.next;
		var v1 = si.s.getParamValue(p.index);
		if(v1 == null) {
			throw new js__$Boot_HaxeError("Missing param value " + Std.string(si.s) + "." + p.name);
		}
		return v1;
	}
	,fillGlobals: function(buf,s) {
		var _gthis = this;
		var buf1 = buf.vertex;
		var s1 = s.vertex;
		var g = s1.globals;
		while(g != null) {
			var v = _gthis.globals.map.h[g.gid];
			if(v == null) {
				if(g.path == "__consts__") {
					_gthis.fillRec(s1.consts,g.type,buf1.globals,g.pos);
					g = g.next;
					continue;
				}
				throw new js__$Boot_HaxeError("Missing global value " + g.path);
			}
			_gthis.fillRec(v,g.type,buf1.globals,g.pos);
			g = g.next;
		}
		var buf2 = buf.fragment;
		var s2 = s.fragment;
		var g1 = s2.globals;
		while(g1 != null) {
			var v1 = _gthis.globals.map.h[g1.gid];
			if(v1 == null) {
				if(g1.path == "__consts__") {
					_gthis.fillRec(s2.consts,g1.type,buf2.globals,g1.pos);
					g1 = g1.next;
					continue;
				}
				throw new js__$Boot_HaxeError("Missing global value " + g1.path);
			}
			_gthis.fillRec(v1,g1.type,buf2.globals,g1.pos);
			g1 = g1.next;
		}
	}
	,fillParams: function(buf,s,shaders) {
		var _gthis = this;
		var buf1 = buf.vertex;
		var s1 = s.vertex;
		var p = s1.params;
		while(p != null) {
			var tmp;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p.perObjectGlobal.path);
				}
				tmp = v;
			} else {
				var si = shaders;
				var n = p.instance;
				while(n-- > 0) si = si.next;
				var v1 = si.s.getParamValue(p.index);
				if(v1 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si.s) + "." + p.name);
				}
				tmp = v1;
			}
			_gthis.fillRec(tmp,p.type,buf1.params,p.pos);
			p = p.next;
		}
		var tid = 0;
		var p1 = s1.textures2D;
		while(p1 != null) {
			var tmp1;
			if(p1.perObjectGlobal != null) {
				var v2 = _gthis.globals.map.h[p1.perObjectGlobal.gid];
				if(v2 == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p1.perObjectGlobal.path);
				}
				tmp1 = v2;
			} else {
				var si1 = shaders;
				var n1 = p1.instance;
				while(n1-- > 0) si1 = si1.next;
				var v3 = si1.s.getParamValue(p1.index);
				if(v3 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si1.s) + "." + p1.name);
				}
				tmp1 = v3;
			}
			var t = tmp1;
			if(t == null) {
				t = h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Manager.hx", lineNumber : 183, className : "h3d.shader.Manager", methodName : "fillParams"});
			}
			buf1.tex[tid++] = t;
			p1 = p1.next;
		}
		var p2 = s1.texturesCube;
		while(p2 != null) {
			var tmp2;
			if(p2.perObjectGlobal != null) {
				var v4 = _gthis.globals.map.h[p2.perObjectGlobal.gid];
				if(v4 == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p2.perObjectGlobal.path);
				}
				tmp2 = v4;
			} else {
				var si2 = shaders;
				var n2 = p2.instance;
				while(n2-- > 0) si2 = si2.next;
				var v5 = si2.s.getParamValue(p2.index);
				if(v5 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si2.s) + "." + p2.name);
				}
				tmp2 = v5;
			}
			var t1 = tmp2;
			if(t1 == null) {
				t1 = h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Manager.hx", lineNumber : 190, className : "h3d.shader.Manager", methodName : "fillParams"});
			}
			buf1.tex[tid++] = t1;
			p2 = p2.next;
		}
		var buf2 = buf.fragment;
		var s2 = s.fragment;
		var p3 = s2.params;
		while(p3 != null) {
			var tmp3;
			if(p3.perObjectGlobal != null) {
				var v6 = _gthis.globals.map.h[p3.perObjectGlobal.gid];
				if(v6 == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p3.perObjectGlobal.path);
				}
				tmp3 = v6;
			} else {
				var si3 = shaders;
				var n3 = p3.instance;
				while(n3-- > 0) si3 = si3.next;
				var v7 = si3.s.getParamValue(p3.index);
				if(v7 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si3.s) + "." + p3.name);
				}
				tmp3 = v7;
			}
			_gthis.fillRec(tmp3,p3.type,buf2.params,p3.pos);
			p3 = p3.next;
		}
		var tid1 = 0;
		var p4 = s2.textures2D;
		while(p4 != null) {
			var tmp4;
			if(p4.perObjectGlobal != null) {
				var v8 = _gthis.globals.map.h[p4.perObjectGlobal.gid];
				if(v8 == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p4.perObjectGlobal.path);
				}
				tmp4 = v8;
			} else {
				var si4 = shaders;
				var n4 = p4.instance;
				while(n4-- > 0) si4 = si4.next;
				var v9 = si4.s.getParamValue(p4.index);
				if(v9 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si4.s) + "." + p4.name);
				}
				tmp4 = v9;
			}
			var t2 = tmp4;
			if(t2 == null) {
				t2 = h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Manager.hx", lineNumber : 183, className : "h3d.shader.Manager", methodName : "fillParams"});
			}
			buf2.tex[tid1++] = t2;
			p4 = p4.next;
		}
		var p5 = s2.texturesCube;
		while(p5 != null) {
			var tmp5;
			if(p5.perObjectGlobal != null) {
				var v10 = _gthis.globals.map.h[p5.perObjectGlobal.gid];
				if(v10 == null) {
					throw new js__$Boot_HaxeError("Missing global value " + p5.perObjectGlobal.path);
				}
				tmp5 = v10;
			} else {
				var si5 = shaders;
				var n5 = p5.instance;
				while(n5-- > 0) si5 = si5.next;
				var v11 = si5.s.getParamValue(p5.index);
				if(v11 == null) {
					throw new js__$Boot_HaxeError("Missing param value " + Std.string(si5.s) + "." + p5.name);
				}
				tmp5 = v11;
			}
			var t3 = tmp5;
			if(t3 == null) {
				t3 = h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Manager.hx", lineNumber : 190, className : "h3d.shader.Manager", methodName : "fillParams"});
			}
			buf2.tex[tid1++] = t3;
			p5 = p5.next;
		}
	}
	,compileShaders: function(shaders) {
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			s.updateConstants(this.globals);
		}
		return this.shaderCache.link(shaders,this.output);
	}
	,__class__: h3d_shader_Manager
};
var h3d_shader_Shadow = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Shadow"] = h3d_shader_Shadow;
h3d_shader_Shadow.__name__ = ["h3d","shader","Shadow"];
h3d_shader_Shadow.__super__ = hxsl_Shader;
h3d_shader_Shadow.prototype = $extend(hxsl_Shader.prototype,{
	get_perPixel: function() {
		return this.perPixel__;
	}
	,set_perPixel: function(_v) {
		this.constModified = true;
		return this.perPixel__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.perPixel__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.perPixel__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_Shadow);
		s.shader = this.shader;
		s.perPixel__ = this.perPixel__;
		return s;
	}
	,__class__: h3d_shader_Shadow
});
var h3d_shader_Skin = function() {
	this.MaxBones__ = 0;
	this.bonesMatrixes__ = [];
	hxsl_Shader.call(this);
	this.constModified = true;
	this.MaxBones__ = 34;
};
$hxClasses["h3d.shader.Skin"] = h3d_shader_Skin;
h3d_shader_Skin.__name__ = ["h3d","shader","Skin"];
h3d_shader_Skin.__super__ = hxsl_Shader;
h3d_shader_Skin.prototype = $extend(hxsl_Shader.prototype,{
	get_bonesMatrixes: function() {
		return this.bonesMatrixes__;
	}
	,set_bonesMatrixes: function(_v) {
		return this.bonesMatrixes__ = _v;
	}
	,get_MaxBones: function() {
		return this.MaxBones__;
	}
	,set_MaxBones: function(_v) {
		this.constModified = true;
		return this.MaxBones__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw new js__$Boot_HaxeError("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.bonesMatrixes__;
		case 1:
			return this.MaxBones__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_Skin);
		s.shader = this.shader;
		s.bonesMatrixes__ = this.bonesMatrixes__;
		s.MaxBones__ = this.MaxBones__;
		return s;
	}
	,__class__: h3d_shader_Skin
});
var h3d_shader_SpecularTexture = function(tex) {
	hxsl_Shader.call(this);
	this.texture__ = tex;
};
$hxClasses["h3d.shader.SpecularTexture"] = h3d_shader_SpecularTexture;
h3d_shader_SpecularTexture.__name__ = ["h3d","shader","SpecularTexture"];
h3d_shader_SpecularTexture.__super__ = hxsl_Shader;
h3d_shader_SpecularTexture.prototype = $extend(hxsl_Shader.prototype,{
	get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.texture__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_SpecularTexture);
		s.shader = this.shader;
		s.texture__ = this.texture__;
		return s;
	}
	,__class__: h3d_shader_SpecularTexture
});
var h3d_shader_Texture = function(tex) {
	this.killAlphaThreshold__ = 0;
	hxsl_Shader.call(this);
	this.texture__ = tex;
	this.killAlphaThreshold__ = h3d_mat_Defaults.defaultKillAlphaThreshold;
};
$hxClasses["h3d.shader.Texture"] = h3d_shader_Texture;
h3d_shader_Texture.__name__ = ["h3d","shader","Texture"];
h3d_shader_Texture.__super__ = hxsl_Shader;
h3d_shader_Texture.prototype = $extend(hxsl_Shader.prototype,{
	get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,get_specularAlpha: function() {
		return this.specularAlpha__;
	}
	,set_specularAlpha: function(_v) {
		this.constModified = true;
		return this.specularAlpha__ = _v;
	}
	,get_killAlphaThreshold: function() {
		return this.killAlphaThreshold__;
	}
	,set_killAlphaThreshold: function(_v) {
		return this.killAlphaThreshold__ = _v;
	}
	,get_killAlpha: function() {
		return this.killAlpha__;
	}
	,set_killAlpha: function(_v) {
		this.constModified = true;
		return this.killAlpha__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		if(this.specularAlpha__) {
			this.constBits |= 2;
		}
		if(this.killAlpha__) {
			this.constBits |= 4;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.additive__;
		case 1:
			return this.texture__;
		case 2:
			return this.specularAlpha__;
		case 3:
			return this.killAlphaThreshold__;
		case 4:
			return this.killAlpha__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_Texture);
		s.shader = this.shader;
		s.additive__ = this.additive__;
		s.texture__ = this.texture__;
		s.specularAlpha__ = this.specularAlpha__;
		s.killAlphaThreshold__ = this.killAlphaThreshold__;
		s.killAlpha__ = this.killAlpha__;
		return s;
	}
	,__class__: h3d_shader_Texture
});
var h3d_shader_UVDelta = function(dx,dy) {
	if(dy == null) {
		dy = 0.;
	}
	if(dx == null) {
		dx = 0.;
	}
	this.uvDelta__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.uvDelta__;
	_this.x = dx;
	_this.y = dy;
	_this.z = 0.;
	_this.w = 1.;
};
$hxClasses["h3d.shader.UVDelta"] = h3d_shader_UVDelta;
h3d_shader_UVDelta.__name__ = ["h3d","shader","UVDelta"];
h3d_shader_UVDelta.__super__ = hxsl_Shader;
h3d_shader_UVDelta.prototype = $extend(hxsl_Shader.prototype,{
	get_uvDelta: function() {
		return this.uvDelta__;
	}
	,set_uvDelta: function(_v) {
		return this.uvDelta__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.uvDelta__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_UVDelta);
		s.shader = this.shader;
		s.uvDelta__ = this.uvDelta__;
		return s;
	}
	,__class__: h3d_shader_UVDelta
});
var h3d_shader_VertexColorAlpha = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.VertexColorAlpha"] = h3d_shader_VertexColorAlpha;
h3d_shader_VertexColorAlpha.__name__ = ["h3d","shader","VertexColorAlpha"];
h3d_shader_VertexColorAlpha.__super__ = hxsl_Shader;
h3d_shader_VertexColorAlpha.prototype = $extend(hxsl_Shader.prototype,{
	get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_VertexColorAlpha);
		s.shader = this.shader;
		s.additive__ = this.additive__;
		return s;
	}
	,__class__: h3d_shader_VertexColorAlpha
});
var h3d_shader_VolumeDecal = function(objectWidth,objectHeight) {
	this.normal__ = new h3d_Vector();
	this.scale__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.normal__;
	_this.x = 0;
	_this.y = 0;
	_this.z = 1;
	_this.w = 1.;
	var _this1 = this.scale__;
	_this1.x = 1 / objectWidth;
	_this1.y = 1 / objectHeight;
	_this1.z = 0.;
	_this1.w = 1.;
};
$hxClasses["h3d.shader.VolumeDecal"] = h3d_shader_VolumeDecal;
h3d_shader_VolumeDecal.__name__ = ["h3d","shader","VolumeDecal"];
h3d_shader_VolumeDecal.__super__ = hxsl_Shader;
h3d_shader_VolumeDecal.prototype = $extend(hxsl_Shader.prototype,{
	get_scale: function() {
		return this.scale__;
	}
	,set_scale: function(_v) {
		return this.scale__ = _v;
	}
	,get_normal: function() {
		return this.normal__;
	}
	,set_normal: function(_v) {
		return this.normal__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.scale__;
		case 1:
			return this.normal__;
		default:
		}
		return null;
	}
	,clone: function() {
		var s = Type.createEmptyInstance(h3d_shader_VolumeDecal);
		s.shader = this.shader;
		s.scale__ = this.scale__;
		s.normal__ = this.normal__;
		return s;
	}
	,__class__: h3d_shader_VolumeDecal
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null?_this.getReserved(s):_this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null?"null":"" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null?"null":"" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null?"null":"" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null?"null":"" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0?"m":"p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null?"null":"" + v2;
			}
			break;
		case 3:
			this.buf.b += v?"t":"f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v.length;
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null?"null":"" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null?"null":"" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					this.serialize(val);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var tmp = v4.keys();
				while(tmp.hasNext()) {
					var k = tmp.next();
					this.buf.b += ":";
					this.buf.b += k == null?"null":"" + k;
					this.serialize(v4.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var tmp1 = v5.keys();
				while(tmp1.hasNext()) {
					var k1 = tmp1.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1.__id__ = id;
					this.serialize(v5.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var tmp2 = v6.keys();
				while(tmp2.hasNext()) {
					var k2 = tmp2.next();
					this.serializeString(k2);
					this.serialize(__map_reserved[k2] != null?v6.getReserved(k2):v6.h[k2]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i1 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					b64 = new Array(length);
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i2 = _g11++;
						b64[i2] = HxOverrides.cca(haxe_Serializer.BASE64,i2);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i1 < max) {
					var b1 = v7.b[i1++];
					var b2 = v7.b[i1++];
					var b3 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i1 == max) {
					var b11 = v7.b[i1++];
					var b21 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i1 == max + 1) {
					var b12 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex?"j":"w");
			this.serializeString(Type.getEnumName(_g[2]));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v.length;
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) this.serialize(v[_g12++]);
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		var x = HxOverrides.substr(this.buf,p1,this.pos - p1);
		return parseFloat(x);
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s] != null) {
					h1.setReserved(s,value);
				} else {
					h1.h[s] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s1 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s1 = decodeURIComponent(s1.split("+").join(" "));
			this.scache.push(s1);
			return s1;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.length) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g1 = 0;
		while(_g1 < len) {
			++_g1;
			this.b[pos++] = value & 255;
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setUint16(pos,v,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() {
	this.crc = -1;
};
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = ["haxe","crypto","Crc32"];
haxe_crypto_Crc32.prototype = {
	'byte': function(b) {
		var tmp = (this.crc ^ b) & 255;
		var _g = 0;
		while(_g < 8) {
			++_g;
			if((tmp & 1) == 1) {
				tmp = tmp >>> 1 ^ -306674912;
			} else {
				tmp >>>= 1;
			}
		}
		this.crc = this.crc >>> 8 ^ tmp;
	}
	,update: function(b,pos,len) {
		var b1 = b.b.bufferValue;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var tmp = (this.crc ^ b1.bytes[_g1++]) & 255;
			var _g2 = 0;
			while(_g2 < 8) {
				++_g2;
				if((tmp & 1) == 1) {
					tmp = tmp >>> 1 ^ -306674912;
				} else {
					tmp >>>= 1;
				}
			}
			this.crc = this.crc >>> 8 ^ tmp;
		}
	}
	,get: function() {
		return this.crc ^ -1;
	}
	,__class__: haxe_crypto_Crc32
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	return m.hex(m.doEncode(haxe_crypto_Md5.str2blks(s)));
};
haxe_crypto_Md5.str2blks = function(str) {
	var str1 = haxe_io_Bytes.ofString(str);
	var nblk = (str1.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g1 = 0;
	while(_g1 < blksSize) blks[_g1++] = 0;
	var i = 0;
	var max = str1.length;
	var l = max * 8;
	while(i < max) {
		blks[i >> 2] |= str1.b[i] << (l + i) % 4 * 8;
		++i;
	}
	blks[i >> 2] |= 128 << (l + i) % 4 * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		return (a >>> 1 | b >>> 1) << 1 | (a & 1 | b & 1);
	}
	,bitXOR: function(a,b) {
		return (a >>> 1 ^ b >>> 1) << 1 | a & 1 ^ b & 1;
	}
	,bitAND: function(a,b) {
		return (a >>> 1 & b >>> 1) << 1 | a & 1 & (b & 1);
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		return (x >> 16) + (y >> 16) + (lsw >> 16) << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += "0123456789abcdef".charAt(num >> j * 8 + 4 & 15) + "0123456789abcdef".charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		while(_g1 < to) {
			var j = _g1++;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height);
		} else if(c < 0) {
			return this.balance(this.setLoop(k,v,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.setLoop(k,v,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null?0:l._height;
		var hr = r == null?0:r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var tmp = _this == null?0:_this._height;
			var _this1 = l.right;
			if(tmp >= (_this1 == null?0:_this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var tmp1 = _this2 == null?0:_this2._height;
			var _this3 = r.left;
			if(tmp1 > (_this3 == null?0:_this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var tmp1 = _this == null?0:_this._height;
		var _this1 = this.right;
		if(tmp1 > (_this1 == null?0:_this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = ["haxe","ds","GenericCell"];
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = ["haxe","ds","GenericStack"];
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe","ds","_Vector","Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.toArray = function(this1) {
	var a = [];
	var len = this1.length;
	var _g1 = 0;
	while(_g1 < len) {
		var i = _g1++;
		a[i] = this1[i];
	}
	return a;
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	addInt32: function(v) {
		this.b.push(v & 255);
		this.b.push(v >> 8 & 255);
		this.b.push(v >> 16 & 255);
		this.b.push(v >>> 24);
	}
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				if(len < 0 || len > buf.length) {
					throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
				}
				var b2 = buf.b;
				var _g1 = 0;
				while(_g1 < len) total.b.push(b2[_g1++]);
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
			} else throw(e);
		}
		return total.getBytes();
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian?ch2 | ch1 << 8:ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,flush: function() {
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeInt16: function(x) {
		if(x < -32768 || x >= 32768) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeUInt16(x & 65535);
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) _this.b.push(b2[_g1++]);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	return (f < 0?-2147483648:0) | exp + 127 << 23 | Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		i64.low = sig | 0;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | (sig / 4294967296.0 | 0);
	}
	return i64;
};
var haxe_macro_Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe_macro_Binop.OpAdd = ["OpAdd",0];
haxe_macro_Binop.OpAdd.toString = $estr;
haxe_macro_Binop.OpAdd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMult = ["OpMult",1];
haxe_macro_Binop.OpMult.toString = $estr;
haxe_macro_Binop.OpMult.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpDiv = ["OpDiv",2];
haxe_macro_Binop.OpDiv.toString = $estr;
haxe_macro_Binop.OpDiv.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpSub = ["OpSub",3];
haxe_macro_Binop.OpSub.toString = $estr;
haxe_macro_Binop.OpSub.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssign = ["OpAssign",4];
haxe_macro_Binop.OpAssign.toString = $estr;
haxe_macro_Binop.OpAssign.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpEq = ["OpEq",5];
haxe_macro_Binop.OpEq.toString = $estr;
haxe_macro_Binop.OpEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpNotEq = ["OpNotEq",6];
haxe_macro_Binop.OpNotEq.toString = $estr;
haxe_macro_Binop.OpNotEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGt = ["OpGt",7];
haxe_macro_Binop.OpGt.toString = $estr;
haxe_macro_Binop.OpGt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGte = ["OpGte",8];
haxe_macro_Binop.OpGte.toString = $estr;
haxe_macro_Binop.OpGte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLt = ["OpLt",9];
haxe_macro_Binop.OpLt.toString = $estr;
haxe_macro_Binop.OpLt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLte = ["OpLte",10];
haxe_macro_Binop.OpLte.toString = $estr;
haxe_macro_Binop.OpLte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAnd = ["OpAnd",11];
haxe_macro_Binop.OpAnd.toString = $estr;
haxe_macro_Binop.OpAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpOr = ["OpOr",12];
haxe_macro_Binop.OpOr.toString = $estr;
haxe_macro_Binop.OpOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpXor = ["OpXor",13];
haxe_macro_Binop.OpXor.toString = $estr;
haxe_macro_Binop.OpXor.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe_macro_Binop.OpBoolAnd.toString = $estr;
haxe_macro_Binop.OpBoolAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolOr = ["OpBoolOr",15];
haxe_macro_Binop.OpBoolOr.toString = $estr;
haxe_macro_Binop.OpBoolOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShl = ["OpShl",16];
haxe_macro_Binop.OpShl.toString = $estr;
haxe_macro_Binop.OpShl.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShr = ["OpShr",17];
haxe_macro_Binop.OpShr.toString = $estr;
haxe_macro_Binop.OpShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpUShr = ["OpUShr",18];
haxe_macro_Binop.OpUShr.toString = $estr;
haxe_macro_Binop.OpUShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMod = ["OpMod",19];
haxe_macro_Binop.OpMod.toString = $estr;
haxe_macro_Binop.OpMod.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe_macro_Binop; $x.toString = $estr; return $x; };
haxe_macro_Binop.OpInterval = ["OpInterval",21];
haxe_macro_Binop.OpInterval.toString = $estr;
haxe_macro_Binop.OpInterval.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpArrow = ["OpArrow",22];
haxe_macro_Binop.OpArrow.toString = $estr;
haxe_macro_Binop.OpArrow.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.__empty_constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow];
var haxe_macro_Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe_macro_Unop.OpIncrement = ["OpIncrement",0];
haxe_macro_Unop.OpIncrement.toString = $estr;
haxe_macro_Unop.OpIncrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpDecrement = ["OpDecrement",1];
haxe_macro_Unop.OpDecrement.toString = $estr;
haxe_macro_Unop.OpDecrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNot = ["OpNot",2];
haxe_macro_Unop.OpNot.toString = $estr;
haxe_macro_Unop.OpNot.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNeg = ["OpNeg",3];
haxe_macro_Unop.OpNeg.toString = $estr;
haxe_macro_Unop.OpNeg.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNegBits = ["OpNegBits",4];
haxe_macro_Unop.OpNegBits.toString = $estr;
haxe_macro_Unop.OpNegBits.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.__empty_constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits];
var haxe_xml__$Fast_NodeAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.NodeAccess"] = haxe_xml__$Fast_NodeAccess;
haxe_xml__$Fast_NodeAccess.__name__ = ["haxe","xml","_Fast","NodeAccess"];
haxe_xml__$Fast_NodeAccess.prototype = {
	resolve: function(name) {
		var x = this.__x.elementsNamed(name).next();
		if(x == null) {
			var xname;
			if(this.__x.nodeType == Xml.Document) {
				xname = "Document";
			} else {
				var _this = this.__x;
				if(_this.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _this.nodeType);
				}
				xname = _this.nodeName;
			}
			throw new js__$Boot_HaxeError(xname + " is missing element " + name);
		}
		return new haxe_xml_Fast(x);
	}
	,__class__: haxe_xml__$Fast_NodeAccess
};
var haxe_xml__$Fast_AttribAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.AttribAccess"] = haxe_xml__$Fast_AttribAccess;
haxe_xml__$Fast_AttribAccess.__name__ = ["haxe","xml","_Fast","AttribAccess"];
haxe_xml__$Fast_AttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) {
			throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
		}
		var v = this.__x.get(name);
		if(v == null) {
			var _this = this.__x;
			if(_this.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _this.nodeType);
			}
			throw new js__$Boot_HaxeError(_this.nodeName + " is missing attribute " + name);
		}
		return v;
	}
	,__class__: haxe_xml__$Fast_AttribAccess
};
var haxe_xml__$Fast_HasAttribAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.HasAttribAccess"] = haxe_xml__$Fast_HasAttribAccess;
haxe_xml__$Fast_HasAttribAccess.__name__ = ["haxe","xml","_Fast","HasAttribAccess"];
haxe_xml__$Fast_HasAttribAccess.prototype = {
	resolve: function(name) {
		if(this.__x.nodeType == Xml.Document) {
			throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
		}
		return this.__x.exists(name);
	}
	,__class__: haxe_xml__$Fast_HasAttribAccess
};
var haxe_xml__$Fast_HasNodeAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.HasNodeAccess"] = haxe_xml__$Fast_HasNodeAccess;
haxe_xml__$Fast_HasNodeAccess.__name__ = ["haxe","xml","_Fast","HasNodeAccess"];
haxe_xml__$Fast_HasNodeAccess.prototype = {
	__class__: haxe_xml__$Fast_HasNodeAccess
};
var haxe_xml__$Fast_NodeListAccess = function(x) {
	this.__x = x;
};
$hxClasses["haxe.xml._Fast.NodeListAccess"] = haxe_xml__$Fast_NodeListAccess;
haxe_xml__$Fast_NodeListAccess.__name__ = ["haxe","xml","_Fast","NodeListAccess"];
haxe_xml__$Fast_NodeListAccess.prototype = {
	resolve: function(name) {
		var l = new List();
		var tmp = this.__x.elementsNamed(name);
		while(tmp.hasNext()) l.add(new haxe_xml_Fast(tmp.next()));
		return l;
	}
	,__class__: haxe_xml__$Fast_NodeListAccess
};
var haxe_xml_Fast = function(x) {
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Invalid nodeType " + x.nodeType);
	}
	this.x = x;
	this.node = new haxe_xml__$Fast_NodeAccess(x);
	this.nodes = new haxe_xml__$Fast_NodeListAccess(x);
	this.att = new haxe_xml__$Fast_AttribAccess(x);
	this.has = new haxe_xml__$Fast_HasAttribAccess(x);
	this.hasNode = new haxe_xml__$Fast_HasNodeAccess(x);
};
$hxClasses["haxe.xml.Fast"] = haxe_xml_Fast;
haxe_xml_Fast.__name__ = ["haxe","xml","Fast"];
haxe_xml_Fast.prototype = {
	get_name: function() {
		if(this.x.nodeType == Xml.Document) {
			return "Document";
		} else {
			var _this = this.x;
			if(_this.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _this.nodeType);
			}
			return _this.nodeName;
		}
	}
	,get_innerData: function() {
		var _this = this.x;
		if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this.nodeType);
		}
		var it = HxOverrides.iter(_this.children);
		if(!it.hasNext()) {
			throw new js__$Boot_HaxeError(this.get_name() + " does not have data");
		}
		var v = it.next();
		var n = it.next();
		if(n != null) {
			var tmp;
			if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData) {
				if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + v.nodeType);
				}
				tmp = StringTools.trim(v.nodeValue) == "";
			} else {
				tmp = false;
			}
			if(tmp) {
				var n2 = it.next();
				var tmp1;
				if(n2 != null) {
					var tmp2;
					if(n2.nodeType == Xml.PCData) {
						if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) {
							throw new js__$Boot_HaxeError("Bad node type, unexpected " + n2.nodeType);
						}
						tmp2 = StringTools.trim(n2.nodeValue) == "";
					} else {
						tmp2 = false;
					}
					if(tmp2) {
						tmp1 = it.next() == null;
					} else {
						tmp1 = false;
					}
				} else {
					tmp1 = true;
				}
				if(tmp1) {
					if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, unexpected " + n.nodeType);
					}
					return n.nodeValue;
				}
			}
			throw new js__$Boot_HaxeError(this.get_name() + " does not only have data");
		}
		if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) {
			throw new js__$Boot_HaxeError(this.get_name() + " does not have data");
		}
		if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + v.nodeType);
		}
		return v.nodeValue;
	}
	,get_innerHTML: function() {
		var s_b = "";
		var _this = this.x;
		if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this.nodeType);
		}
		var tmp = HxOverrides.iter(_this.children);
		while(tmp.hasNext()) s_b += Std.string(haxe_xml_Printer.print(tmp.next()));
		return s_b;
	}
	,get_elements: function() {
		var it = this.x.elements();
		return { hasNext : $bind(it,it.hasNext), next : function() {
			var x = it.next();
			if(x == null) {
				return null;
			}
			return new haxe_xml_Fast(x);
		}};
	}
	,__class__: haxe_xml_Fast
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	while(_g1 < position) {
		var c = xml.charCodeAt(_g1++);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(tmp)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + tmp + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.addChild(Xml.createProcessingInstruction(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createCData(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					buf.b += String.fromCharCode(s.charCodeAt(1) == 120?Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)):Std.parseInt(HxOverrides.substr(s,1,s.length - 1)));
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null?_this.existsReserved(s):_this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						buf.b += Std.string(__map_reserved[s] != null?_this1.getReserved(s):_this1.h[s]);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = ["haxe","xml","Printer"];
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
			}
			this.output.b += Std.string(value.nodeName);
			var tmp = value.attributes();
			while(tmp.hasNext()) {
				var attribute = tmp.next();
				this.output.b += Std.string(" " + attribute + "=\"");
				this.output.b += Std.string(StringTools.htmlEscape(value.get(attribute),true));
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
				}
				var tmp1 = HxOverrides.iter(value.children);
				while(tmp1.hasNext()) this.writeNode(tmp1.next(),this.pretty?tabs + "\t":tabs);
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				this.output.b += Std.string(tabs + StringTools.htmlEscape(nodeValue));
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string(StringTools.trim(value.nodeValue));
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var commentContent = value.nodeValue;
			commentContent = commentContent.replace(new RegExp("[\n\r\t]+","g".split("u").join("")),"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null?"null":"" + tabs;
			this.output.b += Std.string(StringTools.trim(commentContent));
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
			}
			var tmp2 = HxOverrides.iter(value.children);
			while(tmp2.hasNext()) this.writeNode(tmp2.next(),tabs);
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
		}
		var tmp = HxOverrides.iter(value.children);
		while(tmp.hasNext()) {
			var child = tmp.next();
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + child.nodeType);
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hxd_App = function(engine) {
	var _gthis = this;
	if(engine != null) {
		this.engine = engine;
		engine.onReady = $bind(this,this.setup);
		haxe_Timer.delay($bind(this,this.setup),0);
	} else {
		hxd_System.start(function() {
			engine = new h3d_Engine();
			_gthis.engine = engine;
			engine.onReady = $bind(_gthis,_gthis.setup);
			engine.init();
		});
	}
};
$hxClasses["hxd.App"] = hxd_App;
hxd_App.__name__ = ["hxd","App"];
hxd_App.prototype = {
	get_wantedFPS: function() {
		return hxd_Timer.wantedFPS;
	}
	,set_wantedFPS: function(fps) {
		return hxd_Timer.wantedFPS = fps;
	}
	,onResize: function() {
	}
	,setup: function() {
		var _gthis = this;
		var initDone = false;
		this.engine.onResized = function() {
			if(_gthis.s2d == null) {
				return;
			}
			_gthis.s2d.checkResize();
			if(initDone) {
				_gthis.onResize();
			}
		};
		this.s3d = new h3d_scene_Scene();
		this.s2d = new h2d_Scene();
		this.s3d.addPass(this.s2d);
		this.sevents = new hxd_SceneEvents();
		this.sevents.addScene(this.s2d);
		this.sevents.addScene(this.s3d);
		this.loadAssets(function() {
			initDone = true;
			_gthis.init();
			hxd_Timer.skip();
			_gthis.mainLoop();
			hxd_System.setLoop($bind(_gthis,_gthis.mainLoop));
			hxd_Key.initialize();
		});
	}
	,dispose: function() {
		this.isDisposed = true;
		this.s2d.dispose();
		this.s3d.dispose();
		this.sevents.dispose();
	}
	,loadAssets: function(onLoaded) {
		onLoaded();
	}
	,init: function() {
	}
	,mainLoop: function() {
		hxd_Timer.update();
		this.sevents.checkEvents();
		if(this.isDisposed) {
			return;
		}
		this.update(hxd_Timer.tmod);
		if(this.isDisposed) {
			return;
		}
		this.s2d.setElapsedTime(hxd_Timer.tmod / 60);
		this.s3d.setElapsedTime(hxd_Timer.tmod / 60);
		if(hxd_Key.isDown(17) && hxd_Key.isPressed(123)) {
			var driver = this.engine.driver;
			var old = driver.logEnable;
			var log = new h3d_impl_LogDriver(driver);
			log.logLines = [];
			this.engine.setDriver(log);
			try {
				this.engine.render(this.s3d);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				log.logLines.push(Std.string(e));
			}
			driver.logEnable = old;
			this.engine.setDriver(driver);
			hxd_File.saveBytes("log.txt",haxe_io_Bytes.ofString(log.logLines.join("\n")));
		} else {
			var value = this.engine.driver;
			var scnDriver = (value instanceof h3d_impl_ScnDriver)?value:null;
			if(hxd_Key.isDown(17) && hxd_Key.isDown(122)) {
				if(scnDriver == null) {
					this.engine.setDriver(new h3d_impl_ScnDriver(this.engine.driver));
					this.engine.mem.onContextLost();
					this.engine.onContextLost();
					this.engine.resize(this.engine.width,this.engine.height);
					this.engine.render(this.s3d);
				}
			} else if(scnDriver != null) {
				this.engine.setDriver(scnDriver.getDriver());
				hxd_File.saveBytes("record.scn",scnDriver.getBytes());
			}
			this.engine.render(this.s3d);
		}
	}
	,update: function(dt) {
	}
	,__class__: hxd_App
};
var hxd_BitmapData = function(width,height) {
	if(!(width == -101 && height == -102)) {
		var canvas = window.document.createElement("canvas");
		canvas.width = width;
		canvas.height = height;
		this.ctx = canvas.getContext("2d",null);
	}
};
$hxClasses["hxd.BitmapData"] = hxd_BitmapData;
hxd_BitmapData.__name__ = ["hxd","BitmapData"];
hxd_BitmapData.notImplemented = function() {
	throw new js__$Boot_HaxeError("Not implemented");
};
hxd_BitmapData.fromNative = function(data) {
	var b = new hxd_BitmapData(-101,-102);
	b.ctx = data;
	return b;
};
hxd_BitmapData.prototype = {
	clear: function(color) {
		this.fill(0,0,this.ctx.canvas.width,this.ctx.canvas.height,color);
	}
	,fill: function(x,y,width,height,color) {
		this.ctx.fillStyle = "rgba(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ", " + (color >>> 24) / 255 + ")";
		this.ctx.fillRect(x,y,width,height);
	}
	,draw: function(x,y,src,srcX,srcY,width,height,blendMode) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,drawScaled: function(x,y,width,height,src,srcX,srcY,srcWidth,srcHeight,blendMode,smooth) {
		if(smooth == null) {
			smooth = true;
		}
		if(blendMode == null) {
			blendMode = h2d_BlendMode.Alpha;
		}
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,line: function(x0,y0,x1,y1,color) {
		var dx = x1 - x0;
		var dy = y1 - y0;
		if(dx == 0) {
			if(y1 < y0) {
				var tmp = y0;
				y0 = y1;
				y1 = tmp;
			}
			var _g1 = y0;
			var _g = y1 + 1;
			while(_g1 < _g) this.setPixel(x0,_g1++,color);
		} else if(dy == 0) {
			if(x1 < x0) {
				var tmp1 = x0;
				x0 = x1;
				x1 = tmp1;
			}
			var _g11 = x0;
			var _g2 = x1 + 1;
			while(_g11 < _g2) this.setPixel(_g11++,y0,color);
		} else {
			throw new js__$Boot_HaxeError("TODO : brensenham line");
		}
	}
	,dispose: function() {
		this.ctx = null;
		this.pixel = null;
	}
	,clone: function() {
		return this.sub(0,0,this.ctx.canvas.width,this.ctx.canvas.height);
	}
	,sub: function(x,y,w,h) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,lock: function() {
		if(this.lockImage == null) {
			this.lockImage = this.ctx.getImageData(0,0,this.ctx.canvas.width,this.ctx.canvas.height);
		}
	}
	,unlock: function() {
		if(this.lockImage != null) {
			this.ctx.putImageData(this.lockImage,0,0);
			this.lockImage = null;
		}
	}
	,getPixel: function(x,y) {
		var i = this.lockImage;
		var a;
		if(i != null) {
			a = x + y * i.width << 2;
		} else {
			a = 0;
			i = this.ctx.getImageData(x,y,1,1);
		}
		return i.data[a] << 16 | i.data[a | 1] << 8 | i.data[a | 2] | i.data[a | 3] << 24;
	}
	,setPixel: function(x,y,c) {
		var i = this.lockImage;
		if(i != null) {
			var a = x + y * i.width << 2;
			i.data[a] = c >> 16 & 255;
			i.data[a | 1] = c >> 8 & 255;
			i.data[a | 2] = c & 255;
			i.data[a | 3] = c >>> 24 & 255;
			return;
		}
		var i1 = this.pixel;
		if(i1 == null) {
			i1 = this.ctx.createImageData(1,1);
			this.pixel = i1;
		}
		i1.data[0] = c >> 16 & 255;
		i1.data[1] = c >> 8 & 255;
		i1.data[2] = c & 255;
		i1.data[3] = c >>> 24 & 255;
		this.ctx.putImageData(i1,x,y);
	}
	,get_width: function() {
		return this.ctx.canvas.width;
	}
	,get_height: function() {
		return this.ctx.canvas.height;
	}
	,getPixels: function() {
		var w = this.ctx.canvas.width;
		var h = this.ctx.canvas.height;
		return new hxd_Pixels(w,h,haxe_io_Bytes.ofData(this.ctx.getImageData(0,0,w,h).data.buffer),hxd_PixelFormat.RGBA);
	}
	,setPixels: function(pixels) {
		if(pixels.width != this.ctx.canvas.width || pixels.height != this.ctx.canvas.height) {
			throw new js__$Boot_HaxeError("Invalid pixels size");
		}
		pixels.setFlip(false);
		var img = this.ctx.createImageData(pixels.width,pixels.height);
		pixels.convert(hxd_PixelFormat.RGBA);
		var _g1 = 0;
		var _g = pixels.width * pixels.height * 4;
		while(_g1 < _g) {
			var i = _g1++;
			img.data[i] = pixels.bytes.b[i];
		}
		this.ctx.putImageData(img,0,0);
	}
	,toNative: function() {
		return this.ctx;
	}
	,toPNG: function() {
		var pixels = this.getPixels();
		var png = pixels.toPNG();
		pixels.dispose();
		return png;
	}
	,__class__: hxd_BitmapData
};
var hxd_Charset = function() {
	var _gthis = this;
	this.map = new haxe_ds_IntMap();
	var _g = 1;
	while(_g < 94) {
		var i = _g++;
		_gthis.map.h[65281 + i] = 33 + i;
	}
	var _g1 = 192;
	while(_g1 < 199) _gthis.map.h[_g1++] = 65;
	var _g11 = 224;
	while(_g11 < 231) _gthis.map.h[_g11++] = 97;
	var _g12 = 200;
	while(_g12 < 204) _gthis.map.h[_g12++] = 69;
	var _g13 = 232;
	while(_g13 < 236) _gthis.map.h[_g13++] = 101;
	var _g14 = 204;
	while(_g14 < 208) _gthis.map.h[_g14++] = 73;
	var _g15 = 236;
	while(_g15 < 240) _gthis.map.h[_g15++] = 105;
	var _g16 = 210;
	while(_g16 < 215) _gthis.map.h[_g16++] = 79;
	var _g17 = 242;
	while(_g17 < 247) _gthis.map.h[_g17++] = 111;
	var _g18 = 217;
	while(_g18 < 221) _gthis.map.h[_g18++] = 85;
	var _g19 = 249;
	while(_g19 < 253) _gthis.map.h[_g19++] = 117;
	_gthis.map.h[199] = 67;
	_gthis.map.h[231] = 67;
	_gthis.map.h[208] = 68;
	_gthis.map.h[222] = 100;
	_gthis.map.h[209] = 78;
	_gthis.map.h[241] = 110;
	_gthis.map.h[221] = 89;
	_gthis.map.h[253] = 121;
	_gthis.map.h[255] = 121;
	_gthis.map.h[12288] = 32;
	_gthis.map.h[160] = 32;
	_gthis.map.h[171] = 34;
	_gthis.map.h[187] = 34;
	_gthis.map.h[8220] = 34;
	_gthis.map.h[8221] = 34;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8217] = 39;
	_gthis.map.h[180] = 39;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8249] = 60;
	_gthis.map.h[8250] = 62;
};
$hxClasses["hxd.Charset"] = hxd_Charset;
hxd_Charset.__name__ = ["hxd","Charset"];
hxd_Charset.getDefault = function() {
	if(hxd_Charset.inst == null) {
		hxd_Charset.inst = new hxd_Charset();
	}
	return hxd_Charset.inst;
};
hxd_Charset.prototype = {
	resolveChar: function(code,glyphs) {
		var c = code;
		while(c != null) {
			var g = glyphs.h[c];
			if(g != null) {
				return g;
			}
			c = this.map.h[c];
		}
		return null;
	}
	,isSpace: function(code) {
		if(code != 32) {
			return code == 12288;
		} else {
			return true;
		}
	}
	,isBreakChar: function(code) {
		switch(code) {
		case 33:case 44:case 46:case 58:case 63:
			return true;
		case 12289:case 12290:case 12539:
			return true;
		case 65281:case 65292:case 65294:case 65306:case 65311:
			return true;
		default:
			return this.isSpace(code);
		}
	}
	,__class__: hxd_Charset
};
var hxd_EventKind = $hxClasses["hxd.EventKind"] = { __ename__ : ["hxd","EventKind"], __constructs__ : ["EPush","ERelease","EMove","EOver","EOut","EWheel","EFocus","EFocusLost","EKeyDown","EKeyUp","EReleaseOutside"] };
hxd_EventKind.EPush = ["EPush",0];
hxd_EventKind.EPush.toString = $estr;
hxd_EventKind.EPush.__enum__ = hxd_EventKind;
hxd_EventKind.ERelease = ["ERelease",1];
hxd_EventKind.ERelease.toString = $estr;
hxd_EventKind.ERelease.__enum__ = hxd_EventKind;
hxd_EventKind.EMove = ["EMove",2];
hxd_EventKind.EMove.toString = $estr;
hxd_EventKind.EMove.__enum__ = hxd_EventKind;
hxd_EventKind.EOver = ["EOver",3];
hxd_EventKind.EOver.toString = $estr;
hxd_EventKind.EOver.__enum__ = hxd_EventKind;
hxd_EventKind.EOut = ["EOut",4];
hxd_EventKind.EOut.toString = $estr;
hxd_EventKind.EOut.__enum__ = hxd_EventKind;
hxd_EventKind.EWheel = ["EWheel",5];
hxd_EventKind.EWheel.toString = $estr;
hxd_EventKind.EWheel.__enum__ = hxd_EventKind;
hxd_EventKind.EFocus = ["EFocus",6];
hxd_EventKind.EFocus.toString = $estr;
hxd_EventKind.EFocus.__enum__ = hxd_EventKind;
hxd_EventKind.EFocusLost = ["EFocusLost",7];
hxd_EventKind.EFocusLost.toString = $estr;
hxd_EventKind.EFocusLost.__enum__ = hxd_EventKind;
hxd_EventKind.EKeyDown = ["EKeyDown",8];
hxd_EventKind.EKeyDown.toString = $estr;
hxd_EventKind.EKeyDown.__enum__ = hxd_EventKind;
hxd_EventKind.EKeyUp = ["EKeyUp",9];
hxd_EventKind.EKeyUp.toString = $estr;
hxd_EventKind.EKeyUp.__enum__ = hxd_EventKind;
hxd_EventKind.EReleaseOutside = ["EReleaseOutside",10];
hxd_EventKind.EReleaseOutside.toString = $estr;
hxd_EventKind.EReleaseOutside.__enum__ = hxd_EventKind;
hxd_EventKind.__empty_constructs__ = [hxd_EventKind.EPush,hxd_EventKind.ERelease,hxd_EventKind.EMove,hxd_EventKind.EOver,hxd_EventKind.EOut,hxd_EventKind.EWheel,hxd_EventKind.EFocus,hxd_EventKind.EFocusLost,hxd_EventKind.EKeyDown,hxd_EventKind.EKeyUp,hxd_EventKind.EReleaseOutside];
var hxd_Event = function(k,x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.button = 0;
	this.kind = k;
	this.relX = x;
	this.relY = y;
};
$hxClasses["hxd.Event"] = hxd_Event;
hxd_Event.__name__ = ["hxd","Event"];
hxd_Event.prototype = {
	toString: function() {
		return Std.string(this.kind) + "[" + (this.relX | 0) + "," + (this.relY | 0) + "]";
	}
	,__class__: hxd_Event
};
var hxd_File = function() { };
$hxClasses["hxd.File"] = hxd_File;
hxd_File.__name__ = ["hxd","File"];
hxd_File.browse = function(onSelect,options) {
	if(options == null) {
		options = { };
	}
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.saveAs = function(dataContent,options) {
	if(options == null) {
		options = { };
	}
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.exists = function(path) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File["delete"] = function(path) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.listDirectory = function(path) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.getBytes = function(path) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.saveBytes = function(path,data) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.saveBytesAt = function(path,data,dataPos,dataSize,filePos) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.load = function(path,onLoad,onError) {
	if(onError == null) {
		onError = function(_) {
		};
	}
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.createDirectory = function(path) {
	throw new js__$Boot_HaxeError("Not supported");
};
hxd_File.applicationPath = function() {
	throw new js__$Boot_HaxeError("Not supported");
};
var hxd__$FloatBuffer_InnerIterator = function(b) {
	this.b = b;
	this.len = this.b.length;
	this.pos = 0;
};
$hxClasses["hxd._FloatBuffer.InnerIterator"] = hxd__$FloatBuffer_InnerIterator;
hxd__$FloatBuffer_InnerIterator.__name__ = ["hxd","_FloatBuffer","InnerIterator"];
hxd__$FloatBuffer_InnerIterator.prototype = {
	hasNext: function() {
		return this.pos < this.len;
	}
	,next: function() {
		return this.b[this.pos++];
	}
	,__class__: hxd__$FloatBuffer_InnerIterator
};
var hxd__$FloatBuffer_FloatBuffer_$Impl_$ = {};
$hxClasses["hxd._FloatBuffer.FloatBuffer_Impl_"] = hxd__$FloatBuffer_FloatBuffer_$Impl_$;
hxd__$FloatBuffer_FloatBuffer_$Impl_$.__name__ = ["hxd","_FloatBuffer","FloatBuffer_Impl_"];
hxd__$FloatBuffer_FloatBuffer_$Impl_$._new = function(length) {
	if(length == null) {
		length = 0;
	}
	var this1 = new Array(length);
	return this1;
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.push = function(this1,v) {
	this1.push(v);
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.grow = function(this1,v) {
	while(this1.length < v) this1.push(0.);
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.resize = function(this1,v) {
	while(this1.length < v) this1.push(0.);
	if(this1.length > v) {
		this1.splice(v,this1.length - v);
	}
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.arrayRead = function(this1,key) {
	return this1[key];
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.getNative = function(this1) {
	return this1;
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.iterator = function(this1) {
	return new hxd__$FloatBuffer_InnerIterator(this1);
};
hxd__$FloatBuffer_FloatBuffer_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var hxd__$IndexBuffer_InnerIterator = function(b) {
	this.b = b;
	this.len = this.b.length;
	this.pos = 0;
};
$hxClasses["hxd._IndexBuffer.InnerIterator"] = hxd__$IndexBuffer_InnerIterator;
hxd__$IndexBuffer_InnerIterator.__name__ = ["hxd","_IndexBuffer","InnerIterator"];
hxd__$IndexBuffer_InnerIterator.prototype = {
	hasNext: function() {
		return this.pos < this.len;
	}
	,next: function() {
		return this.b[this.pos++];
	}
	,__class__: hxd__$IndexBuffer_InnerIterator
};
var hxd__$IndexBuffer_IndexBuffer_$Impl_$ = {};
$hxClasses["hxd._IndexBuffer.IndexBuffer_Impl_"] = hxd__$IndexBuffer_IndexBuffer_$Impl_$;
hxd__$IndexBuffer_IndexBuffer_$Impl_$.__name__ = ["hxd","_IndexBuffer","IndexBuffer_Impl_"];
hxd__$IndexBuffer_IndexBuffer_$Impl_$._new = function(length) {
	if(length == null) {
		length = 0;
	}
	var this1 = new Array(length);
	return this1;
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.push = function(this1,v) {
	this1.push(v);
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.grow = function(this1,v) {
	while(this1.length < v) this1.push(0);
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.arrayRead = function(this1,key) {
	return this1[key];
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.arrayWrite = function(this1,key,value) {
	return this1[key] = value;
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.getNative = function(this1) {
	return this1;
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.iterator = function(this1) {
	return new hxd__$IndexBuffer_InnerIterator(this1);
};
hxd__$IndexBuffer_IndexBuffer_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var hxd_Key = function() { };
$hxClasses["hxd.Key"] = hxd_Key;
hxd_Key.__name__ = ["hxd","Key"];
hxd_Key.isDown = function(code) {
	return hxd_Key.keyPressed[code] > 0;
};
hxd_Key.getFrame = function() {
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	return h3d_Engine.CURRENT.frameCount + 1;
};
hxd_Key.isPressed = function(code) {
	var tmp = hxd_Key.keyPressed[code];
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	return tmp == h3d_Engine.CURRENT.frameCount + 1;
};
hxd_Key.isReleased = function(code) {
	var tmp = hxd_Key.keyPressed[code];
	if(h3d_Engine.CURRENT == null) {
		throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
	}
	return tmp == -(h3d_Engine.CURRENT.frameCount + 1);
};
hxd_Key.initialize = function() {
	if(hxd_Key.initDone) {
		hxd_Key.dispose();
	}
	hxd_Key.initDone = true;
	hxd_Key.keyPressed = [];
	hxd_Stage.getInstance().addEventTarget(hxd_Key.onEvent);
};
hxd_Key.dispose = function() {
	if(hxd_Key.initDone) {
		hxd_Stage.getInstance().removeEventTarget(hxd_Key.onEvent);
		hxd_Key.initDone = false;
		hxd_Key.keyPressed = [];
	}
};
hxd_Key.onEvent = function(e) {
	switch(e.kind[1]) {
	case 0:
		var tmp = e.button;
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		hxd_Key.keyPressed[tmp] = h3d_Engine.CURRENT.frameCount + 1;
		break;
	case 1:
		var tmp1 = e.button;
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		hxd_Key.keyPressed[tmp1] = -(h3d_Engine.CURRENT.frameCount + 1);
		break;
	case 5:
		var tmp2 = e.wheelDelta > 0?3:2;
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		hxd_Key.keyPressed[tmp2] = h3d_Engine.CURRENT.frameCount + 1;
		break;
	case 8:
		var tmp3 = e.keyCode;
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		hxd_Key.keyPressed[tmp3] = h3d_Engine.CURRENT.frameCount + 1;
		break;
	case 9:
		var tmp4 = e.keyCode;
		if(h3d_Engine.CURRENT == null) {
			throw new js__$Boot_HaxeError("no current context, please do this operation after engine init/creation");
		}
		hxd_Key.keyPressed[tmp4] = -(h3d_Engine.CURRENT.frameCount + 1);
		break;
	default:
	}
};
var hxd_Math = function() { };
$hxClasses["hxd.Math"] = hxd_Math;
hxd_Math.__name__ = ["hxd","Math"];
hxd_Math.get_POSITIVE_INFINITY = function() {
	return Infinity;
};
hxd_Math.get_NEGATIVE_INFINITY = function() {
	return -Infinity;
};
hxd_Math.get_NaN = function() {
	return NaN;
};
hxd_Math.isNaN = function(v) {
	return isNaN(v);
};
hxd_Math.fmt = function(v) {
	var neg;
	if(v < 0) {
		neg = -1.0;
		v = -v;
	} else {
		neg = 1.0;
	}
	if(isNaN(v) || !isFinite(v)) {
		return v;
	}
	var digits = 4 - Math.log(v) / Math.log(10) | 0;
	if(digits < 1) {
		digits = 1;
	} else if(digits >= 10) {
		return 0.;
	}
	var exp = Math.pow(10,digits);
	return Math.floor(v * exp + .49999) * neg / exp;
};
hxd_Math.floor = function(f) {
	return Math.floor(f);
};
hxd_Math.ceil = function(f) {
	return Math.ceil(f);
};
hxd_Math.round = function(f) {
	return Math.round(f);
};
hxd_Math.clamp = function(f,min,max) {
	if(max == null) {
		max = 1.;
	}
	if(min == null) {
		min = 0.;
	}
	if(f < min) {
		return min;
	} else if(f > max) {
		return max;
	} else {
		return f;
	}
};
hxd_Math.pow = function(v,p) {
	return Math.pow(v,p);
};
hxd_Math.cos = function(f) {
	return Math.cos(f);
};
hxd_Math.sin = function(f) {
	return Math.sin(f);
};
hxd_Math.tan = function(f) {
	return Math.tan(f);
};
hxd_Math.acos = function(f) {
	return Math.acos(f);
};
hxd_Math.asin = function(f) {
	return Math.asin(f);
};
hxd_Math.atan = function(f) {
	return Math.atan(f);
};
hxd_Math.sqrt = function(f) {
	return Math.sqrt(f);
};
hxd_Math.invSqrt = function(f) {
	return 1. / Math.sqrt(f);
};
hxd_Math.atan2 = function(dy,dx) {
	return Math.atan2(dy,dx);
};
hxd_Math.abs = function(f) {
	if(f < 0) {
		return -f;
	} else {
		return f;
	}
};
hxd_Math.max = function(a,b) {
	if(a < b) {
		return b;
	} else {
		return a;
	}
};
hxd_Math.min = function(a,b) {
	if(a > b) {
		return b;
	} else {
		return a;
	}
};
hxd_Math.iabs = function(i) {
	if(i < 0) {
		return -i;
	} else {
		return i;
	}
};
hxd_Math.imax = function(a,b) {
	if(a < b) {
		return b;
	} else {
		return a;
	}
};
hxd_Math.imin = function(a,b) {
	if(a > b) {
		return b;
	} else {
		return a;
	}
};
hxd_Math.iclamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
hxd_Math.lerp = function(a,b,k) {
	return a + k * (b - a);
};
hxd_Math.bitCount = function(v) {
	v -= v >> 1 & 1431655765;
	v = (v & 858993459) + (v >> 2 & 858993459);
	return (v + (v >> 4) & 252645135) * 16843009 >> 24;
};
hxd_Math.distanceSq = function(dx,dy,dz) {
	if(dz == null) {
		dz = 0.;
	}
	return dx * dx + dy * dy + dz * dz;
};
hxd_Math.distance = function(dx,dy,dz) {
	if(dz == null) {
		dz = 0.;
	}
	return Math.sqrt(dx * dx + dy * dy + dz * dz);
};
hxd_Math.colorLerp = function(c1,c2,k) {
	return ((c1 >>> 24) * (1 - k) + (c2 >>> 24) * k | 0) << 24 | ((c1 >> 16 & 255) * (1 - k) + (c2 >> 16 & 255) * k | 0) << 16 | ((c1 >> 8 & 255) * (1 - k) + (c2 >> 8 & 255) * k | 0) << 8 | ((c1 & 255) * (1 - k) + (c2 & 255) * k | 0);
};
hxd_Math.angle = function(da) {
	da %= 6.2831853071795862;
	if(da > 3.14159265358979323) {
		da -= 6.2831853071795862;
	} else if(da <= -3.1415926535897931) {
		da += 6.2831853071795862;
	}
	return da;
};
hxd_Math.angleLerp = function(a,b,k) {
	var da = b - a;
	da %= 6.2831853071795862;
	if(da > 3.14159265358979323) {
		da -= 6.2831853071795862;
	} else if(da <= -3.1415926535897931) {
		da += 6.2831853071795862;
	}
	return a + da * k;
};
hxd_Math.angleMove = function(a,b,max) {
	var da = b - a;
	da %= 6.2831853071795862;
	if(da > 3.14159265358979323) {
		da -= 6.2831853071795862;
	} else if(da <= -3.1415926535897931) {
		da += 6.2831853071795862;
	}
	var da1 = da;
	if(da1 > -max && da1 < max) {
		return b;
	} else {
		return a + (da1 < 0?-max:max);
	}
};
hxd_Math.shuffle = function(a) {
	var len = a.length;
	var _g1 = 0;
	while(_g1 < len) {
		++_g1;
		var x = Std.random(len);
		var y = Std.random(len);
		var tmp = a[x];
		a[x] = a[y];
		a[y] = tmp;
	}
};
hxd_Math.random = function(max) {
	if(max == null) {
		max = 1.0;
	}
	return Math.random() * max;
};
hxd_Math.srand = function(max) {
	if(max == null) {
		max = 1.0;
	}
	return (Math.random() - 0.5) * (max * 2);
};
hxd_Math.b2f = function(v) {
	return (v & 255) * 0.0039215686274509803921568627451;
};
hxd_Math.f2b = function(v) {
	return (v < 0.?0.:v > 1.?1.:v) * 255.0 | 0;
};
hxd_Math.umod = function(value,modulo) {
	var r = value % modulo;
	if(r >= 0) {
		return r;
	} else {
		return r + modulo;
	}
};
hxd_Math.ufmod = function(value,modulo) {
	var r = value % modulo;
	if(r >= 0) {
		return r;
	} else {
		return r + modulo;
	}
};
var hxd_Flags = $hxClasses["hxd.Flags"] = { __ename__ : ["hxd","Flags"], __constructs__ : ["ReadOnly","AlphaPremultiplied","FlipY"] };
hxd_Flags.ReadOnly = ["ReadOnly",0];
hxd_Flags.ReadOnly.toString = $estr;
hxd_Flags.ReadOnly.__enum__ = hxd_Flags;
hxd_Flags.AlphaPremultiplied = ["AlphaPremultiplied",1];
hxd_Flags.AlphaPremultiplied.toString = $estr;
hxd_Flags.AlphaPremultiplied.__enum__ = hxd_Flags;
hxd_Flags.FlipY = ["FlipY",2];
hxd_Flags.FlipY.toString = $estr;
hxd_Flags.FlipY.__enum__ = hxd_Flags;
hxd_Flags.__empty_constructs__ = [hxd_Flags.ReadOnly,hxd_Flags.AlphaPremultiplied,hxd_Flags.FlipY];
var hxd__$Pixels_PixelsARGB_$Impl_$ = {};
$hxClasses["hxd._Pixels.PixelsARGB_Impl_"] = hxd__$Pixels_PixelsARGB_$Impl_$;
hxd__$Pixels_PixelsARGB_$Impl_$.__name__ = ["hxd","_Pixels","PixelsARGB_Impl_"];
hxd__$Pixels_PixelsARGB_$Impl_$.getPixel = function(this1,x,y) {
	var v = this1.bytes.getInt32((x + y * this1.width << 2) + this1.offset);
	return v >>> 24 | v >> 8 & 65280 | v << 8 & 16711680 | v << 24;
};
hxd__$Pixels_PixelsARGB_$Impl_$.setPixel = function(this1,x,y,v) {
	this1.bytes.setInt32((x + y * this1.width << 2) + this1.offset,v >>> 24 | v >> 8 & 65280 | v << 8 & 16711680 | v << 24);
};
hxd__$Pixels_PixelsARGB_$Impl_$.fromPixels = function(p) {
	p.convert(hxd_PixelFormat.ARGB);
	p.setFlip(false);
	return p;
};
var hxd__$Pixels_Channel_$Impl_$ = {};
$hxClasses["hxd._Pixels.Channel_Impl_"] = hxd__$Pixels_Channel_$Impl_$;
hxd__$Pixels_Channel_$Impl_$.__name__ = ["hxd","_Pixels","Channel_Impl_"];
hxd__$Pixels_Channel_$Impl_$.toInt = function(this1) {
	return this1;
};
var hxd_Pixels = function(width,height,bytes,format,offset) {
	if(offset == null) {
		offset = 0;
	}
	this.width = width;
	this.height = height;
	this.bytes = bytes;
	this.set_format(format);
	this.offset = offset;
};
$hxClasses["hxd.Pixels"] = hxd_Pixels;
hxd_Pixels.__name__ = ["hxd","Pixels"];
hxd_Pixels.switchEndian = function(v) {
	return v >>> 24 | v >> 8 & 65280 | v << 8 & 16711680 | v << 24;
};
hxd_Pixels.switchBR = function(v) {
	return v & -16711936 | v << 16 & 16711680 | v >> 16 & 255;
};
hxd_Pixels.bytesPerPixel = function(format) {
	switch(format[1]) {
	case 0:case 1:case 2:
		return 4;
	case 3:
		return 8;
	case 4:
		return 16;
	case 5:
		return 1;
	}
};
hxd_Pixels.getChannelOffset = function(format,channel) {
	switch(format[1]) {
	case 0:
		return [1,2,3,0][channel];
	case 1:
		return [2,1,0,3][channel];
	case 2:
		return channel;
	case 3:
		return channel * 2;
	case 4:
		return channel * 4;
	case 5:
		if(channel == 3) {
			return 0;
		} else {
			return -1;
		}
		break;
	}
};
hxd_Pixels.alloc = function(width,height,format) {
	return new hxd_Pixels(width,height,hxd_impl_Tmp.getBytes(width * height * hxd_Pixels.bytesPerPixel(format)),format);
};
hxd_Pixels.prototype = {
	set_format: function(fmt) {
		this.format = fmt;
		this.bpp = hxd_Pixels.bytesPerPixel(fmt);
		return fmt;
	}
	,invalidFormat: function() {
		throw new js__$Boot_HaxeError("Unsupported format for this operation : " + Std.string(this.format));
	}
	,sub: function(x,y,width,height) {
		if(x < 0 || y < 0 || x + width > this.width || y + height >= this.height) {
			throw new js__$Boot_HaxeError("Pixels.sub() outside bounds");
		}
		var out = hxd_impl_Tmp.getBytes(width * height * this.bpp);
		var stride = width * this.bpp;
		var outP = 0;
		var _g1 = 0;
		while(_g1 < height) {
			var y1 = y + _g1++;
			out.blit(outP,this.bytes,(x + ((this.flags & 4) != 0?this.height - 1 - y1:y1) * this.width) * this.bpp + this.offset,stride);
			outP += stride;
		}
		return new hxd_Pixels(width,height,out,this.format);
	}
	,yflip: function(y) {
		if((this.flags & 4) != 0) {
			return this.height - 1 - y;
		} else {
			return y;
		}
	}
	,blit: function(x,y,src,srcX,srcY,width,height) {
		if(x < 0 || y < 0 || x + width > this.width || y + height > this.height) {
			throw new js__$Boot_HaxeError("Pixels.blit() outside bounds");
		}
		if(srcX < 0 || srcX < 0 || srcX + width > src.width || srcY + height > src.height) {
			throw new js__$Boot_HaxeError("Pixels.blit() outside src bounds");
		}
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
		src.convert(this.format);
		var stride = width * this.bpp;
		var _g1 = 0;
		while(_g1 < height) {
			var dy = _g1++;
			var y1 = dy + srcY;
			var srcP = (srcX + ((src.flags & 4) != 0?src.height - 1 - y1:y1) * src.width) * this.bpp + src.offset;
			var y2 = dy + y;
			this.bytes.blit((x + ((this.flags & 4) != 0?this.height - 1 - y2:y2) * this.width) * this.bpp + this.offset,src.bytes,srcP,stride);
		}
	}
	,clear: function(color) {
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
		if(color == 0) {
			this.bytes.fill(this.offset,this.width * this.height * this.bpp,0);
			return;
		}
		switch(this.format[1]) {
		case 0:
			color = color >>> 24 | color >> 8 & 65280 | color << 8 & 16711680 | color << 24;
			break;
		case 1:
			break;
		case 2:
			color = color & -16711936 | color << 16 & 16711680 | color >> 16 & 255;
			break;
		default:
			this.invalidFormat();
		}
		var p = this.offset;
		var _g2 = 0;
		var _g1 = this.width * this.height;
		while(_g2 < _g1) {
			++_g2;
			this.bytes.setInt32(p,color);
			p += 4;
		}
	}
	,toVector: function() {
		var length = this.width * this.height;
		var vec = new Array(length);
		var idx = 0;
		var p = this.offset;
		var dl = 0;
		if((this.flags & 1 << hxd_Flags.FlipY[1]) != 0) {
			p += (this.height - 1) * this.width * this.bpp;
			dl = -this.width * 2 * this.bpp;
		}
		switch(this.format[1]) {
		case 0:
			var _g1 = 0;
			var _g = this.height;
			while(_g1 < _g) {
				var y = _g1++;
				var _g3 = 0;
				var _g2 = this.width;
				while(_g3 < _g2) {
					var x = _g3++;
					var v = this.bytes.getInt32(p);
					vec[idx++] = v >>> 24 | v >> 8 & 65280 | v << 8 & 16711680 | v << 24;
					p += 4;
				}
				p += dl;
			}
			break;
		case 1:
			var _g11 = 0;
			var _g4 = this.height;
			while(_g11 < _g4) {
				var y1 = _g11++;
				var _g31 = 0;
				var _g21 = this.width;
				while(_g31 < _g21) {
					var x1 = _g31++;
					vec[idx++] = this.bytes.getInt32(p);
					p += 4;
				}
				p += dl;
			}
			break;
		case 2:
			var _g12 = 0;
			var _g5 = this.height;
			while(_g12 < _g5) {
				var y2 = _g12++;
				var _g32 = 0;
				var _g22 = this.width;
				while(_g32 < _g22) {
					var x2 = _g32++;
					var v1 = this.bytes.getInt32(p);
					vec[idx++] = v1 & -16711936 | v1 << 16 & 16711680 | v1 >> 16 & 255;
					p += 4;
				}
				p += dl;
			}
			break;
		default:
			this.invalidFormat();
		}
		return vec;
	}
	,makeSquare: function(copy) {
		var w = this.width;
		var h = this.height;
		var tw = w == 0?0:1;
		var th = h == 0?0:1;
		while(tw < w) tw <<= 1;
		while(th < h) th <<= 1;
		if(w == tw && h == th) {
			return this;
		}
		var out = hxd_impl_Tmp.getBytes(tw * th * 4);
		var p = 0;
		var b = this.offset;
		var _g1 = 0;
		while(_g1 < h) {
			++_g1;
			out.blit(p,this.bytes,b,w * 4);
			p += w * 4;
			b += w * 4;
			var _g3 = 0;
			var _g2 = tw - w;
			while(_g3 < _g2) {
				++_g3;
				out.setInt32(p,0);
				p += 4;
			}
		}
		var _g11 = 0;
		var _g = (th - h) * tw;
		while(_g11 < _g) {
			++_g11;
			out.setInt32(p,0);
			p += 4;
		}
		if(copy) {
			return new hxd_Pixels(tw,th,out,this.format);
		}
		if((this.flags & 1) == 0) {
			hxd_impl_Tmp.saveBytes(this.bytes);
		}
		this.bytes = out;
		this.width = tw;
		this.height = th;
		return this;
	}
	,copyInner: function() {
		var old = this.bytes;
		this.bytes = hxd_impl_Tmp.getBytes(this.width * this.height * 4);
		this.bytes.blit(0,old,this.offset,this.width * this.height * 4);
		this.offset = 0;
		this.flags &= 268435454;
	}
	,willChange: function() {
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
	}
	,setFlip: function(b) {
		if(b == null) {
			b = false;
		}
		if((this.flags & 4) != 0 == b) {
			return;
		}
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
		if(b) {
			this.flags |= 4;
		} else {
			this.flags &= 268435451;
		}
		var stride = this.width * this.bpp;
		var _g1 = 0;
		var _g = this.height >> 1;
		while(_g1 < _g) {
			var y = _g1++;
			var p1 = y * stride;
			var p2 = (this.height - 1 - y) * stride;
			var _g3 = 0;
			var _g2 = stride >> 2;
			while(_g3 < _g2) {
				++_g3;
				var a = this.bytes.getInt32(p1);
				this.bytes.setInt32(p1,this.bytes.getInt32(p2));
				this.bytes.setInt32(p2,a);
				p1 += 4;
				p2 += 4;
			}
		}
	}
	,convert: function(target) {
		if(this.format == target) {
			return;
		}
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
		switch(this.format[1]) {
		case 0:
			switch(target[1]) {
			case 1:
				hxd_impl_Memory.select(this.bytes);
				var _g1 = 0;
				var _g = this.width * this.height;
				while(_g1 < _g) {
					var p = (_g1++ << 2) + this.offset;
					var a = hxd_impl_Memory.current.b[p];
					var r = hxd_impl_Memory.current.b[p + 1];
					var g = hxd_impl_Memory.current.b[p + 2];
					hxd_impl_Memory.current.b[p] = hxd_impl_Memory.current.b[p + 3] & 255;
					hxd_impl_Memory.current.b[p + 1] = g & 255;
					hxd_impl_Memory.current.b[p + 2] = r & 255;
					hxd_impl_Memory.current.b[p + 3] = a & 255;
				}
				hxd_impl_Memory.end();
				break;
			case 2:
				hxd_impl_Memory.select(this.bytes);
				var _g11 = 0;
				var _g2 = this.width * this.height;
				while(_g11 < _g2) {
					var p1 = (_g11++ << 2) + this.offset;
					var a1 = hxd_impl_Memory.current.b[p1];
					hxd_impl_Memory.current.b[p1] = hxd_impl_Memory.current.b[p1 + 1] & 255;
					hxd_impl_Memory.current.b[p1 + 1] = hxd_impl_Memory.current.b[p1 + 2] & 255;
					hxd_impl_Memory.current.b[p1 + 2] = hxd_impl_Memory.current.b[p1 + 3] & 255;
					hxd_impl_Memory.current.b[p1 + 3] = a1 & 255;
				}
				hxd_impl_Memory.end();
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot convert from " + Std.string(this.format) + " to " + Std.string(target));
			}
			break;
		case 1:
			switch(target[1]) {
			case 0:
				hxd_impl_Memory.select(this.bytes);
				var _g12 = 0;
				var _g3 = this.width * this.height;
				while(_g12 < _g3) {
					var p2 = (_g12++ << 2) + this.offset;
					var a2 = hxd_impl_Memory.current.b[p2];
					var r1 = hxd_impl_Memory.current.b[p2 + 1];
					var g1 = hxd_impl_Memory.current.b[p2 + 2];
					hxd_impl_Memory.current.b[p2] = hxd_impl_Memory.current.b[p2 + 3] & 255;
					hxd_impl_Memory.current.b[p2 + 1] = g1 & 255;
					hxd_impl_Memory.current.b[p2 + 2] = r1 & 255;
					hxd_impl_Memory.current.b[p2 + 3] = a2 & 255;
				}
				hxd_impl_Memory.end();
				break;
			case 2:
				hxd_impl_Memory.select(this.bytes);
				var _g13 = 0;
				var _g4 = this.width * this.height;
				while(_g13 < _g4) {
					var p3 = (_g13++ << 2) + this.offset;
					var b = hxd_impl_Memory.current.b[p3];
					hxd_impl_Memory.current.b[p3] = hxd_impl_Memory.current.b[p3 + 2] & 255;
					hxd_impl_Memory.current.b[p3 + 2] = b & 255;
				}
				hxd_impl_Memory.end();
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot convert from " + Std.string(this.format) + " to " + Std.string(target));
			}
			break;
		case 2:
			if(target[1] == 1) {
				hxd_impl_Memory.select(this.bytes);
				var _g14 = 0;
				var _g5 = this.width * this.height;
				while(_g14 < _g5) {
					var p4 = (_g14++ << 2) + this.offset;
					var b1 = hxd_impl_Memory.current.b[p4];
					hxd_impl_Memory.current.b[p4] = hxd_impl_Memory.current.b[p4 + 2] & 255;
					hxd_impl_Memory.current.b[p4 + 2] = b1 & 255;
				}
				hxd_impl_Memory.end();
			} else {
				throw new js__$Boot_HaxeError("Cannot convert from " + Std.string(this.format) + " to " + Std.string(target));
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot convert from " + Std.string(this.format) + " to " + Std.string(target));
		}
		this.set_format(target);
	}
	,getPixel: function(x,y) {
		var p = (x + ((this.flags & 4) != 0?this.height - 1 - y:y) * this.width) * this.bpp + this.offset;
		switch(this.format[1]) {
		case 0:
			var v = this.bytes.getInt32(p);
			return v >>> 24 | v >> 8 & 65280 | v << 8 & 16711680 | v << 24;
		case 1:
			return this.bytes.getInt32(p);
		case 2:
			var v1 = this.bytes.getInt32(p);
			return v1 & -16711936 | v1 << 16 & 16711680 | v1 >> 16 & 255;
		default:
			this.invalidFormat();
			return 0;
		}
	}
	,setPixel: function(x,y,color) {
		var p = (x + ((this.flags & 4) != 0?this.height - 1 - y:y) * this.width) * this.bpp + this.offset;
		if((this.flags & 1) != 0) {
			this.copyInner();
		}
		switch(this.format[1]) {
		case 0:
			this.bytes.setInt32(p,color >>> 24 | color >> 8 & 65280 | color << 8 & 16711680 | color << 24);
			break;
		case 1:
			this.bytes.setInt32(p,color);
			break;
		case 2:
			this.bytes.setInt32(p,color & -16711936 | color << 16 & 16711680 | color >> 16 & 255);
			break;
		default:
			this.invalidFormat();
		}
	}
	,dispose: function() {
		if(this.bytes != null) {
			if((this.flags & 1) == 0) {
				hxd_impl_Tmp.saveBytes(this.bytes);
			}
			this.bytes = null;
		}
	}
	,toPNG: function() {
		var png;
		if(this.format[1] == 0) {
			png = format_png_Tools.build32ARGB(this.width,this.height,this.bytes);
		} else {
			this.convert(hxd_PixelFormat.BGRA);
			png = format_png_Tools.build32BGRA(this.width,this.height,this.bytes);
		}
		var o = new haxe_io_BytesOutput();
		new format_png_Writer(o).write(png);
		return o.getBytes();
	}
	,clone: function() {
		var p = new hxd_Pixels(this.width,this.height,null,this.format);
		p.flags = this.flags;
		p.flags &= 268435454;
		if(this.bytes != null) {
			var size = this.width * this.height * this.bpp;
			p.bytes = hxd_impl_Tmp.getBytes(size);
			p.bytes.blit(0,this.bytes,this.offset,size);
		}
		return p;
	}
	,__class__: hxd_Pixels
};
var hxd_Res = function() { };
$hxClasses["hxd.Res"] = hxd_Res;
hxd_Res.__name__ = ["hxd","Res"];
hxd_Res.load = function(name) {
	return hxd_Res.get_loader().load(name);
};
hxd_Res.get_loader = function() {
	return hxd_res_Loader.currentInstance;
};
hxd_Res.set_loader = function(l) {
	return hxd_res_Loader.currentInstance = l;
};
var hxd_SceneEvents = function() {
	this.onOut = new hxd_Event(hxd_EventKind.EOut);
	this.fakeMove = new hxd_Event(hxd_EventKind.EMove);
	this.focusLost = new hxd_Event(hxd_EventKind.EFocusLost);
	this.lastTouch = 0;
	this.mouseY = -1.;
	this.mouseX = -1.;
	this.scenes = [];
	this.pendingEvents = [];
	this.pushList = [];
	hxd_Stage.getInstance().addEventTarget($bind(this,this.onEvent));
};
$hxClasses["hxd.SceneEvents"] = hxd_SceneEvents;
hxd_SceneEvents.__name__ = ["hxd","SceneEvents"];
hxd_SceneEvents.prototype = {
	onRemove: function(i) {
		if(i == this.currentFocus) {
			this.currentFocus = null;
		}
		if(i == this.currentOver) {
			this.currentOver = null;
			hxd_System.setCursor(hxd_Cursor.Default);
		}
		HxOverrides.remove(this.pushList,i);
	}
	,addScene: function(s,index) {
		s.setEvents(this);
		if(index == null) {
			this.scenes.push(s);
		} else {
			this.scenes.splice(index,0,s);
		}
	}
	,removeScene: function(s) {
		if(HxOverrides.remove(this.scenes,s)) {
			s.setEvents(null);
		}
	}
	,dispose: function() {
		hxd_Stage.getInstance().removeEventTarget($bind(this,this.onEvent));
	}
	,focus: function(i) {
		if(this.currentFocus == i) {
			return;
		}
		if(i == null) {
			this.blur();
			return;
		}
		if(this.currentFocus != null) {
			this.blur();
			if(this.currentFocus != null) {
				return;
			}
		}
		var e = new hxd_Event(hxd_EventKind.EFocus);
		i.handleEvent(e);
		if(!e.cancel) {
			this.currentFocus = i;
		}
	}
	,blur: function() {
		if(this.currentFocus == null) {
			return;
		}
		this.focusLost.cancel = false;
		this.currentFocus.handleEvent(this.focusLost);
		if(!this.focusLost.cancel) {
			this.currentFocus = null;
		}
	}
	,emitEvent: function(event) {
		var oldX = event.relX;
		var oldY = event.relY;
		var handled = false;
		var checkOver = false;
		var checkPush = false;
		var cancelFocus = false;
		switch(event.kind[1]) {
		case 0:
			cancelFocus = true;
			checkPush = true;
			break;
		case 1:
			checkPush = true;
			break;
		case 2:
			checkOver = true;
			break;
		case 5:case 8:case 9:
			if(this.currentFocus != null) {
				event.relX = event.relY = 0;
				this.currentFocus.handleEvent(event);
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					return;
				}
			}
			break;
		default:
		}
		var _g1 = 0;
		var _g2 = this.scenes;
		while(_g1 < _g2.length) {
			var s = _g2[_g1];
			++_g1;
			var last = null;
			while(true) {
				var i = s.handleEvent(event,last);
				if(i == null) {
					break;
				}
				if(checkOver) {
					if(this.currentOver != i) {
						this.onOut.cancel = false;
						if(this.currentOver != null) {
							this.currentOver.handleEvent(this.onOut);
						}
						if(!this.onOut.cancel) {
							var old = event.propagate;
							event.kind = hxd_EventKind.EOver;
							event.cancel = false;
							i.handleEvent(event);
							if(event.cancel) {
								this.currentOver = null;
							} else {
								this.currentOver = i;
								checkOver = false;
							}
							event.kind = hxd_EventKind.EMove;
							event.cancel = false;
							event.propagate = old;
						}
					} else {
						checkOver = false;
					}
				} else {
					if(checkPush) {
						if(event.kind == hxd_EventKind.EPush) {
							this.pushList.push(i);
						} else {
							HxOverrides.remove(this.pushList,i);
						}
					}
					if(cancelFocus && i == this.currentFocus) {
						cancelFocus = false;
					}
				}
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					handled = true;
					break;
				}
				last = i;
				event.propagate = false;
			}
			if(handled) {
				break;
			}
		}
		if(cancelFocus && this.currentFocus != null) {
			this.blur();
		}
		if(checkOver && this.currentOver != null) {
			this.onOut.cancel = false;
			this.currentOver.handleEvent(this.onOut);
			if(!this.onOut.cancel) {
				this.currentOver = null;
			}
		}
		if(!handled && event != this.fakeMove) {
			if(event.kind == hxd_EventKind.EPush) {
				this.pushList.push(null);
			} else if(event.kind == hxd_EventKind.ERelease) {
				HxOverrides.remove(this.pushList,null);
			}
			this.dispatchListeners(event);
		}
		if(event.kind == hxd_EventKind.ERelease && this.pushList.length > 0) {
			var _g11 = 0;
			var _g21 = this.pushList;
			while(_g11 < _g21.length) {
				var i1 = _g21[_g11];
				++_g11;
				if(i1 == null) {
					this.dispatchListeners(event);
				} else {
					var s1 = i1.getInteractiveScene();
					if(s1 == null) {
						continue;
					}
					event.kind = hxd_EventKind.EReleaseOutside;
					s1.dispatchEvent(event,i1);
					event.kind = hxd_EventKind.ERelease;
					event.relX = oldX;
					event.relY = oldY;
				}
			}
			this.pushList = [];
		}
	}
	,checkEvents: function() {
		var old = this.pendingEvents;
		var checkMoved = false;
		if(old.length > 0) {
			this.pendingEvents = [];
			var _g = 0;
			while(_g < old.length) {
				var e = old[_g];
				++_g;
				var ox = e.relX;
				var oy = e.relY;
				switch(e.kind[1]) {
				case 0:case 1:
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				case 2:
					checkMoved = true;
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				default:
				}
				if(this.currentDrag != null && (this.currentDrag.ref == null || this.currentDrag.ref == e.touchId)) {
					this.currentDrag.f(e);
					e.relX = ox;
					e.relY = oy;
					if(e.cancel) {
						continue;
					}
				}
				this.emitEvent(e);
			}
		}
		if(!checkMoved && this.currentDrag == null) {
			this.fakeMove.relX = this.mouseX;
			this.fakeMove.relY = this.mouseY;
			this.fakeMove.touchId = this.lastTouch;
			this.fakeMove.cancel = false;
			this.fakeMove.propagate = false;
			this.emitEvent(this.fakeMove);
		}
	}
	,startDrag: function(f,onCancel,refEvent) {
		if(this.currentDrag != null && this.currentDrag.onCancel != null) {
			this.currentDrag.onCancel();
		}
		this.currentDrag = { f : f, ref : refEvent == null?null:refEvent.touchId, onCancel : onCancel};
	}
	,stopDrag: function() {
		this.currentDrag = null;
	}
	,getFocus: function() {
		return this.currentFocus;
	}
	,onEvent: function(e) {
		this.pendingEvents.push(e);
	}
	,dispatchListeners: function(event) {
		var ox = event.relX;
		var oy = event.relY;
		event.propagate = true;
		event.cancel = false;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.dispatchListeners(event);
			event.relX = ox;
			event.relY = oy;
			if(!event.propagate) {
				break;
			}
		}
	}
	,__class__: hxd_SceneEvents
};
var hxd_Stage = function() {
	this.curMouseY = 0.;
	this.curMouseX = 0.;
	var _gthis = this;
	this.eventTargets = new List();
	this.resizeEvents = new List();
	this.canvas = hxd_Stage.getCanvas();
	this.canvasPos = this.canvas.getBoundingClientRect();
	window.addEventListener("mousedown",$bind(this,this.onMouseDown));
	window.addEventListener("mousemove",$bind(this,this.onMouseMove));
	window.addEventListener("mouseup",$bind(this,this.onMouseUp));
	window.addEventListener("mousewheel",$bind(this,this.onMouseWheel));
	window.addEventListener("keydown",$bind(this,this.onKeyDown));
	window.addEventListener("keyup",$bind(this,this.onKeyUp));
	this.canvas.addEventListener("mousedown",function(e) {
		_gthis.onMouseDown(e);
		e.stopPropagation();
		e.preventDefault();
	});
	this.canvas.oncontextmenu = function(e1) {
		e1.stopPropagation();
		e1.preventDefault();
		return false;
	};
	var curW = this.get_width();
	var curH = this.get_height();
	var t0 = new haxe_Timer(100);
	t0.run = function() {
		_gthis.canvasPos = _gthis.canvas.getBoundingClientRect();
		var cw = _gthis.get_width();
		var ch = _gthis.get_height();
		if(curW != cw || curH != ch) {
			curW = cw;
			curH = ch;
			_gthis.onResize(null);
		}
	};
};
$hxClasses["hxd.Stage"] = hxd_Stage;
hxd_Stage.__name__ = ["hxd","Stage"];
hxd_Stage.getCanvas = function() {
	var canvas = window.document.getElementById("webgl");
	if(canvas == null) {
		throw new js__$Boot_HaxeError("Missing canvas#webgl");
	}
	return canvas;
};
hxd_Stage.getInstance = function() {
	if(hxd_Stage.inst == null) {
		hxd_Stage.inst = new hxd_Stage();
	}
	return hxd_Stage.inst;
};
hxd_Stage.prototype = {
	onClose: function() {
		return true;
	}
	,event: function(e) {
		var _g_head = this.eventTargets.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val(e);
		}
	}
	,addEventTarget: function(et) {
		this.eventTargets.add(et);
	}
	,removeEventTarget: function(et) {
		this.eventTargets.remove(et);
	}
	,addResizeEvent: function(f) {
		this.resizeEvents.push(f);
	}
	,removeResizeEvent: function(f) {
		this.resizeEvents.remove(f);
	}
	,onResize: function(e) {
		var _g_head = this.resizeEvents.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			val();
		}
	}
	,setFullScreen: function(v) {
	}
	,get_width: function() {
		return Math.round(this.canvasPos.width * window.devicePixelRatio);
	}
	,get_height: function() {
		return Math.round(this.canvasPos.height * window.devicePixelRatio);
	}
	,get_mouseX: function() {
		return Math.round((this.curMouseX - this.canvasPos.left) * window.devicePixelRatio);
	}
	,get_mouseY: function() {
		return Math.round((this.curMouseY - this.canvasPos.top) * window.devicePixelRatio);
	}
	,get_mouseLock: function() {
		return false;
	}
	,set_mouseLock: function(b) {
		throw new js__$Boot_HaxeError("Mouse lock not supported");
	}
	,onMouseDown: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EPush,this.get_mouseX(),this.get_mouseY());
		if(e.button == 2) {
			ev.button = 1;
		}
		this.event(ev);
	}
	,onMouseUp: function(e) {
		var ev = new hxd_Event(hxd_EventKind.ERelease,this.get_mouseX(),this.get_mouseY());
		if(e.button == 2) {
			ev.button = 1;
		}
		this.event(ev);
	}
	,onMouseMove: function(e) {
		this.curMouseX = e.clientX;
		this.curMouseY = e.clientY;
		this.event(new hxd_Event(hxd_EventKind.EMove,this.get_mouseX(),this.get_mouseY()));
	}
	,onMouseWheel: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EWheel,this.get_mouseX(),this.get_mouseY());
		ev.wheelDelta = -e.wheelDelta / 30.0;
		this.event(ev);
	}
	,onKeyUp: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyUp,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		ev.charCode = e.charCode;
		this.event(ev);
	}
	,onKeyDown: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyDown,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		ev.charCode = e.charCode;
		this.event(ev);
	}
	,__class__: hxd_Stage
};
var hxd_Cursor = $hxClasses["hxd.Cursor"] = { __ename__ : ["hxd","Cursor"], __constructs__ : ["Default","Button","Move","TextInput","Hide","Custom"] };
hxd_Cursor.Default = ["Default",0];
hxd_Cursor.Default.toString = $estr;
hxd_Cursor.Default.__enum__ = hxd_Cursor;
hxd_Cursor.Button = ["Button",1];
hxd_Cursor.Button.toString = $estr;
hxd_Cursor.Button.__enum__ = hxd_Cursor;
hxd_Cursor.Move = ["Move",2];
hxd_Cursor.Move.toString = $estr;
hxd_Cursor.Move.__enum__ = hxd_Cursor;
hxd_Cursor.TextInput = ["TextInput",3];
hxd_Cursor.TextInput.toString = $estr;
hxd_Cursor.TextInput.__enum__ = hxd_Cursor;
hxd_Cursor.Hide = ["Hide",4];
hxd_Cursor.Hide.toString = $estr;
hxd_Cursor.Hide.__enum__ = hxd_Cursor;
hxd_Cursor.Custom = function(frames,speed,offsetX,offsetY) { var $x = ["Custom",5,frames,speed,offsetX,offsetY]; $x.__enum__ = hxd_Cursor; $x.toString = $estr; return $x; };
hxd_Cursor.__empty_constructs__ = [hxd_Cursor.Default,hxd_Cursor.Button,hxd_Cursor.Move,hxd_Cursor.TextInput,hxd_Cursor.Hide];
var hxd_System = function() { };
$hxClasses["hxd.System"] = hxd_System;
hxd_System.__name__ = ["hxd","System"];
hxd_System.loopFunc = function() {
	var $window = window;
	var rqf = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
	rqf(hxd_System.loopFunc);
	if(hxd_System.LOOP != null) {
		hxd_System.LOOP();
	}
};
hxd_System.getCurrentLoop = function() {
	return hxd_System.LOOP;
};
hxd_System.setLoop = function(f) {
	if(!hxd_System.LOOP_INIT) {
		hxd_System.LOOP_INIT = true;
		hxd_System.loopFunc();
	}
	hxd_System.LOOP = f;
};
hxd_System.start = function(callb) {
	callb();
};
hxd_System.getClipboard = function() {
	return "";
};
hxd_System.setNativeCursor = function(c) {
	var canvas = window.document.getElementById("webgl");
	if(canvas != null) {
		var tmp;
		switch(c[1]) {
		case 0:
			tmp = "default";
			break;
		case 1:
			tmp = "pointer";
			break;
		case 2:
			tmp = "move";
			break;
		case 3:
			tmp = "text";
			break;
		case 4:
			tmp = "none";
			break;
		case 5:
			throw new js__$Boot_HaxeError("Custom cursor not supported");
			break;
		}
		canvas.style.cursor = tmp;
	}
};
hxd_System.get_lang = function() {
	return "en";
};
hxd_System.get_screenDPI = function() {
	return 72.;
};
hxd_System.get_isAndroid = function() {
	return false;
};
hxd_System.get_isIOS = function() {
	return false;
};
hxd_System.get_isWindowed = function() {
	return true;
};
hxd_System.get_isTouch = function() {
	return false;
};
hxd_System.get_width = function() {
	return Math.round(window.document.body.clientWidth * window.devicePixelRatio);
};
hxd_System.get_height = function() {
	return Math.round(window.document.body.clientHeight * window.devicePixelRatio);
};
hxd_System.getDefaultFrameRate = function() {
	return 60.;
};
var hxd_Timer = function() { };
$hxClasses["hxd.Timer"] = hxd_Timer;
hxd_Timer.__name__ = ["hxd","Timer"];
hxd_Timer.update = function() {
	hxd_Timer.frameCount++;
	var newTime = haxe_Timer.stamp();
	hxd_Timer.deltaT = newTime - hxd_Timer.oldTime;
	hxd_Timer.oldTime = newTime;
	if(hxd_Timer.deltaT < hxd_Timer.maxDeltaTime) {
		hxd_Timer.calc_tmod = hxd_Timer.calc_tmod * hxd_Timer.tmod_factor + (1 - hxd_Timer.tmod_factor) * hxd_Timer.deltaT * hxd_Timer.wantedFPS;
	} else {
		hxd_Timer.deltaT = 1 / hxd_Timer.wantedFPS;
	}
	hxd_Timer.tmod = hxd_Timer.calc_tmod;
};
hxd_Timer.fps = function() {
	return hxd_Timer.wantedFPS / hxd_Timer.calc_tmod;
};
hxd_Timer.skip = function() {
	hxd_Timer.oldTime = haxe_Timer.stamp();
};
var hxd__$UString_UString_$Impl_$ = {};
$hxClasses["hxd._UString.UString_Impl_"] = hxd__$UString_UString_$Impl_$;
hxd__$UString_UString_$Impl_$.__name__ = ["hxd","_UString","UString_Impl_"];
hxd__$UString_UString_$Impl_$.get_length = function(this1) {
	return this1.length;
};
hxd__$UString_UString_$Impl_$.add = function(a,b) {
	return a + b;
};
hxd__$UString_UString_$Impl_$.charCodeAt = function(this1,pos) {
	return HxOverrides.cca(this1,pos);
};
hxd__$UString_UString_$Impl_$.substr = function(this1,pos,len) {
	return HxOverrides.substr(this1,pos,len);
};
hxd__$UString_UString_$Impl_$.charAt = function(this1,pos) {
	return this1.charAt(pos);
};
var hxd_Worker = function(e) {
	this.enumValue = e;
	this.useWorker = hxd_Worker.ENABLE;
};
$hxClasses["hxd.Worker"] = hxd_Worker;
hxd_Worker.__name__ = ["hxd","Worker"];
hxd_Worker.prototype = {
	clone: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,send: function(msg) {
		if(!this.useWorker) {
			var f = ($_=this.debugPeer,$bind($_,$_.handleMessage));
			var a1 = msg;
			haxe_Timer.delay(function() {
				f(a1);
			},1);
			return;
		}
		throw new js__$Boot_HaxeError("TODO");
	}
	,readMessage: function() {
		throw new js__$Boot_HaxeError("TODO");
	}
	,handleMessage: function(msg) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,setupMain: function() {
	}
	,setupWorker: function() {
	}
	,start: function() {
		if(!this.useWorker) {
			this.isWorker = false;
			this.setupMain();
			this.debugPeer = this.clone();
			this.debugPeer.isWorker = true;
			this.debugPeer.setupWorker();
			this.debugPeer.debugPeer = this;
			return false;
		}
		throw new js__$Boot_HaxeError("Native worker not supported for this platform");
	}
	,__class__: hxd_Worker
};
var hxd_res_Embed = function() { };
$hxClasses["hxd.res.Embed"] = hxd_res_Embed;
hxd_res_Embed.__name__ = ["hxd","res","Embed"];
var hxd__$res_R_$TITUSCBZ_$TTF = function() { };
$hxClasses["hxd._res.R_TITUSCBZ_TTF"] = hxd__$res_R_$TITUSCBZ_$TTF;
hxd__$res_R_$TITUSCBZ_$TTF.__name__ = ["hxd","_res","R_TITUSCBZ_TTF"];
hxd__$res_R_$TITUSCBZ_$TTF.__super__ = hxd_res_Embed;
hxd__$res_R_$TITUSCBZ_$TTF.prototype = $extend(hxd_res_Embed.prototype,{
	__class__: hxd__$res_R_$TITUSCBZ_$TTF
});
var hxd_earcut_EarNode = function() {
};
$hxClasses["hxd.earcut.EarNode"] = hxd_earcut_EarNode;
hxd_earcut_EarNode.__name__ = ["hxd","earcut","EarNode"];
hxd_earcut_EarNode.prototype = {
	__class__: hxd_earcut_EarNode
};
var hxd_earcut_Earcut = function() {
};
$hxClasses["hxd.earcut.Earcut"] = hxd_earcut_Earcut;
hxd_earcut_Earcut.__name__ = ["hxd","earcut","Earcut"];
hxd_earcut_Earcut.prototype = {
	triangulate_h2d__Graphics_GPoint: function(points,holes) {
		var outerLen = holes != null && holes.length > 0?holes[0]:points.length;
		if(outerLen < 3) {
			return [];
		}
		var root = this.setLinkedList_triangulate_T(points,0,outerLen,true);
		if(holes != null) {
			root = this.eliminateHoles_triangulate_T(points,holes,root);
		}
		return this.triangulateNode(root,points.length > 80);
	}
	,eliminateHoles_triangulate_T: function(points,holes,root) {
		var queue = [];
		var _g1 = 0;
		var _g = holes.length;
		while(_g1 < _g) {
			var i = _g1++;
			var node = this.setLinkedList_eliminateHoles_T(points,holes[i],i == holes.length - 1?points.length:holes[i + 1],false);
			if(node == node.next) {
				node.steiner = true;
			}
			queue.push(this.getLeftmost(node));
		}
		queue.sort($bind(this,this.compareX));
		var _g2 = 0;
		while(_g2 < queue.length) {
			var q = queue[_g2];
			++_g2;
			this.eliminateHole(q,root);
			root = this.filterPoints(root,root.next);
		}
		return root;
	}
	,setLinkedList_eliminateHoles_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g1 = start;
		while(_g1 < end) {
			var i = _g1++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = null;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g11 = start;
			while(_g11 < end) {
				var i1 = _g11++;
				var p = points[i1];
				var x = p.x;
				var y = p.y;
				var n1 = this.cache;
				if(n1 == null) {
					n1 = new hxd_earcut_EarNode();
					n1.allocNext = this.allocated;
					this.allocated = n1;
				} else {
					this.cache = n1.next;
				}
				n1.i = i1;
				n1.z = -1;
				n1.x = x;
				n1.y = y;
				n1.next = null;
				n1.prev = node;
				n1.steiner = false;
				n1.prevZ = null;
				n1.nextZ = null;
				if(node != null) {
					node.next = n1;
				}
				node = n1;
			}
		} else {
			var i2 = end - 1;
			while(i2 >= start) {
				var p1 = points[i2];
				var x1 = p1.x;
				var y1 = p1.y;
				var n2 = this.cache;
				if(n2 == null) {
					n2 = new hxd_earcut_EarNode();
					n2.allocNext = this.allocated;
					this.allocated = n2;
				} else {
					this.cache = n2.next;
				}
				n2.i = i2;
				n2.z = -1;
				n2.x = x1;
				n2.y = y1;
				n2.next = null;
				n2.prev = node;
				n2.steiner = false;
				n2.prevZ = null;
				n2.nextZ = null;
				if(node != null) {
					node.next = n2;
				}
				node = n2;
				--i2;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,setLinkedList_triangulate_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g1 = start;
		while(_g1 < end) {
			var i = _g1++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = null;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g11 = start;
			while(_g11 < end) {
				var i1 = _g11++;
				var p = points[i1];
				var x = p.x;
				var y = p.y;
				var n1 = this.cache;
				if(n1 == null) {
					n1 = new hxd_earcut_EarNode();
					n1.allocNext = this.allocated;
					this.allocated = n1;
				} else {
					this.cache = n1.next;
				}
				n1.i = i1;
				n1.z = -1;
				n1.x = x;
				n1.y = y;
				n1.next = null;
				n1.prev = node;
				n1.steiner = false;
				n1.prevZ = null;
				n1.nextZ = null;
				if(node != null) {
					node.next = n1;
				}
				node = n1;
			}
		} else {
			var i2 = end - 1;
			while(i2 >= start) {
				var p1 = points[i2];
				var x1 = p1.x;
				var y1 = p1.y;
				var n2 = this.cache;
				if(n2 == null) {
					n2 = new hxd_earcut_EarNode();
					n2.allocNext = this.allocated;
					this.allocated = n2;
				} else {
					this.cache = n2.next;
				}
				n2.i = i2;
				n2.z = -1;
				n2.x = x1;
				n2.y = y1;
				n2.next = null;
				n2.prev = node;
				n2.steiner = false;
				n2.prevZ = null;
				n2.nextZ = null;
				if(node != null) {
					node.next = n2;
				}
				node = n2;
				--i2;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,triangulateNode: function(root,useZOrder) {
		this.triangles = [];
		root = this.filterPoints(root);
		if(useZOrder && root != null) {
			var maxX;
			var maxY;
			maxX = root.x;
			this.minX = maxX;
			maxY = root.y;
			this.minY = maxY;
			var p = root.next;
			while(p != root) {
				var x = p.x;
				var y = p.y;
				if(x < this.minX) {
					this.minX = x;
				}
				if(y < this.minY) {
					this.minY = y;
				}
				if(x > maxX) {
					maxX = x;
				}
				if(y > maxY) {
					maxY = y;
				}
				p = p.next;
			}
			var a = maxX - this.minX;
			var b = maxY - this.minY;
			this.size = a < b?b:a;
			this.hasSize = true;
		} else {
			this.hasSize = false;
		}
		this.earcutLinked(root);
		var result = this.triangles;
		this.triangles = null;
		var n = this.allocated;
		if(this.cache != null) {
			while(n != this.cache) n = n.allocNext;
			n = n.allocNext;
		}
		while(n != null) {
			n.next = this.cache;
			this.cache = n;
			n = n.allocNext;
		}
		return result;
	}
	,eliminateHole: function(hole,root) {
		root = this.findHoleBridge(hole,root);
		if(root != null) {
			var b = this.splitPolygon(root,hole);
			this.filterPoints(b,b.next);
		}
	}
	,findHoleBridge: function(hole,root) {
		var p = root;
		var hx = hole.x;
		var hy = hole.y;
		var qx = -Infinity;
		var m = null;
		while(true) {
			if(hy <= p.y && hy >= p.next.y) {
				var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
				if(x <= hx && x > qx) {
					qx = x;
					if(p.x < p.next.x) {
						m = p;
					} else {
						m = p.next;
					}
				}
			}
			p = p.next;
			if(!(p != root)) {
				break;
			}
		}
		if(m == null) {
			return null;
		}
		var stop = m;
		var tanMin = Infinity;
		var tan;
		p = m.next;
		while(p != stop) {
			var tmp;
			if(hx >= p.x && p.x >= m.x) {
				var ax = hy < m.y?hx:qx;
				var bx = m.x;
				var by = m.y;
				var cx = hy < m.y?qx:hx;
				var px = p.x;
				var py = p.y;
				if((cx - px) * (hy - py) - (ax - px) * (hy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (hy - py) >= 0) {
					tmp = (bx - px) * (hy - py) - (cx - px) * (by - py) >= 0;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var f = hy - p.y;
				tan = (f < 0?-f:f) / (hx - p.x);
				var tmp1;
				if(tan < tanMin || tan == tanMin && p.x > m.x) {
					var p1 = p.prev;
					var r = p.next;
					if((p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) < 0) {
						var r1 = p.next;
						if((hole.y - p.y) * (r1.x - hole.x) - (hole.x - p.x) * (r1.y - hole.y) >= 0) {
							var q = p.prev;
							tmp1 = (q.y - p.y) * (hole.x - q.x) - (q.x - p.x) * (hole.y - q.y) >= 0;
						} else {
							tmp1 = false;
						}
					} else {
						var r2 = p.prev;
						if(!((hole.y - p.y) * (r2.x - hole.x) - (hole.x - p.x) * (r2.y - hole.y) < 0)) {
							var q1 = p.next;
							tmp1 = (q1.y - p.y) * (hole.x - q1.x) - (q1.x - p.x) * (hole.y - q1.y) < 0;
						} else {
							tmp1 = true;
						}
					}
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					m = p;
					tanMin = tan;
				}
			}
			p = p.next;
		}
		return m;
	}
	,getLeftmost: function(node) {
		var p = node;
		var leftmost = node;
		while(true) {
			if(p.x < leftmost.x) {
				leftmost = p;
			}
			p = p.next;
			if(!(p != node)) {
				break;
			}
		}
		return leftmost;
	}
	,compareX: function(a,b) {
		if(a.x - b.x > 0) {
			return 1;
		} else {
			return -1;
		}
	}
	,equals: function(p1,p2) {
		if(p1.x == p2.x) {
			return p1.y == p2.y;
		} else {
			return false;
		}
	}
	,area: function(p,q,r) {
		return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);
	}
	,intersects: function(p1,q1,p2,q2) {
		if((q1.y - p1.y) * (p2.x - q1.x) - (q1.x - p1.x) * (p2.y - q1.y) > 0 != (q1.y - p1.y) * (q2.x - q1.x) - (q1.x - p1.x) * (q2.y - q1.y) > 0) {
			return (q2.y - p2.y) * (p1.x - q2.x) - (q2.x - p2.x) * (p1.y - q2.y) > 0 != (q2.y - p2.y) * (q1.x - q2.x) - (q2.x - p2.x) * (q1.y - q2.y) > 0;
		} else {
			return false;
		}
	}
	,locallyInside: function(a,b) {
		var p = a.prev;
		var r = a.next;
		if((a.y - p.y) * (r.x - a.x) - (a.x - p.x) * (r.y - a.y) < 0) {
			var r1 = a.next;
			if((b.y - a.y) * (r1.x - b.x) - (b.x - a.x) * (r1.y - b.y) >= 0) {
				var q = a.prev;
				return (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
			} else {
				return false;
			}
		} else {
			var r2 = a.prev;
			if(!((b.y - a.y) * (r2.x - b.x) - (b.x - a.x) * (r2.y - b.y) < 0)) {
				var q1 = a.next;
				return (q1.y - a.y) * (b.x - q1.x) - (q1.x - a.x) * (b.y - q1.y) < 0;
			} else {
				return true;
			}
		}
	}
	,filterPoints: function(start,end) {
		if(start == null) {
			return start;
		}
		if(end == null) {
			end = start;
		}
		var p = start;
		var again;
		while(true) {
			again = false;
			var tmp;
			if(!p.steiner) {
				var p2 = p.next;
				if(!(p.x == p2.x && p.y == p2.y)) {
					var p1 = p.prev;
					var r = p.next;
					tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) == 0;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				end = p.prev;
				p = end;
				if(p == p.next) {
					return null;
				}
				again = true;
			} else {
				p = p.next;
			}
			if(!(again || p != end)) {
				break;
			}
		}
		return end;
	}
	,removeNode: function(p) {
		p.next.prev = p.prev;
		p.prev.next = p.next;
		if(p.prevZ != null) {
			p.prevZ.nextZ = p.nextZ;
		}
		if(p.nextZ != null) {
			p.nextZ.prevZ = p.prevZ;
		}
	}
	,allocNode: function(i,x,y,last) {
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		return n;
	}
	,earcutLinked: function(ear,pass) {
		if(pass == null) {
			pass = 0;
		}
		if(ear == null) {
			return;
		}
		if(pass == 0 && this.hasSize) {
			this.indexCurve(ear);
		}
		var stop = ear;
		var prev;
		var next;
		while(ear.prev != ear.next) {
			prev = ear.prev;
			next = ear.next;
			if(this.hasSize?this.isEarHashed(ear):this.isEar(ear)) {
				this.triangles.push(prev.i);
				this.triangles.push(ear.i);
				this.triangles.push(next.i);
				ear.next.prev = ear.prev;
				ear.prev.next = ear.next;
				if(ear.prevZ != null) {
					ear.prevZ.nextZ = ear.nextZ;
				}
				if(ear.nextZ != null) {
					ear.nextZ.prevZ = ear.prevZ;
				}
				ear = next.next;
				stop = next.next;
				continue;
			}
			ear = next;
			if(next == stop) {
				switch(pass) {
				case 0:
					this.earcutLinked(this.filterPoints(next),1);
					break;
				case 1:
					ear = this.cureLocalIntersections(next);
					this.earcutLinked(ear,2);
					break;
				case 2:
					this.splitEarcut(next);
					break;
				}
				break;
			}
		}
	}
	,isEar: function(ear) {
		var a = ear.prev;
		var c = ear.next;
		if((ear.y - a.y) * (c.x - ear.x) - (ear.x - a.x) * (c.y - ear.y) >= 0) {
			return false;
		}
		var p = ear.next.next;
		while(p != ear.prev) {
			var tmp;
			var ax = a.x;
			var ay = a.y;
			var bx = ear.x;
			var by = ear.y;
			var cx = c.x;
			var cy = c.y;
			var px = p.x;
			var py = p.y;
			if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.next;
		}
		return true;
	}
	,isEarHashed: function(ear) {
		var a = ear.prev;
		var c = ear.next;
		if((ear.y - a.y) * (c.x - ear.x) - (ear.x - a.x) * (c.y - ear.y) >= 0) {
			return false;
		}
		var minTX = a.x < ear.x?a.x < c.x?a.x:c.x:ear.x < c.x?ear.x:c.x;
		var minTY = a.y < ear.y?a.y < c.y?a.y:c.y:ear.y < c.y?ear.y:c.y;
		var maxTX = a.x > ear.x?a.x > c.x?a.x:c.x:ear.x > c.x?ear.x:c.x;
		var maxTY = a.y > ear.y?a.y > c.y?a.y:c.y:ear.y > c.y?ear.y:c.y;
		var x = 32767 * (minTX - this.minX) / this.size | 0;
		var y = 32767 * (minTY - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var minZ = x | y << 1;
		var x1 = 32767 * (maxTX - this.minX) / this.size | 0;
		var y1 = 32767 * (maxTY - this.minY) / this.size | 0;
		x1 = (x1 | x1 << 8) & 16711935;
		x1 = (x1 | x1 << 4) & 252645135;
		x1 = (x1 | x1 << 2) & 858993459;
		x1 = (x1 | x1 << 1) & 1431655765;
		y1 = (y1 | y1 << 8) & 16711935;
		y1 = (y1 | y1 << 4) & 252645135;
		y1 = (y1 | y1 << 2) & 858993459;
		y1 = (y1 | y1 << 1) & 1431655765;
		var maxZ = x1 | y1 << 1;
		var p = ear.nextZ;
		while(p != null && p.z <= maxZ) {
			var tmp;
			var tmp1;
			if(p != ear.prev && p != ear.next) {
				var ax = a.x;
				var ay = a.y;
				var bx = ear.x;
				var by = ear.y;
				var cx = c.x;
				var cy = c.y;
				var px = p.x;
				var py = p.y;
				if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0) {
					tmp1 = (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
				} else {
					tmp1 = false;
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.nextZ;
		}
		p = ear.prevZ;
		while(p != null && p.z >= minZ) {
			var tmp2;
			var tmp3;
			if(p != ear.prev && p != ear.next) {
				var ax1 = a.x;
				var ay1 = a.y;
				var bx1 = ear.x;
				var by1 = ear.y;
				var cx1 = c.x;
				var cy1 = c.y;
				var px1 = p.x;
				var py1 = p.y;
				if((cx1 - px1) * (ay1 - py1) - (ax1 - px1) * (cy1 - py1) >= 0 && (ax1 - px1) * (by1 - py1) - (bx1 - px1) * (ay1 - py1) >= 0) {
					tmp3 = (bx1 - px1) * (cy1 - py1) - (cx1 - px1) * (by1 - py1) >= 0;
				} else {
					tmp3 = false;
				}
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				var p2 = p.prev;
				var r1 = p.next;
				tmp2 = (p.y - p2.y) * (r1.x - p.x) - (p.x - p2.x) * (r1.y - p.y) >= 0;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				return false;
			}
			p = p.prevZ;
		}
		return true;
	}
	,cureLocalIntersections: function(start) {
		var p = start;
		while(true) {
			var a = p.prev;
			var b = p.next.next;
			var tmp;
			var tmp1;
			var p2 = p.next;
			if((p.y - a.y) * (p2.x - p.x) - (p.x - a.x) * (p2.y - p.y) > 0 != (p.y - a.y) * (b.x - p.x) - (p.x - a.x) * (b.y - p.y) > 0 && (b.y - p2.y) * (a.x - b.x) - (b.x - p2.x) * (a.y - b.y) > 0 != (b.y - p2.y) * (p.x - b.x) - (b.x - p2.x) * (p.y - b.y) > 0) {
				var p1 = a.prev;
				var r = a.next;
				if((a.y - p1.y) * (r.x - a.x) - (a.x - p1.x) * (r.y - a.y) < 0) {
					var r1 = a.next;
					if((b.y - a.y) * (r1.x - b.x) - (b.x - a.x) * (r1.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r2 = a.prev;
					if(!((b.y - a.y) * (r2.x - b.x) - (b.x - a.x) * (r2.y - b.y) < 0)) {
						var q1 = a.next;
						tmp1 = (q1.y - a.y) * (b.x - q1.x) - (q1.x - a.x) * (b.y - q1.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p3 = b.prev;
				var r3 = b.next;
				if((b.y - p3.y) * (r3.x - b.x) - (b.x - p3.x) * (r3.y - b.y) < 0) {
					var r4 = b.next;
					if((a.y - b.y) * (r4.x - a.x) - (a.x - b.x) * (r4.y - a.y) >= 0) {
						var q2 = b.prev;
						tmp = (q2.y - b.y) * (a.x - q2.x) - (q2.x - b.x) * (a.y - q2.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r5 = b.prev;
					if(!((a.y - b.y) * (r5.x - a.x) - (a.x - b.x) * (r5.y - a.y) < 0)) {
						var q3 = b.next;
						tmp = (q3.y - b.y) * (a.x - q3.x) - (q3.x - b.x) * (a.y - q3.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				this.triangles.push(a.i);
				this.triangles.push(p.i);
				this.triangles.push(b.i);
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				var p4 = p.next;
				p4.next.prev = p4.prev;
				p4.prev.next = p4.next;
				if(p4.prevZ != null) {
					p4.prevZ.nextZ = p4.nextZ;
				}
				if(p4.nextZ != null) {
					p4.nextZ.prevZ = p4.prevZ;
				}
				start = b;
				p = b;
			}
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		return p;
	}
	,splitEarcut: function(start) {
		var a = start;
		while(true) {
			var b = a.next.next;
			while(b != a.prev) {
				if(a.i != b.i && this.isValidDiagonal(a,b)) {
					var c = this.splitPolygon(a,b);
					a = this.filterPoints(a,a.next);
					c = this.filterPoints(c,c.next);
					this.earcutLinked(a);
					this.earcutLinked(c);
					return;
				}
				b = b.next;
			}
			a = a.next;
			if(!(a != start)) {
				break;
			}
		}
	}
	,splitPolygon: function(a,b) {
		var i = a.i;
		var x = a.x;
		var y = a.y;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = null;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		var a2 = n;
		var i1 = b.i;
		var x1 = b.x;
		var y1 = b.y;
		var n1 = this.cache;
		if(n1 == null) {
			n1 = new hxd_earcut_EarNode();
			n1.allocNext = this.allocated;
			this.allocated = n1;
		} else {
			this.cache = n1.next;
		}
		n1.i = i1;
		n1.z = -1;
		n1.x = x1;
		n1.y = y1;
		n1.next = null;
		n1.prev = null;
		n1.steiner = false;
		n1.prevZ = null;
		n1.nextZ = null;
		var b2 = n1;
		var an = a.next;
		var bp = b.prev;
		a.next = b;
		b.prev = a;
		a2.next = an;
		an.prev = a2;
		b2.next = a2;
		a2.prev = b2;
		bp.next = b2;
		b2.prev = bp;
		return b2;
	}
	,pointInTriangle: function(ax,ay,bx,by,cx,cy,px,py) {
		if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0) {
			return (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
		} else {
			return false;
		}
	}
	,isValidDiagonal: function(a,b) {
		if(!(a.x == b.x && a.y == b.y)) {
			var tmp;
			var tmp1;
			if(a.next.i != b.i && a.prev.i != b.i && !this.intersectsPolygon(a,b)) {
				var p = a.prev;
				var r = a.next;
				if((a.y - p.y) * (r.x - a.x) - (a.x - p.x) * (r.y - a.y) < 0) {
					var r1 = a.next;
					if((b.y - a.y) * (r1.x - b.x) - (b.x - a.x) * (r1.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r2 = a.prev;
					if(!((b.y - a.y) * (r2.x - b.x) - (b.x - a.x) * (r2.y - b.y) < 0)) {
						var q1 = a.next;
						tmp1 = (q1.y - a.y) * (b.x - q1.x) - (q1.x - a.x) * (b.y - q1.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = b.prev;
				var r3 = b.next;
				if((b.y - p1.y) * (r3.x - b.x) - (b.x - p1.x) * (r3.y - b.y) < 0) {
					var r4 = b.next;
					if((a.y - b.y) * (r4.x - a.x) - (a.x - b.x) * (r4.y - a.y) >= 0) {
						var q2 = b.prev;
						tmp = (q2.y - b.y) * (a.x - q2.x) - (q2.x - b.x) * (a.y - q2.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r5 = b.prev;
					if(!((a.y - b.y) * (r5.x - a.x) - (a.x - b.x) * (r5.y - a.y) < 0)) {
						var q3 = b.next;
						tmp = (q3.y - b.y) * (a.x - q3.x) - (q3.x - b.x) * (a.y - q3.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				return this.middleInside(a,b);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,middleInside: function(a,b) {
		var p = a;
		var inside = false;
		var px = (a.x + b.x) / 2;
		var py = (a.y + b.y) / 2;
		while(true) {
			if(p.y > py != p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {
				inside = !inside;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return inside;
	}
	,intersectsPolygon: function(a,b) {
		var p = a;
		while(true) {
			var tmp;
			if(p.i != a.i && p.next.i != a.i && p.i != b.i && p.next.i != b.i) {
				var q1 = p.next;
				if((q1.y - p.y) * (a.x - q1.x) - (q1.x - p.x) * (a.y - q1.y) > 0 != (q1.y - p.y) * (b.x - q1.x) - (q1.x - p.x) * (b.y - q1.y) > 0) {
					tmp = (b.y - a.y) * (p.x - b.x) - (b.x - a.x) * (p.y - b.y) > 0 != (b.y - a.y) * (q1.x - b.x) - (b.x - a.x) * (q1.y - b.y) > 0;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				return true;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return false;
	}
	,zOrder: function(px,py) {
		var x = 32767 * (px - this.minX) / this.size | 0;
		var y = 32767 * (py - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		return x | y << 1;
	}
	,indexCurve: function(start) {
		var p = start;
		while(true) {
			if(p.z < 0) {
				var px = p.x;
				var py = p.y;
				var x = 32767 * (px - this.minX) / this.size | 0;
				var y = 32767 * (py - this.minY) / this.size | 0;
				x = (x | x << 8) & 16711935;
				x = (x | x << 4) & 252645135;
				x = (x | x << 2) & 858993459;
				x = (x | x << 1) & 1431655765;
				y = (y | y << 8) & 16711935;
				y = (y | y << 4) & 252645135;
				y = (y | y << 2) & 858993459;
				y = (y | y << 1) & 1431655765;
				p.z = x | y << 1;
			}
			p.prevZ = p.prev;
			p.nextZ = p.next;
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		p.prevZ.nextZ = null;
		p.prevZ = null;
		this.sortLinked(p);
	}
	,sortLinked: function(list) {
		var p;
		var q;
		var e;
		var tail;
		var numMerges;
		var pSize;
		var qSize;
		var inSize = 1;
		while(true) {
			p = list;
			list = null;
			tail = null;
			numMerges = 0;
			while(p != null) {
				++numMerges;
				q = p;
				pSize = 0;
				var _g1 = 0;
				var _g = inSize;
				while(_g1 < _g) {
					++_g1;
					++pSize;
					q = q.nextZ;
					if(q == null) {
						break;
					}
				}
				qSize = inSize;
				while(pSize > 0 || qSize > 0 && q != null) {
					if(pSize == 0) {
						e = q;
						q = q.nextZ;
						--qSize;
					} else if(qSize == 0 || q == null) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else if(p.z <= q.z) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else {
						e = q;
						q = q.nextZ;
						--qSize;
					}
					if(tail != null) {
						tail.nextZ = e;
					} else {
						list = e;
					}
					e.prevZ = tail;
					tail = e;
				}
				p = q;
			}
			tail.nextZ = null;
			inSize *= 2;
			if(!(numMerges > 1)) {
				break;
			}
		}
		return list;
	}
	,__class__: hxd_earcut_Earcut
};
var hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$ = {};
$hxClasses["hxd.fmt.hmd._Data.GeometryDataFormat_Impl_"] = hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.__name__ = ["hxd","fmt","hmd","_Data","GeometryDataFormat_Impl_"];
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$._new = function(v) {
	return v;
};
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.getSize = function(this1) {
	return this1 & 7;
};
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.toInt = function(this1) {
	return this1;
};
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 1:
		return "DFloat";
	case 2:
		return "DVec2";
	case 3:
		return "DVec3";
	case 4:
		return "DVec4";
	case 9:
		return "DBytes4";
	}
};
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.fromInt = function(v) {
	return v;
};
var hxd_fmt_hmd_Property = $hxClasses["hxd.fmt.hmd.Property"] = { __ename__ : ["hxd","fmt","hmd","Property"], __constructs__ : ["CameraFOVY","HasMaterialFlags"] };
hxd_fmt_hmd_Property.CameraFOVY = function(v) { var $x = ["CameraFOVY",0,v]; $x.__enum__ = hxd_fmt_hmd_Property; $x.toString = $estr; return $x; };
hxd_fmt_hmd_Property.HasMaterialFlags = ["HasMaterialFlags",1];
hxd_fmt_hmd_Property.HasMaterialFlags.toString = $estr;
hxd_fmt_hmd_Property.HasMaterialFlags.__enum__ = hxd_fmt_hmd_Property;
hxd_fmt_hmd_Property.__empty_constructs__ = [hxd_fmt_hmd_Property.HasMaterialFlags];
var hxd_fmt_hmd_Position = function() {
};
$hxClasses["hxd.fmt.hmd.Position"] = hxd_fmt_hmd_Position;
hxd_fmt_hmd_Position.__name__ = ["hxd","fmt","hmd","Position"];
hxd_fmt_hmd_Position.prototype = {
	loadQuaternion: function(q) {
		q.x = this.qx;
		q.y = this.qy;
		q.z = this.qz;
		q.w = this.get_qw();
	}
	,get_qw: function() {
		var qw = 1 - (this.qx * this.qx + this.qy * this.qy + this.qz * this.qz);
		if(qw < 0) {
			return -Math.sqrt(-qw);
		} else {
			return Math.sqrt(qw);
		}
	}
	,toMatrix: function(postScale) {
		if(postScale == null) {
			postScale = false;
		}
		var m = new h3d_Matrix();
		var q = hxd_fmt_hmd_Position.QTMP;
		q.x = this.qx;
		q.y = this.qy;
		q.z = this.qz;
		q.w = this.get_qw();
		q.saveToMatrix(m);
		if(postScale) {
			m.translate(this.x,this.y,this.z);
			m.scale(this.sx,this.sy,this.sz);
		} else {
			m._11 *= this.sx;
			m._12 *= this.sx;
			m._13 *= this.sx;
			m._21 *= this.sy;
			m._22 *= this.sy;
			m._23 *= this.sy;
			m._31 *= this.sz;
			m._32 *= this.sz;
			m._33 *= this.sz;
			m.translate(this.x,this.y,this.z);
		}
		return m;
	}
	,__class__: hxd_fmt_hmd_Position
};
var hxd_fmt_hmd_GeometryFormat = function(name,format) {
	this.name = name;
	this.format = format;
};
$hxClasses["hxd.fmt.hmd.GeometryFormat"] = hxd_fmt_hmd_GeometryFormat;
hxd_fmt_hmd_GeometryFormat.__name__ = ["hxd","fmt","hmd","GeometryFormat"];
hxd_fmt_hmd_GeometryFormat.prototype = {
	__class__: hxd_fmt_hmd_GeometryFormat
};
var hxd_fmt_hmd_Geometry = function() {
};
$hxClasses["hxd.fmt.hmd.Geometry"] = hxd_fmt_hmd_Geometry;
hxd_fmt_hmd_Geometry.__name__ = ["hxd","fmt","hmd","Geometry"];
hxd_fmt_hmd_Geometry.prototype = {
	get_indexCount: function() {
		var k = 0;
		var _g = 0;
		var _g1 = this.indexCounts;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			k += i;
		}
		return k;
	}
	,__class__: hxd_fmt_hmd_Geometry
};
var hxd_fmt_hmd_MaterialFlag = $hxClasses["hxd.fmt.hmd.MaterialFlag"] = { __ename__ : ["hxd","fmt","hmd","MaterialFlag"], __constructs__ : ["HasLighting","CastShadows","ReceiveShadows","TextureWrap","IsVolumeDecal"] };
hxd_fmt_hmd_MaterialFlag.HasLighting = ["HasLighting",0];
hxd_fmt_hmd_MaterialFlag.HasLighting.toString = $estr;
hxd_fmt_hmd_MaterialFlag.HasLighting.__enum__ = hxd_fmt_hmd_MaterialFlag;
hxd_fmt_hmd_MaterialFlag.CastShadows = ["CastShadows",1];
hxd_fmt_hmd_MaterialFlag.CastShadows.toString = $estr;
hxd_fmt_hmd_MaterialFlag.CastShadows.__enum__ = hxd_fmt_hmd_MaterialFlag;
hxd_fmt_hmd_MaterialFlag.ReceiveShadows = ["ReceiveShadows",2];
hxd_fmt_hmd_MaterialFlag.ReceiveShadows.toString = $estr;
hxd_fmt_hmd_MaterialFlag.ReceiveShadows.__enum__ = hxd_fmt_hmd_MaterialFlag;
hxd_fmt_hmd_MaterialFlag.TextureWrap = ["TextureWrap",3];
hxd_fmt_hmd_MaterialFlag.TextureWrap.toString = $estr;
hxd_fmt_hmd_MaterialFlag.TextureWrap.__enum__ = hxd_fmt_hmd_MaterialFlag;
hxd_fmt_hmd_MaterialFlag.IsVolumeDecal = ["IsVolumeDecal",4];
hxd_fmt_hmd_MaterialFlag.IsVolumeDecal.toString = $estr;
hxd_fmt_hmd_MaterialFlag.IsVolumeDecal.__enum__ = hxd_fmt_hmd_MaterialFlag;
hxd_fmt_hmd_MaterialFlag.__empty_constructs__ = [hxd_fmt_hmd_MaterialFlag.HasLighting,hxd_fmt_hmd_MaterialFlag.CastShadows,hxd_fmt_hmd_MaterialFlag.ReceiveShadows,hxd_fmt_hmd_MaterialFlag.TextureWrap,hxd_fmt_hmd_MaterialFlag.IsVolumeDecal];
var hxd_fmt_hmd_Material = function() {
};
$hxClasses["hxd.fmt.hmd.Material"] = hxd_fmt_hmd_Material;
hxd_fmt_hmd_Material.__name__ = ["hxd","fmt","hmd","Material"];
hxd_fmt_hmd_Material.prototype = {
	__class__: hxd_fmt_hmd_Material
};
var hxd_fmt_hmd_SkinJoint = function() {
};
$hxClasses["hxd.fmt.hmd.SkinJoint"] = hxd_fmt_hmd_SkinJoint;
hxd_fmt_hmd_SkinJoint.__name__ = ["hxd","fmt","hmd","SkinJoint"];
hxd_fmt_hmd_SkinJoint.prototype = {
	__class__: hxd_fmt_hmd_SkinJoint
};
var hxd_fmt_hmd_SkinSplit = function() {
};
$hxClasses["hxd.fmt.hmd.SkinSplit"] = hxd_fmt_hmd_SkinSplit;
hxd_fmt_hmd_SkinSplit.__name__ = ["hxd","fmt","hmd","SkinSplit"];
hxd_fmt_hmd_SkinSplit.prototype = {
	__class__: hxd_fmt_hmd_SkinSplit
};
var hxd_fmt_hmd_Skin = function() {
};
$hxClasses["hxd.fmt.hmd.Skin"] = hxd_fmt_hmd_Skin;
hxd_fmt_hmd_Skin.__name__ = ["hxd","fmt","hmd","Skin"];
hxd_fmt_hmd_Skin.prototype = {
	__class__: hxd_fmt_hmd_Skin
};
var hxd_fmt_hmd_Model = function() {
};
$hxClasses["hxd.fmt.hmd.Model"] = hxd_fmt_hmd_Model;
hxd_fmt_hmd_Model.__name__ = ["hxd","fmt","hmd","Model"];
hxd_fmt_hmd_Model.prototype = {
	__class__: hxd_fmt_hmd_Model
};
var hxd_fmt_hmd_AnimationFlag = $hxClasses["hxd.fmt.hmd.AnimationFlag"] = { __ename__ : ["hxd","fmt","hmd","AnimationFlag"], __constructs__ : ["HasPosition","HasRotation","HasScale","HasUV","HasAlpha","SinglePosition","HasProps","Reserved"] };
hxd_fmt_hmd_AnimationFlag.HasPosition = ["HasPosition",0];
hxd_fmt_hmd_AnimationFlag.HasPosition.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasPosition.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.HasRotation = ["HasRotation",1];
hxd_fmt_hmd_AnimationFlag.HasRotation.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasRotation.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.HasScale = ["HasScale",2];
hxd_fmt_hmd_AnimationFlag.HasScale.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasScale.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.HasUV = ["HasUV",3];
hxd_fmt_hmd_AnimationFlag.HasUV.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasUV.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.HasAlpha = ["HasAlpha",4];
hxd_fmt_hmd_AnimationFlag.HasAlpha.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasAlpha.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.SinglePosition = ["SinglePosition",5];
hxd_fmt_hmd_AnimationFlag.SinglePosition.toString = $estr;
hxd_fmt_hmd_AnimationFlag.SinglePosition.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.HasProps = ["HasProps",6];
hxd_fmt_hmd_AnimationFlag.HasProps.toString = $estr;
hxd_fmt_hmd_AnimationFlag.HasProps.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.Reserved = ["Reserved",7];
hxd_fmt_hmd_AnimationFlag.Reserved.toString = $estr;
hxd_fmt_hmd_AnimationFlag.Reserved.__enum__ = hxd_fmt_hmd_AnimationFlag;
hxd_fmt_hmd_AnimationFlag.__empty_constructs__ = [hxd_fmt_hmd_AnimationFlag.HasPosition,hxd_fmt_hmd_AnimationFlag.HasRotation,hxd_fmt_hmd_AnimationFlag.HasScale,hxd_fmt_hmd_AnimationFlag.HasUV,hxd_fmt_hmd_AnimationFlag.HasAlpha,hxd_fmt_hmd_AnimationFlag.SinglePosition,hxd_fmt_hmd_AnimationFlag.HasProps,hxd_fmt_hmd_AnimationFlag.Reserved];
var hxd_fmt_hmd_AnimationObject = function() {
};
$hxClasses["hxd.fmt.hmd.AnimationObject"] = hxd_fmt_hmd_AnimationObject;
hxd_fmt_hmd_AnimationObject.__name__ = ["hxd","fmt","hmd","AnimationObject"];
hxd_fmt_hmd_AnimationObject.prototype = {
	__class__: hxd_fmt_hmd_AnimationObject
};
var hxd_fmt_hmd_AnimationEvent = function() {
};
$hxClasses["hxd.fmt.hmd.AnimationEvent"] = hxd_fmt_hmd_AnimationEvent;
hxd_fmt_hmd_AnimationEvent.__name__ = ["hxd","fmt","hmd","AnimationEvent"];
hxd_fmt_hmd_AnimationEvent.prototype = {
	__class__: hxd_fmt_hmd_AnimationEvent
};
var hxd_fmt_hmd_Animation = function() {
};
$hxClasses["hxd.fmt.hmd.Animation"] = hxd_fmt_hmd_Animation;
hxd_fmt_hmd_Animation.__name__ = ["hxd","fmt","hmd","Animation"];
hxd_fmt_hmd_Animation.prototype = {
	__class__: hxd_fmt_hmd_Animation
};
var hxd_fmt_hmd_Data = function() {
};
$hxClasses["hxd.fmt.hmd.Data"] = hxd_fmt_hmd_Data;
hxd_fmt_hmd_Data.__name__ = ["hxd","fmt","hmd","Data"];
hxd_fmt_hmd_Data.prototype = {
	__class__: hxd_fmt_hmd_Data
};
var hxd_fmt_hmd__$Library_FormatMap = function(size,offset,def,next) {
	this.size = size;
	this.offset = offset;
	this.def = def;
	this.next = next;
};
$hxClasses["hxd.fmt.hmd._Library.FormatMap"] = hxd_fmt_hmd__$Library_FormatMap;
hxd_fmt_hmd__$Library_FormatMap.__name__ = ["hxd","fmt","hmd","_Library","FormatMap"];
hxd_fmt_hmd__$Library_FormatMap.prototype = {
	__class__: hxd_fmt_hmd__$Library_FormatMap
};
var hxd_fmt_hmd_GeometryBuffer = function() {
};
$hxClasses["hxd.fmt.hmd.GeometryBuffer"] = hxd_fmt_hmd_GeometryBuffer;
hxd_fmt_hmd_GeometryBuffer.__name__ = ["hxd","fmt","hmd","GeometryBuffer"];
hxd_fmt_hmd_GeometryBuffer.prototype = {
	__class__: hxd_fmt_hmd_GeometryBuffer
};
var hxd_fmt_hmd_Library = function(entry,header) {
	this.entry = entry;
	this.header = header;
	this.cachedPrimitives = [];
	this.cachedAnimations = new haxe_ds_StringMap();
	this.cachedSkin = new haxe_ds_StringMap();
};
$hxClasses["hxd.fmt.hmd.Library"] = hxd_fmt_hmd_Library;
hxd_fmt_hmd_Library.__name__ = ["hxd","fmt","hmd","Library"];
hxd_fmt_hmd_Library.prototype = {
	getData: function() {
		var b = new haxe_io_Bytes(new ArrayBuffer(this.entry.get_size() - this.header.dataPosition));
		this.entry.open();
		this.entry.skip(this.header.dataPosition);
		this.entry.read(b,0,b.length);
		this.entry.close();
		return b;
	}
	,getDefaultFormat: function(stride) {
		var format = [new hxd_fmt_hmd_GeometryFormat("position",3)];
		var defs = [null];
		if(stride > 3) {
			format.push(new hxd_fmt_hmd_GeometryFormat("normal",3));
			defs.push(null);
		}
		if(stride > 6) {
			format.push(new hxd_fmt_hmd_GeometryFormat("uv",2));
			defs.push(null);
		}
		if(stride > 8) {
			format.push(new hxd_fmt_hmd_GeometryFormat("color",3));
			defs.push(new h3d_Vector(1,1,1));
		}
		if(stride > 11) {
			throw new js__$Boot_HaxeError("Unsupported stride");
		}
		return { format : format, defs : defs};
	}
	,load: function(format,defaults,modelIndex) {
		if(modelIndex == null) {
			modelIndex = -1;
		}
		var vtmp_z;
		var vtmp_y;
		var vtmp_x = 0.;
		vtmp_y = 0.;
		vtmp_z = 0.;
		var vtmp_w = 1.;
		var models = modelIndex < 0?this.header.models:[this.header.models[modelIndex]];
		var outVertex = new Array(0);
		var outIndex = new Array(0);
		var stride = 0;
		var mid = -1;
		var _g = 0;
		while(_g < format.length) {
			var f = format[_g];
			++_g;
			stride += f.format & 7;
		}
		var _g1 = 0;
		while(_g1 < models.length) {
			var m = models[_g1];
			++_g1;
			var geom = this.header.geometries[m.geometry];
			if(geom == null) {
				continue;
			}
			var _g11 = 0;
			var _g2 = m.materials;
			while(_g11 < _g2.length) {
				var mat = _g2[_g11];
				++_g11;
				if(mid < 0) {
					mid = mat;
				}
				if(mid != mat) {
					throw new js__$Boot_HaxeError("Models have several materials");
				}
			}
			var pos = m.position.toMatrix();
			var data = this.getBuffers(geom,format,defaults);
			var start = outVertex.length / stride | 0;
			var _g21 = 0;
			var _g12 = data.vertexes.length / stride | 0;
			while(_g21 < _g12) {
				var p = _g21++ * stride;
				vtmp_x = data.vertexes[p++];
				vtmp_y = data.vertexes[p++];
				vtmp_z = data.vertexes[p++];
				var px = vtmp_x * pos._11 + vtmp_y * pos._21 + vtmp_z * pos._31 + vtmp_w * pos._41;
				var py = vtmp_x * pos._12 + vtmp_y * pos._22 + vtmp_z * pos._32 + vtmp_w * pos._42;
				var pz = vtmp_x * pos._13 + vtmp_y * pos._23 + vtmp_z * pos._33 + vtmp_w * pos._43;
				vtmp_x = px;
				vtmp_y = py;
				vtmp_z = pz;
				outVertex.push(vtmp_x);
				outVertex.push(vtmp_y);
				outVertex.push(vtmp_z);
				var _g4 = 0;
				var _g3 = stride - 3;
				while(_g4 < _g3) {
					var j = _g4++;
					outVertex.push(data.vertexes[p++]);
				}
			}
			var _g13 = 0;
			var _g22 = data.indexes;
			while(_g13 < _g22.length) {
				var idx = _g22[_g13];
				++_g13;
				outIndex.push(idx + start);
			}
		}
		return { vertex : outVertex, index : outIndex};
	}
	,getBuffers: function(geom,format,defaults,material) {
		if(material == 0 && geom.indexCounts.length == 1) {
			material = null;
		}
		var map = null;
		var stride = 0;
		var _g1 = 0;
		var _g = format.length;
		while(_g1 < _g) {
			var i = format.length - 1 - _g1++;
			var f = format[i];
			var size = f.format & 7;
			var offset = 0;
			var found = false;
			var _g2 = 0;
			var _g3 = geom.vertexFormat;
			while(_g2 < _g3.length) {
				var f2 = _g3[_g2];
				++_g2;
				if(f2.name == f.name) {
					if((f2.format & 7) < size) {
						throw new js__$Boot_HaxeError("Requested " + f.name + " data has only " + (f2.format & 7) + " regs instead of " + size);
					}
					found = true;
					break;
				}
				offset += f2.format & 7;
			}
			if(found) {
				map = new hxd_fmt_hmd__$Library_FormatMap(size,offset,null,map);
			} else {
				var def = defaults == null?null:defaults[i];
				if(def == null) {
					throw new js__$Boot_HaxeError("Missing required " + f.name);
				}
				map = new hxd_fmt_hmd__$Library_FormatMap(size,0,def,map);
			}
			stride += size;
		}
		var vsize = geom.vertexCount * geom.vertexStride * 4;
		var vbuf = hxd_impl_Tmp.getBytes(vsize);
		this.entry.open();
		this.entry.skip(this.header.dataPosition + geom.vertexPosition);
		this.entry.read(vbuf,0,vsize);
		this.entry.skip(geom.indexPosition - (geom.vertexPosition + vsize));
		var isize;
		if(material == null) {
			isize = geom.get_indexCount() * 2;
		} else {
			var ipos = 0;
			var _g11 = 0;
			var _g4 = material;
			while(_g11 < _g4) ipos += geom.indexCounts[_g11++];
			this.entry.skip(ipos * 2);
			isize = geom.indexCounts[material] * 2;
		}
		var ibuf = hxd_impl_Tmp.getBytes(isize);
		this.entry.read(ibuf,0,isize);
		var buf = new hxd_fmt_hmd_GeometryBuffer();
		if(material == null) {
			var length = stride * geom.vertexCount;
			buf.vertexes = new Array(length);
			var length1 = geom.get_indexCount();
			buf.indexes = new Array(length1);
			var w = 0;
			var _g12 = 0;
			var _g5 = geom.vertexCount;
			while(_g12 < _g5) {
				var vid = _g12++;
				var m = map;
				while(m != null) {
					if(m.def == null) {
						var r = vid * geom.vertexStride;
						var _g31 = 0;
						var _g21 = m.size;
						while(_g31 < _g21) buf.vertexes[w++] = vbuf.getFloat(r + m.offset + _g31++ << 2);
					} else {
						switch(m.size) {
						case 1:
							buf.vertexes[w++] = m.def.x;
							break;
						case 2:
							buf.vertexes[w++] = m.def.x;
							buf.vertexes[w++] = m.def.y;
							break;
						case 3:
							buf.vertexes[w++] = m.def.x;
							buf.vertexes[w++] = m.def.y;
							buf.vertexes[w++] = m.def.z;
							break;
						default:
							buf.vertexes[w++] = m.def.x;
							buf.vertexes[w++] = m.def.y;
							buf.vertexes[w++] = m.def.z;
							buf.vertexes[w++] = m.def.w;
						}
					}
					m = m.next;
				}
			}
			var r1 = 0;
			var _g13 = 0;
			var _g6 = buf.indexes.length;
			while(_g13 < _g6) buf.indexes[_g13++] = ibuf.b[r1++] | ibuf.b[r1++] << 8;
		} else {
			var icount = geom.indexCounts[material];
			var length2 = geom.vertexCount;
			var vmap = new Array(length2);
			var vertexes = new Array(0);
			buf.indexes = new Array(icount);
			var r2 = 0;
			var vcount = 0;
			var _g14 = 0;
			var _g7 = buf.indexes.length;
			while(_g14 < _g7) {
				var i1 = _g14++;
				var vid1 = ibuf.b[r2++] | ibuf.b[r2++] << 8;
				var rid = vmap[vid1];
				if(rid == 0) {
					rid = ++vcount;
					vmap[vid1] = rid;
					var m1 = map;
					while(m1 != null) {
						if(m1.def == null) {
							var r3 = vid1 * geom.vertexStride;
							var _g32 = 0;
							var _g22 = m1.size;
							while(_g32 < _g22) vertexes.push(vbuf.getFloat(r3 + m1.offset + _g32++ << 2));
						} else {
							switch(m1.size) {
							case 1:
								vertexes.push(m1.def.x);
								break;
							case 2:
								vertexes.push(m1.def.x);
								vertexes.push(m1.def.y);
								break;
							case 3:
								vertexes.push(m1.def.x);
								vertexes.push(m1.def.y);
								vertexes.push(m1.def.z);
								break;
							default:
								vertexes.push(m1.def.x);
								vertexes.push(m1.def.y);
								vertexes.push(m1.def.z);
								vertexes.push(m1.def.w);
							}
						}
						m1 = m1.next;
					}
				}
				buf.indexes[i1] = rid - 1;
			}
			buf.vertexes = vertexes;
		}
		this.entry.close();
		hxd_impl_Tmp.saveBytes(ibuf);
		hxd_impl_Tmp.saveBytes(vbuf);
		return buf;
	}
	,makePrimitive: function(id) {
		var p = this.cachedPrimitives[id];
		if(p != null) {
			return p;
		}
		p = new h3d_prim_HMDModel(this.header.geometries[id],this.header.dataPosition,this);
		this.cachedPrimitives[id] = p;
		return p;
	}
	,makeMaterial: function(model,mid,loadTexture) {
		var m = this.header.materials[mid];
		var mat = new h3d_mat_MeshMaterial();
		mat.name = m.name;
		if(m.diffuseTexture != null) {
			mat.set_texture(loadTexture(m.diffuseTexture));
			if(mat.get_texture() == null) {
				mat.set_texture(h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Library.hx", lineNumber : 262, className : "hxd.fmt.hmd.Library", methodName : "makeMaterial"}));
			}
		}
		mat.set_blendMode(m.blendMode);
		mat.passes.set_culling(m.culling);
		if(m.killAlpha != null) {
			var t = mat.passes.getShader(h3d_shader_Texture);
			t.constModified = true;
			t.killAlpha__ = true;
			t.killAlphaThreshold__ = m.killAlpha;
		}
		if(m.props != null && m.props.indexOf(hxd_fmt_hmd_Property.HasMaterialFlags) >= 0) {
			if((m.flags & 1) != 0) {
				mat.passes.enableLights = true;
			}
			if((m.flags & 2) != 0) {
				mat.set_castShadows(true);
			}
			if((m.flags & 4) != 0) {
				mat.set_receiveShadows(true);
			}
			if((m.flags & 16) != 0) {
				mat.passes.addShader(h3d_mat_Defaults.makeVolumeDecal(this.header.geometries[model.geometry].bounds));
			}
			if((m.flags & 8) != 0) {
				mat.get_texture().set_wrap(h3d_mat_Wrap.Repeat);
			}
		}
		return mat;
	}
	,makeSkin: function(skin) {
		var _this = this.cachedSkin;
		var key = skin.name;
		var s = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(s != null) {
			return s;
		}
		s = new h3d_anim_Skin(skin.name,0,3);
		s.namedJoints = new haxe_ds_StringMap();
		s.allJoints = [];
		s.boundJoints = [];
		s.rootJoints = [];
		var _g = 0;
		var _g1 = skin.joints;
		while(_g < _g1.length) {
			var joint = _g1[_g];
			++_g;
			var j = new h3d_anim_Joint();
			j.name = joint.name;
			j.index = s.allJoints.length;
			j.defMat = joint.position.toMatrix();
			if(joint.bind >= 0) {
				j.bindIndex = joint.bind;
				j.transPos = joint.transpos.toMatrix(true);
				s.boundJoints[j.bindIndex] = j;
			}
			if(joint.parent >= 0) {
				var p = s.allJoints[joint.parent];
				p.subs.push(j);
				j.parent = p;
			} else {
				s.rootJoints.push(j);
			}
			s.allJoints.push(j);
			var _this1 = s.namedJoints;
			var key1 = j.name;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,j);
			} else {
				_this1.h[key1] = j;
			}
		}
		if(skin.split != null) {
			s.splitJoints = [];
			var _g2 = 0;
			var _g11 = skin.split;
			while(_g2 < _g11.length) {
				var ss = _g11[_g2];
				++_g2;
				var tmp = ss.materialIndex;
				var _g21 = [];
				var _g3 = 0;
				var _g4 = ss.joints;
				while(_g3 < _g4.length) {
					var j1 = _g4[_g3];
					++_g3;
					_g21.push(s.allJoints[j1]);
				}
				s.splitJoints.push({ material : tmp, joints : _g21});
			}
		}
		var _this2 = this.cachedSkin;
		var key2 = skin.name;
		if(__map_reserved[key2] != null) {
			_this2.setReserved(key2,s);
		} else {
			_this2.h[key2] = s;
		}
		return s;
	}
	,getModelProperty: function(objName,p,def) {
		var _g = 0;
		var _g1 = this.header.models;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			if(m.name == objName) {
				if(m.props != null) {
					var _g2 = 0;
					var _g3 = m.props;
					while(_g2 < _g3.length) {
						var pr = _g3[_g2];
						++_g2;
						if(pr[1] == p[1]) {
							return pr.slice(2)[0];
						}
					}
				}
				return def;
			}
		}
		if(def == null) {
			throw new js__$Boot_HaxeError("Model " + objName + " not found");
		}
		return def;
	}
	,makeObject: function(loadTexture) {
		if(loadTexture == null) {
			loadTexture = function(_) {
				return h3d_mat_Texture.fromColor(16711935,null,{ fileName : "Library.hx", lineNumber : 339, className : "hxd.fmt.hmd.Library", methodName : "makeObject"});
			};
		}
		if(this.header.models.length == 0) {
			throw new js__$Boot_HaxeError("This file does not contain any model");
		}
		var objs = [];
		var _g = 0;
		var _g1 = this.header.models;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var obj;
			if(m.geometry < 0) {
				obj = new h3d_scene_Object();
			} else {
				var prim = this.makePrimitive(m.geometry);
				if(m.skin != null) {
					var skinData = this.makeSkin(m.skin);
					skinData.primitive = prim;
					var _g2 = [];
					var _g3 = 0;
					var _g4 = m.materials;
					while(_g3 < _g4.length) {
						var mat = _g4[_g3];
						++_g3;
						_g2.push(this.makeMaterial(m,mat,loadTexture));
					}
					obj = new h3d_scene_Skin(skinData,_g2);
				} else if(m.materials.length == 1) {
					obj = new h3d_scene_Mesh(prim,this.makeMaterial(m,m.materials[0],loadTexture));
				} else {
					var _g21 = [];
					var _g31 = 0;
					var _g41 = m.materials;
					while(_g31 < _g41.length) {
						var mat1 = _g41[_g31];
						++_g31;
						_g21.push(this.makeMaterial(m,mat1,loadTexture));
					}
					obj = new h3d_scene_MultiMaterial(prim,_g21);
				}
			}
			obj.name = m.name;
			obj.defaultTransform = m.position.toMatrix();
			obj.flags |= 1;
			objs.push(obj);
			var p = objs[m.parent];
			if(p != null) {
				p.addChild(obj);
			}
		}
		return objs[0];
	}
	,loadAnimation: function(name) {
		var _this = this.cachedAnimations;
		var key = name == null?"":name;
		var a = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(a != null) {
			return a;
		}
		var a1 = null;
		if(name == null) {
			if(this.header.animations.length == 0) {
				return null;
			}
			a1 = this.header.animations[0];
		} else {
			var _g = 0;
			var _g1 = this.header.animations;
			while(_g < _g1.length) {
				var a2 = _g1[_g];
				++_g;
				if(a2.name == name) {
					a1 = a2;
					break;
				}
			}
			if(a1 == null) {
				throw new js__$Boot_HaxeError("Animation " + name + " not found !");
			}
		}
		var l = this.makeAnimation(a1);
		var _this1 = this.cachedAnimations;
		var key1 = a1.name;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,l);
		} else {
			_this1.h[key1] = l;
		}
		if(name == null) {
			var _this2 = this.cachedAnimations;
			if(__map_reserved[""] != null) {
				_this2.setReserved("",l);
			} else {
				_this2.h[""] = l;
			}
		}
		return l;
	}
	,makeAnimation: function(a) {
		var l = new h3d_anim_LinearAnimation(a.name,a.frames,a.sampling);
		l.speed = a.speed;
		l.loop = a.loop;
		if(a.events != null) {
			l.setEvents(a.events);
		}
		this.entry.open();
		this.entry.skip(this.header.dataPosition + a.dataPosition);
		var _g = 0;
		var _g1 = a.objects;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			var pos = (o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasPosition[1]) != 0;
			var rot = (o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasRotation[1]) != 0;
			var scale = (o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasScale[1]) != 0;
			if(pos || rot || scale) {
				var frameCount = a.frames;
				if((o.flags & 1 << hxd_fmt_hmd_AnimationFlag.SinglePosition[1]) != 0) {
					frameCount = 1;
				}
				var fl = new Array(frameCount);
				var size = ((pos?3:0) + (rot?3:0) + (scale?3:0)) * 4 * frameCount;
				var data = hxd_impl_Tmp.getBytes(size);
				this.entry.read(data,0,size);
				var p = 0;
				var _g3 = 0;
				var _g2 = frameCount;
				while(_g3 < _g2) {
					var i = _g3++;
					var f = new h3d_anim_LinearFrame();
					if(pos) {
						f.tx = data.getFloat(p);
						p += 4;
						f.ty = data.getFloat(p);
						p += 4;
						f.tz = data.getFloat(p);
						p += 4;
					} else {
						f.tx = 0;
						f.ty = 0;
						f.tz = 0;
					}
					if(rot) {
						f.qx = data.getFloat(p);
						p += 4;
						f.qy = data.getFloat(p);
						p += 4;
						f.qz = data.getFloat(p);
						p += 4;
						var qw = 1 - (f.qx * f.qx + f.qy * f.qy + f.qz * f.qz);
						f.qw = qw < 0?-Math.sqrt(-qw):Math.sqrt(qw);
					} else {
						f.qx = 0;
						f.qy = 0;
						f.qz = 0;
						f.qw = 1;
					}
					if(scale) {
						f.sx = data.getFloat(p);
						p += 4;
						f.sy = data.getFloat(p);
						p += 4;
						f.sz = data.getFloat(p);
						p += 4;
					} else {
						f.sx = 1;
						f.sy = 1;
						f.sz = 1;
					}
					fl[i] = f;
				}
				l.addCurve(o.name,fl,rot,scale);
				hxd_impl_Tmp.saveBytes(data);
			}
			if((o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasUV[1]) != 0) {
				var length = a.frames * 2;
				var fl1 = new Array(length);
				var size1 = 8 * a.frames;
				var data1 = hxd_impl_Tmp.getBytes(size1);
				this.entry.read(data1,0,size1);
				var _g31 = 0;
				var _g21 = fl1.length;
				while(_g31 < _g21) {
					var i1 = _g31++;
					fl1[i1] = data1.getFloat(i1 * 4);
				}
				l.addUVCurve(o.name,fl1);
				hxd_impl_Tmp.saveBytes(data1);
			}
			if((o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasAlpha[1]) != 0) {
				var length1 = a.frames;
				var fl2 = new Array(length1);
				var size2 = 4 * a.frames;
				var data2 = hxd_impl_Tmp.getBytes(size2);
				this.entry.read(data2,0,size2);
				var _g32 = 0;
				var _g22 = fl2.length;
				while(_g32 < _g22) {
					var i2 = _g32++;
					fl2[i2] = data2.getFloat(i2 * 4);
				}
				l.addAlphaCurve(o.name,fl2);
				hxd_impl_Tmp.saveBytes(data2);
			}
			if((o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasProps[1]) != 0) {
				var _g23 = 0;
				var _g33 = o.props;
				while(_g23 < _g33.length) {
					var p1 = _g33[_g23];
					++_g23;
					var length2 = a.frames;
					var fl3 = new Array(length2);
					var size3 = 4 * a.frames;
					var data3 = hxd_impl_Tmp.getBytes(size3);
					this.entry.read(data3,0,size3);
					var _g5 = 0;
					var _g4 = fl3.length;
					while(_g5 < _g4) {
						var i3 = _g5++;
						fl3[i3] = data3.getFloat(i3 * 4);
					}
					l.addPropCurve(o.name,p1,fl3);
					hxd_impl_Tmp.saveBytes(data3);
				}
			}
		}
		this.entry.close();
		return l;
	}
	,__class__: hxd_fmt_hmd_Library
};
var hxd_fmt_hmd_Reader = function(i) {
	this.i = i;
};
$hxClasses["hxd.fmt.hmd.Reader"] = hxd_fmt_hmd_Reader;
hxd_fmt_hmd_Reader.__name__ = ["hxd","fmt","hmd","Reader"];
hxd_fmt_hmd_Reader.prototype = {
	readProperty: function() {
		var _g = this.i.readByte();
		switch(_g) {
		case 0:
			return hxd_fmt_hmd_Property.CameraFOVY(haxe_io_FPHelper.i32ToFloat(this.i.readInt32()));
		case 1:
			return hxd_fmt_hmd_Property.HasMaterialFlags;
		default:
			throw new js__$Boot_HaxeError("Unknown property #" + _g);
		}
	}
	,readProps: function() {
		if(this.version == 1) {
			return null;
		}
		var n = this.i.readByte();
		if(n == 0) {
			return null;
		}
		var _g = [];
		var _g2 = 0;
		while(_g2 < n) {
			++_g2;
			_g.push(this.readProperty());
		}
		return _g;
	}
	,readName: function() {
		var b = this.i.readByte();
		if(b == 255) {
			return null;
		}
		return this.i.readString(b);
	}
	,readPosition: function(hasScale) {
		if(hasScale == null) {
			hasScale = true;
		}
		var p = new hxd_fmt_hmd_Position();
		p.x = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		p.y = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		p.z = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		p.qx = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		p.qy = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		p.qz = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		if(hasScale) {
			p.sx = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
			p.sy = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
			p.sz = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		} else {
			p.sx = 1;
			p.sy = 1;
			p.sz = 1;
		}
		return p;
	}
	,readBounds: function() {
		var b = new h3d_col_Bounds();
		b.xMin = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		b.yMin = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		b.zMin = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		b.xMax = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		b.yMax = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		b.zMax = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
		return b;
	}
	,readSkin: function() {
		var name = this.readName();
		if(name == null) {
			return null;
		}
		var s = new hxd_fmt_hmd_Skin();
		s.props = this.readProps();
		s.name = name;
		s.joints = [];
		var _g1 = 0;
		var _g = this.i.readUInt16();
		while(_g1 < _g) {
			++_g1;
			var j = new hxd_fmt_hmd_SkinJoint();
			j.props = this.readProps();
			j.name = this.readName();
			var pid = this.i.readUInt16();
			var hasScale = (pid & 32768) != 0;
			if(hasScale) {
				pid &= 32767;
			}
			j.parent = pid - 1;
			j.position = this.readPosition(hasScale);
			j.bind = this.i.readUInt16() - 1;
			if(j.bind >= 0) {
				j.transpos = this.readPosition(hasScale);
			}
			s.joints.push(j);
		}
		var count = this.i.readByte();
		if(count > 0) {
			s.split = [];
			var _g11 = 0;
			while(_g11 < count) {
				++_g11;
				var ss = new hxd_fmt_hmd_SkinSplit();
				ss.materialIndex = this.i.readByte();
				var _g2 = [];
				var _g4 = 0;
				var _g3 = this.i.readByte();
				while(_g4 < _g3) {
					++_g4;
					_g2.push(this.i.readUInt16());
				}
				ss.joints = _g2;
				s.split.push(ss);
			}
		}
		return s;
	}
	,readHeader: function() {
		var d = new hxd_fmt_hmd_Data();
		var h = this.i.readString(3);
		if(h != "HMD") {
			if(HxOverrides.cca(h,0) == 59) {
				throw new js__$Boot_HaxeError("FBX was not converted to HMD");
			}
			throw new js__$Boot_HaxeError("Invalid HMD header " + encodeURIComponent(h));
		}
		this.version = this.i.readByte();
		if(this.version > 2) {
			throw new js__$Boot_HaxeError("Can't read HMD v" + this.version);
		}
		d.version = this.version;
		d.geometries = [];
		d.dataPosition = this.i.readInt32();
		d.props = this.readProps();
		var _g1 = 0;
		var _g = this.i.readInt32();
		while(_g1 < _g) {
			var k = _g1++;
			var g = new hxd_fmt_hmd_Geometry();
			g.props = this.readProps();
			g.vertexCount = this.i.readInt32();
			g.vertexStride = this.i.readByte();
			var _g2 = [];
			var _g4 = 0;
			var _g3 = this.i.readByte();
			while(_g4 < _g3) {
				var k1 = _g4++;
				_g2.push(new hxd_fmt_hmd_GeometryFormat(this.readName(),this.i.readByte()));
			}
			g.vertexFormat = _g2;
			g.vertexPosition = this.i.readInt32();
			var _g31 = [];
			var _g5 = 0;
			var _g41 = this.i.readByte();
			while(_g5 < _g41) {
				var k2 = _g5++;
				_g31.push(this.i.readInt32());
			}
			g.indexCounts = _g31;
			g.indexPosition = this.i.readInt32();
			g.bounds = this.readBounds();
			d.geometries.push(g);
		}
		d.materials = [];
		var _g11 = 0;
		var _g6 = this.i.readInt32();
		while(_g11 < _g6) {
			var k3 = _g11++;
			var m = new hxd_fmt_hmd_Material();
			m.props = this.readProps();
			m.name = this.readName();
			m.diffuseTexture = this.readName();
			m.blendMode = hxd_fmt_hmd_Reader.BLEND[this.i.readByte()];
			m.culling = hxd_fmt_hmd_Reader.CULLING[this.i.readByte()];
			m.killAlpha = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
			if(m.killAlpha == 1) {
				m.killAlpha = null;
			}
			if(m.props != null && m.props.indexOf(hxd_fmt_hmd_Property.HasMaterialFlags) >= 0) {
				m.flags = this.i.readInt32();
			}
			d.materials.push(m);
		}
		d.models = [];
		var _g12 = 0;
		var _g7 = this.i.readInt32();
		while(_g12 < _g7) {
			var k4 = _g12++;
			var m1 = new hxd_fmt_hmd_Model();
			m1.props = this.readProps();
			m1.name = this.readName();
			m1.parent = this.i.readInt32() - 1;
			m1.follow = this.readName();
			m1.position = this.readPosition();
			m1.geometry = this.i.readInt32() - 1;
			d.models.push(m1);
			if(m1.geometry < 0) {
				continue;
			}
			m1.materials = [];
			var _g32 = 0;
			var _g21 = this.i.readByte();
			while(_g32 < _g21) {
				var k5 = _g32++;
				m1.materials.push(this.i.readInt32());
			}
			m1.skin = this.readSkin();
		}
		d.animations = [];
		var _g13 = 0;
		var _g8 = this.i.readInt32();
		while(_g13 < _g8) {
			var k6 = _g13++;
			var a = new hxd_fmt_hmd_Animation();
			a.props = this.readProps();
			a.name = this.readName();
			a.frames = this.i.readInt32();
			a.sampling = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
			a.speed = haxe_io_FPHelper.i32ToFloat(this.i.readInt32());
			var flags = this.i.readByte();
			a.loop = (flags & 1) != 0;
			a.dataPosition = this.i.readInt32();
			a.objects = [];
			var _g33 = 0;
			var _g22 = this.i.readInt32();
			while(_g33 < _g22) {
				var k7 = _g33++;
				var o = new hxd_fmt_hmd_AnimationObject();
				o.name = this.readName();
				o.flags = this.i.readByte();
				a.objects.push(o);
				if((o.flags & 1 << hxd_fmt_hmd_AnimationFlag.HasProps[1]) != 0) {
					var _g42 = [];
					var _g61 = 0;
					var _g51 = this.i.readByte();
					while(_g61 < _g51) {
						var i = _g61++;
						_g42.push(this.readName());
					}
					o.props = _g42;
				}
			}
			if((flags & 2) != 0) {
				a.events = [];
				var _g34 = 0;
				var _g23 = this.i.readInt32();
				while(_g34 < _g23) {
					var k8 = _g34++;
					var e = new hxd_fmt_hmd_AnimationEvent();
					e.frame = this.i.readInt32();
					e.data = this.readName();
					a.events.push(e);
				}
			}
			d.animations.push(a);
		}
		return d;
	}
	,read: function() {
		var h = this.readHeader();
		h.data = this.i.read(this.i.readInt32());
		return h;
	}
	,__class__: hxd_fmt_hmd_Reader
};
var hxd_fmt_scn_Operation = $hxClasses["hxd.fmt.scn.Operation"] = { __ename__ : ["hxd","fmt","scn","Operation"], __constructs__ : ["Log","Begin","Clear","Resize","SelectShader","Material","UploadShaderBuffers","UploadShaderTextures","AllocTexture","AllocIndexes","AllocVertexes","DisposeTexture","DisposeIndexes","DisposeVertexes","UploadTexture","UploadIndexes","UploadVertexes","SelectBuffer","SelectMultiBuffer","Draw","RenderZone","RenderTarget","Present"] };
hxd_fmt_scn_Operation.Log = function(str) { var $x = ["Log",0,str]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.Begin = ["Begin",1];
hxd_fmt_scn_Operation.Begin.toString = $estr;
hxd_fmt_scn_Operation.Begin.__enum__ = hxd_fmt_scn_Operation;
hxd_fmt_scn_Operation.Clear = function(color,depth,stencil) { var $x = ["Clear",2,color,depth,stencil]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.Resize = function(width,height) { var $x = ["Resize",3,width,height]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.SelectShader = function(id,data) { var $x = ["SelectShader",4,id,data]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.Material = function(bits) { var $x = ["Material",5,bits]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.UploadShaderBuffers = function(globals,vertex,fragment) { var $x = ["UploadShaderBuffers",6,globals,vertex,fragment]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.UploadShaderTextures = function(vertex,fragment) { var $x = ["UploadShaderTextures",7,vertex,fragment]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.AllocTexture = function(id,name,width,height,flags) { var $x = ["AllocTexture",8,id,name,width,height,flags]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.AllocIndexes = function(id,count) { var $x = ["AllocIndexes",9,id,count]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.AllocVertexes = function(id,size,stride,flags) { var $x = ["AllocVertexes",10,id,size,stride,flags]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.DisposeTexture = function(id) { var $x = ["DisposeTexture",11,id]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.DisposeIndexes = function(id) { var $x = ["DisposeIndexes",12,id]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.DisposeVertexes = function(id) { var $x = ["DisposeVertexes",13,id]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.UploadTexture = function(id,pixels,mipMap,side) { var $x = ["UploadTexture",14,id,pixels,mipMap,side]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.UploadIndexes = function(id,start,count,data) { var $x = ["UploadIndexes",15,id,start,count,data]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.UploadVertexes = function(id,start,count,data) { var $x = ["UploadVertexes",16,id,start,count,data]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.SelectBuffer = function(id,raw) { var $x = ["SelectBuffer",17,id,raw]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.SelectMultiBuffer = function(bufs) { var $x = ["SelectMultiBuffer",18,bufs]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.Draw = function(indexes,start,ntri) { var $x = ["Draw",19,indexes,start,ntri]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.RenderZone = function(x,y,width,height) { var $x = ["RenderZone",20,x,y,width,height]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.RenderTarget = function(tid) { var $x = ["RenderTarget",21,tid]; $x.__enum__ = hxd_fmt_scn_Operation; $x.toString = $estr; return $x; };
hxd_fmt_scn_Operation.Present = ["Present",22];
hxd_fmt_scn_Operation.Present.toString = $estr;
hxd_fmt_scn_Operation.Present.__enum__ = hxd_fmt_scn_Operation;
hxd_fmt_scn_Operation.__empty_constructs__ = [hxd_fmt_scn_Operation.Begin,hxd_fmt_scn_Operation.Present];
var hxd_fmt_scn_Writer = function() {
	this.out = new haxe_io_BytesBuffer();
};
$hxClasses["hxd.fmt.scn.Writer"] = hxd_fmt_scn_Writer;
hxd_fmt_scn_Writer.__name__ = ["hxd","fmt","scn","Writer"];
hxd_fmt_scn_Writer.prototype = {
	write: function(d) {
		this.out.b.push(d.version);
		this.out.addInt32(d.ops.length);
		var _g = 0;
		var _g1 = d.ops;
		while(_g < _g1.length) {
			var op = _g1[_g];
			++_g;
			this.out.b.push(op[1]);
			switch(op[1]) {
			case 0:
				var str = op[2];
				this.out.addInt32(str.length);
				var _this = this.out;
				var src = haxe_io_Bytes.ofString(str);
				var b2 = src.b;
				var _g11 = 0;
				var _g2 = src.length;
				while(_g11 < _g2) _this.b.push(b2[_g11++]);
				break;
			case 2:
				var stencil = op[4];
				var depth = op[3];
				var color = op[2];
				this.out.b.push((color == null?0:1) | (depth == null?0:2) | (stencil == null?0:4));
				if(color != null) {
					this.out.addInt32(haxe_io_FPHelper.floatToI32(color.x));
					this.out.addInt32(haxe_io_FPHelper.floatToI32(color.y));
					this.out.addInt32(haxe_io_FPHelper.floatToI32(color.z));
					this.out.addInt32(haxe_io_FPHelper.floatToI32(color.w));
				}
				if(depth != null) {
					this.out.addInt32(haxe_io_FPHelper.floatToI32(depth));
				}
				if(stencil != null) {
					this.out.addInt32(stencil);
				}
				break;
			case 3:
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				break;
			case 4:
				var data = op[3];
				this.out.addInt32(op[2]);
				if(data != null) {
					this.out.addInt32(data.length);
					var _this1 = this.out;
					var len = data.length;
					if(len < 0 || len > data.length) {
						throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
					}
					var b21 = data.b;
					var _g12 = 0;
					while(_g12 < len) _this1.b.push(b21[_g12++]);
				} else {
					this.out.addInt32(0);
				}
				break;
			case 5:
				this.out.addInt32(op[2]);
				break;
			case 6:
				var fragment = op[4];
				var vertex = op[3];
				this.out.b.push(op[2]?1:0);
				this.out.addInt32(vertex.length);
				var _g21 = 0;
				while(_g21 < vertex.length) {
					var v = vertex[_g21];
					++_g21;
					this.out.addInt32(haxe_io_FPHelper.floatToI32(v));
				}
				this.out.addInt32(fragment.length);
				var _g22 = 0;
				while(_g22 < fragment.length) {
					var v1 = fragment[_g22];
					++_g22;
					this.out.addInt32(haxe_io_FPHelper.floatToI32(v1));
				}
				break;
			case 7:
				var fragment1 = op[3];
				var vertex1 = op[2];
				this.out.b.push(vertex1.length);
				var _g23 = 0;
				while(_g23 < vertex1.length) {
					var t = vertex1[_g23];
					++_g23;
					this.out.addInt32(t);
				}
				this.out.b.push(fragment1.length);
				var _g24 = 0;
				while(_g24 < fragment1.length) {
					var t1 = fragment1[_g24];
					++_g24;
					this.out.addInt32(t1);
				}
				break;
			case 8:
				var flags = op[6];
				var h = op[5];
				var w = op[4];
				var name = op[3];
				this.out.addInt32(op[2]);
				if(name == null) {
					this.out.addInt32(-1);
				} else {
					this.out.addInt32(name.length);
					var _this2 = this.out;
					var src1 = haxe_io_Bytes.ofString(name);
					var b22 = src1.b;
					var _g13 = 0;
					var _g3 = src1.length;
					while(_g13 < _g3) _this2.b.push(b22[_g13++]);
				}
				this.out.addInt32(w);
				this.out.addInt32(h);
				this.out.addInt32(flags);
				break;
			case 9:
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				break;
			case 10:
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				this.out.addInt32(op[4]);
				this.out.addInt32(op[5]);
				break;
			case 11:
				this.out.addInt32(op[2]);
				break;
			case 12:
				this.out.addInt32(op[2]);
				break;
			case 13:
				this.out.addInt32(op[2]);
				break;
			case 14:
				var side = op[5];
				var mipMap = op[4];
				var pixels = op[3];
				this.out.addInt32(op[2]);
				this.out.addInt32(pixels.width);
				this.out.addInt32(pixels.height);
				this.out.addInt32(pixels.format[1]);
				this.out.addInt32(pixels.flags);
				var _this3 = this.out;
				var src2 = pixels.bytes;
				var b23 = src2.b;
				var _g14 = 0;
				var _g4 = src2.length;
				while(_g14 < _g4) _this3.b.push(b23[_g14++]);
				this.out.addInt32(mipMap);
				this.out.b.push(side);
				break;
			case 15:
				var data1 = op[5];
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				this.out.addInt32(op[4]);
				this.out.addInt32(data1.length);
				var _this4 = this.out;
				var b24 = data1.b;
				var _g15 = 0;
				var _g5 = data1.length;
				while(_g15 < _g5) _this4.b.push(b24[_g15++]);
				break;
			case 16:
				var data2 = op[5];
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				this.out.addInt32(op[4]);
				this.out.addInt32(data2.length);
				var _this5 = this.out;
				var b25 = data2.b;
				var _g16 = 0;
				var _g6 = data2.length;
				while(_g16 < _g6) _this5.b.push(b25[_g16++]);
				break;
			case 17:
				this.out.addInt32(op[2]);
				this.out.b.push(op[3]?1:0);
				break;
			case 18:
				var bufs = op[2];
				this.out.b.push(bufs.length);
				var _g25 = 0;
				while(_g25 < bufs.length) {
					var b = bufs[_g25];
					++_g25;
					this.out.addInt32(b.vbuf);
					this.out.b.push(b.offset);
				}
				break;
			case 19:
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				this.out.addInt32(op[4]);
				break;
			case 20:
				this.out.addInt32(op[2]);
				this.out.addInt32(op[3]);
				this.out.addInt32(op[4]);
				this.out.addInt32(op[5]);
				break;
			case 21:
				this.out.addInt32(op[2]);
				break;
			case 1:case 22:
				break;
			}
		}
		return this.out.getBytes();
	}
	,__class__: hxd_fmt_scn_Writer
};
var hxd_fs_FileEntry = function() { };
$hxClasses["hxd.fs.FileEntry"] = hxd_fs_FileEntry;
hxd_fs_FileEntry.__name__ = ["hxd","fs","FileEntry"];
hxd_fs_FileEntry.prototype = {
	getSign: function() {
		return 0;
	}
	,getBytes: function() {
		return null;
	}
	,getText: function() {
		return this.getBytes().toString();
	}
	,getTmpBytes: function() {
		return this.getBytes();
	}
	,open: function() {
	}
	,skip: function(nbytes) {
	}
	,readByte: function() {
		return 0;
	}
	,read: function(out,pos,size) {
	}
	,close: function() {
	}
	,load: function(onReady) {
		if(!this.get_isAvailable()) {
			throw new js__$Boot_HaxeError("load() not implemented");
		} else if(onReady != null) {
			onReady();
		}
	}
	,loadBitmap: function(onLoaded) {
		throw new js__$Boot_HaxeError("loadBitmap() not implemented");
	}
	,watch: function(onChanged) {
	}
	,exists: function(name) {
		return false;
	}
	,get: function(name) {
		return null;
	}
	,iterator: function() {
		return null;
	}
	,get_isAvailable: function() {
		return true;
	}
	,get_isDirectory: function() {
		return false;
	}
	,get_size: function() {
		return 0;
	}
	,get_path: function() {
		throw new js__$Boot_HaxeError("path() not implemented");
	}
	,get_directory: function() {
		var p = this.get_path().split("/");
		p.pop();
		return p.join("/");
	}
	,get_extension: function() {
		var np = this.name.split(".");
		if(np.length == 1) {
			return "";
		} else {
			return np.pop().toLowerCase();
		}
	}
	,__class__: hxd_fs_FileEntry
};
var hxd_fs_BytesFileEntry = function(path,bytes) {
	this.fullPath = path;
	this.name = path.split("/").pop();
	this.bytes = bytes;
};
$hxClasses["hxd.fs.BytesFileEntry"] = hxd_fs_BytesFileEntry;
hxd_fs_BytesFileEntry.__name__ = ["hxd","fs","BytesFileEntry"];
hxd_fs_BytesFileEntry.__super__ = hxd_fs_FileEntry;
hxd_fs_BytesFileEntry.prototype = $extend(hxd_fs_FileEntry.prototype,{
	get_path: function() {
		return this.fullPath;
	}
	,getSign: function() {
		return this.bytes.b[0] | this.bytes.b[1] << 8 | this.bytes.b[2] << 16 | this.bytes.b[3] << 24;
	}
	,getBytes: function() {
		return this.bytes;
	}
	,open: function() {
		this.pos = 0;
	}
	,skip: function(nbytes) {
		this.pos += nbytes;
	}
	,readByte: function() {
		return this.bytes.b[this.pos++];
	}
	,read: function(out,pos,size) {
		out.blit(pos,this.bytes,this.pos,size);
		this.pos += size;
	}
	,close: function() {
	}
	,load: function(onReady) {
		haxe_Timer.delay(onReady,1);
	}
	,loadBitmap: function(onLoaded) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,exists: function(name) {
		return false;
	}
	,get: function(name) {
		return null;
	}
	,iterator: function() {
		return new hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry([]);
	}
	,get_size: function() {
		return this.bytes.length;
	}
	,__class__: hxd_fs_BytesFileEntry
});
var hxd_fs_FileSystem = function() { };
$hxClasses["hxd.fs.FileSystem"] = hxd_fs_FileSystem;
hxd_fs_FileSystem.__name__ = ["hxd","fs","FileSystem"];
hxd_fs_FileSystem.prototype = {
	__class__: hxd_fs_FileSystem
};
var hxd_fs_BytesFileSystem = function() {
};
$hxClasses["hxd.fs.BytesFileSystem"] = hxd_fs_BytesFileSystem;
hxd_fs_BytesFileSystem.__name__ = ["hxd","fs","BytesFileSystem"];
hxd_fs_BytesFileSystem.__interfaces__ = [hxd_fs_FileSystem];
hxd_fs_BytesFileSystem.prototype = {
	getRoot: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,getBytes: function(path) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,exists: function(path) {
		return this.getBytes(path) != null;
	}
	,get: function(path) {
		var bytes = this.getBytes(path);
		if(bytes == null) {
			throw new js__$Boot_HaxeError("Resource not found '" + path + "'");
		}
		return new hxd_fs_BytesFileEntry(path,bytes);
	}
	,dispose: function() {
	}
	,__class__: hxd_fs_BytesFileSystem
};
var hxd_fs__$EmbedFileSystem_EmbedEntry = function(fs,name,relPath,data) {
	this.fs = fs;
	this.name = name;
	this.relPath = relPath;
	this.data = data;
};
$hxClasses["hxd.fs._EmbedFileSystem.EmbedEntry"] = hxd_fs__$EmbedFileSystem_EmbedEntry;
hxd_fs__$EmbedFileSystem_EmbedEntry.__name__ = ["hxd","fs","_EmbedFileSystem","EmbedEntry"];
hxd_fs__$EmbedFileSystem_EmbedEntry.__super__ = hxd_fs_FileEntry;
hxd_fs__$EmbedFileSystem_EmbedEntry.prototype = $extend(hxd_fs_FileEntry.prototype,{
	getSign: function() {
		var old = this.readPos;
		this.open();
		this.readPos = old;
		return this.bytes.b[0] | this.bytes.b[1] << 8 | this.bytes.b[2] << 16 | this.bytes.b[3] << 24;
	}
	,getBytes: function() {
		if(this.bytes == null) {
			this.open();
		}
		return this.bytes;
	}
	,open: function() {
		if(this.bytes == null) {
			this.bytes = haxe_Resource.getBytes(this.data);
			if(this.bytes == null) {
				throw new js__$Boot_HaxeError("Missing resource " + this.data);
			}
		}
		this.readPos = 0;
	}
	,skip: function(nbytes) {
		this.readPos += nbytes;
	}
	,readByte: function() {
		return this.bytes.b[this.readPos++];
	}
	,read: function(out,pos,size) {
		out.blit(pos,this.bytes,this.readPos,size);
		this.readPos += size;
	}
	,close: function() {
		this.bytes = null;
		this.readPos = 0;
	}
	,load: function(onReady) {
		if(onReady != null) {
			haxe_Timer.delay(onReady,1);
		}
	}
	,loadBitmap: function(onLoaded) {
		var rawData = null;
		var _g = 0;
		var _g1 = haxe_Resource.content;
		while(_g < _g1.length) {
			var res = _g1[_g];
			++_g;
			if(res.name == this.data) {
				rawData = res.data;
				break;
			}
		}
		if(rawData == null) {
			throw new js__$Boot_HaxeError("Missing resource " + this.data);
		}
		var image = new Image();
		image.onload = function(_) {
			onLoaded(image);
		};
		var extra = "";
		var _g11 = 0;
		var _g2 = (3 - (rawData.length * 6 >> 3) * 4 % 3) % 3;
		while(_g11 < _g2) {
			++_g11;
			extra += "=";
		}
		image.src = "data:image/" + this.get_extension() + ";base64," + rawData + extra;
	}
	,get_isDirectory: function() {
		return this.fs.isDirectory(this.relPath);
	}
	,get_path: function() {
		if(this.relPath == ".") {
			return "<root>";
		} else {
			return this.relPath;
		}
	}
	,exists: function(name) {
		return this.fs.exists(this.relPath == "."?name:this.relPath + "/" + name);
	}
	,get: function(name) {
		return this.fs.get(this.relPath == "."?name:this.relPath + "/" + name);
	}
	,get_size: function() {
		this.open();
		return this.bytes.length;
	}
	,iterator: function() {
		return new hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry(this.fs.subFiles(this.relPath));
	}
	,__class__: hxd_fs__$EmbedFileSystem_EmbedEntry
});
var hxd_fs_EmbedFileSystem = function(root) {
	this.root = root;
};
$hxClasses["hxd.fs.EmbedFileSystem"] = hxd_fs_EmbedFileSystem;
hxd_fs_EmbedFileSystem.__name__ = ["hxd","fs","EmbedFileSystem"];
hxd_fs_EmbedFileSystem.__interfaces__ = [hxd_fs_FileSystem];
hxd_fs_EmbedFileSystem.resolve = function(path) {
	return "R_" + path.replace(hxd_fs_EmbedFileSystem.invalidChars.r,"_");
};
hxd_fs_EmbedFileSystem.prototype = {
	getRoot: function() {
		return new hxd_fs__$EmbedFileSystem_EmbedEntry(this,"root",".",null);
	}
	,splitPath: function(path) {
		if(path == ".") {
			return [];
		} else {
			return path.split("/");
		}
	}
	,subFiles: function(path) {
		var r = this.root;
		var _g = 0;
		var _g1 = this.splitPath(path);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			r = Reflect.field(r,p);
		}
		if(r == null) {
			throw new js__$Boot_HaxeError(path + " is not a directory");
		}
		var fields = Reflect.fields(r);
		fields.sort(Reflect.compare);
		var _g2 = [];
		var _g11 = 0;
		while(_g11 < fields.length) {
			var name = fields[_g11];
			++_g11;
			_g2.push(this.get(path == "."?name:path + "/" + name));
		}
		return _g2;
	}
	,isDirectory: function(path) {
		var r = this.root;
		var _g = 0;
		var _g1 = this.splitPath(path);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			r = Reflect.field(r,p);
		}
		if(r != null) {
			return r != true;
		} else {
			return false;
		}
	}
	,exists: function(path) {
		var r = this.root;
		var _g = 0;
		var _g1 = this.splitPath(path);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			r = Reflect.field(r,p);
			if(r == null) {
				return false;
			}
		}
		return true;
	}
	,get: function(path) {
		if(!this.exists(path)) {
			throw new js__$Boot_HaxeError(new hxd_fs_NotFound(path));
		}
		var id = hxd_fs_EmbedFileSystem.resolve(path);
		return new hxd_fs__$EmbedFileSystem_EmbedEntry(this,path.split("/").pop(),path,id);
	}
	,dispose: function() {
	}
	,__class__: hxd_fs_EmbedFileSystem
};
var hxd_fs_FileInput = function(f) {
	this.f = f;
	f.open();
};
$hxClasses["hxd.fs.FileInput"] = hxd_fs_FileInput;
hxd_fs_FileInput.__name__ = ["hxd","fs","FileInput"];
hxd_fs_FileInput.__super__ = haxe_io_Input;
hxd_fs_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	skip: function(nbytes) {
		this.f.skip(nbytes);
	}
	,readByte: function() {
		return this.f.readByte();
	}
	,readBytes: function(b,pos,len) {
		this.f.read(b,pos,len);
		return len;
	}
	,close: function() {
		this.f.close();
	}
	,__class__: hxd_fs_FileInput
});
var hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$ = {};
$hxClasses["hxd.fs._LoadedBitmap.LoadedBitmap_Impl_"] = hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$;
hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$.__name__ = ["hxd","fs","_LoadedBitmap","LoadedBitmap_Impl_"];
hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$._new = function(data) {
	return data;
};
hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$.toBitmap = function(this1) {
	var bmp = new hxd_BitmapData(this1.width,this1.height);
	bmp.ctx.drawImage(this1,0,0);
	return bmp;
};
hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$.toNative = function(this1) {
	return this1;
};
var hxd_fs_NotFound = function(path) {
	this.path = path;
};
$hxClasses["hxd.fs.NotFound"] = hxd_fs_NotFound;
hxd_fs_NotFound.__name__ = ["hxd","fs","NotFound"];
hxd_fs_NotFound.prototype = {
	toString: function() {
		return "Resource file not found '" + this.path + "'";
	}
	,__class__: hxd_fs_NotFound
};
var hxd_impl_ArrayIterator = function(a) {
	this.i = 0;
	this.a = a;
	this.l = this.a.length;
};
$hxClasses["hxd.impl.ArrayIterator"] = hxd_impl_ArrayIterator;
hxd_impl_ArrayIterator.__name__ = ["hxd","impl","ArrayIterator"];
hxd_impl_ArrayIterator.prototype = {
	hasNext: function() {
		return this.i < this.l;
	}
	,next: function() {
		return this.a[this.i++];
	}
	,__class__: hxd_impl_ArrayIterator
};
var hxd_impl_ArrayIterator_$h2d_$Sprite = function(a) {
	this.i = 0;
	this.a = a;
	this.l = this.a.length;
};
$hxClasses["hxd.impl.ArrayIterator_h2d_Sprite"] = hxd_impl_ArrayIterator_$h2d_$Sprite;
hxd_impl_ArrayIterator_$h2d_$Sprite.__name__ = ["hxd","impl","ArrayIterator_h2d_Sprite"];
hxd_impl_ArrayIterator_$h2d_$Sprite.prototype = {
	hasNext: function() {
		return this.i < this.l;
	}
	,next: function() {
		return this.a[this.i++];
	}
	,__class__: hxd_impl_ArrayIterator_$h2d_$Sprite
};
var hxd_impl_ArrayIterator_$h3d_$scene_$Object = function(a) {
	this.i = 0;
	this.a = a;
	this.l = this.a.length;
};
$hxClasses["hxd.impl.ArrayIterator_h3d_scene_Object"] = hxd_impl_ArrayIterator_$h3d_$scene_$Object;
hxd_impl_ArrayIterator_$h3d_$scene_$Object.__name__ = ["hxd","impl","ArrayIterator_h3d_scene_Object"];
hxd_impl_ArrayIterator_$h3d_$scene_$Object.prototype = {
	hasNext: function() {
		return this.i < this.l;
	}
	,next: function() {
		return this.a[this.i++];
	}
	,__class__: hxd_impl_ArrayIterator_$h3d_$scene_$Object
};
var hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry = function(a) {
	this.i = 0;
	this.a = a;
	this.l = this.a.length;
};
$hxClasses["hxd.impl.ArrayIterator_hxd_fs_FileEntry"] = hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry;
hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry.__name__ = ["hxd","impl","ArrayIterator_hxd_fs_FileEntry"];
hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry.prototype = {
	hasNext: function() {
		return this.i < this.l;
	}
	,next: function() {
		return this.a[this.i++];
	}
	,__class__: hxd_impl_ArrayIterator_$hxd_$fs_$FileEntry
};
var hxd_impl_ArrayIterator_$hxd_$res_$Any = function(a) {
	this.i = 0;
	this.a = a;
	this.l = this.a.length;
};
$hxClasses["hxd.impl.ArrayIterator_hxd_res_Any"] = hxd_impl_ArrayIterator_$hxd_$res_$Any;
hxd_impl_ArrayIterator_$hxd_$res_$Any.__name__ = ["hxd","impl","ArrayIterator_hxd_res_Any"];
hxd_impl_ArrayIterator_$hxd_$res_$Any.prototype = {
	hasNext: function() {
		return this.i < this.l;
	}
	,next: function() {
		return this.a[this.i++];
	}
	,__class__: hxd_impl_ArrayIterator_$hxd_$res_$Any
};
var hxd_impl_MemoryReader = function() {
};
$hxClasses["hxd.impl.MemoryReader"] = hxd_impl_MemoryReader;
hxd_impl_MemoryReader.__name__ = ["hxd","impl","MemoryReader"];
hxd_impl_MemoryReader.prototype = {
	b: function(addr) {
		return hxd_impl_Memory.current.b[addr];
	}
	,wb: function(addr,v) {
		hxd_impl_Memory.current.b[addr] = v & 255;
	}
	,'double': function(addr) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,'float': function(addr) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,wfloat: function(addr,v) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,wdouble: function(addr,v) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,i32: function(addr) {
		throw new js__$Boot_HaxeError("TODO");
	}
	,end: function() {
		hxd_impl_Memory.end();
	}
	,__class__: hxd_impl_MemoryReader
};
var hxd_impl_Memory = function() { };
$hxClasses["hxd.impl.Memory"] = hxd_impl_Memory;
hxd_impl_Memory.__name__ = ["hxd","impl","Memory"];
hxd_impl_Memory.select = function(b) {
	if(hxd_impl_Memory.current != null) {
		hxd_impl_Memory.stack.push(hxd_impl_Memory.current);
	}
	hxd_impl_Memory.current = b;
	return hxd_impl_Memory.inst;
};
hxd_impl_Memory.end = function() {
	hxd_impl_Memory.current = hxd_impl_Memory.stack.pop();
};
var hxd_impl_Tmp = function() { };
$hxClasses["hxd.impl.Tmp"] = hxd_impl_Tmp;
hxd_impl_Tmp.__name__ = ["hxd","impl","Tmp"];
hxd_impl_Tmp.outOfMemory = function() {
};
hxd_impl_Tmp.getBytes = function(size) {
	var found = -1;
	var _g1 = 0;
	var _g = hxd_impl_Tmp.bytes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(hxd_impl_Tmp.bytes[i].length >= size) {
			found = i;
		}
	}
	if(found >= 0) {
		var b = hxd_impl_Tmp.bytes[found];
		hxd_impl_Tmp.bytes.splice(found,1);
		return b;
	}
	var sz = 1024;
	while(sz < size) sz = sz * 3 >> 1;
	return hxd_impl_Tmp.allocBytes(sz);
};
hxd_impl_Tmp.freeMemory = function() {
	hxd_impl_Tmp.bytes = [];
	hxd_impl_Tmp.outOfMemory();
};
hxd_impl_Tmp.allocBytes = function(size) {
	try {
		return new haxe_io_Bytes(new ArrayBuffer(size));
	} catch( e ) {
		hxd_impl_Tmp.freeMemory();
		return new haxe_io_Bytes(new ArrayBuffer(size));
	}
};
hxd_impl_Tmp.saveBytes = function(b) {
	var _g1 = 0;
	var _g = hxd_impl_Tmp.bytes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(hxd_impl_Tmp.bytes[i].length <= b.length) {
			hxd_impl_Tmp.bytes.splice(i,0,b);
			if(hxd_impl_Tmp.bytes.length > 8) {
				hxd_impl_Tmp.bytes.pop();
			}
			return;
		}
	}
	hxd_impl_Tmp.bytes.push(b);
};
var hxd_inspect_Property = $hxClasses["hxd.inspect.Property"] = { __ename__ : ["hxd","inspect","Property"], __constructs__ : ["PBool","PInt","PFloat","PRange","PString","PEnum","PColor","PGroup","PTexture","PFloats"] };
hxd_inspect_Property.PBool = function(name,get,set) { var $x = ["PBool",0,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PInt = function(name,get,set) { var $x = ["PInt",1,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PFloat = function(name,get,set) { var $x = ["PFloat",2,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PRange = function(name,min,max,get,set,incr) { var $x = ["PRange",3,name,min,max,get,set,incr]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PString = function(name,get,set) { var $x = ["PString",4,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PEnum = function(name,e,get,set) { var $x = ["PEnum",5,name,e,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PColor = function(name,hasAlpha,get,set) { var $x = ["PColor",6,name,hasAlpha,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PGroup = function(name,props) { var $x = ["PGroup",7,name,props]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PTexture = function(name,get,set) { var $x = ["PTexture",8,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.PFloats = function(name,get,set) { var $x = ["PFloats",9,name,get,set]; $x.__enum__ = hxd_inspect_Property; $x.toString = $estr; return $x; };
hxd_inspect_Property.__empty_constructs__ = [];
var hxd_poly2tri_Edge = function(p1,p2) {
	if(p1 == null || p2 == null) {
		throw new js__$Boot_HaxeError("Edge::new p1 or p2 is null");
	}
	var swap = false;
	if(p1.y > p2.y) {
		swap = true;
	} else if(p1.y == p2.y) {
		if(p1.x == p2.x) {
			throw new js__$Boot_HaxeError("Edge::repeat points " + Std.string(p1));
		}
		swap = p1.x > p2.x;
	}
	if(swap) {
		this.q = p1;
		this.p = p2;
	} else {
		this.p = p1;
		this.q = p2;
	}
	this.q.get_edge_list().push(this);
};
$hxClasses["hxd.poly2tri.Edge"] = hxd_poly2tri_Edge;
hxd_poly2tri_Edge.__name__ = ["hxd","poly2tri","Edge"];
hxd_poly2tri_Edge.prototype = {
	toString: function() {
		return "Edge(" + Std.string(this.p) + ", " + Std.string(this.q) + ")";
	}
	,__class__: hxd_poly2tri_Edge
};
var hxd_poly2tri_Point = function(x,y) {
	this.x = x;
	this.y = y;
	this.id = hxd_poly2tri_Point.C_ID;
	hxd_poly2tri_Point.C_ID++;
};
$hxClasses["hxd.poly2tri.Point"] = hxd_poly2tri_Point;
hxd_poly2tri_Point.__name__ = ["hxd","poly2tri","Point"];
hxd_poly2tri_Point.sortPoints = function(points) {
	points.sort(hxd_poly2tri_Point.cmpPoints);
};
hxd_poly2tri_Point.cmpPoints = function(l,r) {
	var ret = l.y - r.y;
	if(ret == 0) {
		ret = l.x - r.x;
	}
	if(ret < 0) {
		return -1;
	}
	if(ret > 0) {
		return 1;
	}
	return 0;
};
hxd_poly2tri_Point.prototype = {
	get_edge_list: function() {
		if(this.edge_list == null) {
			this.edge_list = [];
		}
		return this.edge_list;
	}
	,equals: function(that) {
		if(this.x == that.x) {
			return this.y == that.y;
		} else {
			return false;
		}
	}
	,toString: function() {
		return "Point(" + this.x + ", " + this.y + ")";
	}
	,__class__: hxd_poly2tri_Point
};
var hxd_res__$Any_SingleFileSystem = function(path,bytes) {
	hxd_fs_BytesFileSystem.call(this);
	this.path = path;
	this.bytes = bytes;
};
$hxClasses["hxd.res._Any.SingleFileSystem"] = hxd_res__$Any_SingleFileSystem;
hxd_res__$Any_SingleFileSystem.__name__ = ["hxd","res","_Any","SingleFileSystem"];
hxd_res__$Any_SingleFileSystem.__super__ = hxd_fs_BytesFileSystem;
hxd_res__$Any_SingleFileSystem.prototype = $extend(hxd_fs_BytesFileSystem.prototype,{
	getBytes: function(p) {
		if(p == this.path) {
			return this.bytes;
		} else {
			return null;
		}
	}
	,__class__: hxd_res__$Any_SingleFileSystem
});
var hxd_res_Resource = function(entry) {
	this.entry = entry;
};
$hxClasses["hxd.res.Resource"] = hxd_res_Resource;
hxd_res_Resource.__name__ = ["hxd","res","Resource"];
hxd_res_Resource.prototype = {
	get_name: function() {
		return this.entry.name;
	}
	,toString: function() {
		return this.entry.get_path();
	}
	,watch: function(onChanged) {
		if(hxd_res_Resource.LIVE_UPDATE) {
			this.entry.watch(onChanged);
		}
	}
	,__class__: hxd_res_Resource
};
var hxd_res_Any = function(loader,entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = loader;
};
$hxClasses["hxd.res.Any"] = hxd_res_Any;
hxd_res_Any.__name__ = ["hxd","res","Any"];
hxd_res_Any.fromBytes = function(path,bytes) {
	return new hxd_res_Loader(new hxd_res__$Any_SingleFileSystem(path,bytes)).load(path);
};
hxd_res_Any.__super__ = hxd_res_Resource;
hxd_res_Any.prototype = $extend(hxd_res_Resource.prototype,{
	toModel: function() {
		return this.loader.loadModel(this.entry.get_path());
	}
	,toHmd: function() {
		return this.loader.loadModel(this.entry.get_path()).toHmd();
	}
	,toTexture: function() {
		return this.loader.loadImage(this.entry.get_path()).toTexture();
	}
	,toTile: function() {
		return this.loader.loadImage(this.entry.get_path()).toTile();
	}
	,toText: function() {
		return this.entry.getBytes().toString();
	}
	,toImage: function() {
		return this.loader.loadImage(this.entry.get_path());
	}
	,toSound: function() {
		return this.loader.loadSound(this.entry.get_path());
	}
	,toFont: function() {
		return this.loader.loadFont(this.entry.get_path());
	}
	,toBitmap: function() {
		return this.loader.loadImage(this.entry.get_path()).toBitmap();
	}
	,toBitmapFont: function() {
		return this.loader.loadBitmapFont(this.entry.get_path());
	}
	,toTiledMap: function() {
		return this.loader.loadTiledMap(this.entry.get_path());
	}
	,toAtlas: function() {
		return this.loader.loadAtlas(this.entry.get_path());
	}
	,iterator: function() {
		var _g1 = [];
		var _g2 = this.entry.iterator();
		while(_g2.i < _g2.l) _g1.push(new hxd_res_Any(this.loader,_g2.a[_g2.i++]));
		return new hxd_impl_ArrayIterator_$hxd_$res_$Any(_g1);
	}
	,__class__: hxd_res_Any
});
var hxd_res_Atlas = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Atlas"] = hxd_res_Atlas;
hxd_res_Atlas.__name__ = ["hxd","res","Atlas"];
hxd_res_Atlas.__super__ = hxd_res_Resource;
hxd_res_Atlas.prototype = $extend(hxd_res_Resource.prototype,{
	tileAlign: function(t,halign,valign,width,height) {
		if(halign == null) {
			halign = h2d_FlowAlign.Left;
		}
		if(valign == null) {
			valign = h2d_FlowAlign.Top;
		}
		var dx = 0;
		var dy = 0;
		switch(halign[1]) {
		case 2:
			dx = width;
			break;
		case 3:
			dx = width >> 1;
			break;
		default:
		}
		switch(valign[1]) {
		case 3:
			dy = height >> 1;
			break;
		case 4:
			dy = height;
			break;
		default:
		}
		return t.sub(0,0,t.width,t.height,t.dx - dx,t.dy - dy);
	}
	,get: function(name,horizontalAlign,verticalAlign) {
		var c = this.getContents().get(name);
		if(c == null) {
			return null;
		}
		var t = c[0];
		if(t == null) {
			return null;
		}
		return this.tileAlign(t.t,horizontalAlign,verticalAlign,t.width,t.height);
	}
	,getAnim: function(name,horizontalAlign,verticalAlign) {
		if(name == null) {
			var cont = this.getContents().keys();
			name = cont.next();
			if(cont.hasNext()) {
				throw new js__$Boot_HaxeError("Altas has several items in it " + Std.string(Lambda.array(this.contents)));
			}
		}
		var c = this.getContents().get(name);
		if(c == null) {
			return null;
		}
		var _g = [];
		var _g1 = 0;
		while(_g1 < c.length) {
			var t = c[_g1];
			++_g1;
			_g.push(t == null?null:this.tileAlign(t.t,horizontalAlign,verticalAlign,t.width,t.height));
		}
		return _g;
	}
	,getContents: function() {
		if(this.contents != null) {
			return this.contents;
		}
		this.contents = new haxe_ds_StringMap();
		var lines = this.entry.getBytes().toString().split("\n");
		var basePath = this.entry.get_path().split("/");
		basePath.pop();
		var basePath1 = basePath.join("/");
		if(basePath1.length > 0) {
			basePath1 += "/";
		}
		while(lines.length > 0) {
			var line = StringTools.trim(lines.shift());
			if(line == "") {
				continue;
			}
			var file = hxd_res_Loader.currentInstance.load(basePath1 + line).toTile();
			while(lines.length > 0) {
				var line1 = StringTools.trim(lines.shift());
				if(line1 == "") {
					break;
				}
				if(line1.split(": ").length > 1) {
					continue;
				}
				var tileX = 0;
				var tileY = 0;
				var tileW = 0;
				var tileH = 0;
				var tileDX = 0;
				var tileDY = 0;
				var origW = 0;
				var origH = 0;
				var index = 0;
				while(lines.length > 0) {
					var line2 = StringTools.trim(lines.shift());
					var prop = line2.split(": ");
					if(prop.length == 1) {
						lines.unshift(line2);
						break;
					}
					var v = prop[1];
					switch(prop[0]) {
					case "index":
						index = Std.parseInt(v);
						if(index < 0) {
							index = 0;
						}
						break;
					case "offset":
						var vals = v.split(", ");
						tileDX = Std.parseInt(vals[0]);
						tileDY = Std.parseInt(vals[1]);
						break;
					case "orig":
						var vals1 = v.split(", ");
						origW = Std.parseInt(vals1[0]);
						origH = Std.parseInt(vals1[1]);
						break;
					case "rotate":
						if(v == "true") {
							throw new js__$Boot_HaxeError("Rotation not supported in atlas");
						}
						break;
					case "size":
						var vals2 = v.split(", ");
						tileW = Std.parseInt(vals2[0]);
						tileH = Std.parseInt(vals2[1]);
						break;
					case "xy":
						var vals3 = v.split(", ");
						tileX = Std.parseInt(vals3[0]);
						tileY = Std.parseInt(vals3[1]);
						break;
					default:
						haxe_Log.trace("Unknown prop " + prop[0],{ fileName : "Atlas.hx", lineNumber : 104, className : "hxd.res.Atlas", methodName : "getContents"});
					}
				}
				tileDY = origH - (tileH + tileDY);
				var t = file.sub(tileX,tileY,tileW,tileH,tileDX,tileDY);
				var _this = this.contents;
				var tl = __map_reserved[line1] != null?_this.getReserved(line1):_this.h[line1];
				if(tl == null) {
					tl = [];
					var _this1 = this.contents;
					if(__map_reserved[line1] != null) {
						_this1.setReserved(line1,tl);
					} else {
						_this1.h[line1] = tl;
					}
				}
				tl[index] = { t : t, width : origW, height : origH};
			}
		}
		return this.contents;
	}
	,__class__: hxd_res_Atlas
});
var hxd_res_BitmapFont = function(loader,entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = loader;
};
$hxClasses["hxd.res.BitmapFont"] = hxd_res_BitmapFont;
hxd_res_BitmapFont.__name__ = ["hxd","res","BitmapFont"];
hxd_res_BitmapFont.__super__ = hxd_res_Resource;
hxd_res_BitmapFont.prototype = $extend(hxd_res_Resource.prototype,{
	toFont: function() {
		if(this.font != null) {
			return this.font;
		}
		var tile = this.loader.load(HxOverrides.substr(this.entry.get_path(),0,-3) + "png").toTile();
		var name = this.entry.get_path();
		var size = 0;
		var lineHeight = 0;
		var glyphs = new haxe_ds_IntMap();
		var _g = this.entry.getSign();
		if(_g == 1836597052) {
			var xml = new haxe_xml_Fast(Xml.parse(this.entry.getBytes().toString()).firstElement());
			size = Std.parseInt(xml.att.resolve("size"));
			lineHeight = Std.parseInt(xml.att.resolve("height"));
			name = xml.att.resolve("family");
			var tmp = xml.get_elements();
			while(tmp.hasNext()) {
				var c = tmp.next();
				var r = c.att.resolve("rect").split(" ");
				var o = c.att.resolve("offset").split(" ");
				var fc = new h2d_FontChar(tile.sub(Std.parseInt(r[0]),Std.parseInt(r[1]),Std.parseInt(r[2]),Std.parseInt(r[3]),Std.parseInt(o[0]),Std.parseInt(o[1])),Std.parseInt(c.att.resolve("width")) - 1);
				var tmp1 = c.get_elements();
				while(tmp1.hasNext()) {
					var k = tmp1.next();
					fc.addKerning(HxOverrides.cca(k.att.resolve("id"),0),Std.parseInt(k.att.resolve("advance")));
				}
				var code = c.att.resolve("code");
				if(StringTools.startsWith(code,"&#")) {
					var key = Std.parseInt(HxOverrides.substr(code,2,code.length - 3));
					glyphs.h[key] = fc;
				} else {
					var key1 = HxOverrides.cca(c.att.resolve("code"),0);
					glyphs.h[key1] = fc;
				}
			}
		} else {
			throw new js__$Boot_HaxeError("Unknown font signature " + StringTools.hex(_g,8));
		}
		if(glyphs.h[32] == null) {
			var value = new h2d_FontChar(tile.sub(0,0,0,0),size >> 1);
			glyphs.h[32] = value;
		}
		this.font = new h2d_Font(name,size);
		this.font.glyphs = glyphs;
		this.font.lineHeight = lineHeight;
		this.font.tile = tile;
		var a = glyphs.h[65];
		if(a == null) {
			a = glyphs.h[97];
		}
		if(a == null) {
			this.font.baseLine = this.font.lineHeight - 2;
		} else {
			this.font.baseLine = a.t.dy + a.t.height;
		}
		return this.font;
	}
	,__class__: hxd_res_BitmapFont
});
var hxd_res_DynamicText = function() { };
$hxClasses["hxd.res.DynamicText"] = hxd_res_DynamicText;
hxd_res_DynamicText.__name__ = ["hxd","res","DynamicText"];
hxd_res_DynamicText.parse = function(data,dict) {
	var x = new haxe_xml_Fast(Xml.parse(data).firstElement());
	var idict = null;
	if(dict != null) {
		idict = new haxe_ds_StringMap();
		var tmp = dict.keys();
		while(tmp.hasNext()) {
			var f = tmp.next();
			var key = __map_reserved[f] != null?dict.getReserved(f):dict.h[f];
			if(__map_reserved[key] != null) {
				idict.setReserved(key,f);
			} else {
				idict.h[key] = f;
			}
		}
	}
	var obj = { };
	var tmp1 = x.get_elements();
	while(tmp1.hasNext()) {
		var e = tmp1.next();
		var x1 = e.att.resolve("id");
		obj[dict == null?x1:__map_reserved[x1] != null?dict.getReserved(x1):dict.h[x1]] = hxd_res_DynamicText.parseXmlData(e,dict,idict);
	}
	return obj;
};
hxd_res_DynamicText.getDict = function(d,x) {
	if(d == null) {
		return x;
	} else {
		return __map_reserved[x] != null?d.getReserved(x):d.h[x];
	}
};
hxd_res_DynamicText.parseXmlData = function(x,hdict,idict) {
	switch(x.get_name()) {
	case "g":
		var first = x.get_elements().next();
		if(first != null && first.has.resolve("id")) {
			var o = { };
			var tmp = x.get_elements();
			while(tmp.hasNext()) {
				var e = tmp.next();
				var x1 = e.att.resolve("id");
				o[hdict == null?x1:__map_reserved[x1] != null?hdict.getReserved(x1):hdict.h[x1]] = hxd_res_DynamicText.parseXmlData(e,hdict,idict);
			}
			return o;
		} else {
			var a = [];
			var isArray = false;
			var tmp1 = x.get_elements();
			while(tmp1.hasNext()) {
				var v = hxd_res_DynamicText.parseXmlData(tmp1.next(),hdict,idict);
				if(isArray) {
					if(!((v instanceof Array) && v.__enum__ == null)) {
						v = [v];
					}
				} else if((v instanceof Array) && v.__enum__ == null) {
					var _g1 = 0;
					var _g = a.length;
					while(_g1 < _g) {
						var i = _g1++;
						var v1 = a[i];
						if(!((v1 instanceof Array) && v1.__enum__ == null)) {
							a[i] = [v1];
						}
					}
					isArray = true;
				}
				a.push(v);
			}
			return a;
		}
		break;
	case "t":
		var str = x.get_innerHTML();
		if(str.split("::").length <= 1) {
			return str;
		}
		return function(vars) {
			var str1 = str;
			var _g2 = 0;
			var _g11 = Reflect.fields(vars);
			while(_g2 < _g11.length) {
				var f = _g11[_g2];
				++_g2;
				str1 = str1.split("::" + (idict == null?f:__map_reserved[f] != null?idict.getReserved(f):idict.h[f]) + "::").join(Reflect.field(vars,f));
			}
			return str1;
		};
	default:
		throw new js__$Boot_HaxeError("Unknown tag " + x.get_name());
	}
};
var hxd_res_Font = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Font"] = hxd_res_Font;
hxd_res_Font.__name__ = ["hxd","res","Font"];
hxd_res_Font.__super__ = hxd_res_Resource;
hxd_res_Font.prototype = $extend(hxd_res_Resource.prototype,{
	build: function(size,options) {
		var _this_r = new RegExp("[^A-Za-z0-9_]","g".split("u").join(""));
		return hxd_res_FontBuilder.getFont("R_" + this.entry.get_path().replace(_this_r,"_"),size,options);
	}
	,__class__: hxd_res_Font
});
var hxd_res_FontBuilder = function(name,size,opt) {
	this.font = new h2d_Font(name,size);
	this.options = opt == null?{ }:opt;
	if(this.options.antiAliasing == null) {
		this.options.antiAliasing = true;
	}
	if(this.options.chars == null) {
		this.options.chars = hxd_Charset.DEFAULT_CHARS;
	}
};
$hxClasses["hxd.res.FontBuilder"] = hxd_res_FontBuilder;
hxd_res_FontBuilder.__name__ = ["hxd","res","FontBuilder"];
hxd_res_FontBuilder.getFont = function(name,size,options) {
	var key = name + "#" + size;
	var _this = hxd_res_FontBuilder.FONTS;
	var f = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
	if(f != null && f.tile.innerTex != null) {
		return f;
	}
	f = new hxd_res_FontBuilder(name,size,options).build();
	var _this1 = hxd_res_FontBuilder.FONTS;
	if(__map_reserved[key] != null) {
		_this1.setReserved(key,f);
	} else {
		_this1.h[key] = f;
	}
	return f;
};
hxd_res_FontBuilder.dispose = function() {
	var _this = hxd_res_FontBuilder.FONTS;
	var tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	while(tmp.hasNext()) tmp.next().dispose();
	hxd_res_FontBuilder.FONTS = new haxe_ds_StringMap();
};
hxd_res_FontBuilder.prototype = {
	build: function() {
		var bmp = window.document.createElement("canvas");
		var ctx = bmp.getContext("2d",null);
		ctx.font = "" + this.font.size + "px " + this.font.name;
		ctx.textAlign = "left";
		ctx.textBaseline = "top";
		this.font.lineHeight = 0;
		var surf = 0;
		var sizes = [];
		var _g1 = 0;
		var _g = this.options.chars.length;
		while(_g1 < _g) {
			var i = _g1++;
			var w = Math.ceil(ctx.measureText(this.options.chars.charAt(i)).width) + 1;
			if(w == 1) {
				continue;
			}
			var h = this.font.size + 5;
			surf += (w + 1) * (h + 1);
			if(h > this.font.lineHeight) {
				this.font.lineHeight = h;
			}
			sizes[i] = { w : w, h : h};
		}
		var side = Math.ceil(Math.sqrt(surf));
		var width = 1;
		while(side > width) width <<= 1;
		var height = width;
		while(width * height >> 1 > surf) height >>= 1;
		var all;
		var done;
		while(true) {
			done = true;
			bmp.width = width;
			bmp.height = height;
			ctx.font = "" + this.font.size + "px " + this.font.name;
			ctx.textAlign = "left";
			ctx.textBaseline = "top";
			ctx.fillStyle = "red";
			this.font.glyphs = new haxe_ds_IntMap();
			all = [];
			var x = 0;
			var y = 0;
			var lineH = 0;
			var _g11 = 0;
			var _g2 = this.options.chars.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var size = sizes[i1];
				if(size == null) {
					continue;
				}
				var w1 = size.w;
				var h1 = size.h;
				if(x + w1 > width) {
					x = 0;
					y += lineH + 1;
				}
				if(y + h1 > height) {
					done = false;
					height <<= 1;
					break;
				}
				ctx.fillStyle = "black";
				ctx.globalAlpha = 0.0;
				ctx.fillRect(x,y,w1,h1);
				ctx.globalAlpha = 1.0;
				ctx.fillStyle = "white";
				ctx.fillText(this.options.chars.charAt(i1),x,y);
				var t = new h2d_Tile(this.innerTex,x,y,w1 - 1,h1 - 1);
				all.push(t);
				var key = HxOverrides.cca(this.options.chars,i1);
				this.font.glyphs.h[key] = new h2d_FontChar(t,w1 - 1);
				if(h1 > lineH) {
					lineH = h1;
				}
				x += w1 + 1;
			}
			if(!(!done)) {
				break;
			}
		}
		var rbmp = hxd_BitmapData.fromNative(ctx);
		if(this.innerTex == null) {
			this.innerTex = h3d_mat_Texture.fromBitmap(rbmp,{ fileName : "FontBuilder.hx", lineNumber : 210, className : "hxd.res.FontBuilder", methodName : "build"});
			this.font.tile = h2d_Tile.fromTexture(this.innerTex);
			var _g3 = 0;
			while(_g3 < all.length) {
				var t1 = all[_g3];
				++_g3;
				t1.setTexture(this.innerTex);
			}
			this.innerTex.realloc = $bind(this,this.build);
		} else {
			this.innerTex.uploadBitmap(rbmp);
		}
		return this.font;
	}
	,__class__: hxd_res_FontBuilder
};
var hxd_res__$Image_ImageFormat_$Impl_$ = {};
$hxClasses["hxd.res._Image.ImageFormat_Impl_"] = hxd_res__$Image_ImageFormat_$Impl_$;
hxd_res__$Image_ImageFormat_$Impl_$.__name__ = ["hxd","res","_Image","ImageFormat_Impl_"];
hxd_res__$Image_ImageFormat_$Impl_$.get_useAsyncDecode = function(this1) {
	return this1 == 0;
};
hxd_res__$Image_ImageFormat_$Impl_$.toInt = function(this1) {
	return this1;
};
var hxd_res_Image = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Image"] = hxd_res_Image;
hxd_res_Image.__name__ = ["hxd","res","Image"];
hxd_res_Image.__super__ = hxd_res_Resource;
hxd_res_Image.prototype = $extend(hxd_res_Resource.prototype,{
	getFormat: function() {
		this.getSize();
		return this.inf.format;
	}
	,getSize: function() {
		if(this.inf != null) {
			return this.inf;
		}
		var f = new hxd_fs_FileInput(this.entry);
		var width = 0;
		var height = 0;
		var format;
		switch(f.readUInt16()) {
		case 18759:
			format = 2;
			f.readInt32();
			width = f.readUInt16();
			height = f.readUInt16();
			break;
		case 20617:
			format = 1;
			var TMP = hxd_impl_Tmp.getBytes(256);
			f.set_bigEndian(true);
			f.readBytes(TMP,0,6);
			while(true) {
				var dataLen = f.readInt32();
				if(f.readInt32() == 1229472850) {
					width = f.readInt32();
					height = f.readInt32();
					break;
				}
				while(dataLen > 0) {
					var k = dataLen > TMP.length?TMP.length:dataLen;
					f.readBytes(TMP,0,k);
					dataLen -= k;
				}
				f.readInt32();
			}
			hxd_impl_Tmp.saveBytes(TMP);
			break;
		case 55551:
			format = 0;
			f.set_bigEndian(true);
			try {
				while(true) switch(f.readUInt16()) {
				case 65472:case 65474:
					f.readUInt16();
					f.readByte();
					height = f.readUInt16();
					width = f.readUInt16();
					throw "__break__";
					break;
				default:
					f.skip(f.readUInt16() - 2);
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			break;
		default:
			throw new js__$Boot_HaxeError("Unsupported texture format " + this.entry.get_path());
		}
		f.close();
		this.inf = { width : width, height : height, format : format};
		return this.inf;
	}
	,getPixels: function(fmt,flipY) {
		this.getSize();
		var pixels;
		switch(this.inf.format) {
		case 0:
			var p = hxd_res_NanoJpeg.decode(this.entry.getBytes());
			pixels = new hxd_Pixels(p.width,p.height,p.pixels,hxd_PixelFormat.BGRA);
			break;
		case 1:
			var png = new format_png_Reader(new haxe_io_BytesInput(this.entry.getBytes()));
			png.checkCRC = false;
			pixels = hxd_Pixels.alloc(this.inf.width,this.inf.height,hxd_PixelFormat.BGRA);
			var pdata = png.read();
			try {
				format_png_Tools.extract32(pdata,pixels.bytes,flipY);
			} catch( e ) {
				hxd_impl_Tmp.freeMemory();
				format_png_Tools.extract32(pdata,pixels.bytes,flipY);
			}
			if(flipY) {
				pixels.flags |= 4;
			}
			break;
		case 2:
			var gif = new format_gif_Reader(new haxe_io_BytesInput(this.entry.getBytes())).read();
			pixels = new hxd_Pixels(this.inf.width,this.inf.height,format_gif_Tools.extractFullBGRA(gif,0),hxd_PixelFormat.BGRA);
			break;
		}
		if(fmt != null) {
			pixels.convert(fmt);
		}
		if(flipY != null) {
			pixels.setFlip(flipY);
		}
		return pixels;
	}
	,toBitmap: function() {
		this.getSize();
		var bmp = new hxd_BitmapData(this.inf.width,this.inf.height);
		var pixels = this.getPixels();
		bmp.setPixels(pixels);
		pixels.dispose();
		return bmp;
	}
	,watchCallb: function() {
		var w = this.inf.width;
		var h = this.inf.height;
		this.inf = null;
		var s = this.getSize();
		if(w != s.width || h != s.height) {
			this.tex.resize(w,h);
		}
		this.tex.realloc = null;
		this.loadTexture();
	}
	,loadTexture: function() {
		var _gthis = this;
		if(this.getFormat() != 0) {
			var load = function() {
				_gthis.tex.alloc();
				var pixels = _gthis.getPixels(h3d_mat_Texture.nativeFormat,false);
				if(pixels.width != _gthis.tex.width || pixels.height != _gthis.tex.height) {
					pixels.makeSquare();
				}
				_gthis.tex.uploadPixels(pixels);
				pixels.dispose();
				_gthis.tex.realloc = $bind(_gthis,_gthis.loadTexture);
				_gthis.watch($bind(_gthis,_gthis.watchCallb));
			};
			if(this.entry.get_isAvailable()) {
				load();
			} else {
				this.entry.load(load);
			}
		} else {
			this.tex.flags |= 1024;
			this.entry.loadBitmap(function(bmp) {
				var bmp1 = hxd_fs__$LoadedBitmap_LoadedBitmap_$Impl_$.toBitmap(bmp);
				_gthis.tex.alloc();
				if(bmp1.ctx.canvas.width != _gthis.tex.width || bmp1.ctx.canvas.height != _gthis.tex.height) {
					var pixels1 = bmp1.getPixels();
					pixels1.makeSquare();
					_gthis.tex.uploadPixels(pixels1);
					pixels1.dispose();
				} else {
					_gthis.tex.uploadBitmap(bmp1);
				}
				bmp1.ctx = null;
				bmp1.pixel = null;
				_gthis.tex.realloc = $bind(_gthis,_gthis.loadTexture);
				_gthis.tex.flags &= 268434431;
				if(_gthis.tex.onLoaded != null) {
					_gthis.tex.onLoaded();
				}
				_gthis.watch($bind(_gthis,_gthis.watchCallb));
			});
		}
	}
	,toTexture: function() {
		if(this.tex != null) {
			return this.tex;
		}
		this.getSize();
		var width = this.inf.width;
		var height = this.inf.height;
		if(!hxd_res_Image.ALLOW_NPOT) {
			var tw = 1;
			var th = 1;
			while(tw < width) tw <<= 1;
			while(th < height) th <<= 1;
			width = tw;
			height = th;
		}
		this.tex = new h3d_mat_Texture(width,height,[h3d_mat_TextureFlags.NoAlloc],null,{ fileName : "Image.hx", lineNumber : 221, className : "hxd.res.Image", methodName : "toTexture"});
		if(hxd_res_Image.DEFAULT_FILTER != h3d_mat_Filter.Linear) {
			this.tex.set_filter(hxd_res_Image.DEFAULT_FILTER);
		}
		this.tex.setName(this.entry.get_path());
		this.loadTexture();
		return this.tex;
	}
	,toTile: function() {
		var size = this.getSize();
		return h2d_Tile.fromTexture(this.toTexture()).sub(0,0,size.width,size.height);
	}
	,__class__: hxd_res_Image
});
var hxd_res_Loader = function(fs) {
	this.fs = fs;
	this.cache = new haxe_ds_StringMap();
};
$hxClasses["hxd.res.Loader"] = hxd_res_Loader;
hxd_res_Loader.__name__ = ["hxd","res","Loader"];
hxd_res_Loader.prototype = {
	cleanCache: function() {
		this.cache = new haxe_ds_StringMap();
	}
	,exists: function(path) {
		return this.fs.exists(path);
	}
	,load: function(path) {
		return new hxd_res_Any(this,this.fs.get(path));
	}
	,loadModel: function(path) {
		var _this = this.cache;
		var m = __map_reserved[path] != null?_this.getReserved(path):_this.h[path];
		if(m == null) {
			m = new hxd_res_Model(this.fs.get(path));
			var _this1 = this.cache;
			if(__map_reserved[path] != null) {
				_this1.setReserved(path,m);
			} else {
				_this1.h[path] = m;
			}
		}
		return m;
	}
	,loadImage: function(path) {
		var _this = this.cache;
		var i = __map_reserved[path] != null?_this.getReserved(path):_this.h[path];
		if(i == null) {
			i = new hxd_res_Image(this.fs.get(path));
			var _this1 = this.cache;
			if(__map_reserved[path] != null) {
				_this1.setReserved(path,i);
			} else {
				_this1.h[path] = i;
			}
		}
		return i;
	}
	,loadSound: function(path) {
		var _this = this.cache;
		var s = __map_reserved[path] != null?_this.getReserved(path):_this.h[path];
		if(s == null) {
			s = new hxd_res_Sound(this.fs.get(path));
			var _this1 = this.cache;
			if(__map_reserved[path] != null) {
				_this1.setReserved(path,s);
			} else {
				_this1.h[path] = s;
			}
		}
		return s;
	}
	,loadFont: function(path) {
		return new hxd_res_Font(this.fs.get(path));
	}
	,loadBitmapFont: function(path) {
		var _this = this.cache;
		var f = __map_reserved[path] != null?_this.getReserved(path):_this.h[path];
		if(f == null) {
			f = new hxd_res_BitmapFont(this,this.fs.get(path));
			var _this1 = this.cache;
			if(__map_reserved[path] != null) {
				_this1.setReserved(path,f);
			} else {
				_this1.h[path] = f;
			}
		}
		return f;
	}
	,loadData: function(path) {
		return new hxd_res_Resource(this.fs.get(path));
	}
	,loadTiledMap: function(path) {
		return new hxd_res_TiledMap(this.fs.get(path));
	}
	,loadAtlas: function(path) {
		return new hxd_res_Atlas(this.fs.get(path));
	}
	,dispose: function() {
		this.cleanCache();
		this.fs.dispose();
	}
	,__class__: hxd_res_Loader
};
var hxd_res_Model = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Model"] = hxd_res_Model;
hxd_res_Model.__name__ = ["hxd","res","Model"];
hxd_res_Model.__super__ = hxd_res_Resource;
hxd_res_Model.prototype = $extend(hxd_res_Resource.prototype,{
	toHmd: function() {
		return new hxd_fmt_hmd_Library(this.entry,new hxd_fmt_hmd_Reader(new hxd_fs_FileInput(this.entry)).readHeader());
	}
	,__class__: hxd_res_Model
});
var hxd_res_Filter = $hxClasses["hxd.res.Filter"] = { __ename__ : ["hxd","res","Filter"], __constructs__ : ["Fast","Chromatic"] };
hxd_res_Filter.Fast = ["Fast",0];
hxd_res_Filter.Fast.toString = $estr;
hxd_res_Filter.Fast.__enum__ = hxd_res_Filter;
hxd_res_Filter.Chromatic = ["Chromatic",1];
hxd_res_Filter.Chromatic.toString = $estr;
hxd_res_Filter.Chromatic.__enum__ = hxd_res_Filter;
hxd_res_Filter.__empty_constructs__ = [hxd_res_Filter.Fast,hxd_res_Filter.Chromatic];
var hxd_res__$NanoJpeg_FastBytes_$Impl_$ = {};
$hxClasses["hxd.res._NanoJpeg.FastBytes_Impl_"] = hxd_res__$NanoJpeg_FastBytes_$Impl_$;
hxd_res__$NanoJpeg_FastBytes_$Impl_$.__name__ = ["hxd","res","_NanoJpeg","FastBytes_Impl_"];
hxd_res__$NanoJpeg_FastBytes_$Impl_$._new = function(b) {
	return b;
};
hxd_res__$NanoJpeg_FastBytes_$Impl_$.get = function(this1,i) {
	return this1.b[i];
};
hxd_res__$NanoJpeg_FastBytes_$Impl_$.set = function(this1,i,v) {
	this1.b[i] = v & 255;
};
var hxd_res__$NanoJpeg_Component = function() {
};
$hxClasses["hxd.res._NanoJpeg.Component"] = hxd_res__$NanoJpeg_Component;
hxd_res__$NanoJpeg_Component.__name__ = ["hxd","res","_NanoJpeg","Component"];
hxd_res__$NanoJpeg_Component.prototype = {
	__class__: hxd_res__$NanoJpeg_Component
};
var hxd_res_NanoJpeg = function() {
	var array = [new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component()];
	var length = array.length;
	var vec = new Array(length);
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	this.comps = vec;
	var array1 = [new Array(64),new Array(64),new Array(64),new Array(64)];
	var length1 = array1.length;
	var vec1 = new Array(length1);
	var _g11 = 0;
	var _g2 = array1.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		vec1[i1] = array1[i1];
	}
	this.qtab = vec1;
	this.counts = new Array(16);
	this.block = new Array(64);
	var array2 = [0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63];
	var length2 = array2.length;
	var vec2 = new Array(length2);
	var _g12 = 0;
	var _g3 = array2.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		vec2[i2] = array2[i2];
	}
	this.njZZ = vec2;
	var array3 = [null,null,null,null,null,null,null,null];
	var length3 = array3.length;
	var vec3 = new Array(length3);
	var _g13 = 0;
	var _g4 = array3.length;
	while(_g13 < _g4) {
		var i3 = _g13++;
		vec3[i3] = array3[i3];
	}
	this.vlctab = vec3;
};
$hxClasses["hxd.res.NanoJpeg"] = hxd_res_NanoJpeg;
hxd_res_NanoJpeg.__name__ = ["hxd","res","NanoJpeg"];
hxd_res_NanoJpeg.CF = function(x) {
	var x1 = x + 64 >> 7;
	if(x1 < 0) {
		return 0;
	} else if(x1 > 255) {
		return 255;
	} else {
		return x1;
	}
};
hxd_res_NanoJpeg.njClip = function(x) {
	if(x < 0) {
		return 0;
	} else if(x > 255) {
		return 255;
	} else {
		return x;
	}
};
hxd_res_NanoJpeg.decode = function(bytes,filter,position,size) {
	if(size == null) {
		size = -1;
	}
	if(position == null) {
		position = 0;
	}
	if(hxd_res_NanoJpeg.inst == null) {
		hxd_res_NanoJpeg.inst = new hxd_res_NanoJpeg();
	}
	hxd_res_NanoJpeg.inst.njInit(bytes,position,size,filter);
	return hxd_res_NanoJpeg.inst.njDecode();
};
hxd_res_NanoJpeg.prototype = {
	alloc: function(nbytes) {
		return hxd_impl_Tmp.getBytes(nbytes);
	}
	,free: function(bytes) {
		hxd_impl_Tmp.saveBytes(bytes);
	}
	,njInit: function(bytes,pos,size,filter) {
		this.bytes = bytes;
		this.pos = pos;
		this.filter = filter == null?hxd_res_Filter.Chromatic:filter;
		if(size < 0) {
			size = bytes.length - pos;
		}
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(this.vlctab[i] == null) {
				this.vlctab[i] = hxd_impl_Tmp.getBytes(131072);
			}
		}
		this.size = size;
		this.qtused = 0;
		this.qtavail = 0;
		this.rstinterval = 0;
		this.length = 0;
		this.buf = 0;
		this.bufbits = 0;
		var _g1 = 0;
		while(_g1 < 3) this.comps[_g1++].dcpred = 0;
	}
	,cleanup: function() {
		this.bytes = null;
		var _g = 0;
		var _g1 = this.comps;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.pixels != null) {
				hxd_impl_Tmp.saveBytes(c.pixels);
				c.pixels = null;
			}
		}
		var _g2 = 0;
		while(_g2 < 8) {
			var i = _g2++;
			if(this.vlctab[i] != null) {
				hxd_impl_Tmp.saveBytes(this.vlctab[i]);
				this.vlctab[i] = null;
			}
		}
	}
	,njSkip: function(count) {
		this.pos += count;
		this.size -= count;
		this.length -= count;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,syntax: function(flag) {
		if(flag) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,get: function(p) {
		return this.bytes.b[this.pos + p];
	}
	,njDecode16: function(p) {
		return this.bytes.b[this.pos + p] << 8 | this.bytes.b[this.pos + (p + 1)];
	}
	,njByteAlign: function() {
		this.bufbits &= 248;
	}
	,njShowBits: function(bits) {
		if(bits == 0) {
			return 0;
		}
		while(this.bufbits < bits) {
			if(this.size <= 0) {
				this.buf = this.buf << 8 | 255;
				this.bufbits += 8;
				continue;
			}
			var newbyte = this.bytes.b[this.pos];
			this.pos++;
			this.size--;
			this.bufbits += 8;
			this.buf = this.buf << 8 | newbyte;
			if(newbyte == 255) {
				if(this.size == 0) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				var marker = this.bytes.b[this.pos];
				this.pos++;
				this.size--;
				switch(marker) {
				case 217:
					this.size = 0;
					break;
				case 0:case 255:
					break;
				default:
					if((marker & 248) != 208) {
						throw new js__$Boot_HaxeError("Invalid JPEG file");
					}
					this.buf = this.buf << 8 | marker;
					this.bufbits += 8;
				}
			}
		}
		return this.buf >> this.bufbits - bits & (1 << bits) - 1;
	}
	,njSkipBits: function(bits) {
		if(this.bufbits < bits) {
			this.njShowBits(bits);
		}
		this.bufbits -= bits;
	}
	,njGetBits: function(bits) {
		var r = this.njShowBits(bits);
		this.bufbits -= bits;
		return r;
	}
	,njDecodeLength: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njSkipMarker: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njDecodeSOF: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.length < 9) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.bytes.b[this.pos] != 8) {
			this.notSupported();
		}
		this.height = this.bytes.b[this.pos + 1] << 8 | this.bytes.b[this.pos + 2];
		this.width = this.bytes.b[this.pos + 3] << 8 | this.bytes.b[this.pos + 4];
		this.ncomp = this.bytes.b[this.pos + 5];
		this.pos += 6;
		this.size -= 6;
		this.length -= 6;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		switch(this.ncomp) {
		case 1:case 3:
			break;
		default:
			this.notSupported();
		}
		if(this.length < this.ncomp * 3) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		var ssxmax = 0;
		var ssymax = 0;
		var _g2 = 0;
		var _g1 = this.ncomp;
		while(_g2 < _g1) {
			var c = this.comps[_g2++];
			c.cid = this.bytes.b[this.pos];
			c.ssx = this.bytes.b[this.pos + 1] >> 4;
			if(c.ssx == 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			if((c.ssx & c.ssx - 1) != 0) {
				this.notSupported();
			}
			c.ssy = this.bytes.b[this.pos + 1] & 15;
			if(c.ssy == 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			if((c.ssy & c.ssy - 1) != 0) {
				this.notSupported();
			}
			c.qtsel = this.bytes.b[this.pos + 2];
			if((c.qtsel & 252) != 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			this.pos += 3;
			this.size -= 3;
			this.length -= 3;
			if(this.size < 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			this.qtused |= 1 << c.qtsel;
			if(c.ssx > ssxmax) {
				ssxmax = c.ssx;
			}
			if(c.ssy > ssymax) {
				ssymax = c.ssy;
			}
		}
		if(this.ncomp == 1) {
			var c1 = this.comps[0];
			ssymax = 1;
			ssxmax = 1;
			c1.ssx = c1.ssy = 1;
		}
		this.mbsizex = ssxmax << 3;
		this.mbsizey = ssymax << 3;
		this.mbwidth = (this.width + this.mbsizex - 1) / this.mbsizex | 0;
		this.mbheight = (this.height + this.mbsizey - 1) / this.mbsizey | 0;
		var _g21 = 0;
		var _g11 = this.ncomp;
		while(_g21 < _g11) {
			var c2 = this.comps[_g21++];
			c2.width = (this.width * c2.ssx + ssxmax - 1) / ssxmax | 0;
			c2.stride = c2.width + 7 & 2147483640;
			c2.height = (this.height * c2.ssy + ssymax - 1) / ssymax | 0;
			c2.stride = this.mbwidth * this.mbsizex * c2.ssx / ssxmax | 0;
			if(c2.width < 3 && c2.ssx != ssxmax || c2.height < 3 && c2.ssy != ssymax) {
				this.notSupported();
			}
			c2.pixels = hxd_impl_Tmp.getBytes(c2.stride * (this.mbheight * this.mbsizey * c2.ssy / ssymax | 0));
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njDecodeDQT: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		while(this.length >= 65) {
			var i = this.bytes.b[this.pos];
			if((i & 252) != 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			this.qtavail |= 1 << i;
			var t = this.qtab[i];
			var _g = 0;
			while(_g < 64) {
				var k = _g++;
				t[k] = this.bytes.b[this.pos + (k + 1)];
			}
			this.pos += 65;
			this.size -= 65;
			this.length -= 65;
			if(this.size < 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
		}
		if(this.length != 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njDecodeDHT: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		while(this.length >= 17) {
			var i = this.bytes.b[this.pos];
			if((i & 236) != 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			i = i >> 4 & 1 | (i & 3) << 1;
			var _g = 0;
			while(_g < 16) {
				var codelen = _g++;
				this.counts[codelen] = this.bytes.b[this.pos + (codelen + 1)];
			}
			this.pos += 17;
			this.size -= 17;
			this.length -= 17;
			if(this.size < 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			var vlc = this.vlctab[i];
			var vpos = 0;
			var remain = 65536;
			var spread = 65536;
			var _g1 = 1;
			while(_g1 < 17) {
				var codelen1 = _g1++;
				spread >>= 1;
				var currcnt = this.counts[codelen1 - 1];
				if(currcnt == 0) {
					continue;
				}
				if(this.length < currcnt) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				remain -= currcnt << 16 - codelen1;
				if(remain < 0) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				var _g2 = 0;
				while(_g2 < currcnt) {
					var code = this.bytes.b[this.pos + _g2++];
					var _g4 = 0;
					var _g3 = spread;
					while(_g4 < _g3) {
						++_g4;
						vlc.b[vpos++] = codelen1 & 255;
						vlc.b[vpos++] = code & 255;
					}
				}
				this.pos += currcnt;
				this.size -= currcnt;
				this.length -= currcnt;
				if(this.size < 0) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
			}
			while(remain-- != 0) {
				vlc.b[vpos] = 0;
				vpos += 2;
			}
		}
		if(this.length != 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njDecodeDRI: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.length < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.rstinterval = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
	}
	,njGetVLC: function(vlc) {
		var value = this.njShowBits(16);
		var bits = vlc.b[value << 1];
		if(bits == 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.bufbits < bits) {
			this.njShowBits(bits);
		}
		this.bufbits -= bits;
		value = vlc.b[value << 1 | 1];
		this.vlcCode = value;
		bits = value & 15;
		if(bits == 0) {
			return 0;
		}
		var r = this.njShowBits(bits);
		this.bufbits -= bits;
		value = r;
		if(r < 1 << bits - 1) {
			value = r + ((-1 << bits) + 1);
		}
		return value;
	}
	,njRowIDCT: function(bp) {
		var x0;
		var x1;
		var x2;
		var x3;
		var x4;
		var x5;
		var x6;
		var x7;
		var x8;
		x1 = this.block[bp + 4] << 11;
		var tmp = x1;
		x2 = this.block[bp + 6];
		var tmp1 = tmp | x2;
		x3 = this.block[bp + 2];
		var tmp2 = tmp1 | x3;
		x4 = this.block[bp + 1];
		var tmp3 = tmp2 | x4;
		x5 = this.block[bp + 7];
		var tmp4 = tmp3 | x5;
		x6 = this.block[bp + 5];
		var tmp5 = tmp4 | x6;
		x7 = this.block[bp + 3];
		if((tmp5 | x7) == 0) {
			this.block[bp] = this.block[bp + 1] = this.block[bp + 2] = this.block[bp + 3] = this.block[bp + 4] = this.block[bp + 5] = this.block[bp + 6] = this.block[bp + 7] = this.block[bp] << 3;
			return;
		}
		x0 = (this.block[bp] << 11) + 128;
		x8 = 565 * (x4 + x5);
		x4 = x8 + 2276 * x4;
		x5 = x8 - 3406 * x5;
		x8 = 2408 * (x6 + x7);
		x6 = x8 - 799 * x6;
		x7 = x8 - 4017 * x7;
		x8 = x0 + x1;
		x0 -= x1;
		x1 = 1108 * (x3 + x2);
		x2 = x1 - 3784 * x2;
		x3 = x1 + 1568 * x3;
		x1 = x4 + x6;
		x4 -= x6;
		x6 = x5 + x7;
		x5 -= x7;
		x7 = x8 + x3;
		x8 -= x3;
		x3 = x0 + x2;
		x0 -= x2;
		x2 = 181 * (x4 + x5) + 128 >> 8;
		x4 = 181 * (x4 - x5) + 128 >> 8;
		this.block[bp] = x7 + x1 >> 8;
		this.block[bp + 1] = x3 + x2 >> 8;
		this.block[bp + 2] = x0 + x4 >> 8;
		this.block[bp + 3] = x8 + x6 >> 8;
		this.block[bp + 4] = x8 - x6 >> 8;
		this.block[bp + 5] = x0 - x4 >> 8;
		this.block[bp + 6] = x3 - x2 >> 8;
		this.block[bp + 7] = x7 - x1 >> 8;
	}
	,njColIDCT: function(bp,out,po,stride) {
		var x0;
		var x1;
		var x2;
		var x3;
		var x4;
		var x5;
		var x6;
		var x7;
		var x8;
		x1 = this.block[bp + 32] << 8;
		var tmp = x1;
		x2 = this.block[bp + 48];
		var tmp1 = tmp | x2;
		x3 = this.block[bp + 16];
		var tmp2 = tmp1 | x3;
		x4 = this.block[bp + 8];
		var tmp3 = tmp2 | x4;
		x5 = this.block[bp + 56];
		var tmp4 = tmp3 | x5;
		x6 = this.block[bp + 40];
		var tmp5 = tmp4 | x6;
		x7 = this.block[bp + 24];
		if((tmp5 | x7) == 0) {
			var x = (this.block[bp] + 32 >> 6) + 128;
			if(x < 0) {
				x1 = 0;
			} else if(x > 255) {
				x1 = 255;
			} else {
				x1 = x;
			}
			var _g = 0;
			while(_g < 8) {
				++_g;
				out.b[po] = x1 & 255;
				po += stride;
			}
			return;
		}
		x0 = (this.block[bp] << 8) + 8192;
		x8 = 565 * (x4 + x5) + 4;
		x4 = x8 + 2276 * x4 >> 3;
		x5 = x8 - 3406 * x5 >> 3;
		x8 = 2408 * (x6 + x7) + 4;
		x6 = x8 - 799 * x6 >> 3;
		x7 = x8 - 4017 * x7 >> 3;
		x8 = x0 + x1;
		x0 -= x1;
		x1 = 1108 * (x3 + x2) + 4;
		x2 = x1 - 3784 * x2 >> 3;
		x3 = x1 + 1568 * x3 >> 3;
		x1 = x4 + x6;
		x4 -= x6;
		x6 = x5 + x7;
		x5 -= x7;
		x7 = x8 + x3;
		x8 -= x3;
		x3 = x0 + x2;
		x0 -= x2;
		x2 = 181 * (x4 + x5) + 128 >> 8;
		x4 = 181 * (x4 - x5) + 128 >> 8;
		var x9 = (x7 + x1 >> 14) + 128;
		out.b[po] = (x9 < 0?0:x9 > 255?255:x9) & 255;
		po += stride;
		var x10 = (x3 + x2 >> 14) + 128;
		out.b[po] = (x10 < 0?0:x10 > 255?255:x10) & 255;
		po += stride;
		var x11 = (x0 + x4 >> 14) + 128;
		out.b[po] = (x11 < 0?0:x11 > 255?255:x11) & 255;
		po += stride;
		var x12 = (x8 + x6 >> 14) + 128;
		out.b[po] = (x12 < 0?0:x12 > 255?255:x12) & 255;
		po += stride;
		var x13 = (x8 - x6 >> 14) + 128;
		out.b[po] = (x13 < 0?0:x13 > 255?255:x13) & 255;
		po += stride;
		var x14 = (x0 - x4 >> 14) + 128;
		out.b[po] = (x14 < 0?0:x14 > 255?255:x14) & 255;
		po += stride;
		var x15 = (x3 - x2 >> 14) + 128;
		out.b[po] = (x15 < 0?0:x15 > 255?255:x15) & 255;
		po += stride;
		var x16 = (x7 - x1 >> 14) + 128;
		out.b[po] = (x16 < 0?0:x16 > 255?255:x16) & 255;
	}
	,njDecodeBlock: function(c,po) {
		var out = c.pixels;
		var value;
		var coef = 0;
		var _g = 0;
		while(_g < 64) this.block[_g++] = 0;
		var vlc = this.vlctab[c.dctabsel];
		var value1 = this.njShowBits(16);
		var bits = vlc.b[value1 << 1];
		if(bits == 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.bufbits < bits) {
			this.njShowBits(bits);
		}
		this.bufbits -= bits;
		value1 = vlc.b[value1 << 1 | 1];
		this.vlcCode = value1;
		bits = value1 & 15;
		var tmp;
		if(bits == 0) {
			tmp = 0;
		} else {
			var r = this.njShowBits(bits);
			this.bufbits -= bits;
			value1 = r;
			if(r < 1 << bits - 1) {
				value1 = r + ((-1 << bits) + 1);
			}
			tmp = value1;
		}
		c.dcpred += tmp;
		var qt = this.qtab[c.qtsel];
		var at = this.vlctab[c.actabsel];
		this.block[0] = c.dcpred * qt[0];
		while(true) {
			var value2 = this.njShowBits(16);
			var bits1 = at.b[value2 << 1];
			if(bits1 == 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			if(this.bufbits < bits1) {
				this.njShowBits(bits1);
			}
			this.bufbits -= bits1;
			value2 = at.b[value2 << 1 | 1];
			this.vlcCode = value2;
			bits1 = value2 & 15;
			if(bits1 == 0) {
				value = 0;
			} else {
				var r1 = this.njShowBits(bits1);
				this.bufbits -= bits1;
				value2 = r1;
				if(r1 < 1 << bits1 - 1) {
					value2 = r1 + ((-1 << bits1) + 1);
				}
				value = value2;
			}
			if(this.vlcCode == 0) {
				break;
			}
			if((this.vlcCode & 15) == 0 && this.vlcCode != 240) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			coef += (this.vlcCode >> 4) + 1;
			if(coef > 63) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			this.block[this.njZZ[coef]] = value * qt[coef];
			if(!(coef < 63)) {
				break;
			}
		}
		var _g1 = 0;
		while(_g1 < 8) {
			var bp = _g1++ * 8;
			var x0;
			var x1;
			var x2;
			var x3;
			var x4;
			var x5;
			var x6;
			var x7;
			var x8;
			x1 = this.block[bp + 4] << 11;
			var tmp1 = x1;
			x2 = this.block[bp + 6];
			var tmp2 = tmp1 | x2;
			x3 = this.block[bp + 2];
			var tmp3 = tmp2 | x3;
			x4 = this.block[bp + 1];
			var tmp4 = tmp3 | x4;
			x5 = this.block[bp + 7];
			var tmp5 = tmp4 | x5;
			x6 = this.block[bp + 5];
			var tmp6 = tmp5 | x6;
			x7 = this.block[bp + 3];
			if((tmp6 | x7) == 0) {
				this.block[bp] = this.block[bp + 1] = this.block[bp + 2] = this.block[bp + 3] = this.block[bp + 4] = this.block[bp + 5] = this.block[bp + 6] = this.block[bp + 7] = this.block[bp] << 3;
			} else {
				x0 = (this.block[bp] << 11) + 128;
				x8 = 565 * (x4 + x5);
				x4 = x8 + 2276 * x4;
				x5 = x8 - 3406 * x5;
				x8 = 2408 * (x6 + x7);
				x6 = x8 - 799 * x6;
				x7 = x8 - 4017 * x7;
				x8 = x0 + x1;
				x0 -= x1;
				x1 = 1108 * (x3 + x2);
				x2 = x1 - 3784 * x2;
				x3 = x1 + 1568 * x3;
				x1 = x4 + x6;
				x4 -= x6;
				x6 = x5 + x7;
				x5 -= x7;
				x7 = x8 + x3;
				x8 -= x3;
				x3 = x0 + x2;
				x0 -= x2;
				x2 = 181 * (x4 + x5) + 128 >> 8;
				x4 = 181 * (x4 - x5) + 128 >> 8;
				this.block[bp] = x7 + x1 >> 8;
				this.block[bp + 1] = x3 + x2 >> 8;
				this.block[bp + 2] = x0 + x4 >> 8;
				this.block[bp + 3] = x8 + x6 >> 8;
				this.block[bp + 4] = x8 - x6 >> 8;
				this.block[bp + 5] = x0 - x4 >> 8;
				this.block[bp + 6] = x3 - x2 >> 8;
				this.block[bp + 7] = x7 - x1 >> 8;
			}
		}
		var _g2 = 0;
		while(_g2 < 8) {
			var coef1 = _g2++;
			var po1 = coef1 + po;
			var stride = c.stride;
			var x01;
			var x11;
			var x21;
			var x31;
			var x41;
			var x51;
			var x61;
			var x71;
			var x81;
			x11 = this.block[coef1 + 32] << 8;
			var tmp7 = x11;
			x21 = this.block[coef1 + 48];
			var tmp8 = tmp7 | x21;
			x31 = this.block[coef1 + 16];
			var tmp9 = tmp8 | x31;
			x41 = this.block[coef1 + 8];
			var tmp10 = tmp9 | x41;
			x51 = this.block[coef1 + 56];
			var tmp11 = tmp10 | x51;
			x61 = this.block[coef1 + 40];
			var tmp12 = tmp11 | x61;
			x71 = this.block[coef1 + 24];
			if((tmp12 | x71) == 0) {
				var x = (this.block[coef1] + 32 >> 6) + 128;
				if(x < 0) {
					x11 = 0;
				} else if(x > 255) {
					x11 = 255;
				} else {
					x11 = x;
				}
				var _g3 = 0;
				while(_g3 < 8) {
					++_g3;
					out.b[po1] = x11 & 255;
					po1 += stride;
				}
			} else {
				x01 = (this.block[coef1] << 8) + 8192;
				x81 = 565 * (x41 + x51) + 4;
				x41 = x81 + 2276 * x41 >> 3;
				x51 = x81 - 3406 * x51 >> 3;
				x81 = 2408 * (x61 + x71) + 4;
				x61 = x81 - 799 * x61 >> 3;
				x71 = x81 - 4017 * x71 >> 3;
				x81 = x01 + x11;
				x01 -= x11;
				x11 = 1108 * (x31 + x21) + 4;
				x21 = x11 - 3784 * x21 >> 3;
				x31 = x11 + 1568 * x31 >> 3;
				x11 = x41 + x61;
				x41 -= x61;
				x61 = x51 + x71;
				x51 -= x71;
				x71 = x81 + x31;
				x81 -= x31;
				x31 = x01 + x21;
				x01 -= x21;
				x21 = 181 * (x41 + x51) + 128 >> 8;
				x41 = 181 * (x41 - x51) + 128 >> 8;
				var x9 = (x71 + x11 >> 14) + 128;
				out.b[po1] = (x9 < 0?0:x9 > 255?255:x9) & 255;
				po1 += stride;
				var x10 = (x31 + x21 >> 14) + 128;
				out.b[po1] = (x10 < 0?0:x10 > 255?255:x10) & 255;
				po1 += stride;
				var x12 = (x01 + x41 >> 14) + 128;
				out.b[po1] = (x12 < 0?0:x12 > 255?255:x12) & 255;
				po1 += stride;
				var x13 = (x81 + x61 >> 14) + 128;
				out.b[po1] = (x13 < 0?0:x13 > 255?255:x13) & 255;
				po1 += stride;
				var x14 = (x81 - x61 >> 14) + 128;
				out.b[po1] = (x14 < 0?0:x14 > 255?255:x14) & 255;
				po1 += stride;
				var x15 = (x01 - x41 >> 14) + 128;
				out.b[po1] = (x15 < 0?0:x15 > 255?255:x15) & 255;
				po1 += stride;
				var x16 = (x31 - x21 >> 14) + 128;
				out.b[po1] = (x16 < 0?0:x16 > 255?255:x16) & 255;
				po1 += stride;
				var x17 = (x71 - x11 >> 14) + 128;
				out.b[po1] = (x17 < 0?0:x17 > 255?255:x17) & 255;
			}
		}
	}
	,notSupported: function() {
		throw new js__$Boot_HaxeError("This JPG file is not supported");
	}
	,njDecodeScan: function() {
		if(this.size < 2) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		if(this.length > this.size) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.length < 4 + 2 * this.ncomp) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.bytes.b[this.pos] != this.ncomp) {
			this.notSupported();
		}
		this.pos += 1;
		this.size -= 1;
		this.length -= 1;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		var _g1 = 0;
		var _g = this.ncomp;
		while(_g1 < _g) {
			var c = this.comps[_g1++];
			if(this.bytes.b[this.pos] != c.cid) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			if((this.bytes.b[this.pos + 1] & 236) != 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
			c.dctabsel = this.bytes.b[this.pos + 1] >> 4 << 1;
			c.actabsel = (this.bytes.b[this.pos + 1] & 3) << 1 | 1;
			this.pos += 2;
			this.size -= 2;
			this.length -= 2;
			if(this.size < 0) {
				throw new js__$Boot_HaxeError("Invalid JPEG file");
			}
		}
		var start = this.bytes.b[this.pos];
		var count = this.bytes.b[this.pos];
		if(!this.progressive && start != 0 || count != 63 - start || this.bytes.b[this.pos + 2] != 0) {
			this.notSupported();
		}
		var count1 = this.length;
		this.pos += count1;
		this.size -= count1;
		this.length -= count1;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		if(this.progressive) {
			throw new js__$Boot_HaxeError("Unsupported progressive JPG");
		}
		var mbx = 0;
		var mby = 0;
		var rstcount = this.rstinterval;
		var nextrst = 0;
		while(true) {
			var _g11 = 0;
			var _g2 = this.ncomp;
			while(_g11 < _g2) {
				var c1 = this.comps[_g11++];
				var _g3 = 0;
				var _g21 = c1.ssy;
				while(_g3 < _g21) {
					var sby = _g3++;
					var _g5 = 0;
					var _g4 = c1.ssx;
					while(_g5 < _g4) this.njDecodeBlock(c1,(mby * c1.ssy + sby) * c1.stride + mbx * c1.ssx + _g5++ << 3);
				}
			}
			if(++mbx >= this.mbwidth) {
				mbx = 0;
				if(++mby >= this.mbheight) {
					break;
				}
			}
			if(this.rstinterval != 0 && --rstcount == 0) {
				this.bufbits &= 248;
				var r = this.njShowBits(16);
				this.bufbits -= 16;
				if((r & 65528) != 65488 || (r & 7) != nextrst) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				nextrst = nextrst + 1 & 7;
				rstcount = this.rstinterval;
				var _g6 = 0;
				while(_g6 < 3) this.comps[_g6++].dcpred = 0;
			}
		}
	}
	,njUpsampleH: function(c) {
		var xmax = c.width - 3;
		var cout = hxd_impl_Tmp.getBytes(c.width * c.height << 1);
		var lout = cout;
		var lin = c.pixels;
		var pi = 0;
		var po = 0;
		var _g1 = 0;
		var _g = c.height;
		while(_g1 < _g) {
			++_g1;
			var x = 139 * lin.b[pi] + -11 * lin.b[pi + 1] + 64 >> 7;
			lout.b[po] = (x < 0?0:x > 255?255:x) & 255;
			var tmp = po + 1;
			var x1 = 104 * lin.b[pi] + 27 * lin.b[pi + 1] + -3 * lin.b[pi + 2] + 64 >> 7;
			lout.b[tmp] = (x1 < 0?0:x1 > 255?255:x1) & 255;
			var tmp1 = po + 2;
			var x2 = 28 * lin.b[pi] + 109 * lin.b[pi + 1] + -9 * lin.b[pi + 2] + 64 >> 7;
			lout.b[tmp1] = (x2 < 0?0:x2 > 255?255:x2) & 255;
			var _g3 = 0;
			while(_g3 < xmax) {
				var x3 = _g3++;
				var tmp2 = po + (x3 << 1) + 3;
				var x4 = -9 * lin.b[pi + x3] + 111 * lin.b[pi + x3 + 1] + 29 * lin.b[pi + x3 + 2] + -3 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[tmp2] = (x4 < 0?0:x4 > 255?255:x4) & 255;
				var tmp3 = po + (x3 << 1) + 4;
				var x5 = -3 * lin.b[pi + x3] + 29 * lin.b[pi + x3 + 1] + 111 * lin.b[pi + x3 + 2] + -9 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[tmp3] = (x5 < 0?0:x5 > 255?255:x5) & 255;
			}
			pi += c.stride;
			po += c.width << 1;
			var tmp4 = po - 3;
			var x6 = 28 * lin.b[pi - 1] + 109 * lin.b[pi - 2] + -9 * lin.b[pi - 3] + 64 >> 7;
			lout.b[tmp4] = (x6 < 0?0:x6 > 255?255:x6) & 255;
			var tmp5 = po - 2;
			var x7 = 104 * lin.b[pi - 1] + 27 * lin.b[pi - 2] + -3 * lin.b[pi - 3] + 64 >> 7;
			lout.b[tmp5] = (x7 < 0?0:x7 > 255?255:x7) & 255;
			var tmp6 = po - 1;
			var x8 = 139 * lin.b[pi - 1] + -11 * lin.b[pi - 2] + 64 >> 7;
			lout.b[tmp6] = (x8 < 0?0:x8 > 255?255:x8) & 255;
		}
		c.width <<= 1;
		c.stride = c.width;
		hxd_impl_Tmp.saveBytes(c.pixels);
		c.pixels = cout;
	}
	,njUpsampleV: function(c) {
		var w = c.width;
		var s1 = c.stride;
		var s2 = s1 + s1;
		var out = hxd_impl_Tmp.getBytes(c.width * c.height << 1);
		var pi = 0;
		var po = 0;
		var cout = out;
		var cin = c.pixels;
		var _g1 = 0;
		while(_g1 < w) {
			var x = _g1++;
			po = x;
			pi = x;
			var x1 = 139 * cin.b[pi] + -11 * cin.b[pi + s1] + 64 >> 7;
			cout.b[x] = (x1 < 0?0:x1 > 255?255:x1) & 255;
			po = x + w;
			var x2 = 104 * cin.b[pi] + 27 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = (x2 < 0?0:x2 > 255?255:x2) & 255;
			po += w;
			var x3 = 28 * cin.b[pi] + 109 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = (x3 < 0?0:x3 > 255?255:x3) & 255;
			po += w;
			pi += s1;
			var _g3 = 0;
			var _g2 = c.height - 2;
			while(_g3 < _g2) {
				++_g3;
				var x4 = -9 * cin.b[pi - s1] + 111 * cin.b[pi] + 29 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = (x4 < 0?0:x4 > 255?255:x4) & 255;
				po += w;
				var x5 = -3 * cin.b[pi - s1] + 29 * cin.b[pi] + 111 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = (x5 < 0?0:x5 > 255?255:x5) & 255;
				po += w;
				pi += s1;
			}
			pi += s1;
			var x6 = 28 * cin.b[pi] + 109 * cin.b[pi - s1] + -9 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = (x6 < 0?0:x6 > 255?255:x6) & 255;
			po += w;
			var x7 = 104 * cin.b[pi] + 27 * cin.b[pi - s1] + -3 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = (x7 < 0?0:x7 > 255?255:x7) & 255;
			po += w;
			var x8 = 139 * cin.b[pi] + -11 * cin.b[pi - s1] + 64 >> 7;
			cout.b[po] = (x8 < 0?0:x8 > 255?255:x8) & 255;
		}
		c.height <<= 1;
		c.stride = c.width;
		hxd_impl_Tmp.saveBytes(c.pixels);
		c.pixels = out;
	}
	,njUpsample: function(c) {
		var xshift = 0;
		var yshift = 0;
		while(c.width < this.width) {
			c.width <<= 1;
			++xshift;
		}
		while(c.height < this.height) {
			c.height <<= 1;
			++yshift;
		}
		var out = hxd_impl_Tmp.getBytes(c.width * c.height);
		var lin = c.pixels;
		var pout = 0;
		var lout = out;
		var _g1 = 0;
		var _g = c.height;
		while(_g1 < _g) {
			var pin = (_g1++ >> yshift) * c.stride;
			var _g3 = 0;
			var _g2 = c.width;
			while(_g3 < _g2) lout.b[pout++] = lin.b[(_g3++ >> xshift) + pin] & 255;
		}
		c.stride = c.width;
		hxd_impl_Tmp.saveBytes(c.pixels);
		c.pixels = out;
	}
	,njConvert: function() {
		var _g1 = 0;
		var _g = this.ncomp;
		while(_g1 < _g) {
			var c = this.comps[_g1++];
			switch(this.filter[1]) {
			case 0:
				if(c.width < this.width || c.height < this.height) {
					this.njUpsample(c);
				}
				break;
			case 1:
				while(c.width < this.width || c.height < this.height) {
					if(c.width < this.width) {
						this.njUpsampleH(c);
					}
					if(c.height < this.height) {
						this.njUpsampleV(c);
					}
				}
				break;
			}
			if(c.width < this.width || c.height < this.height) {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var pixels = hxd_impl_Tmp.getBytes(this.width * this.height * 4);
		if(this.ncomp == 3) {
			var py = this.comps[0].pixels;
			var pcb = this.comps[1].pixels;
			var pcr = this.comps[2].pixels;
			var pix = pixels;
			var k1 = 0;
			var k2 = 0;
			var k3 = 0;
			var out = 0;
			var _g11 = 0;
			var _g2 = this.height;
			while(_g11 < _g2) {
				++_g11;
				var _g3 = 0;
				var _g21 = this.width;
				while(_g3 < _g21) {
					++_g3;
					var y = py.b[k1++] << 8;
					var cb = pcb.b[k2++] - 128;
					var cr = pcr.b[k3++] - 128;
					var x = y + 359 * cr + 128 >> 8;
					var r = x < 0?0:x > 255?255:x;
					var x1 = y - 88 * cb - 183 * cr + 128 >> 8;
					var g = x1 < 0?0:x1 > 255?255:x1;
					var x2 = y + 454 * cb + 128 >> 8;
					pix.b[out++] = (x2 < 0?0:x2 > 255?255:x2) & 255;
					pix.b[out++] = g & 255;
					pix.b[out++] = r & 255;
					pix.b[out++] = 255;
				}
				k1 += this.comps[0].stride - this.width;
				k2 += this.comps[1].stride - this.width;
				k3 += this.comps[2].stride - this.width;
			}
		} else {
			throw new js__$Boot_HaxeError("TODO");
		}
		return pixels;
	}
	,njDecode: function() {
		if(this.size < 2 || this.bytes.b[this.pos] != 255 || this.bytes.b[this.pos + 1] != 216) {
			throw new js__$Boot_HaxeError("This file is not a JPEG");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.size < 0) {
			throw new js__$Boot_HaxeError("Invalid JPEG file");
		}
		try {
			while(true) {
				if(this.size < 2 || this.bytes.b[this.pos] != 255) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				this.pos += 2;
				this.size -= 2;
				this.length -= 2;
				if(this.size < 0) {
					throw new js__$Boot_HaxeError("Invalid JPEG file");
				}
				switch(this.bytes.b[this.pos + -1]) {
				case 192:
					this.njDecodeSOF();
					break;
				case 194:
					this.progressive = true;
					var _g = 4;
					while(_g < 8) {
						var i = _g++;
						if(this.vlctab[i] == null) {
							this.vlctab[i] = hxd_impl_Tmp.getBytes(131072);
						}
					}
					this.njDecodeSOF();
					break;
				case 195:
					throw new js__$Boot_HaxeError("Unsupported lossless JPG");
					break;
				case 196:
					this.njDecodeDHT();
					break;
				case 218:
					this.njDecodeScan();
					throw "__break__";
					break;
				case 219:
					this.njDecodeDQT();
					break;
				case 221:
					this.njDecodeDRI();
					break;
				case 254:
					if(this.size < 2) {
						throw new js__$Boot_HaxeError("Invalid JPEG file");
					}
					this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
					if(this.length > this.size) {
						throw new js__$Boot_HaxeError("Invalid JPEG file");
					}
					this.pos += 2;
					this.size -= 2;
					this.length -= 2;
					if(this.size < 0) {
						throw new js__$Boot_HaxeError("Invalid JPEG file");
					}
					var count = this.length;
					this.pos += count;
					this.size -= count;
					this.length -= count;
					if(this.size < 0) {
						throw new js__$Boot_HaxeError("Invalid JPEG file");
					}
					break;
				default:
					switch(this.bytes.b[this.pos + -1] & 240) {
					case 192:
						throw new js__$Boot_HaxeError("Unsupported jpeg type " + (this.bytes.b[this.pos + -1] & 15));
						break;
					case 224:
						if(this.size < 2) {
							throw new js__$Boot_HaxeError("Invalid JPEG file");
						}
						this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
						if(this.length > this.size) {
							throw new js__$Boot_HaxeError("Invalid JPEG file");
						}
						this.pos += 2;
						this.size -= 2;
						this.length -= 2;
						if(this.size < 0) {
							throw new js__$Boot_HaxeError("Invalid JPEG file");
						}
						var count1 = this.length;
						this.pos += count1;
						this.size -= count1;
						this.length -= count1;
						if(this.size < 0) {
							throw new js__$Boot_HaxeError("Invalid JPEG file");
						}
						break;
					default:
						throw new js__$Boot_HaxeError("Unsupported jpeg tag 0x" + StringTools.hex(this.bytes.b[this.pos + -1],2));
					}
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		var pixels = this.njConvert();
		this.cleanup();
		return { pixels : pixels, width : this.width, height : this.height};
	}
	,__class__: hxd_res_NanoJpeg
};
var hxd_res_Sound = function(entry) {
	this.lastPlay = 0.;
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Sound"] = hxd_res_Sound;
hxd_res_Sound.__name__ = ["hxd","res","Sound"];
hxd_res_Sound.getWorker = function() {
	if(hxd_res_Sound.defaultWorker == null) {
		var old = hxd_Worker.ENABLE;
		hxd_Worker.ENABLE = false;
		hxd_res_Sound.defaultWorker = new hxd_snd_Worker();
		hxd_res_Sound.defaultWorker.start();
		hxd_Worker.ENABLE = old;
	}
	return hxd_res_Sound.defaultWorker;
};
hxd_res_Sound.startWorker = function() {
	if(hxd_res_Sound.defaultWorker != null) {
		return true;
	}
	hxd_res_Sound.defaultWorker = new hxd_snd_Worker();
	return hxd_res_Sound.defaultWorker.start();
};
hxd_res_Sound.__super__ = hxd_res_Resource;
hxd_res_Sound.prototype = $extend(hxd_res_Resource.prototype,{
	getData: function() {
		if(this.data != null) {
			return this.data;
		}
		var bytes = this.entry.getBytes();
		switch(bytes.b[0]) {
		case 73:case 255:
			this.data = new hxd_snd_Mp3Data(bytes);
			break;
		case 79:
			throw new js__$Boot_HaxeError("OGG format requires -lib stb_ogg_sound (for " + this.entry.get_path() + ")");
			break;
		case 82:
			this.data = new hxd_snd_WavData(bytes);
			break;
		default:
		}
		if(this.data == null) {
			throw new js__$Boot_HaxeError("Unsupported sound format " + this.entry.get_path());
		}
		return this.data;
	}
	,dispose: function() {
		this.stop();
		this.data = null;
	}
	,stop: function() {
		if(this.channel != null) {
			this.channel.stop();
			this.channel = null;
		}
	}
	,play: function(loop,volume) {
		if(volume == null) {
			volume = 1.;
		}
		if(loop == null) {
			loop = false;
		}
		this.lastPlay = haxe_Timer.stamp();
		return this.channel = hxd_res_Sound.getWorker().play(this,loop,volume);
	}
	,__class__: hxd_res_Sound
});
var hxd_res_TiledMap = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.TiledMap"] = hxd_res_TiledMap;
hxd_res_TiledMap.__name__ = ["hxd","res","TiledMap"];
hxd_res_TiledMap.__super__ = hxd_res_Resource;
hxd_res_TiledMap.prototype = $extend(hxd_res_Resource.prototype,{
	toMap: function() {
		var data = this.entry.getBytes().toString();
		var base = new haxe_crypto_BaseCode(haxe_io_Bytes.ofString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"));
		var x = new haxe_xml_Fast(Xml.parse(data).firstElement());
		var layers = [];
		var _g_head = x.nodes.resolve("layer").h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var data1 = StringTools.trim(val.node.resolve("data").get_innerData());
			while(HxOverrides.cca(data1,data1.length - 1) == 61) data1 = HxOverrides.substr(data1,0,data1.length - 1);
			var bytes = base.decodeBytes(haxe_io_Bytes.ofString(data1));
			bytes = format_tools_Inflate.run(bytes);
			var input = new haxe_io_BytesInput(bytes);
			var data2 = [];
			var _g1 = 0;
			var _g = bytes.length >> 2;
			while(_g1 < _g) {
				++_g1;
				data2.push(input.readInt32());
			}
			var tmp = val.att.resolve("name");
			var tmp1;
			if(val.has.resolve("opacity")) {
				var x1 = val.att.resolve("opacity");
				tmp1 = parseFloat(x1);
			} else {
				tmp1 = 1.;
			}
			layers.push({ name : tmp, opacity : tmp1, objects : [], data : data2});
		}
		var _g_head1 = x.nodes.resolve("objectgroup").h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var objs = [];
			var _g_head2 = val1.nodes.resolve("object").h;
			while(_g_head2 != null) {
				var val2 = _g_head2.item;
				_g_head2 = _g_head2.next;
				if(val2.has.resolve("name")) {
					objs.push({ name : val2.att.resolve("name"), type : val2.has.resolve("type")?val2.att.resolve("type"):null, x : Std.parseInt(val2.att.resolve("x")), y : Std.parseInt(val2.att.resolve("y"))});
				}
			}
			layers.push({ name : val1.att.resolve("name"), opacity : 1., objects : objs, data : null});
		}
		return { width : Std.parseInt(x.att.resolve("width")), height : Std.parseInt(x.att.resolve("height")), layers : layers};
	}
	,__class__: hxd_res_TiledMap
});
var hxd_snd_Channel = function(w,chan,res,id,loop,v,t) {
	this.fadeUID = 0;
	this.res = res;
	this.channel = chan;
	this.vol = this.set_volume(v);
	this.id = id;
	this.set_loop(loop);
	this.volumeSpeed = 0;
	this.playTime = haxe_Timer.stamp() - t;
	this.w = w;
};
$hxClasses["hxd.snd.Channel"] = hxd_snd_Channel;
hxd_snd_Channel.__name__ = ["hxd","snd","Channel"];
hxd_snd_Channel.prototype = {
	queueNext: function(r) {
		if(this.w != null) {
			if(r != null) {
				this.w.channelID++;
			}
			this.w.send(hxd_snd__$Worker_Message.Queue(this.id,r == null?null:r.entry.get_path()));
		}
	}
	,syncWith: function(src) {
		if(this.w != null) {
			this.playTime = src.playTime;
			this.w.send(hxd_snd__$Worker_Message.Sync(this.id,src.id));
		} else {
			this.position = src.position;
		}
	}
	,get_currentTime: function() {
		return haxe_Timer.stamp() - this.playTime;
	}
	,set_currentTime: function(v) {
		this.playTime = haxe_Timer.stamp() - v;
		if(this.w != null) {
			this.w.send(hxd_snd__$Worker_Message.SetTime(this.id,v));
			return v;
		}
		if(this.snd.samples > 0) {
			this.position = (v * 44100 | 0) % this.snd.samples;
			if(this.position < 0) {
				this.position += this.snd.samples;
			}
		}
		return v;
	}
	,fadeTo: function(volume,time,onEnd) {
		if(time == null) {
			time = 1.;
		}
		if(this.volume == volume) {
			if(onEnd != null) {
				haxe_Timer.delay(onEnd,1 + Math.ceil(time * 1000));
			}
			return;
		}
		var old = this.w;
		this.w = null;
		this.set_volume(volume);
		this.w = old;
		this.onFadeEnd = onEnd;
		if(this.w != null) {
			this.w.send(hxd_snd__$Worker_Message.Fade(this.id,onEnd == null?0:++this.fadeUID,volume,time));
		}
	}
	,stop: function() {
		if(this.w != null) {
			this.w.send(hxd_snd__$Worker_Message.Stop(this.id));
			if(this.channel != null) {
				HxOverrides.remove(this.channel.channels,this);
			}
			this.w.cmap.remove(this.id);
			this.w = null;
		}
	}
	,set_loop: function(b) {
		if(this.loop == b) {
			return b;
		}
		if(this.w != null) {
			this.w.send(hxd_snd__$Worker_Message.Loop(this.id,b));
		}
		return this.loop = b;
	}
	,set_volume: function(v) {
		if(this.volume == v) {
			return v;
		}
		this.volume = v;
		if(this.w != null) {
			this.w.send(hxd_snd__$Worker_Message.SetVolume(this.id,v));
		}
		return v;
	}
	,onEnd: function() {
	}
	,__class__: hxd_snd_Channel
};
var hxd_snd_Data = function() { };
$hxClasses["hxd.snd.Data"] = hxd_snd_Data;
hxd_snd_Data.__name__ = ["hxd","snd","Data"];
hxd_snd_Data.prototype = {
	decode: function(out,outPos,sampleStart,sampleCount) {
		throw new js__$Boot_HaxeError("not implemented");
	}
	,load: function(onEnd) {
		onEnd();
	}
	,get_duration: function() {
		return this.samples / 44100;
	}
	,__class__: hxd_snd_Data
};
var hxd_snd_Mp3Data = function(bytes) {
	var mp = new format_mp3_Reader(new haxe_io_BytesInput(bytes)).read();
	this.samples = mp.sampleCount;
	var frame = mp.frames[0].data;
	var lame = -1;
	var _g1 = 0;
	var _g = frame.length - 24;
	while(_g1 < _g) {
		var i = _g1++;
		if(frame.b[i] == 76 && frame.b[i + 1] == 65 && frame.b[i + 2] == 77 && frame.b[i + 3] == 69) {
			lame = i;
			break;
		}
	}
	if(lame >= 0) {
		var startEnd = frame.b[lame + 21] << 16 | frame.b[lame + 22] << 8 | frame.b[lame + 23];
		this.samples -= (startEnd >> 12) + (startEnd & 4095) + 1152;
	}
	var sampling = format_mp3_MPEG.srEnum2Num(mp.frames[0].header.samplingRate);
	var ctx = hxd_snd_NativeChannel.getContext();
	this.samples = Math.ceil(this.samples * ctx.sampleRate / sampling);
	ctx.decodeAudioData(bytes.b.bufferValue,$bind(this,this.processBuffer));
};
$hxClasses["hxd.snd.Mp3Data"] = hxd_snd_Mp3Data;
hxd_snd_Mp3Data.__name__ = ["hxd","snd","Mp3Data"];
hxd_snd_Mp3Data.__super__ = hxd_snd_Data;
hxd_snd_Mp3Data.prototype = $extend(hxd_snd_Data.prototype,{
	load: function(onEnd) {
		if(this.buffer != null) {
			onEnd();
		} else {
			this.onEnd = onEnd;
		}
	}
	,processBuffer: function(buf) {
		var left = buf.getChannelData(0);
		var right = buf.numberOfChannels < 2?left:buf.getChannelData(1);
		var join = new Float32Array(left.length * 2);
		var w = 0;
		var _g1 = 0;
		var _g = buf.length;
		while(_g1 < _g) {
			var i = _g1++;
			join[w++] = left[i];
			join[w++] = right[i];
		}
		this.samples = buf.length;
		this.buffer = haxe_io_Bytes.ofData(join.buffer);
		if(this.onEnd != null) {
			this.onEnd();
			this.onEnd = null;
		}
	}
	,decode: function(out,outPos,sampleStart,sampleCount) {
		if(this.buffer == null) {
			out.fill(outPos,sampleCount * 8,0);
		} else {
			out.blit(outPos,this.buffer,sampleStart * 8,sampleCount * 8);
		}
	}
	,__class__: hxd_snd_Mp3Data
});
var hxd_snd_NativeChannel = function(bufferSamples) {
	this.bufferSamples = bufferSamples;
	var ctx = hxd_snd_NativeChannel.getContext();
	this.sproc = ctx.createScriptProcessor(bufferSamples,2,2);
	this.tmpBuffer = new Float32Array(bufferSamples * 2);
	this.sproc.connect(ctx.destination);
	this.sproc.onaudioprocess = $bind(this,this.onJsSample);
};
$hxClasses["hxd.snd.NativeChannel"] = hxd_snd_NativeChannel;
hxd_snd_NativeChannel.__name__ = ["hxd","snd","NativeChannel"];
hxd_snd_NativeChannel.getContext = function() {
	if(hxd_snd_NativeChannel.ctx == null) {
		try {
			hxd_snd_NativeChannel.ctx = new AudioContext();
		} catch( e ) {
			throw new js__$Boot_HaxeError("Web Audio API not available for this browser");
		}
	}
	return hxd_snd_NativeChannel.ctx;
};
hxd_snd_NativeChannel.prototype = {
	onJsSample: function(event) {
		this.onSample(this.tmpBuffer);
		var r = 0;
		var left = event.outputBuffer.getChannelData(0);
		var right = event.outputBuffer.getChannelData(1);
		var _g1 = 0;
		var _g = this.bufferSamples;
		while(_g1 < _g) {
			var i = _g1++;
			left[i] = this.tmpBuffer[r++];
			right[i] = this.tmpBuffer[r++];
		}
	}
	,onSample: function(out) {
	}
	,stop: function() {
		if(this.sproc != null) {
			this.sproc.disconnect();
			this.sproc = null;
		}
	}
	,__class__: hxd_snd_NativeChannel
};
var hxd_snd_WavData = function(bytes) {
	this.init(new format_wav_Reader(new haxe_io_BytesInput(bytes)).read());
};
$hxClasses["hxd.snd.WavData"] = hxd_snd_WavData;
hxd_snd_WavData.__name__ = ["hxd","snd","WavData"];
hxd_snd_WavData.__super__ = hxd_snd_Data;
hxd_snd_WavData.prototype = $extend(hxd_snd_Data.prototype,{
	init: function(d) {
		var h = d.header;
		if(h.channels > 2 || h.bitsPerSample != 8 && h.bitsPerSample != 16) {
			throw new js__$Boot_HaxeError("Unsupported WAV " + h.bitsPerSample + " bits " + h.channels + " chans");
		}
		var data = d.data;
		if(h.samplingRate != 44100) {
			var out = new haxe_io_BytesOutput();
			var rpos = 0.;
			var max = data.length >> (h.bitsPerSample >> 4);
			var delta = h.samplingRate / 44100;
			var next = h.channels;
			while(rpos < max) {
				var ipos = rpos | 0;
				var npos = ipos + next;
				if(npos >= max) {
					npos = max - next;
				}
				var v1;
				var v2;
				if(h.bitsPerSample == 8) {
					v1 = data.b[ipos];
					v2 = data.b[npos];
				} else {
					var p = ipos << 1;
					var v = data.b[p] | data.b[p + 1] << 8;
					if((v & 32768) != 0) {
						v -= 65536;
					}
					v1 = v;
					var p1 = npos << 1;
					var v3 = data.b[p1] | data.b[p1 + 1] << 8;
					if((v3 & 32768) != 0) {
						v3 -= 65536;
					}
					v2 = v3;
				}
				var v4 = v1 + (rpos - ipos) * (v2 - v1) | 0;
				if(h.bitsPerSample == 8) {
					out.writeByte(v4);
				} else {
					out.writeInt16(v4);
				}
				rpos += delta;
			}
			data = out.getBytes();
		}
		var out1 = new haxe_io_BytesOutput();
		var input = new haxe_io_BytesInput(data);
		var _g = h.bitsPerSample;
		switch(h.channels) {
		case 1:
			switch(_g) {
			case 8:
				this.samples = data.length;
				var _g1 = 0;
				var _g2 = this.samples;
				while(_g1 < _g2) {
					++_g1;
					var f = input.readByte() / 255;
					out1.writeInt32(haxe_io_FPHelper.floatToI32(f));
					out1.writeInt32(haxe_io_FPHelper.floatToI32(f));
				}
				break;
			case 16:
				this.samples = data.length >> 1;
				var _g11 = 0;
				var _g3 = this.samples;
				while(_g11 < _g3) {
					++_g11;
					var f1 = input.readInt16() / 32767;
					out1.writeInt32(haxe_io_FPHelper.floatToI32(f1));
					out1.writeInt32(haxe_io_FPHelper.floatToI32(f1));
				}
				break;
			default:
			}
			break;
		case 2:
			switch(_g) {
			case 8:
				this.samples = data.length >> 1;
				var _g12 = 0;
				var _g4 = this.samples;
				while(_g12 < _g4) {
					++_g12;
					out1.writeInt32(haxe_io_FPHelper.floatToI32(input.readByte() / 255));
					out1.writeInt32(haxe_io_FPHelper.floatToI32(input.readByte() / 255));
				}
				break;
			case 16:
				this.samples = data.length >> 2;
				var _g13 = 0;
				var _g5 = this.samples;
				while(_g13 < _g5) {
					++_g13;
					out1.writeInt32(haxe_io_FPHelper.floatToI32(input.readInt16() / 32767));
					out1.writeInt32(haxe_io_FPHelper.floatToI32(input.readInt16() / 32767));
				}
				break;
			default:
			}
			break;
		default:
		}
		this.rawData = out1.getBytes();
	}
	,decode: function(out,outPos,sampleStart,sampleCount) {
		out.blit(outPos,this.rawData,sampleStart * 8,sampleCount * 8);
	}
	,__class__: hxd_snd_WavData
});
var hxd_snd__$Worker_Message = $hxClasses["hxd.snd._Worker.Message"] = { __ename__ : ["hxd","snd","_Worker","Message"], __constructs__ : ["Play","SetGlobalVolume","SetVolume","Fade","Stop","Queue","Loop","EndLoop","SetTime","FadeEnd","Active","StopAll","Sync","Dispose","Clean"] };
hxd_snd__$Worker_Message.Play = function(path,loop,volume,time) { var $x = ["Play",0,path,loop,volume,time]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.SetGlobalVolume = function(volume) { var $x = ["SetGlobalVolume",1,volume]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.SetVolume = function(id,volume) { var $x = ["SetVolume",2,id,volume]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Fade = function(id,uid,volume,time) { var $x = ["Fade",3,id,uid,volume,time]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Stop = function(id) { var $x = ["Stop",4,id]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Queue = function(id,path) { var $x = ["Queue",5,id,path]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Loop = function(id,b) { var $x = ["Loop",6,id,b]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.EndLoop = function(id) { var $x = ["EndLoop",7,id]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.SetTime = function(id,t) { var $x = ["SetTime",8,id,t]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.FadeEnd = function(id,uid) { var $x = ["FadeEnd",9,id,uid]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Active = function(b) { var $x = ["Active",10,b]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.StopAll = ["StopAll",11];
hxd_snd__$Worker_Message.StopAll.toString = $estr;
hxd_snd__$Worker_Message.StopAll.__enum__ = hxd_snd__$Worker_Message;
hxd_snd__$Worker_Message.Sync = function(dst,src) { var $x = ["Sync",12,dst,src]; $x.__enum__ = hxd_snd__$Worker_Message; $x.toString = $estr; return $x; };
hxd_snd__$Worker_Message.Dispose = ["Dispose",13];
hxd_snd__$Worker_Message.Dispose.toString = $estr;
hxd_snd__$Worker_Message.Dispose.__enum__ = hxd_snd__$Worker_Message;
hxd_snd__$Worker_Message.Clean = ["Clean",14];
hxd_snd__$Worker_Message.Clean.toString = $estr;
hxd_snd__$Worker_Message.Clean.__enum__ = hxd_snd__$Worker_Message;
hxd_snd__$Worker_Message.__empty_constructs__ = [hxd_snd__$Worker_Message.StopAll,hxd_snd__$Worker_Message.Dispose,hxd_snd__$Worker_Message.Clean];
var hxd_snd__$Worker_WorkerChannel = function(w,c) {
	this.w = w;
	this.c = c;
	hxd_snd_NativeChannel.call(this,w.bufferSamples);
};
$hxClasses["hxd.snd._Worker.WorkerChannel"] = hxd_snd__$Worker_WorkerChannel;
hxd_snd__$Worker_WorkerChannel.__name__ = ["hxd","snd","_Worker","WorkerChannel"];
hxd_snd__$Worker_WorkerChannel.__super__ = hxd_snd_NativeChannel;
hxd_snd__$Worker_WorkerChannel.prototype = $extend(hxd_snd_NativeChannel.prototype,{
	onSample: function(out) {
		this.w.sampleData(out,this.c);
	}
	,__class__: hxd_snd__$Worker_WorkerChannel
});
var hxd_snd_NativeChannelData = function(w) {
	this.next = 0.;
	this.channels = [];
	this.tmpBuf = new haxe_io_Bytes(new ArrayBuffer(w.bufferSamples * 4 * 2));
};
$hxClasses["hxd.snd.NativeChannelData"] = hxd_snd_NativeChannelData;
hxd_snd_NativeChannelData.__name__ = ["hxd","snd","NativeChannelData"];
hxd_snd_NativeChannelData.prototype = {
	__class__: hxd_snd_NativeChannelData
};
var hxd_snd_Worker = function(nativeChannels,bufferSamples) {
	if(bufferSamples == null) {
		bufferSamples = 4096;
	}
	if(nativeChannels == null) {
		nativeChannels = 8;
	}
	this.cmap = new haxe_ds_IntMap();
	this.channelID = 1;
	this.volume = 1.0;
	hxd_Worker.call(this,hxd_snd__$Worker_Message);
	this.bufferSamples = bufferSamples;
	var _g = [];
	var _g2 = 0;
	while(_g2 < nativeChannels) {
		++_g2;
		_g.push(new hxd_snd_NativeChannelData(this));
	}
	this.channels = _g;
};
$hxClasses["hxd.snd.Worker"] = hxd_snd_Worker;
hxd_snd_Worker.__name__ = ["hxd","snd","Worker"];
hxd_snd_Worker.init = function() {
	var w = new hxd_snd_Worker();
	if(w.start()) {
		return null;
	} else {
		return w;
	}
};
hxd_snd_Worker.__super__ = hxd_Worker;
hxd_snd_Worker.prototype = $extend(hxd_Worker.prototype,{
	clone: function() {
		return new hxd_snd_Worker();
	}
	,allocChannel: function(res,loop,volume,time) {
		var chan = this.isWorker?this.selectChannel():null;
		var c = new hxd_snd_Channel(this.isWorker?null:this,chan,res,this.channelID++,loop,volume,time);
		if(chan != null) {
			chan.channels.push(c);
		}
		this.cmap.h[c.id] = c;
		return c;
	}
	,stopAll: function() {
		if(!this.isWorker) {
			this.send(hxd_snd__$Worker_Message.StopAll);
			return;
		}
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.channel == null) {
				continue;
			}
			c.channel.stop();
			c.channel = null;
			c.channels = [];
		}
	}
	,cleanChannels: function() {
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.channels.length == 0 && c.channel != null && c.busy <= -2) {
				c.channel.stop();
				c.channel = null;
			}
		}
	}
	,selectChannel: function() {
		this.cleanChannels();
		var free = -1;
		var best = null;
		var _g1 = 0;
		var _g = this.channels.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.channels[i];
			if(c.channel == null) {
				if(free < 0) {
					free = i;
				}
				continue;
			}
			if(best == null || best.next > c.next) {
				best = c;
			}
		}
		if(free >= 0) {
			best = this.channels[free];
			best.next = 0;
		}
		return best;
	}
	,handleMessage: function(msg) {
		var _gthis = this;
		switch(msg[1]) {
		case 0:
			var time = msg[5];
			var volume = msg[4];
			var loop = msg[3];
			var res = hxd_res_Loader.currentInstance.load(msg[2]).toSound();
			var cid = this.channelID++;
			var snd = res.getData();
			snd.load(function() {
				var old = _gthis.channelID;
				_gthis.channelID = cid;
				var c = _gthis.allocChannel(null,loop,volume,time);
				_gthis.channelID = old;
				if(c == null) {
					return;
				}
				c.res = res;
				c.snd = snd;
				c.set_currentTime(time);
				if(c.channel.channel == null) {
					c.channel.channel = new hxd_snd__$Worker_WorkerChannel(_gthis,c.channel);
				}
			});
			break;
		case 1:
			this.set_volume(msg[2]);
			break;
		case 2:
			var c1 = this.cmap.h[msg[2]];
			if(c1 == null) {
				return;
			}
			c1.vol = msg[3];
			c1.volumeSpeed = 0;
			break;
		case 3:
			var time1 = msg[5];
			var vol = msg[4];
			var c2 = this.cmap.h[msg[2]];
			if(c2 == null) {
				return;
			}
			c2.volumeTarget = vol;
			c2.fadeUID = msg[3];
			c2.volumeSpeed = (vol - c2.vol) / (time1 * 88200);
			break;
		case 4:
			var c3 = this.cmap.h[msg[2]];
			if(c3 == null) {
				return;
			}
			HxOverrides.remove(c3.channel.channels,c3);
			this.cmap.remove(c3.id);
			break;
		case 5:
			var c4 = this.cmap.h[msg[2]];
			if(c4 == null) {
				return;
			}
			this.handleMessage(hxd_snd__$Worker_Message.Play(msg[3],true,0,0));
			c4.next = this.cmap.h[this.channelID - 1];
			break;
		case 6:
			var c5 = this.cmap.h[msg[2]];
			if(c5 == null) {
				return;
			}
			c5.set_loop(msg[3]);
			break;
		case 7:
			var c6 = this.cmap.h[msg[2]];
			if(c6 != null) {
				c6.onEnd();
			}
			break;
		case 8:
			var v = msg[3];
			var c7 = this.cmap.h[msg[2]];
			if(c7 != null) {
				c7.set_currentTime(v);
			}
			break;
		case 9:
			var uid = msg[3];
			var c8 = this.cmap.h[msg[2]];
			if(c8 != null && c8.fadeUID == uid) {
				c8.onFadeEnd();
			}
			break;
		case 10:
			if(msg[2]) {
				var _g = 0;
				var _g1 = this.channels;
				while(_g < _g1.length) {
					var c9 = _g1[_g];
					++_g;
					if(c9 != null && c9.channel == null && c9.channels.length > 0) {
						c9.channel = new hxd_snd__$Worker_WorkerChannel(this,c9);
					}
				}
			} else {
				var _g2 = 0;
				var _g11 = this.channels;
				while(_g2 < _g11.length) {
					var c10 = _g11[_g2];
					++_g2;
					if(c10.channel != null) {
						c10.channel.stop();
						c10.channel = null;
					}
				}
			}
			break;
		case 11:
			this.stopAll();
			break;
		case 12:
			var cdst = this.cmap.h[msg[2]];
			var csrc = this.cmap.h[msg[3]];
			if(cdst == null || csrc == null) {
				return;
			}
			this.moveChannel(cdst,csrc.channel);
			cdst.syncWith(csrc);
			break;
		case 13:
			this.stopAll();
			hxd_res_Loader.currentInstance.dispose();
			break;
		case 14:
			hxd_res_Loader.currentInstance.cleanCache();
			break;
		}
	}
	,moveChannel: function(c,to) {
		if(c.channel == null || to == null || c.channel == to) {
			return;
		}
		HxOverrides.remove(c.channel.channels,c);
		to.channels.push(c);
		c.channel = to;
	}
	,setupMain: function() {
		if(hxd_System.get_isAndroid()) {
			this.initActivate();
		}
	}
	,initActivate: function() {
	}
	,setupWorker: function() {
	}
	,sampleData: function(out,chan) {
		chan.next = haxe_Timer.stamp() + this.bufferSamples / 44100;
		var cid = 0;
		var cmax = chan.channels.length;
		var _g1 = 0;
		var _g = this.bufferSamples * 2;
		while(_g1 < _g) out[_g1++] = 0;
		if(cmax == 0) {
			if(chan.busy > 0) {
				chan.busy = 0;
			} else {
				chan.busy--;
			}
		} else {
			chan.busy = cmax;
		}
		while(cid < cmax) {
			var c = chan.channels[cid++];
			var w = 0;
			var snd = c.snd;
			while(true) {
				var size = this.bufferSamples - (w >> 1);
				if(size == 0) {
					break;
				}
				var vol = c.vol * this.volume;
				var play = vol > 0 || c.volumeSpeed > 0;
				if(c.position + size >= snd.samples) {
					size = snd.samples - c.position;
					if(play) {
						snd.decode(chan.tmpBuf,0,c.position,size);
					}
					c.position = 0;
				} else {
					if(play) {
						snd.decode(chan.tmpBuf,0,c.position,size);
					}
					c.position += size;
				}
				if(!play) {
					w += size * 2;
				} else {
					var _g11 = 0;
					var _g2 = size * 2;
					while(_g11 < _g2) {
						var tmp = chan.tmpBuf.getFloat(_g11++ << 2);
						var _g21 = w++;
						out[_g21] = out[_g21] + tmp * vol;
						if(c.volumeSpeed != 0) {
							c.vol += c.volumeSpeed;
							if(c.volumeSpeed > 0 == c.vol > c.volumeTarget) {
								c.vol = c.volumeTarget;
								c.volumeSpeed = 0;
								if(c.fadeUID > 0) {
									this.send(hxd_snd__$Worker_Message.FadeEnd(c.id,c.fadeUID));
								}
							}
							vol = c.vol * this.volume;
						}
					}
				}
				if(c.position == 0) {
					if(!c.loop && c.next == null) {
						HxOverrides.remove(chan.channels,c);
						this.cmap.remove(c.id);
						--cid;
						--cmax;
						break;
					}
					this.send(hxd_snd__$Worker_Message.EndLoop(c.id));
					if(c.next != null) {
						c.res = c.next.res;
						c.snd = c.next.snd;
						if(c.next.channel == chan) {
							--cmax;
						}
						this.handleMessage(hxd_snd__$Worker_Message.Stop(c.next.id));
						c.next = null;
						--cmax;
					}
				}
			}
		}
	}
	,set_volume: function(v) {
		if(this.volume == v) {
			return v;
		}
		if(!this.isWorker) {
			this.send(hxd_snd__$Worker_Message.SetGlobalVolume(v));
		}
		return this.volume = v;
	}
	,play: function(snd,loop,volume,time) {
		if(time == null) {
			time = 0.;
		}
		if(volume == null) {
			volume = 1.;
		}
		if(loop == null) {
			loop = true;
		}
		this.send(hxd_snd__$Worker_Message.Play(snd.entry.get_path(),loop,volume,time));
		return this.allocChannel(snd,loop,volume,time);
	}
	,dispose: function() {
		this.send(hxd_snd__$Worker_Message.Dispose);
	}
	,__class__: hxd_snd_Worker
});
var hxsl_Type = $hxClasses["hxsl.Type"] = { __ename__ : ["hxsl","Type"], __constructs__ : ["TVoid","TInt","TBool","TFloat","TString","TVec","TMat3","TMat4","TMat3x4","TBytes","TSampler2D","TSamplerCube","TStruct","TFun","TArray"] };
hxsl_Type.TVoid = ["TVoid",0];
hxsl_Type.TVoid.toString = $estr;
hxsl_Type.TVoid.__enum__ = hxsl_Type;
hxsl_Type.TInt = ["TInt",1];
hxsl_Type.TInt.toString = $estr;
hxsl_Type.TInt.__enum__ = hxsl_Type;
hxsl_Type.TBool = ["TBool",2];
hxsl_Type.TBool.toString = $estr;
hxsl_Type.TBool.__enum__ = hxsl_Type;
hxsl_Type.TFloat = ["TFloat",3];
hxsl_Type.TFloat.toString = $estr;
hxsl_Type.TFloat.__enum__ = hxsl_Type;
hxsl_Type.TString = ["TString",4];
hxsl_Type.TString.toString = $estr;
hxsl_Type.TString.__enum__ = hxsl_Type;
hxsl_Type.TVec = function(size,t) { var $x = ["TVec",5,size,t]; $x.__enum__ = hxsl_Type; $x.toString = $estr; return $x; };
hxsl_Type.TMat3 = ["TMat3",6];
hxsl_Type.TMat3.toString = $estr;
hxsl_Type.TMat3.__enum__ = hxsl_Type;
hxsl_Type.TMat4 = ["TMat4",7];
hxsl_Type.TMat4.toString = $estr;
hxsl_Type.TMat4.__enum__ = hxsl_Type;
hxsl_Type.TMat3x4 = ["TMat3x4",8];
hxsl_Type.TMat3x4.toString = $estr;
hxsl_Type.TMat3x4.__enum__ = hxsl_Type;
hxsl_Type.TBytes = function(size) { var $x = ["TBytes",9,size]; $x.__enum__ = hxsl_Type; $x.toString = $estr; return $x; };
hxsl_Type.TSampler2D = ["TSampler2D",10];
hxsl_Type.TSampler2D.toString = $estr;
hxsl_Type.TSampler2D.__enum__ = hxsl_Type;
hxsl_Type.TSamplerCube = ["TSamplerCube",11];
hxsl_Type.TSamplerCube.toString = $estr;
hxsl_Type.TSamplerCube.__enum__ = hxsl_Type;
hxsl_Type.TStruct = function(vl) { var $x = ["TStruct",12,vl]; $x.__enum__ = hxsl_Type; $x.toString = $estr; return $x; };
hxsl_Type.TFun = function(variants) { var $x = ["TFun",13,variants]; $x.__enum__ = hxsl_Type; $x.toString = $estr; return $x; };
hxsl_Type.TArray = function(t,size) { var $x = ["TArray",14,t,size]; $x.__enum__ = hxsl_Type; $x.toString = $estr; return $x; };
hxsl_Type.__empty_constructs__ = [hxsl_Type.TVoid,hxsl_Type.TInt,hxsl_Type.TBool,hxsl_Type.TFloat,hxsl_Type.TString,hxsl_Type.TMat3,hxsl_Type.TMat4,hxsl_Type.TMat3x4,hxsl_Type.TSampler2D,hxsl_Type.TSamplerCube];
var hxsl_VecType = $hxClasses["hxsl.VecType"] = { __ename__ : ["hxsl","VecType"], __constructs__ : ["VInt","VFloat","VBool"] };
hxsl_VecType.VInt = ["VInt",0];
hxsl_VecType.VInt.toString = $estr;
hxsl_VecType.VInt.__enum__ = hxsl_VecType;
hxsl_VecType.VFloat = ["VFloat",1];
hxsl_VecType.VFloat.toString = $estr;
hxsl_VecType.VFloat.__enum__ = hxsl_VecType;
hxsl_VecType.VBool = ["VBool",2];
hxsl_VecType.VBool.toString = $estr;
hxsl_VecType.VBool.__enum__ = hxsl_VecType;
hxsl_VecType.__empty_constructs__ = [hxsl_VecType.VInt,hxsl_VecType.VFloat,hxsl_VecType.VBool];
var hxsl_SizeDecl = $hxClasses["hxsl.SizeDecl"] = { __ename__ : ["hxsl","SizeDecl"], __constructs__ : ["SConst","SVar"] };
hxsl_SizeDecl.SConst = function(v) { var $x = ["SConst",0,v]; $x.__enum__ = hxsl_SizeDecl; $x.toString = $estr; return $x; };
hxsl_SizeDecl.SVar = function(v) { var $x = ["SVar",1,v]; $x.__enum__ = hxsl_SizeDecl; $x.toString = $estr; return $x; };
hxsl_SizeDecl.__empty_constructs__ = [];
var hxsl_Error = function(msg,pos) {
	this.msg = msg;
	this.pos = pos;
};
$hxClasses["hxsl.Error"] = hxsl_Error;
hxsl_Error.__name__ = ["hxsl","Error"];
hxsl_Error.t = function(msg,pos) {
	throw new js__$Boot_HaxeError(new hxsl_Error(msg,pos));
};
hxsl_Error.prototype = {
	toString: function() {
		return "Error(" + this.msg + ")@" + Std.string(this.pos);
	}
	,__class__: hxsl_Error
};
var hxsl_VarKind = $hxClasses["hxsl.VarKind"] = { __ename__ : ["hxsl","VarKind"], __constructs__ : ["Global","Input","Param","Var","Local","Output","Function"] };
hxsl_VarKind.Global = ["Global",0];
hxsl_VarKind.Global.toString = $estr;
hxsl_VarKind.Global.__enum__ = hxsl_VarKind;
hxsl_VarKind.Input = ["Input",1];
hxsl_VarKind.Input.toString = $estr;
hxsl_VarKind.Input.__enum__ = hxsl_VarKind;
hxsl_VarKind.Param = ["Param",2];
hxsl_VarKind.Param.toString = $estr;
hxsl_VarKind.Param.__enum__ = hxsl_VarKind;
hxsl_VarKind.Var = ["Var",3];
hxsl_VarKind.Var.toString = $estr;
hxsl_VarKind.Var.__enum__ = hxsl_VarKind;
hxsl_VarKind.Local = ["Local",4];
hxsl_VarKind.Local.toString = $estr;
hxsl_VarKind.Local.__enum__ = hxsl_VarKind;
hxsl_VarKind.Output = ["Output",5];
hxsl_VarKind.Output.toString = $estr;
hxsl_VarKind.Output.__enum__ = hxsl_VarKind;
hxsl_VarKind.Function = ["Function",6];
hxsl_VarKind.Function.toString = $estr;
hxsl_VarKind.Function.__enum__ = hxsl_VarKind;
hxsl_VarKind.__empty_constructs__ = [hxsl_VarKind.Global,hxsl_VarKind.Input,hxsl_VarKind.Param,hxsl_VarKind.Var,hxsl_VarKind.Local,hxsl_VarKind.Output,hxsl_VarKind.Function];
var hxsl_VarQualifier = $hxClasses["hxsl.VarQualifier"] = { __ename__ : ["hxsl","VarQualifier"], __constructs__ : ["Const","Private","Nullable","PerObject","Name","Shared","Precision","Range","Ignore"] };
hxsl_VarQualifier.Const = function(max) { var $x = ["Const",0,max]; $x.__enum__ = hxsl_VarQualifier; $x.toString = $estr; return $x; };
hxsl_VarQualifier.Private = ["Private",1];
hxsl_VarQualifier.Private.toString = $estr;
hxsl_VarQualifier.Private.__enum__ = hxsl_VarQualifier;
hxsl_VarQualifier.Nullable = ["Nullable",2];
hxsl_VarQualifier.Nullable.toString = $estr;
hxsl_VarQualifier.Nullable.__enum__ = hxsl_VarQualifier;
hxsl_VarQualifier.PerObject = ["PerObject",3];
hxsl_VarQualifier.PerObject.toString = $estr;
hxsl_VarQualifier.PerObject.__enum__ = hxsl_VarQualifier;
hxsl_VarQualifier.Name = function(n) { var $x = ["Name",4,n]; $x.__enum__ = hxsl_VarQualifier; $x.toString = $estr; return $x; };
hxsl_VarQualifier.Shared = ["Shared",5];
hxsl_VarQualifier.Shared.toString = $estr;
hxsl_VarQualifier.Shared.__enum__ = hxsl_VarQualifier;
hxsl_VarQualifier.Precision = function(p) { var $x = ["Precision",6,p]; $x.__enum__ = hxsl_VarQualifier; $x.toString = $estr; return $x; };
hxsl_VarQualifier.Range = function(min,max) { var $x = ["Range",7,min,max]; $x.__enum__ = hxsl_VarQualifier; $x.toString = $estr; return $x; };
hxsl_VarQualifier.Ignore = ["Ignore",8];
hxsl_VarQualifier.Ignore.toString = $estr;
hxsl_VarQualifier.Ignore.__enum__ = hxsl_VarQualifier;
hxsl_VarQualifier.__empty_constructs__ = [hxsl_VarQualifier.Private,hxsl_VarQualifier.Nullable,hxsl_VarQualifier.PerObject,hxsl_VarQualifier.Shared,hxsl_VarQualifier.Ignore];
var hxsl_Prec = $hxClasses["hxsl.Prec"] = { __ename__ : ["hxsl","Prec"], __constructs__ : ["Low","Medium","High"] };
hxsl_Prec.Low = ["Low",0];
hxsl_Prec.Low.toString = $estr;
hxsl_Prec.Low.__enum__ = hxsl_Prec;
hxsl_Prec.Medium = ["Medium",1];
hxsl_Prec.Medium.toString = $estr;
hxsl_Prec.Medium.__enum__ = hxsl_Prec;
hxsl_Prec.High = ["High",2];
hxsl_Prec.High.toString = $estr;
hxsl_Prec.High.__enum__ = hxsl_Prec;
hxsl_Prec.__empty_constructs__ = [hxsl_Prec.Low,hxsl_Prec.Medium,hxsl_Prec.High];
var hxsl_Const = $hxClasses["hxsl.Const"] = { __ename__ : ["hxsl","Const"], __constructs__ : ["CNull","CBool","CInt","CFloat","CString"] };
hxsl_Const.CNull = ["CNull",0];
hxsl_Const.CNull.toString = $estr;
hxsl_Const.CNull.__enum__ = hxsl_Const;
hxsl_Const.CBool = function(b) { var $x = ["CBool",1,b]; $x.__enum__ = hxsl_Const; $x.toString = $estr; return $x; };
hxsl_Const.CInt = function(v) { var $x = ["CInt",2,v]; $x.__enum__ = hxsl_Const; $x.toString = $estr; return $x; };
hxsl_Const.CFloat = function(v) { var $x = ["CFloat",3,v]; $x.__enum__ = hxsl_Const; $x.toString = $estr; return $x; };
hxsl_Const.CString = function(v) { var $x = ["CString",4,v]; $x.__enum__ = hxsl_Const; $x.toString = $estr; return $x; };
hxsl_Const.__empty_constructs__ = [hxsl_Const.CNull];
var hxsl_ExprDef = $hxClasses["hxsl.ExprDef"] = { __ename__ : ["hxsl","ExprDef"], __constructs__ : ["EConst","EIdent","EParenthesis","EField","EBinop","EUnop","ECall","EBlock","EVars","EFunction","EIf","EDiscard","EFor","EReturn","EBreak","EContinue","EArray","EArrayDecl"] };
hxsl_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EIdent = function(i) { var $x = ["EIdent",1,i]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",2,e]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EField = function(e,f) { var $x = ["EField",3,e,f]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",4,op,e1,e2]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EUnop = function(op,e1) { var $x = ["EUnop",5,op,e1]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.ECall = function(e,args) { var $x = ["ECall",6,e,args]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EBlock = function(el) { var $x = ["EBlock",7,el]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EVars = function(v) { var $x = ["EVars",8,v]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EFunction = function(f) { var $x = ["EFunction",9,f]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",10,econd,eif,eelse]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EDiscard = ["EDiscard",11];
hxsl_ExprDef.EDiscard.toString = $estr;
hxsl_ExprDef.EDiscard.__enum__ = hxsl_ExprDef;
hxsl_ExprDef.EFor = function(v,loop,block) { var $x = ["EFor",12,v,loop,block]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EReturn = function(e) { var $x = ["EReturn",13,e]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EBreak = ["EBreak",14];
hxsl_ExprDef.EBreak.toString = $estr;
hxsl_ExprDef.EBreak.__enum__ = hxsl_ExprDef;
hxsl_ExprDef.EContinue = ["EContinue",15];
hxsl_ExprDef.EContinue.toString = $estr;
hxsl_ExprDef.EContinue.__enum__ = hxsl_ExprDef;
hxsl_ExprDef.EArray = function(e,eindex) { var $x = ["EArray",16,e,eindex]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.EArrayDecl = function(el) { var $x = ["EArrayDecl",17,el]; $x.__enum__ = hxsl_ExprDef; $x.toString = $estr; return $x; };
hxsl_ExprDef.__empty_constructs__ = [hxsl_ExprDef.EDiscard,hxsl_ExprDef.EBreak,hxsl_ExprDef.EContinue];
var hxsl_FunctionKind = $hxClasses["hxsl.FunctionKind"] = { __ename__ : ["hxsl","FunctionKind"], __constructs__ : ["Vertex","Fragment","Init","Helper"] };
hxsl_FunctionKind.Vertex = ["Vertex",0];
hxsl_FunctionKind.Vertex.toString = $estr;
hxsl_FunctionKind.Vertex.__enum__ = hxsl_FunctionKind;
hxsl_FunctionKind.Fragment = ["Fragment",1];
hxsl_FunctionKind.Fragment.toString = $estr;
hxsl_FunctionKind.Fragment.__enum__ = hxsl_FunctionKind;
hxsl_FunctionKind.Init = ["Init",2];
hxsl_FunctionKind.Init.toString = $estr;
hxsl_FunctionKind.Init.__enum__ = hxsl_FunctionKind;
hxsl_FunctionKind.Helper = ["Helper",3];
hxsl_FunctionKind.Helper.toString = $estr;
hxsl_FunctionKind.Helper.__enum__ = hxsl_FunctionKind;
hxsl_FunctionKind.__empty_constructs__ = [hxsl_FunctionKind.Vertex,hxsl_FunctionKind.Fragment,hxsl_FunctionKind.Init,hxsl_FunctionKind.Helper];
var hxsl_TGlobal = $hxClasses["hxsl.TGlobal"] = { __ename__ : ["hxsl","TGlobal"], __constructs__ : ["Radians","Degrees","Sin","Cos","Tan","Asin","Acos","Atan","Pow","Exp","Log","Exp2","Log2","Sqrt","Inversesqrt","Abs","Sign","Floor","Ceil","Fract","Mod","Min","Max","Clamp","Mix","Step","SmoothStep","Length","Distance","Dot","Cross","Normalize","LReflect","Texture2D","TextureCube","ToInt","ToFloat","ToBool","Vec2","Vec3","Vec4","IVec2","IVec3","IVec4","BVec2","BVec3","BVec4","Mat2","Mat3","Mat4","Mat3x4","Saturate","Pack","Unpack","PackNormal","UnpackNormal","DFdx","DFdy","Fwidth"] };
hxsl_TGlobal.Radians = ["Radians",0];
hxsl_TGlobal.Radians.toString = $estr;
hxsl_TGlobal.Radians.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Degrees = ["Degrees",1];
hxsl_TGlobal.Degrees.toString = $estr;
hxsl_TGlobal.Degrees.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Sin = ["Sin",2];
hxsl_TGlobal.Sin.toString = $estr;
hxsl_TGlobal.Sin.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Cos = ["Cos",3];
hxsl_TGlobal.Cos.toString = $estr;
hxsl_TGlobal.Cos.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Tan = ["Tan",4];
hxsl_TGlobal.Tan.toString = $estr;
hxsl_TGlobal.Tan.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Asin = ["Asin",5];
hxsl_TGlobal.Asin.toString = $estr;
hxsl_TGlobal.Asin.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Acos = ["Acos",6];
hxsl_TGlobal.Acos.toString = $estr;
hxsl_TGlobal.Acos.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Atan = ["Atan",7];
hxsl_TGlobal.Atan.toString = $estr;
hxsl_TGlobal.Atan.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Pow = ["Pow",8];
hxsl_TGlobal.Pow.toString = $estr;
hxsl_TGlobal.Pow.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Exp = ["Exp",9];
hxsl_TGlobal.Exp.toString = $estr;
hxsl_TGlobal.Exp.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Log = ["Log",10];
hxsl_TGlobal.Log.toString = $estr;
hxsl_TGlobal.Log.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Exp2 = ["Exp2",11];
hxsl_TGlobal.Exp2.toString = $estr;
hxsl_TGlobal.Exp2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Log2 = ["Log2",12];
hxsl_TGlobal.Log2.toString = $estr;
hxsl_TGlobal.Log2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Sqrt = ["Sqrt",13];
hxsl_TGlobal.Sqrt.toString = $estr;
hxsl_TGlobal.Sqrt.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Inversesqrt = ["Inversesqrt",14];
hxsl_TGlobal.Inversesqrt.toString = $estr;
hxsl_TGlobal.Inversesqrt.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Abs = ["Abs",15];
hxsl_TGlobal.Abs.toString = $estr;
hxsl_TGlobal.Abs.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Sign = ["Sign",16];
hxsl_TGlobal.Sign.toString = $estr;
hxsl_TGlobal.Sign.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Floor = ["Floor",17];
hxsl_TGlobal.Floor.toString = $estr;
hxsl_TGlobal.Floor.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Ceil = ["Ceil",18];
hxsl_TGlobal.Ceil.toString = $estr;
hxsl_TGlobal.Ceil.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Fract = ["Fract",19];
hxsl_TGlobal.Fract.toString = $estr;
hxsl_TGlobal.Fract.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mod = ["Mod",20];
hxsl_TGlobal.Mod.toString = $estr;
hxsl_TGlobal.Mod.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Min = ["Min",21];
hxsl_TGlobal.Min.toString = $estr;
hxsl_TGlobal.Min.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Max = ["Max",22];
hxsl_TGlobal.Max.toString = $estr;
hxsl_TGlobal.Max.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Clamp = ["Clamp",23];
hxsl_TGlobal.Clamp.toString = $estr;
hxsl_TGlobal.Clamp.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mix = ["Mix",24];
hxsl_TGlobal.Mix.toString = $estr;
hxsl_TGlobal.Mix.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Step = ["Step",25];
hxsl_TGlobal.Step.toString = $estr;
hxsl_TGlobal.Step.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.SmoothStep = ["SmoothStep",26];
hxsl_TGlobal.SmoothStep.toString = $estr;
hxsl_TGlobal.SmoothStep.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Length = ["Length",27];
hxsl_TGlobal.Length.toString = $estr;
hxsl_TGlobal.Length.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Distance = ["Distance",28];
hxsl_TGlobal.Distance.toString = $estr;
hxsl_TGlobal.Distance.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Dot = ["Dot",29];
hxsl_TGlobal.Dot.toString = $estr;
hxsl_TGlobal.Dot.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Cross = ["Cross",30];
hxsl_TGlobal.Cross.toString = $estr;
hxsl_TGlobal.Cross.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Normalize = ["Normalize",31];
hxsl_TGlobal.Normalize.toString = $estr;
hxsl_TGlobal.Normalize.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.LReflect = ["LReflect",32];
hxsl_TGlobal.LReflect.toString = $estr;
hxsl_TGlobal.LReflect.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Texture2D = ["Texture2D",33];
hxsl_TGlobal.Texture2D.toString = $estr;
hxsl_TGlobal.Texture2D.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.TextureCube = ["TextureCube",34];
hxsl_TGlobal.TextureCube.toString = $estr;
hxsl_TGlobal.TextureCube.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.ToInt = ["ToInt",35];
hxsl_TGlobal.ToInt.toString = $estr;
hxsl_TGlobal.ToInt.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.ToFloat = ["ToFloat",36];
hxsl_TGlobal.ToFloat.toString = $estr;
hxsl_TGlobal.ToFloat.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.ToBool = ["ToBool",37];
hxsl_TGlobal.ToBool.toString = $estr;
hxsl_TGlobal.ToBool.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Vec2 = ["Vec2",38];
hxsl_TGlobal.Vec2.toString = $estr;
hxsl_TGlobal.Vec2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Vec3 = ["Vec3",39];
hxsl_TGlobal.Vec3.toString = $estr;
hxsl_TGlobal.Vec3.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Vec4 = ["Vec4",40];
hxsl_TGlobal.Vec4.toString = $estr;
hxsl_TGlobal.Vec4.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.IVec2 = ["IVec2",41];
hxsl_TGlobal.IVec2.toString = $estr;
hxsl_TGlobal.IVec2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.IVec3 = ["IVec3",42];
hxsl_TGlobal.IVec3.toString = $estr;
hxsl_TGlobal.IVec3.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.IVec4 = ["IVec4",43];
hxsl_TGlobal.IVec4.toString = $estr;
hxsl_TGlobal.IVec4.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.BVec2 = ["BVec2",44];
hxsl_TGlobal.BVec2.toString = $estr;
hxsl_TGlobal.BVec2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.BVec3 = ["BVec3",45];
hxsl_TGlobal.BVec3.toString = $estr;
hxsl_TGlobal.BVec3.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.BVec4 = ["BVec4",46];
hxsl_TGlobal.BVec4.toString = $estr;
hxsl_TGlobal.BVec4.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mat2 = ["Mat2",47];
hxsl_TGlobal.Mat2.toString = $estr;
hxsl_TGlobal.Mat2.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mat3 = ["Mat3",48];
hxsl_TGlobal.Mat3.toString = $estr;
hxsl_TGlobal.Mat3.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mat4 = ["Mat4",49];
hxsl_TGlobal.Mat4.toString = $estr;
hxsl_TGlobal.Mat4.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Mat3x4 = ["Mat3x4",50];
hxsl_TGlobal.Mat3x4.toString = $estr;
hxsl_TGlobal.Mat3x4.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Saturate = ["Saturate",51];
hxsl_TGlobal.Saturate.toString = $estr;
hxsl_TGlobal.Saturate.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Pack = ["Pack",52];
hxsl_TGlobal.Pack.toString = $estr;
hxsl_TGlobal.Pack.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Unpack = ["Unpack",53];
hxsl_TGlobal.Unpack.toString = $estr;
hxsl_TGlobal.Unpack.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.PackNormal = ["PackNormal",54];
hxsl_TGlobal.PackNormal.toString = $estr;
hxsl_TGlobal.PackNormal.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.UnpackNormal = ["UnpackNormal",55];
hxsl_TGlobal.UnpackNormal.toString = $estr;
hxsl_TGlobal.UnpackNormal.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.DFdx = ["DFdx",56];
hxsl_TGlobal.DFdx.toString = $estr;
hxsl_TGlobal.DFdx.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.DFdy = ["DFdy",57];
hxsl_TGlobal.DFdy.toString = $estr;
hxsl_TGlobal.DFdy.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.Fwidth = ["Fwidth",58];
hxsl_TGlobal.Fwidth.toString = $estr;
hxsl_TGlobal.Fwidth.__enum__ = hxsl_TGlobal;
hxsl_TGlobal.__empty_constructs__ = [hxsl_TGlobal.Radians,hxsl_TGlobal.Degrees,hxsl_TGlobal.Sin,hxsl_TGlobal.Cos,hxsl_TGlobal.Tan,hxsl_TGlobal.Asin,hxsl_TGlobal.Acos,hxsl_TGlobal.Atan,hxsl_TGlobal.Pow,hxsl_TGlobal.Exp,hxsl_TGlobal.Log,hxsl_TGlobal.Exp2,hxsl_TGlobal.Log2,hxsl_TGlobal.Sqrt,hxsl_TGlobal.Inversesqrt,hxsl_TGlobal.Abs,hxsl_TGlobal.Sign,hxsl_TGlobal.Floor,hxsl_TGlobal.Ceil,hxsl_TGlobal.Fract,hxsl_TGlobal.Mod,hxsl_TGlobal.Min,hxsl_TGlobal.Max,hxsl_TGlobal.Clamp,hxsl_TGlobal.Mix,hxsl_TGlobal.Step,hxsl_TGlobal.SmoothStep,hxsl_TGlobal.Length,hxsl_TGlobal.Distance,hxsl_TGlobal.Dot,hxsl_TGlobal.Cross,hxsl_TGlobal.Normalize,hxsl_TGlobal.LReflect,hxsl_TGlobal.Texture2D,hxsl_TGlobal.TextureCube,hxsl_TGlobal.ToInt,hxsl_TGlobal.ToFloat,hxsl_TGlobal.ToBool,hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4,hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4,hxsl_TGlobal.BVec2,hxsl_TGlobal.BVec3,hxsl_TGlobal.BVec4,hxsl_TGlobal.Mat2,hxsl_TGlobal.Mat3,hxsl_TGlobal.Mat4,hxsl_TGlobal.Mat3x4,hxsl_TGlobal.Saturate,hxsl_TGlobal.Pack,hxsl_TGlobal.Unpack,hxsl_TGlobal.PackNormal,hxsl_TGlobal.UnpackNormal,hxsl_TGlobal.DFdx,hxsl_TGlobal.DFdy,hxsl_TGlobal.Fwidth];
var hxsl_Component = $hxClasses["hxsl.Component"] = { __ename__ : ["hxsl","Component"], __constructs__ : ["X","Y","Z","W"] };
hxsl_Component.X = ["X",0];
hxsl_Component.X.toString = $estr;
hxsl_Component.X.__enum__ = hxsl_Component;
hxsl_Component.Y = ["Y",1];
hxsl_Component.Y.toString = $estr;
hxsl_Component.Y.__enum__ = hxsl_Component;
hxsl_Component.Z = ["Z",2];
hxsl_Component.Z.toString = $estr;
hxsl_Component.Z.__enum__ = hxsl_Component;
hxsl_Component.W = ["W",3];
hxsl_Component.W.toString = $estr;
hxsl_Component.W.__enum__ = hxsl_Component;
hxsl_Component.__empty_constructs__ = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
var hxsl_TExprDef = $hxClasses["hxsl.TExprDef"] = { __ename__ : ["hxsl","TExprDef"], __constructs__ : ["TConst","TVar","TGlobal","TParenthesis","TBlock","TBinop","TUnop","TVarDecl","TCall","TSwiz","TIf","TDiscard","TReturn","TFor","TContinue","TBreak","TArray","TArrayDecl"] };
hxsl_TExprDef.TConst = function(c) { var $x = ["TConst",0,c]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TVar = function(v) { var $x = ["TVar",1,v]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TGlobal = function(g) { var $x = ["TGlobal",2,g]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TParenthesis = function(e) { var $x = ["TParenthesis",3,e]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TBlock = function(el) { var $x = ["TBlock",4,el]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TBinop = function(op,e1,e2) { var $x = ["TBinop",5,op,e1,e2]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TUnop = function(op,e1) { var $x = ["TUnop",6,op,e1]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TVarDecl = function(v,init) { var $x = ["TVarDecl",7,v,init]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TCall = function(e,args) { var $x = ["TCall",8,e,args]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TSwiz = function(e,regs) { var $x = ["TSwiz",9,e,regs]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TIf = function(econd,eif,eelse) { var $x = ["TIf",10,econd,eif,eelse]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TDiscard = ["TDiscard",11];
hxsl_TExprDef.TDiscard.toString = $estr;
hxsl_TExprDef.TDiscard.__enum__ = hxsl_TExprDef;
hxsl_TExprDef.TReturn = function(e) { var $x = ["TReturn",12,e]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TFor = function(v,it,loop) { var $x = ["TFor",13,v,it,loop]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TContinue = ["TContinue",14];
hxsl_TExprDef.TContinue.toString = $estr;
hxsl_TExprDef.TContinue.__enum__ = hxsl_TExprDef;
hxsl_TExprDef.TBreak = ["TBreak",15];
hxsl_TExprDef.TBreak.toString = $estr;
hxsl_TExprDef.TBreak.__enum__ = hxsl_TExprDef;
hxsl_TExprDef.TArray = function(e,index) { var $x = ["TArray",16,e,index]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.TArrayDecl = function(el) { var $x = ["TArrayDecl",17,el]; $x.__enum__ = hxsl_TExprDef; $x.toString = $estr; return $x; };
hxsl_TExprDef.__empty_constructs__ = [hxsl_TExprDef.TDiscard,hxsl_TExprDef.TContinue,hxsl_TExprDef.TBreak];
var hxsl_Tools = function() { };
$hxClasses["hxsl.Tools"] = hxsl_Tools;
hxsl_Tools.__name__ = ["hxsl","Tools"];
hxsl_Tools.allocVarId = function() {
	return ++hxsl_Tools.UID;
};
hxsl_Tools.getName = function(v) {
	if(v.qualifiers == null) {
		return v.name;
	}
	var _g = 0;
	var _g1 = v.qualifiers;
	while(_g < _g1.length) {
		var q = _g1[_g];
		++_g;
		if(q[1] == 4) {
			return q[2];
		}
	}
	return v.name;
};
hxsl_Tools.getConstBits = function(v) {
	switch(v.type[1]) {
	case 1:
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			if(q[1] == 0) {
				var n = q[2];
				if(n != null) {
					var bits = 0;
					while(n >= 1 << bits) ++bits;
					return bits;
				}
				return 8;
			}
		}
		break;
	case 2:
		return 1;
	default:
	}
	return 0;
};
hxsl_Tools.isConst = function(v) {
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			if(q[1] == 0) {
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.isStruct = function(v) {
	if(v.type[1] == 12) {
		return true;
	} else {
		return false;
	}
};
hxsl_Tools.isArray = function(v) {
	if(v.type[1] == 14) {
		return true;
	} else {
		return false;
	}
};
hxsl_Tools.hasQualifier = function(v,q) {
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q2 = _g1[_g];
			++_g;
			if(q2 == q) {
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.toString = function(t) {
	switch(t[1]) {
	case 5:
		var t1 = t[3];
		var size = t[2];
		var prefix;
		switch(t1[1]) {
		case 0:
			prefix = "I";
			break;
		case 1:
			prefix = "";
			break;
		case 2:
			prefix = "B";
			break;
		}
		return prefix + "Vec" + size;
	case 12:
		var vl = t[2];
		var _g = [];
		var _g1 = 0;
		while(_g1 < vl.length) {
			var v = vl[_g1];
			++_g1;
			_g.push(v.name + " : " + hxsl_Tools.toString(v.type));
		}
		return "{" + _g.join(",") + "}";
	case 14:
		var s = t[3];
		var tmp = hxsl_Tools.toString(t[2]) + "[";
		var tmp1;
		switch(s[1]) {
		case 0:
			tmp1 = "" + s[2];
			break;
		case 1:
			tmp1 = s[2].name;
			break;
		}
		return tmp + tmp1 + "]";
	default:
		return HxOverrides.substr(t[0],1,null);
	}
};
hxsl_Tools.toType = function(t) {
	switch(t[1]) {
	case 0:
		return hxsl_Type.TInt;
	case 1:
		return hxsl_Type.TFloat;
	case 2:
		return hxsl_Type.TBool;
	}
};
hxsl_Tools.iter = function(e,f) {
	var _g = e.e;
	switch(_g[1]) {
	case 0:case 1:case 2:case 11:case 14:case 15:
		break;
	case 3:
		f(_g[2]);
		break;
	case 4:
		var el = _g[2];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			f(e1);
		}
		break;
	case 5:
		f(_g[3]);
		f(_g[4]);
		break;
	case 6:
		f(_g[3]);
		break;
	case 7:
		var init = _g[3];
		if(init != null) {
			f(init);
		}
		break;
	case 8:
		var args = _g[3];
		f(_g[2]);
		var _g2 = 0;
		while(_g2 < args.length) {
			var a = args[_g2];
			++_g2;
			f(a);
		}
		break;
	case 9:
		f(_g[2]);
		break;
	case 10:
		var eelse = _g[4];
		f(_g[2]);
		f(_g[3]);
		if(eelse != null) {
			f(eelse);
		}
		break;
	case 12:
		var e2 = _g[2];
		if(e2 != null) {
			f(e2);
		}
		break;
	case 13:
		f(_g[3]);
		f(_g[4]);
		break;
	case 16:
		f(_g[2]);
		f(_g[3]);
		break;
	case 17:
		var el1 = _g[2];
		var _g3 = 0;
		while(_g3 < el1.length) {
			var e3 = el1[_g3];
			++_g3;
			f(e3);
		}
		break;
	}
};
hxsl_Tools.map = function(e,f) {
	var ed;
	var _g = e.e;
	switch(_g[1]) {
	case 0:case 1:case 2:case 11:case 14:case 15:
		ed = e.e;
		break;
	case 3:
		ed = hxsl_TExprDef.TParenthesis(f(_g[2]));
		break;
	case 4:
		var el = _g[2];
		var _g1 = [];
		var _g11 = 0;
		while(_g11 < el.length) {
			var e1 = el[_g11];
			++_g11;
			_g1.push(f(e1));
		}
		ed = hxsl_TExprDef.TBlock(_g1);
		break;
	case 5:
		ed = hxsl_TExprDef.TBinop(_g[2],f(_g[3]),f(_g[4]));
		break;
	case 6:
		ed = hxsl_TExprDef.TUnop(_g[2],f(_g[3]));
		break;
	case 7:
		var init = _g[3];
		ed = hxsl_TExprDef.TVarDecl(_g[2],init != null?f(init):null);
		break;
	case 8:
		var args = _g[3];
		var tmp = f(_g[2]);
		var _g2 = [];
		var _g12 = 0;
		while(_g12 < args.length) {
			var a = args[_g12];
			++_g12;
			_g2.push(f(a));
		}
		ed = hxsl_TExprDef.TCall(tmp,_g2);
		break;
	case 9:
		ed = hxsl_TExprDef.TSwiz(f(_g[2]),_g[3]);
		break;
	case 10:
		var eelse = _g[4];
		ed = hxsl_TExprDef.TIf(f(_g[2]),f(_g[3]),eelse != null?f(eelse):null);
		break;
	case 12:
		var e2 = _g[2];
		ed = hxsl_TExprDef.TReturn(e2 != null?f(e2):null);
		break;
	case 13:
		ed = hxsl_TExprDef.TFor(_g[2],f(_g[3]),f(_g[4]));
		break;
	case 16:
		ed = hxsl_TExprDef.TArray(f(_g[2]),f(_g[3]));
		break;
	case 17:
		var el1 = _g[2];
		var _g3 = [];
		var _g13 = 0;
		while(_g13 < el1.length) {
			var e3 = el1[_g13];
			++_g13;
			_g3.push(f(e3));
		}
		ed = hxsl_TExprDef.TArrayDecl(_g3);
		break;
	}
	return { e : ed, t : e.t, p : e.p};
};
hxsl_Tools.size = function(t) {
	switch(t[1]) {
	case 0:
		return 0;
	case 1:case 3:
		return 1;
	case 5:
		return t[2];
	case 6:
		return 9;
	case 7:
		return 16;
	case 8:
		return 12;
	case 9:
		return t[2];
	case 12:
		var vl = t[2];
		var s = 0;
		var _g = 0;
		while(_g < vl.length) {
			var v = vl[_g];
			++_g;
			s += hxsl_Tools.size(v.type);
		}
		return s;
	case 2:case 4:case 10:case 11:case 13:
		return 0;
	case 14:
		switch(t[3][1]) {
		case 0:
			return hxsl_Tools.size(t[2]) * t[3][2];
		case 1:
			return 0;
		}
		break;
	}
};
var hxsl_Tools2 = function() { };
$hxClasses["hxsl.Tools2"] = hxsl_Tools2;
hxsl_Tools2.__name__ = ["hxsl","Tools2"];
hxsl_Tools2.toString = function(g) {
	var n = g[0];
	return n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
};
var hxsl_Tools3 = function() { };
$hxClasses["hxsl.Tools3"] = hxsl_Tools3;
hxsl_Tools3.__name__ = ["hxsl","Tools3"];
hxsl_Tools3.toString = function(s) {
	return hxsl_Printer.shaderToString(s);
};
var hxsl_Tools4 = function() { };
$hxClasses["hxsl.Tools4"] = hxsl_Tools4;
hxsl_Tools4.__name__ = ["hxsl","Tools4"];
hxsl_Tools4.toString = function(e) {
	return hxsl_Printer.toString(e);
};
var hxsl_SearchMap = function() {
};
$hxClasses["hxsl.SearchMap"] = hxsl_SearchMap;
hxsl_SearchMap.__name__ = ["hxsl","SearchMap"];
hxsl_SearchMap.prototype = {
	__class__: hxsl_SearchMap
};
var hxsl_Cache = function() {
	this.constsToGlobal = false;
	this.linkCache = new haxe_ds_IntMap();
	this.outVarsMap = new haxe_ds_StringMap();
	this.outVars = [];
	this.byID = new haxe_ds_StringMap();
};
$hxClasses["hxsl.Cache"] = hxsl_Cache;
hxsl_Cache.__name__ = ["hxsl","Cache"];
hxsl_Cache.get = function() {
	var c = hxsl_Cache.INST;
	if(c == null) {
		c = new hxsl_Cache();
		hxsl_Cache.INST = c;
	}
	return c;
};
hxsl_Cache.clear = function() {
	hxsl_Cache.INST = null;
};
hxsl_Cache.prototype = {
	allocOutputVars: function(vars) {
		var key = vars.join(",");
		var _this = this.outVarsMap;
		var id = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(id != null) {
			return id;
		}
		vars = vars.slice();
		vars.sort(Reflect.compare);
		var key1 = vars.join(",");
		var _this1 = this.outVarsMap;
		if(__map_reserved[key1] != null) {
			id = _this1.getReserved(key1);
		} else {
			id = _this1.h[key1];
		}
		if(id != null) {
			var _this2 = this.outVarsMap;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,id);
			} else {
				_this2.h[key] = id;
			}
			return id;
		}
		id = this.outVars.length;
		this.outVars.push(vars);
		var _this3 = this.outVarsMap;
		if(__map_reserved[key] != null) {
			_this3.setReserved(key,id);
		} else {
			_this3.h[key] = id;
		}
		return id;
	}
	,link: function(shaders,outVars) {
		var c = this.linkCache.h[outVars];
		if(c == null) {
			c = new hxsl_SearchMap();
			this.linkCache.h[outVars] = c;
		}
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var i = s.instance;
			if(c.next == null) {
				c.next = new haxe_ds_IntMap();
			}
			var cs = c.next.h[i.id];
			if(cs == null) {
				cs = new hxsl_SearchMap();
				c.next.h[i.id] = cs;
			}
			c = cs;
		}
		if(c.linked == null) {
			c.linked = this.compileRuntimeShader(shaders,outVars);
		}
		return c.linked;
	}
	,compileRuntimeShader: function(shaders,outVars) {
		var shaderDatas = [];
		var index = 0;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			shaderDatas.push({ inst : s.instance, p : s.priority, index : index++});
		}
		shaderDatas.reverse();
		haxe_ds_ArraySort.sort(shaderDatas,function(s1,s2) {
			return s2.p - s1.p;
		});
		var _g = 0;
		while(_g < shaderDatas.length) {
			var s3 = shaderDatas[_g];
			++_g;
			hxsl_Printer.check(s3.inst.shader);
		}
		var linker = new hxsl_Linker();
		var _g1 = [];
		var _g11 = 0;
		while(_g11 < shaderDatas.length) {
			var s4 = shaderDatas[_g11];
			++_g11;
			_g1.push(s4.inst.shader);
		}
		var s5 = linker.link(_g1,this.outVars[outVars]);
		var _g12 = [];
		var _g2 = 0;
		while(_g2 < shaderDatas.length) {
			var s6 = shaderDatas[_g2];
			++_g2;
			_g12.push(s6.inst.shader);
		}
		hxsl_Printer.check(s5,_g12);
		var paramVars = new haxe_ds_IntMap();
		var _g21 = 0;
		var _g3 = linker.allVars;
		while(_g21 < _g3.length) {
			var v = _g3[_g21];
			++_g21;
			if(v.v.kind == hxsl_VarKind.Param) {
				if(v.v.type[1] == 12) {
					continue;
				}
				var inf = shaderDatas[v.instanceIndex];
				paramVars.h[v.id] = { instance : inf.index, index : inf.inst.params.h[v.merged[0].id]};
			}
		}
		var s7 = new hxsl_Splitter().split(s5);
		hxsl_Printer.check(s7.vertex,[s5]);
		hxsl_Printer.check(s7.fragment,[s5]);
		var s8 = new hxsl_Dce().dce(s7.vertex,s7.fragment);
		hxsl_Printer.check(s8.vertex,[s7.vertex]);
		hxsl_Printer.check(s8.fragment,[s7.fragment]);
		var r = new hxsl_RuntimeShader();
		r.vertex = this.flattenShader(s8.vertex,hxsl_FunctionKind.Vertex,paramVars);
		r.vertex.vertex = true;
		r.fragment = this.flattenShader(s8.fragment,hxsl_FunctionKind.Fragment,paramVars);
		r.globals = new haxe_ds_IntMap();
		this.initGlobals(r,r.vertex);
		this.initGlobals(r,r.fragment);
		hxsl_Printer.check(r.vertex.data,[s8.vertex]);
		hxsl_Printer.check(r.fragment.data,[s8.fragment]);
		r.signature = haxe_crypto_Md5.encode(hxsl_Printer.shaderToString(r.vertex.data) + hxsl_Printer.shaderToString(r.fragment.data));
		var _this = this.byID;
		var key = r.signature;
		var r2 = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(r2 != null) {
			r.id = r2.id;
		} else {
			var _this1 = this.byID;
			var key1 = r.signature;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,r);
			} else {
				_this1.h[key1] = r;
			}
		}
		return r;
	}
	,initGlobals: function(r,s) {
		var p = s.globals;
		while(p != null) {
			r.globals.h[p.gid] = true;
			p = p.next;
		}
		var p1 = s.params;
		while(p1 != null) {
			if(p1.perObjectGlobal != null) {
				r.globals.h[p1.perObjectGlobal.gid] = true;
			}
			p1 = p1.next;
		}
	}
	,getPath: function(v) {
		if(v.parent == null) {
			return v.name;
		}
		return this.getPath(v.parent) + "." + v.name;
	}
	,flattenShader: function(s,kind,params) {
		var flat = new hxsl_Flatten();
		var c = new hxsl_RuntimeShaderData();
		var data = flat.flatten(s,kind,this.constsToGlobal);
		c.consts = flat.consts;
		var tmp = flat.allocData.keys();
		while(tmp.hasNext()) {
			var g = tmp.next();
			var alloc = flat.allocData.h[g.__id__];
			switch(g.kind[1]) {
			case 0:
				var _g = [];
				var _g1 = 0;
				while(_g1 < alloc.length) {
					var a = alloc[_g1];
					++_g1;
					if(a.v != null) {
						_g.push(new hxsl_AllocGlobal(a.pos,this.getPath(a.v),a.v.type));
					}
				}
				var _g2 = 0;
				var _g11 = _g.length - 1;
				while(_g2 < _g11) {
					var i = _g2++;
					_g[i].next = _g[i + 1];
				}
				var _g12 = g.type;
				if(_g12[1] == 14) {
					if(_g12[2][1] == 5) {
						if(_g12[2][2] == 4) {
							if(_g12[2][3][1] == 1) {
								if(_g12[3][1] == 0) {
									c.globals = _g[0];
									c.globalsSize = _g12[3][2];
								} else {
									throw new js__$Boot_HaxeError("assert");
								}
							} else {
								throw new js__$Boot_HaxeError("assert");
							}
						} else {
							throw new js__$Boot_HaxeError("assert");
						}
					} else {
						throw new js__$Boot_HaxeError("assert");
					}
				} else {
					throw new js__$Boot_HaxeError("assert");
				}
				break;
			case 2:
				var out = [];
				var _g3 = 0;
				while(_g3 < alloc.length) {
					var a1 = alloc[_g3];
					++_g3;
					if(a1.v == null) {
						continue;
					}
					var p = params.h[a1.v.id];
					if(p == null) {
						var ap = new hxsl_AllocParam(a1.v.name,a1.pos,-1,-1,a1.v.type);
						ap.perObjectGlobal = new hxsl_AllocGlobal(-1,this.getPath(a1.v),a1.v.type);
						out.push(ap);
						continue;
					}
					out.push(new hxsl_AllocParam(a1.v.name,a1.pos,p.instance,p.index,a1.v.type));
				}
				var _g13 = 0;
				var _g4 = out.length - 1;
				while(_g13 < _g4) {
					var i1 = _g13++;
					out[i1].next = out[i1 + 1];
				}
				var _g5 = g.type;
				if(_g5[1] == 14) {
					switch(_g5[2][1]) {
					case 5:
						if(_g5[2][2] == 4) {
							if(_g5[2][3][1] == 1) {
								if(_g5[3][1] == 0) {
									c.params = out[0];
									c.paramsSize = _g5[3][2];
								} else {
									throw new js__$Boot_HaxeError("assert");
								}
							} else {
								throw new js__$Boot_HaxeError("assert");
							}
						} else {
							throw new js__$Boot_HaxeError("assert");
						}
						break;
					case 10:
						c.textures2D = out[0];
						c.textures2DCount = out.length;
						break;
					case 11:
						c.texturesCube = out[0];
						c.texturesCubeCount = out.length;
						break;
					default:
						throw new js__$Boot_HaxeError("assert");
					}
				} else {
					throw new js__$Boot_HaxeError("assert");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("assert");
			}
		}
		if(c.globals == null) {
			c.globalsSize = 0;
		}
		if(c.params == null) {
			c.paramsSize = 0;
		}
		if(c.textures2D == null) {
			c.textures2DCount = 0;
		}
		if(c.texturesCube == null) {
			c.texturesCubeCount = 0;
		}
		c.data = data;
		return c;
	}
	,__class__: hxsl_Cache
};
var hxsl_Clone = function() {
	this.varMap = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Clone"] = hxsl_Clone;
hxsl_Clone.__name__ = ["hxsl","Clone"];
hxsl_Clone.shaderData = function(s) {
	return new hxsl_Clone().shader(s);
};
hxsl_Clone.prototype = {
	tvar: function(v) {
		var v2 = this.varMap.h[v.id];
		if(v2 != null) {
			return v2;
		}
		v2 = { id : hxsl_Tools.allocVarId(), type : v.type, name : v.name, kind : v.kind};
		this.varMap.h[v.id] = v2;
		if(v.parent != null) {
			v2.parent = this.tvar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		v2.type = this.ttype(v.type);
		return v2;
	}
	,tfun: function(f) {
		var tmp = this.ttype(f.ret);
		var tmp1 = this.tvar(f.ref);
		var _g = [];
		var _g1 = 0;
		var _g2 = f.args;
		while(_g1 < _g2.length) {
			var a = _g2[_g1];
			++_g1;
			_g.push(this.tvar(a));
		}
		return { ret : tmp, kind : f.kind, ref : tmp1, args : _g, expr : this.texpr(f.expr)};
	}
	,ttype: function(t) {
		switch(t[1]) {
		case 12:
			var vl = t[2];
			var _g = [];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v = vl[_g1];
				++_g1;
				_g.push(this.tvar(v));
			}
			return hxsl_Type.TStruct(_g);
		case 13:
			var vars = t[2];
			var _g2 = [];
			var _g11 = 0;
			while(_g11 < vars.length) {
				var v1 = vars[_g11];
				++_g11;
				var _g21 = [];
				var _g3 = 0;
				var _g4 = v1.args;
				while(_g3 < _g4.length) {
					var a = _g4[_g3];
					++_g3;
					_g21.push({ name : a.name, type : this.ttype(a.type)});
				}
				_g2.push({ args : _g21, ret : this.ttype(v1.ret)});
			}
			return hxsl_Type.TFun(_g2);
		case 14:
			var size = t[3];
			var tmp = this.ttype(t[2]);
			var tmp1;
			switch(size[1]) {
			case 0:
				tmp1 = size;
				break;
			case 1:
				tmp1 = hxsl_SizeDecl.SVar(this.tvar(size[2]));
				break;
			}
			return hxsl_Type.TArray(tmp,tmp1);
		default:
			return t;
		}
	}
	,texpr: function(e) {
		var e2 = hxsl_Tools.map(e,$bind(this,this.texpr));
		e2.t = this.ttype(e.t);
		var _g = e2.e;
		var tmp;
		switch(_g[1]) {
		case 1:
			tmp = hxsl_TExprDef.TVar(this.tvar(_g[2]));
			break;
		case 7:
			tmp = hxsl_TExprDef.TVarDecl(this.tvar(_g[2]),_g[3]);
			break;
		case 13:
			tmp = hxsl_TExprDef.TFor(this.tvar(_g[2]),_g[3],_g[4]);
			break;
		default:
			tmp = e2.e;
		}
		e2.e = tmp;
		return e2;
	}
	,shader: function(s) {
		var _g = [];
		var _g1 = 0;
		var _g2 = s.vars;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push(this.tvar(v));
		}
		var _g11 = [];
		var _g21 = 0;
		var _g3 = s.funs;
		while(_g21 < _g3.length) {
			var f = _g3[_g21];
			++_g21;
			_g11.push(this.tfun(f));
		}
		return { name : s.name, vars : _g, funs : _g11};
	}
	,__class__: hxsl_Clone
};
var hxsl__$Dce_Exit = function() {
};
$hxClasses["hxsl._Dce.Exit"] = hxsl__$Dce_Exit;
hxsl__$Dce_Exit.__name__ = ["hxsl","_Dce","Exit"];
hxsl__$Dce_Exit.prototype = {
	__class__: hxsl__$Dce_Exit
};
var hxsl__$Dce_VarDeps = function(v) {
	this.v = v;
	this.used = false;
	this.deps = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Dce.VarDeps"] = hxsl__$Dce_VarDeps;
hxsl__$Dce_VarDeps.__name__ = ["hxsl","_Dce","VarDeps"];
hxsl__$Dce_VarDeps.prototype = {
	__class__: hxsl__$Dce_VarDeps
};
var hxsl_Dce = function() {
};
$hxClasses["hxsl.Dce"] = hxsl_Dce;
hxsl_Dce.__name__ = ["hxsl","Dce"];
hxsl_Dce.prototype = {
	dce: function(vertex,fragment) {
		this.used = new haxe_ds_IntMap();
		var inputs = [];
		var _g = 0;
		var _g1 = vertex.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var i = this.get(v);
			if(v.kind == hxsl_VarKind.Input) {
				inputs.push(i);
			}
			if(v.kind == hxsl_VarKind.Output) {
				i.keep = true;
			}
		}
		var _g2 = 0;
		var _g11 = fragment.vars;
		while(_g2 < _g11.length) {
			var v1 = _g11[_g2];
			++_g2;
			var i1 = this.get(v1);
			if(v1.kind == hxsl_VarKind.Output) {
				i1.keep = true;
			}
		}
		var _g3 = 0;
		var _g12 = vertex.funs;
		while(_g3 < _g12.length) {
			var f = _g12[_g3];
			++_g3;
			this.check(f.expr,[]);
		}
		var _g4 = 0;
		var _g13 = fragment.funs;
		while(_g4 < _g13.length) {
			var f1 = _g13[_g4];
			++_g4;
			this.check(f1.expr,[]);
		}
		var tmp = this.used.iterator();
		while(tmp.hasNext()) {
			var v2 = tmp.next();
			if(v2.keep) {
				this.markRec(v2);
			}
		}
		while(inputs.length > 1 && !inputs[inputs.length - 1].used) inputs.pop();
		var _g5 = 0;
		while(_g5 < inputs.length) {
			var v3 = inputs[_g5];
			++_g5;
			this.markRec(v3);
		}
		var tmp1 = this.used.iterator();
		while(tmp1.hasNext()) {
			var v4 = tmp1.next();
			if(v4.used) {
				continue;
			}
			HxOverrides.remove(vertex.vars,v4.v);
			HxOverrides.remove(fragment.vars,v4.v);
		}
		var _g6 = 0;
		var _g14 = vertex.funs;
		while(_g6 < _g14.length) {
			var f2 = _g14[_g6];
			++_g6;
			f2.expr = this.mapExpr(f2.expr);
		}
		var _g7 = 0;
		var _g15 = fragment.funs;
		while(_g7 < _g15.length) {
			var f3 = _g15[_g7];
			++_g7;
			f3.expr = this.mapExpr(f3.expr);
		}
		return { fragment : fragment, vertex : vertex};
	}
	,get: function(v) {
		var vd = this.used.h[v.id];
		if(vd == null) {
			vd = new hxsl__$Dce_VarDeps(v);
			this.used.h[v.id] = vd;
		}
		return vd;
	}
	,markRec: function(v) {
		if(v.used) {
			return;
		}
		v.used = true;
		var tmp = v.deps.iterator();
		while(tmp.hasNext()) this.markRec(tmp.next());
	}
	,link: function(v,writeTo) {
		var vd = this.get(v);
		var _g = 0;
		while(_g < writeTo.length) {
			var w = writeTo[_g];
			++_g;
			if(w == null) {
				vd.keep = true;
				continue;
			}
			w.deps.h[v.id] = vd;
		}
	}
	,hasDiscardRec: function(e) {
		if(e.e[1] == 11) {
			throw new js__$Boot_HaxeError(new hxsl__$Dce_Exit());
		} else {
			hxsl_Tools.iter(e,$bind(this,this.hasDiscardRec));
		}
	}
	,hasDiscard: function(e) {
		try {
			this.hasDiscardRec(e);
			return false;
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,hxsl__$Dce_Exit) ) {
				return true;
			} else throw(e1);
		}
	}
	,check: function(e,writeTo) {
		var _g = e.e;
		switch(_g[1]) {
		case 1:
			this.link(_g[2],writeTo);
			break;
		case 5:
			switch(_g[2][1]) {
			case 4:
				switch(_g[3].e[1]) {
				case 1:
					writeTo.push(this.get(_g[3].e[2]));
					this.check(_g[4],writeTo);
					writeTo.pop();
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						writeTo.push(this.get(_g[3].e[2].e[2]));
						this.check(_g[4],writeTo);
						writeTo.pop();
					} else {
						var f = $bind(this,this.check);
						var a1 = writeTo;
						hxsl_Tools.iter(e,function(e1) {
							f(e1,a1);
						});
					}
					break;
				default:
					var f1 = $bind(this,this.check);
					var a11 = writeTo;
					hxsl_Tools.iter(e,function(e2) {
						f1(e2,a11);
					});
				}
				break;
			case 20:
				switch(_g[3].e[1]) {
				case 1:
					writeTo.push(this.get(_g[3].e[2]));
					this.check(_g[4],writeTo);
					writeTo.pop();
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						writeTo.push(this.get(_g[3].e[2].e[2]));
						this.check(_g[4],writeTo);
						writeTo.pop();
					} else {
						var f2 = $bind(this,this.check);
						var a12 = writeTo;
						hxsl_Tools.iter(e,function(e3) {
							f2(e3,a12);
						});
					}
					break;
				default:
					var f3 = $bind(this,this.check);
					var a13 = writeTo;
					hxsl_Tools.iter(e,function(e4) {
						f3(e4,a13);
					});
				}
				break;
			default:
				var f4 = $bind(this,this.check);
				var a14 = writeTo;
				hxsl_Tools.iter(e,function(e5) {
					f4(e5,a14);
				});
			}
			break;
		case 7:
			var init = _g[3];
			var v = _g[2];
			if(init != null) {
				writeTo.push(this.get(v));
				this.check(init,writeTo);
				writeTo.pop();
			} else {
				var f5 = $bind(this,this.check);
				var a15 = writeTo;
				hxsl_Tools.iter(e,function(e6) {
					f5(e6,a15);
				});
			}
			break;
		case 10:
			var eelse = _g[4];
			var eif = _g[3];
			var e7 = _g[2];
			if(this.hasDiscard(eif) || eelse != null && this.hasDiscard(eelse)) {
				writeTo.push(null);
				this.check(e7,writeTo);
				writeTo.pop();
				this.check(eif,writeTo);
				if(eelse != null) {
					this.check(eelse,writeTo);
				}
			} else {
				var f6 = $bind(this,this.check);
				var a16 = writeTo;
				hxsl_Tools.iter(e,function(e8) {
					f6(e8,a16);
				});
			}
			break;
		default:
			var f7 = $bind(this,this.check);
			var a17 = writeTo;
			hxsl_Tools.iter(e,function(e9) {
				f7(e9,a17);
			});
		}
	}
	,mapExpr: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 4:
			var el = _g[2];
			var out = [];
			var count = 0;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				var e2 = this.mapExpr(e1);
				var _g11 = e2.e;
				switch(_g11[1]) {
				case 0:
					if(count >= el.length) {
						out.push(e2);
					}
					break;
				case 4:
					if(_g11[2].length != 0) {
						out.push(e2);
					}
					break;
				default:
					out.push(e2);
				}
				++count;
			}
			return { e : hxsl_TExprDef.TBlock(out), p : e.p, t : e.t};
		case 5:
			switch(_g[2][1]) {
			case 4:
				switch(_g[3].e[1]) {
				case 1:
					if(!this.get(_g[3].e[2]).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,$bind(this,this.mapExpr));
					}
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						if(!this.get(_g[3].e[2].e[2]).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,$bind(this,this.mapExpr));
						}
					} else {
						return hxsl_Tools.map(e,$bind(this,this.mapExpr));
					}
					break;
				default:
					return hxsl_Tools.map(e,$bind(this,this.mapExpr));
				}
				break;
			case 20:
				switch(_g[3].e[1]) {
				case 1:
					if(!this.get(_g[3].e[2]).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,$bind(this,this.mapExpr));
					}
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						if(!this.get(_g[3].e[2].e[2]).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,$bind(this,this.mapExpr));
						}
					} else {
						return hxsl_Tools.map(e,$bind(this,this.mapExpr));
					}
					break;
				default:
					return hxsl_Tools.map(e,$bind(this,this.mapExpr));
				}
				break;
			default:
				return hxsl_Tools.map(e,$bind(this,this.mapExpr));
			}
			break;
		case 7:
			if(!this.get(_g[2]).used) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,$bind(this,this.mapExpr));
			}
			break;
		default:
			return hxsl_Tools.map(e,$bind(this,this.mapExpr));
		}
	}
	,__class__: hxsl_Dce
};
var hxsl_Eval = function() {
	this.varMap = new haxe_ds_ObjectMap();
	this.funMap = new haxe_ds_ObjectMap();
	this.constants = new haxe_ds_ObjectMap();
};
$hxClasses["hxsl.Eval"] = hxsl_Eval;
hxsl_Eval.__name__ = ["hxsl","Eval"];
hxsl_Eval.prototype = {
	setConstant: function(v,c) {
		this.constants.set(v,hxsl_TExprDef.TConst(c));
	}
	,mapVar: function(v) {
		var v2 = this.varMap.h[v.__id__];
		if(v2 != null) {
			if(v == v2) {
				return v2;
			} else {
				return this.mapVar(v2);
			}
		}
		if(v.parent != null) {
			this.mapVar(v.parent);
			v2 = this.varMap.h[v.__id__];
			if(v2 != null) {
				if(v == v2) {
					return v2;
				} else {
					return this.mapVar(v2);
				}
			}
		}
		v2 = { id : hxsl_Tools.allocVarId(), name : v.name, type : v.type, kind : v.kind};
		if(v.parent != null) {
			v2.parent = this.mapVar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		this.varMap.set(v,v2);
		this.varMap.set(v2,v2);
		var _g = v2.type;
		switch(_g[1]) {
		case 12:
			var vl = _g[2];
			var _g1 = [];
			var _g11 = 0;
			while(_g11 < vl.length) {
				var v1 = vl[_g11];
				++_g11;
				_g1.push(this.mapVar(v1));
			}
			v2.type = hxsl_Type.TStruct(_g1);
			break;
		case 14:
			if(_g[3][1] == 1) {
				var t = _g[2];
				var vs = _g[3][2];
				var c = this.constants.h[vs.__id__];
				if(c != null) {
					if(c[1] == 0) {
						if(c[2][1] == 2) {
							v2.type = hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(c[2][2]));
						} else {
							hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
						}
					} else {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					}
				} else {
					v2.type = hxsl_Type.TArray(t,hxsl_SizeDecl.SVar(this.mapVar(vs)));
				}
			}
			break;
		default:
		}
		return v2;
	}
	,'eval': function(s) {
		var funs = [];
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var tmp = this.mapVar(f.ref);
			var _g2 = [];
			var _g3 = 0;
			var _g4 = f.args;
			while(_g3 < _g4.length) {
				var a = _g4[_g3];
				++_g3;
				_g2.push(this.mapVar(a));
			}
			var f2 = { kind : f.kind, ref : tmp, args : _g2, ret : f.ret, expr : f.expr};
			if(!this.inlineCalls || f.kind != hxsl_FunctionKind.Helper) {
				funs.push(f2);
			}
			this.funMap.set(f2.ref,f);
		}
		var _g11 = 0;
		var _g5 = funs.length;
		while(_g11 < _g5) {
			this.curFun = funs[_g11++];
			this.curFun.expr = this.evalExpr(this.curFun.expr,false);
		}
		var _g6 = [];
		var _g12 = 0;
		var _g21 = s.vars;
		while(_g12 < _g21.length) {
			var v = _g21[_g12];
			++_g12;
			_g6.push(this.mapVar(v));
		}
		return { name : s.name, vars : _g6, funs : funs};
	}
	,hasReturn: function(e) {
		this.markReturn = false;
		this.hasReturnLoop(e);
		return this.markReturn;
	}
	,hasReturnLoop: function(e) {
		if(e.e[1] == 12) {
			this.markReturn = true;
		} else if(!this.markReturn) {
			hxsl_Tools.iter(e,$bind(this,this.hasReturnLoop));
		}
	}
	,handleReturn: function(e,$final) {
		if($final == null) {
			$final = false;
		}
		var _g = e.e;
		switch(_g[1]) {
		case 3:
			var v = this.handleReturn(_g[2],$final);
			return { e : hxsl_TExprDef.TParenthesis(v), t : v.t, p : e.p};
		case 4:
			var el = _g[2];
			var i = 0;
			var last = el.length;
			var out = [];
			try {
				while(i < last) {
					var e1 = el[i++];
					if(i == last) {
						out.push(this.handleReturn(e1,$final));
					} else {
						var _g1 = e1.e;
						switch(_g1[1]) {
						case 10:
							if(_g1[4] == null) {
								var econd = _g1[2];
								var eif = _g1[3];
								if($final && this.hasReturn(eif)) {
									out.push(this.handleReturn({ e : hxsl_TExprDef.TIf(econd,eif,{ e : hxsl_TExprDef.TBlock(el.slice(i)), t : e1.t, p : e1.p}), t : e1.t, p : e1.p}));
									throw "__break__";
								} else {
									out.push(this.handleReturn(e1));
								}
							} else {
								out.push(this.handleReturn(e1));
							}
							break;
						case 12:
							out.push(this.handleReturn(_g1[2],$final));
							throw "__break__";
							break;
						default:
							out.push(this.handleReturn(e1));
						}
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			var t = $final?out[out.length - 1].t:e.t;
			return { e : hxsl_TExprDef.TBlock(out), t : t, p : e.p};
		case 10:
			var eelse = _g[4];
			var eif1 = _g[3];
			var cond = _g[2];
			if(eelse != null && $final) {
				var cond1 = this.handleReturn(cond);
				var eif2 = this.handleReturn(eif1,$final);
				return { e : hxsl_TExprDef.TIf(cond1,eif2,this.handleReturn(eelse,$final)), t : eif2.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
			}
			break;
		case 12:
			var v1 = _g[2];
			if(!$final) {
				hxsl_Error.t("Cannot inline not final return",e.p);
			}
			if(v1 == null) {
				return { e : hxsl_TExprDef.TBlock([]), t : hxsl_Type.TVoid, p : e.p};
			}
			return this.handleReturn(v1,true);
		default:
			return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
		}
	}
	,handleReturnDef: function(e) {
		return this.handleReturn(e);
	}
	,evalCall: function(g,args) {
		if(g[1] == 36) {
			if(args.length == 1) {
				if(args[0].e[1] == 0) {
					if(args[0].e[2][1] == 2) {
						return hxsl_TExprDef.TConst(hxsl_Const.CFloat(args[0].e[2][2]));
					} else {
						return null;
					}
				} else {
					return null;
				}
			} else {
				return null;
			}
		} else {
			return null;
		}
	}
	,evalExpr: function(e,isVal) {
		if(isVal == null) {
			isVal = true;
		}
		var _gthis = this;
		var d;
		var _g = e.e;
		switch(_g[1]) {
		case 0:case 2:
			d = e.e;
			break;
		case 1:
			var v = _g[2];
			var c = this.constants.h[v.__id__];
			if(c != null) {
				d = c;
			} else {
				d = hxsl_TExprDef.TVar(this.mapVar(v));
			}
			break;
		case 3:
			var e1 = this.evalExpr(_g[2],isVal);
			if(e1.e[1] == 0) {
				d = e1.e;
			} else {
				d = hxsl_TExprDef.TParenthesis(e1);
			}
			break;
		case 4:
			var el = _g[2];
			var out = [];
			var last = el.length - 1;
			var _g1 = 0;
			var _g2 = el.length;
			while(_g1 < _g2) {
				var i = _g1++;
				var isVal1 = isVal && i == last;
				var e2 = this.evalExpr(el[i],isVal1);
				switch(e2.e[1]) {
				case 0:case 1:
					if(!(!isVal1)) {
						out.push(e2);
					}
					break;
				default:
					out.push(e2);
				}
			}
			if(out.length == 1 && this.curFun.kind != hxsl_FunctionKind.Init) {
				d = out[0].e;
			} else {
				d = hxsl_TExprDef.TBlock(out);
			}
			break;
		case 5:
			var e21 = _g[4];
			var e11 = _g[3];
			var op = _g[2];
			var e12 = this.evalExpr(e11);
			var e22 = this.evalExpr(e21);
			switch(op[1]) {
			case 0:
				var _g3 = e22.e;
				var _g11 = e12.e;
				if(_g11[1] == 0) {
					switch(_g11[2][1]) {
					case 2:
						if(_g3[1] == 0) {
							if(_g3[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g11[2][2] + _g3[2][2] | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g3[1] == 0) {
							if(_g3[2][1] == 3) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(_g11[2][2] + _g3[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 1:
				var _g4 = e22.e;
				var _g12 = e12.e;
				if(_g12[1] == 0) {
					switch(_g12[2][1]) {
					case 2:
						if(_g4[1] == 0) {
							if(_g4[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g12[2][2] * _g4[2][2] | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g4[1] == 0) {
							if(_g4[2][1] == 3) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(_g12[2][2] * _g4[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 2:
				var _g5 = e22.e;
				var _g13 = e12.e;
				if(_g13[1] == 0) {
					switch(_g13[2][1]) {
					case 2:
						if(_g5[1] == 0) {
							if(_g5[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g13[2][2] / _g5[2][2] | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g5[1] == 0) {
							if(_g5[2][1] == 3) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(_g13[2][2] / _g5[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 3:
				var _g6 = e22.e;
				var _g14 = e12.e;
				if(_g14[1] == 0) {
					switch(_g14[2][1]) {
					case 2:
						if(_g6[1] == 0) {
							if(_g6[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g14[2][2] - _g6[2][2] | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g6[1] == 0) {
							if(_g6[2][1] == 3) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(_g14[2][2] - _g6[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 4:case 20:case 21:
				d = hxsl_TExprDef.TBinop(op,e12,e22);
				break;
			case 5:
				var _g7 = e22.e;
				var _g15 = e12.e;
				if(_g15[1] == 0) {
					switch(_g15[2][1]) {
					case 0:
						if(_g7[1] == 0) {
							if(_g7[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g7[1] == 0) {
							switch(_g7[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g15[2][2] == _g7[2][2]?0:1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g7[1] == 0) {
							switch(_g7[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g15[2][2] - _g7[2][2] == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g7[1] == 0) {
							switch(_g7[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a = _g15[2][2];
								var b = _g7[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b?1:a == b?0:-1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g7[1] == 0) {
							switch(_g7[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a1 = _g15[2][2];
								var b1 = _g7[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a1 > b1?1:a1 == b1?0:-1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 6:
				var _g8 = e22.e;
				var _g16 = e12.e;
				if(_g16[1] == 0) {
					switch(_g16[2][1]) {
					case 0:
						if(_g8[1] == 0) {
							if(_g8[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g8[1] == 0) {
							switch(_g8[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g16[2][2] == _g8[2][2]?0:1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g8[1] == 0) {
							switch(_g8[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g16[2][2] - _g8[2][2] != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g8[1] == 0) {
							switch(_g8[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a2 = _g16[2][2];
								var b2 = _g8[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a2 > b2?1:a2 == b2?0:-1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g8[1] == 0) {
							switch(_g8[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a3 = _g16[2][2];
								var b3 = _g8[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a3 > b3?1:a3 == b3?0:-1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 7:
				var _g9 = e22.e;
				var _g17 = e12.e;
				if(_g17[1] == 0) {
					switch(_g17[2][1]) {
					case 0:
						if(_g9[1] == 0) {
							if(_g9[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g9[1] == 0) {
							switch(_g9[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g17[2][2] == _g9[2][2]?0:1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g9[1] == 0) {
							switch(_g9[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g17[2][2] - _g9[2][2] > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g9[1] == 0) {
							switch(_g9[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a4 = _g17[2][2];
								var b4 = _g9[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a4 > b4?1:a4 == b4?0:-1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g9[1] == 0) {
							switch(_g9[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a5 = _g17[2][2];
								var b5 = _g9[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a5 > b5?1:a5 == b5?0:-1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 8:
				var _g10 = e22.e;
				var _g18 = e12.e;
				if(_g18[1] == 0) {
					switch(_g18[2][1]) {
					case 0:
						if(_g10[1] == 0) {
							if(_g10[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g10[1] == 0) {
							switch(_g10[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g18[2][2] == _g10[2][2]?0:1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g10[1] == 0) {
							switch(_g10[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g18[2][2] - _g10[2][2] >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g10[1] == 0) {
							switch(_g10[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a6 = _g18[2][2];
								var b6 = _g10[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a6 > b6?1:a6 == b6?0:-1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g10[1] == 0) {
							switch(_g10[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a7 = _g18[2][2];
								var b7 = _g10[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a7 > b7?1:a7 == b7?0:-1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 9:
				var _g19 = e22.e;
				var _g110 = e12.e;
				if(_g110[1] == 0) {
					switch(_g110[2][1]) {
					case 0:
						if(_g19[1] == 0) {
							if(_g19[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g19[1] == 0) {
							switch(_g19[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g110[2][2] == _g19[2][2]?0:1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g19[1] == 0) {
							switch(_g19[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g110[2][2] - _g19[2][2] < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g19[1] == 0) {
							switch(_g19[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a8 = _g110[2][2];
								var b8 = _g19[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a8 > b8?1:a8 == b8?0:-1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g19[1] == 0) {
							switch(_g19[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a9 = _g110[2][2];
								var b9 = _g19[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a9 > b9?1:a9 == b9?0:-1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 10:
				var _g20 = e22.e;
				var _g111 = e12.e;
				if(_g111[1] == 0) {
					switch(_g111[2][1]) {
					case 0:
						if(_g20[1] == 0) {
							if(_g20[2][1] == 0) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							} else {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 1:
						if(_g20[1] == 0) {
							switch(_g20[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((_g111[2][2] == _g20[2][2]?0:1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 2:
						if(_g20[1] == 0) {
							switch(_g20[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(_g111[2][2] - _g20[2][2] <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g20[1] == 0) {
							switch(_g20[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a10 = _g111[2][2];
								var b10 = _g20[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a10 > b10?1:a10 == b10?0:-1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 4:
						if(_g20[1] == 0) {
							switch(_g20[2][1]) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a11 = _g111[2][2];
								var b11 = _g20[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a11 > b11?1:a11 == b11?0:-1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 11:
				var _g21 = e22.e;
				var _g112 = e12.e;
				if(_g112[1] == 0) {
					if(_g112[2][1] == 2) {
						if(_g21[1] == 0) {
							if(_g21[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g112[2][2] & _g21[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 12:
				var _g22 = e22.e;
				var _g113 = e12.e;
				if(_g113[1] == 0) {
					if(_g113[2][1] == 2) {
						if(_g22[1] == 0) {
							if(_g22[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g113[2][2] | _g22[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 13:
				var _g23 = e22.e;
				var _g114 = e12.e;
				if(_g114[1] == 0) {
					if(_g114[2][1] == 2) {
						if(_g23[1] == 0) {
							if(_g23[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g114[2][2] ^ _g23[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 14:
				var _g24 = e22.e;
				var _g115 = e12.e;
				if(_g115[1] == 0) {
					if(_g115[2][1] == 1) {
						if(_g24[1] == 0) {
							if(_g24[2][1] == 1) {
								var a12 = _g115[2][2];
								var b12 = _g24[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a12 && b12));
							} else {
								var a13 = _g115[2][2];
								if(a13 == false) {
									d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a13));
								} else {
									d = e22.e;
								}
							}
						} else {
							var a14 = _g115[2][2];
							if(a14 == false) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a14));
							} else {
								d = e22.e;
							}
						}
					} else if(_g24[1] == 0) {
						if(_g24[2][1] == 1) {
							var a15 = _g24[2][2];
							if(a15 == false) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a15));
							} else {
								d = e12.e;
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else if(_g24[1] == 0) {
					if(_g24[2][1] == 1) {
						var a16 = _g24[2][2];
						if(a16 == false) {
							d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a16));
						} else {
							d = e12.e;
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 15:
				var _g25 = e22.e;
				var _g116 = e12.e;
				if(_g116[1] == 0) {
					if(_g116[2][1] == 1) {
						if(_g25[1] == 0) {
							if(_g25[2][1] == 1) {
								var a17 = _g116[2][2];
								var b13 = _g25[2][2];
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a17 || b13));
							} else {
								var a18 = _g116[2][2];
								if(a18 == true) {
									d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a18));
								} else {
									d = e22.e;
								}
							}
						} else {
							var a19 = _g116[2][2];
							if(a19 == true) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a19));
							} else {
								d = e22.e;
							}
						}
					} else if(_g25[1] == 0) {
						if(_g25[2][1] == 1) {
							var a20 = _g25[2][2];
							if(a20 == true) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a20));
							} else {
								d = e12.e;
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else if(_g25[1] == 0) {
					if(_g25[2][1] == 1) {
						var a21 = _g25[2][2];
						if(a21 == true) {
							d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a21));
						} else {
							d = e12.e;
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 16:
				var _g26 = e22.e;
				var _g117 = e12.e;
				if(_g117[1] == 0) {
					if(_g117[2][1] == 2) {
						if(_g26[1] == 0) {
							if(_g26[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g117[2][2] << _g26[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 17:
				var _g27 = e22.e;
				var _g118 = e12.e;
				if(_g118[1] == 0) {
					if(_g118[2][1] == 2) {
						if(_g27[1] == 0) {
							if(_g27[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g118[2][2] >> _g27[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 18:
				var _g28 = e22.e;
				var _g119 = e12.e;
				if(_g119[1] == 0) {
					if(_g119[2][1] == 2) {
						if(_g28[1] == 0) {
							if(_g28[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g119[2][2] >>> _g28[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 19:
				var _g29 = e22.e;
				var _g120 = e12.e;
				if(_g120[1] == 0) {
					switch(_g120[2][1]) {
					case 2:
						if(_g29[1] == 0) {
							if(_g29[2][1] == 2) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(_g120[2][2] % _g29[2][2] | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					case 3:
						if(_g29[1] == 0) {
							if(_g29[2][1] == 3) {
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(_g120[2][2] % _g29[2][2]));
							} else {
								d = hxsl_TExprDef.TBinop(op,e12,e22);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e12,e22);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e12,e22);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e12,e22);
				}
				break;
			case 22:
				throw new js__$Boot_HaxeError("assert");
				break;
			}
			break;
		case 6:
			var e3 = _g[3];
			var op1 = _g[2];
			var e4 = this.evalExpr(e3);
			var _g30 = e4.e;
			if(_g30[1] == 0) {
				var c1 = _g30[2];
				switch(op1[1]) {
				case 2:
					if(c1[1] == 1) {
						d = hxsl_TExprDef.TConst(hxsl_Const.CBool(!c1[2]));
					} else {
						d = hxsl_TExprDef.TUnop(op1,e4);
					}
					break;
				case 3:
					switch(c1[1]) {
					case 2:
						d = hxsl_TExprDef.TConst(hxsl_Const.CInt(-c1[2]));
						break;
					case 3:
						d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(-c1[2]));
						break;
					default:
						d = hxsl_TExprDef.TUnop(op1,e4);
					}
					break;
				default:
					d = hxsl_TExprDef.TUnop(op1,e4);
				}
			} else {
				d = hxsl_TExprDef.TUnop(op1,e4);
			}
			break;
		case 7:
			var init = _g[3];
			d = hxsl_TExprDef.TVarDecl(this.mapVar(_g[2]),init == null?null:this.evalExpr(init));
			break;
		case 8:
			var args = _g[3];
			var c2 = this.evalExpr(_g[2]);
			var _g31 = [];
			var _g121 = 0;
			while(_g121 < args.length) {
				var a22 = args[_g121];
				++_g121;
				_g31.push(this.evalExpr(a22));
			}
			var _g122 = c2.e;
			switch(_g122[1]) {
			case 1:
				if(!this.inlineCalls) {
					d = hxsl_TExprDef.TCall(c2,_g31);
				} else {
					var v1 = _g122[2];
					if(this.funMap.h.__keys__[v1.__id__] != null) {
						var f = this.funMap.h[v1.__id__];
						var outExprs = [];
						var undo = [];
						var _g210 = 0;
						var _g123 = f.args.length;
						while(_g210 < _g123) {
							var i1 = _g210++;
							var v2 = [f.args[i1]];
							var e5 = _g31[i1];
							var _g32 = e5.e;
							switch(_g32[1]) {
							case 0:
								var old = [this.constants.h[v2[0].__id__]];
								undo.push((function(old1,v3) {
									return function() {
										if(old1[0] == null) {
											_gthis.constants.remove(v3[0]);
										} else {
											_gthis.constants.set(v3[0],old1[0]);
										}
									};
								})(old,v2));
								this.constants.set(v2[0],e5.e);
								break;
							case 1:
								switch(_g32[2].kind[1]) {
								case 0:case 1:case 2:
									var old2 = [this.constants.h[v2[0].__id__]];
									undo.push((function(old3,v4) {
										return function() {
											if(old3[0] == null) {
												_gthis.constants.remove(v4[0]);
											} else {
												_gthis.constants.set(v4[0],old3[0]);
											}
										};
									})(old2,v2));
									this.constants.set(v2[0],e5.e);
									break;
								default:
									var old4 = [this.varMap.h[v2[0].__id__]];
									if(old4[0] == null) {
										undo.push((function(v5) {
											return function() {
												_gthis.varMap.remove(v5[0]);
											};
										})(v2));
									} else {
										this.varMap.remove(v2[0]);
										undo.push((function(old5,v6) {
											return function() {
												_gthis.varMap.set(v6[0],old5[0]);
											};
										})(old4,v2));
									}
									outExprs.push({ e : hxsl_TExprDef.TVarDecl(this.mapVar(v2[0]),e5), t : hxsl_Type.TVoid, p : e5.p});
								}
								break;
							default:
								var old6 = [this.varMap.h[v2[0].__id__]];
								if(old6[0] == null) {
									undo.push((function(v7) {
										return function() {
											_gthis.varMap.remove(v7[0]);
										};
									})(v2));
								} else {
									this.varMap.remove(v2[0]);
									undo.push((function(old7,v8) {
										return function() {
											_gthis.varMap.set(v8[0],old7[0]);
										};
									})(old6,v2));
								}
								outExprs.push({ e : hxsl_TExprDef.TVarDecl(this.mapVar(v2[0]),e5), t : hxsl_Type.TVoid, p : e5.p});
							}
						}
						var e6 = this.handleReturn(this.evalExpr(f.expr,false),true);
						var _g124 = 0;
						while(_g124 < undo.length) {
							var u = undo[_g124];
							++_g124;
							u();
						}
						var _g125 = e6.e;
						if(_g125[1] == 4) {
							var el1 = _g125[2];
							var _g126 = 0;
							while(_g126 < el1.length) {
								var e7 = el1[_g126];
								++_g126;
								outExprs.push(e7);
							}
						} else {
							outExprs.push(e6);
						}
						d = hxsl_TExprDef.TBlock(outExprs);
					} else {
						d = hxsl_Error.t("Cannot eval non-static call expresssion '" + new hxsl_Printer().exprString(c2) + "'",c2.p);
					}
				}
				break;
			case 2:
				var v9 = this.evalCall(_g122[2],_g31);
				if(v9 != null) {
					d = v9;
				} else {
					d = hxsl_TExprDef.TCall(c2,_g31);
				}
				break;
			default:
				d = hxsl_Error.t("Cannot eval non-static call expresssion '" + new hxsl_Printer().exprString(c2) + "'",c2.p);
			}
			break;
		case 9:
			d = hxsl_TExprDef.TSwiz(this.evalExpr(_g[2]),_g[3].slice());
			break;
		case 10:
			var eelse = _g[4];
			var eif = _g[3];
			var econd = this.evalExpr(_g[2]);
			var _g33 = econd.e;
			if(_g33[1] == 0) {
				if(_g33[2][1] == 1) {
					if(_g33[2][2]) {
						d = this.evalExpr(eif,isVal).e;
					} else if(eelse == null) {
						d = hxsl_TExprDef.TConst(hxsl_Const.CNull);
					} else {
						d = this.evalExpr(eelse,isVal).e;
					}
				} else if(isVal && eelse != null) {
					d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[eif,eelse,{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd.p},[econd]), t : hxsl_Type.TFloat, p : e.p}]);
				} else {
					d = hxsl_TExprDef.TIf(econd,this.evalExpr(eif,isVal),eelse == null?null:this.evalExpr(eelse,isVal));
				}
			} else if(isVal && eelse != null) {
				d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[eif,eelse,{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd.p},[econd]), t : hxsl_Type.TFloat, p : e.p}]);
			} else {
				d = hxsl_TExprDef.TIf(econd,this.evalExpr(eif,isVal),eelse == null?null:this.evalExpr(eelse,isVal));
			}
			break;
		case 11:
			d = hxsl_TExprDef.TDiscard;
			break;
		case 12:
			var e8 = _g[2];
			d = hxsl_TExprDef.TReturn(e8 == null?null:this.evalExpr(e8));
			break;
		case 13:
			var loop = _g[4];
			var it = _g[3];
			var v10 = _g[2];
			var v21 = this.mapVar(v10);
			var it1 = this.evalExpr(it);
			var e9;
			var _g34 = it1.e;
			if(_g34[1] == 5) {
				if(_g34[2][1] == 21) {
					if(_g34[3].e[1] == 0) {
						if(_g34[3].e[2][1] == 2) {
							if(_g34[4].e[1] == 0) {
								if(_g34[4].e[2][1] == 2) {
									var start = _g34[3].e[2][2];
									var len = _g34[4].e[2][2];
									if(this.unrollLoops) {
										var out1 = [];
										var _g127 = start;
										while(_g127 < len) {
											this.constants.set(v10,hxsl_TExprDef.TConst(hxsl_Const.CInt(_g127++)));
											out1.push(this.evalExpr(loop,false));
										}
										this.constants.remove(v10);
										e9 = hxsl_TExprDef.TBlock(out1);
									} else {
										e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
									}
								} else {
									e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
								}
							} else {
								e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
							}
						} else {
							e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
						}
					} else {
						e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
					}
				} else {
					e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
				}
			} else {
				e9 = hxsl_TExprDef.TFor(v21,it1,this.evalExpr(loop,false));
			}
			this.varMap.remove(v10);
			d = e9;
			break;
		case 14:
			d = hxsl_TExprDef.TContinue;
			break;
		case 15:
			d = hxsl_TExprDef.TBreak;
			break;
		case 16:
			var e23 = _g[3];
			var e13 = this.evalExpr(_g[2]);
			var e24 = this.evalExpr(e23);
			var _g35 = e24.e;
			var _g128 = e13.e;
			if(_g128[1] == 17) {
				if(_g35[1] == 0) {
					if(_g35[2][1] == 2) {
						var el2 = _g128[2];
						var i2 = _g35[2][2];
						if(i2 >= 0 && i2 < el2.length) {
							d = el2[i2].e;
						} else {
							d = hxsl_TExprDef.TArray(e13,e24);
						}
					} else {
						d = hxsl_TExprDef.TArray(e13,e24);
					}
				} else {
					d = hxsl_TExprDef.TArray(e13,e24);
				}
			} else {
				d = hxsl_TExprDef.TArray(e13,e24);
			}
			break;
		case 17:
			var el3 = _g[2];
			var _g36 = [];
			var _g129 = 0;
			while(_g129 < el3.length) {
				var e10 = el3[_g129];
				++_g129;
				_g36.push(this.evalExpr(e10));
			}
			d = hxsl_TExprDef.TArrayDecl(_g36);
			break;
		}
		return { e : d, t : e.t, p : e.p};
	}
	,__class__: hxsl_Eval
};
var hxsl__$Flatten_Alloc = function(g,t,pos,size) {
	this.g = g;
	this.t = t;
	this.pos = pos;
	this.size = size;
};
$hxClasses["hxsl._Flatten.Alloc"] = hxsl__$Flatten_Alloc;
hxsl__$Flatten_Alloc.__name__ = ["hxsl","_Flatten","Alloc"];
hxsl__$Flatten_Alloc.prototype = {
	__class__: hxsl__$Flatten_Alloc
};
var hxsl_ARead = $hxClasses["hxsl.ARead"] = { __ename__ : ["hxsl","ARead"], __constructs__ : ["AIndex","AOffset"] };
hxsl_ARead.AIndex = function(a) { var $x = ["AIndex",0,a]; $x.__enum__ = hxsl_ARead; $x.toString = $estr; return $x; };
hxsl_ARead.AOffset = function(a,stride,delta) { var $x = ["AOffset",1,a,stride,delta]; $x.__enum__ = hxsl_ARead; $x.toString = $estr; return $x; };
hxsl_ARead.__empty_constructs__ = [];
var hxsl_Flatten = function() {
};
$hxClasses["hxsl.Flatten"] = hxsl_Flatten;
hxsl_Flatten.__name__ = ["hxsl","Flatten"];
hxsl_Flatten.prototype = {
	flatten: function(s,kind,constsToGlobal) {
		this.globals = [];
		this.params = [];
		this.outVars = [];
		if(constsToGlobal) {
			this.consts = [];
			var p = s.funs[0].expr.p;
			var gc = { id : hxsl_Tools.allocVarId(), name : "__consts__", kind : hxsl_VarKind.Global, type : null};
			this.econsts = { e : hxsl_TExprDef.TVar(gc), t : null, p : p};
			var tmp = s.vars.slice();
			var _g = [];
			var _g1 = 0;
			var _g2 = s.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				_g.push(this.mapFun(f,$bind(this,this.mapConsts)));
			}
			s = { name : s.name, vars : tmp, funs : _g};
			var _g11 = 0;
			var _g21 = s.vars;
			while(_g11 < _g21.length) {
				var v = _g21[_g11];
				++_g11;
				if(v.type[1] == 9) {
					this.allocConst(255,p);
				}
			}
			if(this.consts.length > 0) {
				gc.type = this.econsts.t = hxsl_Type.TArray(hxsl_Type.TFloat,hxsl_SizeDecl.SConst(this.consts.length));
				s.vars.push(gc);
			}
		}
		this.varMap = new haxe_ds_ObjectMap();
		this.allocData = new haxe_ds_ObjectMap();
		var _g3 = 0;
		var _g12 = s.vars;
		while(_g3 < _g12.length) {
			var v1 = _g12[_g3];
			++_g3;
			this.gatherVar(v1);
		}
		var prefix;
		switch(kind[1]) {
		case 0:
			prefix = "vertex";
			break;
		case 1:
			prefix = "fragment";
			break;
		default:
			throw new js__$Boot_HaxeError("assert");
		}
		this.pack(prefix + "Globals",hxsl_VarKind.Global,this.globals,hxsl_VecType.VFloat);
		this.pack(prefix + "Params",hxsl_VarKind.Param,this.params,hxsl_VecType.VFloat);
		var allVars = this.globals.concat(this.params);
		var textures = this.packTextures(prefix + "Textures",allVars,hxsl_Type.TSampler2D).concat(this.packTextures(prefix + "TexturesCube",allVars,hxsl_Type.TSamplerCube));
		var _g4 = [];
		var _g13 = 0;
		var _g22 = s.funs;
		while(_g13 < _g22.length) {
			var f1 = _g22[_g13];
			++_g13;
			_g4.push(this.mapFun(f1,$bind(this,this.mapExpr)));
		}
		var _g14 = 0;
		while(_g14 < textures.length) {
			var t = textures[_g14];
			++_g14;
			t.pos >>= 2;
		}
		return { name : s.name, vars : this.outVars, funs : _g4};
	}
	,mapFun: function(f,mapExpr) {
		return { kind : f.kind, ret : f.ret, args : f.args, ref : f.ref, expr : mapExpr(f.expr)};
	}
	,mapExpr: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 1:
			var v = _g[2];
			var a = this.varMap.h[v.__id__];
			if(a == null) {
				e = e;
			} else {
				e = this.access(a,v.type,e.p,hxsl_ARead.AIndex(a));
			}
			break;
		case 16:
			if(_g[2].e[1] == 1) {
				var eindex = _g[3];
				var vp = _g[2].p;
				var v1 = _g[2].e[2];
				var _g1 = eindex.e;
				if(!(_g1[1] == 0 && _g1[2][1] == 2)) {
					var a1 = this.varMap.h[v1.__id__];
					if(a1 == null) {
						e = e;
					} else {
						var _g11 = v1.type;
						if(_g11[1] == 14) {
							var t = _g11[2];
							var stride = this.varSize(t,a1.t);
							if(stride == 0 || (stride & 3) != 0) {
								throw new js__$Boot_HaxeError(new hxsl_Error("Dynamic access to an Array which size is not 4 components-aligned is not allowed",e.p));
							}
							stride >>= 2;
							eindex = this.mapExpr(eindex);
							var toInt = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : vp},[eindex]), t : hxsl_Type.TInt, p : vp};
							e = this.access(a1,t,vp,hxsl_ARead.AOffset(a1,stride,stride == 1?toInt:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpMult,toInt,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(stride)), t : hxsl_Type.TInt, p : vp}), t : hxsl_Type.TInt, p : vp}));
						} else {
							throw new js__$Boot_HaxeError("assert");
						}
					}
				} else {
					e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
				}
			} else {
				e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
			}
			break;
		default:
			e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
		}
		return this.optimize(e);
	}
	,mapConsts: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 0:
			var c = _g[2];
			switch(c[1]) {
			case 2:
				return this.allocConst(c[2],e.p);
			case 3:
				return this.allocConst(c[2],e.p);
			default:
				return e;
			}
			break;
		case 2:
			switch(_g[2][1]) {
			case 0:
				this.allocConst(Math.PI / 180,e.p);
				break;
			case 1:
				this.allocConst(180 / Math.PI,e.p);
				break;
			case 9:
				this.allocConst(1.4426950408889634,e.p);
				break;
			case 10:
				this.allocConst(0.6931471805599453,e.p);
				break;
			case 24:
				this.allocConst(1,e.p);
				break;
			case 52:
				this.allocConsts([1,255,65025,16581375],e.p);
				this.allocConsts([0.00392156862745098,0.00392156862745098,0.00392156862745098,0],e.p);
				break;
			case 53:
				this.allocConsts([1,0.00392156862745098,1.5378700499807768e-005,6.0308629411010845e-008],e.p);
				break;
			case 54:
				this.allocConst(1,e.p);
				this.allocConst(0.5,e.p);
				break;
			case 55:
				this.allocConst(0.5,e.p);
				break;
			default:
			}
			break;
		case 5:
			if(_g[2][1] == 1) {
				if(_g[4].t[1] == 8) {
					this.allocConst(1,e.p);
				}
			}
			break;
		case 8:
			if(_g[2].e[1] == 2) {
				if(_g[2].e[2][1] == 40) {
					if(_g[3].length == 2) {
						if(_g[3][0].e[1] == 1) {
							switch(_g[3][0].e[2].kind[1]) {
							case 0:
								if(_g[3][0].t[1] == 5) {
									if(_g[3][0].t[2] == 3) {
										if(_g[3][0].t[3][1] == 1) {
											if(_g[3][1].e[1] == 0) {
												if(_g[3][1].e[2][1] == 2) {
													if(_g[3][1].e[2][2] == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 1:
								if(_g[3][0].t[1] == 5) {
									if(_g[3][0].t[2] == 3) {
										if(_g[3][0].t[3][1] == 1) {
											if(_g[3][1].e[1] == 0) {
												if(_g[3][1].e[2][1] == 2) {
													if(_g[3][1].e[2][2] == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 2:
								if(_g[3][0].t[1] == 5) {
									if(_g[3][0].t[2] == 3) {
										if(_g[3][0].t[3][1] == 1) {
											if(_g[3][1].e[1] == 0) {
												if(_g[3][1].e[2][1] == 2) {
													if(_g[3][1].e[2][2] == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 3:
								if(_g[3][0].t[1] == 5) {
									if(_g[3][0].t[2] == 3) {
										if(_g[3][0].t[3][1] == 1) {
											if(_g[3][1].e[1] == 0) {
												if(_g[3][1].e[2][1] == 2) {
													if(_g[3][1].e[2][2] == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							default:
							}
						}
					}
				}
			}
			break;
		case 16:
			if(_g[3].e[1] == 0) {
				if(_g[3].e[2][1] == 2) {
					return { e : hxsl_TExprDef.TArray(this.mapConsts(_g[2]),_g[3]), t : e.t, p : e.p};
				} else {
					var _g1 = _g[2].t;
					if(_g1[1] == 14) {
						this.allocConst(this.varSize(_g1[2],hxsl_VecType.VFloat) >> 2,e.p);
					}
				}
			} else {
				var _g2 = _g[2].t;
				if(_g2[1] == 14) {
					this.allocConst(this.varSize(_g2[2],hxsl_VecType.VFloat) >> 2,e.p);
				}
			}
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapConsts));
	}
	,allocConst: function(v,p) {
		var index = this.consts.indexOf(v);
		if(index < 0) {
			index = this.consts.length;
			this.consts.push(v);
		}
		return { e : hxsl_TExprDef.TArray(this.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
	}
	,allocConsts: function(va,p) {
		var _gthis = this;
		var pad = va.length - 1 & 3;
		var index = -1;
		var _g1 = 0;
		var _g = this.consts.length - (va.length - 1);
		while(_g1 < _g) {
			var i = _g1++;
			if(i >> 2 != i + pad >> 2) {
				continue;
			}
			var found = true;
			var _g3 = 0;
			var _g2 = va.length;
			while(_g3 < _g2) {
				var j = _g3++;
				if(this.consts[i + j] != va[j]) {
					found = false;
					break;
				}
			}
			if(found) {
				index = i;
				break;
			}
		}
		if(index < 0) {
			while(this.consts.length >> 2 != this.consts.length + pad >> 2) this.consts.push(0);
			index = this.consts.length;
			var _g4 = 0;
			while(_g4 < va.length) {
				var v = va[_g4];
				++_g4;
				this.consts.push(v);
			}
		}
		switch(va.length) {
		case 1:
			return { e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
		case 2:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec2), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(2,hxsl_VecType.VFloat), p : p};
		case 3:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec3), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 2)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(3,hxsl_VecType.VFloat), p : p};
		case 4:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec4), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 3)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 4)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(4,hxsl_VecType.VFloat), p : p};
		default:
			throw new js__$Boot_HaxeError("assert");
		}
	}
	,mkInt: function(v,pos) {
		return { e : hxsl_TExprDef.TConst(hxsl_Const.CInt(v)), t : hxsl_Type.TInt, p : pos};
	}
	,readIndex: function(a,index,pos) {
		return { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a.g), t : a.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a.pos >> 2) + index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a.t), p : pos};
	}
	,readOffset: function(a,stride,delta,index,pos) {
		var index1 = (a.pos >> 2) + index;
		var offset = index1 == 0?delta:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
		return { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a.g), t : a.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a.t), p : pos};
	}
	,access: function(a,t,pos,acc) {
		switch(t[1]) {
		case 6:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3), t : hxsl_Type.TFun([]), p : pos},[this.access(a,hxsl_Type.TMat3x4,pos,acc)]), t : hxsl_Type.TMat3, p : pos};
		case 7:
			var tmp = { e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat4), t : hxsl_Type.TFun([]), p : pos};
			var tmp1;
			switch(acc[1]) {
			case 0:
				var a1 = acc[2];
				tmp1 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(a1.pos >> 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc[4];
				var a2 = acc[2];
				var index = a2.pos >> 2;
				var offset = index == 0?delta:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp1 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a2.g), t : a2.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a2.t), p : pos};
				break;
			}
			var tmp2;
			switch(acc[1]) {
			case 0:
				var a3 = acc[2];
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a3.g), t : a3.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a3.pos >> 2) + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a3.t), p : pos};
				break;
			case 1:
				var delta1 = acc[4];
				var a4 = acc[2];
				var index1 = (a4.pos >> 2) + 1;
				var offset1 = index1 == 0?delta1:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta1,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a4.g), t : a4.g.type, p : pos},offset1), t : hxsl_Type.TVec(4,a4.t), p : pos};
				break;
			}
			var tmp3;
			switch(acc[1]) {
			case 0:
				var a5 = acc[2];
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a5.g), t : a5.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a5.pos >> 2) + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a5.t), p : pos};
				break;
			case 1:
				var delta2 = acc[4];
				var a6 = acc[2];
				var index2 = (a6.pos >> 2) + 2;
				var offset2 = index2 == 0?delta2:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta2,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a6.g), t : a6.g.type, p : pos},offset2), t : hxsl_Type.TVec(4,a6.t), p : pos};
				break;
			}
			var tmp4;
			switch(acc[1]) {
			case 0:
				var a7 = acc[2];
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a7.g), t : a7.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a7.pos >> 2) + 3)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a7.t), p : pos};
				break;
			case 1:
				var delta3 = acc[4];
				var a8 = acc[2];
				var index3 = (a8.pos >> 2) + 3;
				var offset3 = index3 == 0?delta3:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta3,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index3)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a8.g), t : a8.g.type, p : pos},offset3), t : hxsl_Type.TVec(4,a8.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall(tmp,[tmp1,tmp2,tmp3,tmp4]), t : hxsl_Type.TMat4, p : pos};
		case 8:
			var tmp5 = { e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3x4), t : hxsl_Type.TFun([]), p : pos};
			var tmp6;
			switch(acc[1]) {
			case 0:
				var a9 = acc[2];
				tmp6 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a9.g), t : a9.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(a9.pos >> 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a9.t), p : pos};
				break;
			case 1:
				var delta4 = acc[4];
				var a10 = acc[2];
				var index4 = a10.pos >> 2;
				var offset4 = index4 == 0?delta4:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta4,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index4)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp6 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a10.g), t : a10.g.type, p : pos},offset4), t : hxsl_Type.TVec(4,a10.t), p : pos};
				break;
			}
			var tmp7;
			switch(acc[1]) {
			case 0:
				var a11 = acc[2];
				tmp7 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a11.g), t : a11.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a11.pos >> 2) + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a11.t), p : pos};
				break;
			case 1:
				var delta5 = acc[4];
				var a12 = acc[2];
				var index5 = (a12.pos >> 2) + 1;
				var offset5 = index5 == 0?delta5:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta5,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index5)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp7 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a12.g), t : a12.g.type, p : pos},offset5), t : hxsl_Type.TVec(4,a12.t), p : pos};
				break;
			}
			var tmp8;
			switch(acc[1]) {
			case 0:
				var a13 = acc[2];
				tmp8 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a13.g), t : a13.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt((a13.pos >> 2) + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a13.t), p : pos};
				break;
			case 1:
				var delta6 = acc[4];
				var a14 = acc[2];
				var index6 = (a14.pos >> 2) + 2;
				var offset6 = index6 == 0?delta6:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta6,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index6)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp8 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a14.g), t : a14.g.type, p : pos},offset6), t : hxsl_Type.TVec(4,a14.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall(tmp5,[tmp6,tmp7,tmp8]), t : hxsl_Type.TMat3x4, p : pos};
		case 10:case 11:
			switch(acc[1]) {
			case 0:
				var a15 = acc[2];
				return { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a15.g), t : a15.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(a15.pos >> 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a15.t), p : pos};
			case 1:
				var delta7 = acc[4];
				var a16 = acc[2];
				var index7 = a16.pos >> 2;
				var offset7 = index7 == 0?delta7:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta7,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index7)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				return { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a16.g), t : a16.g.type, p : pos},offset7), t : hxsl_Type.TVec(4,a16.t), p : pos};
			}
			break;
		case 14:
			if(t[3][1] == 0) {
				var t1 = t[2];
				var len = t[3][2];
				var stride = a.size / len | 0;
				var _g = [];
				var _g2 = 0;
				while(_g2 < len) {
					var a17 = new hxsl__$Flatten_Alloc(a.g,a.t,a.pos + stride * _g2++,stride);
					_g.push(this.access(a17,t1,pos,hxsl_ARead.AIndex(a17)));
				}
				return { e : hxsl_TExprDef.TArrayDecl(_g), t : t1, p : pos};
			} else {
				var size = this.varSize(t,a.t);
				if(size <= 4) {
					var k;
					switch(acc[1]) {
					case 0:
						var a18 = acc[2];
						k = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a18.g), t : a18.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(a18.pos >> 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a18.t), p : pos};
						break;
					case 1:
						var delta8 = acc[4];
						var a19 = acc[2];
						var index8 = a19.pos >> 2;
						var offset8 = index8 == 0?delta8:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta8,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index8)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
						k = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a19.g), t : a19.g.type, p : pos},offset8), t : hxsl_Type.TVec(4,a19.t), p : pos};
						break;
					}
					if(size == 4) {
						if((a.pos & 3) != 0) {
							throw new js__$Boot_HaxeError("assert");
						}
						return k;
					} else {
						var sw = [];
						var _g1 = 0;
						while(_g1 < size) sw.push(hxsl_Tools.SWIZ[_g1++ + (a.pos & 3)]);
						return { e : hxsl_TExprDef.TSwiz(k,sw), t : t, p : pos};
					}
				}
				return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
			}
			break;
		default:
			var size1 = this.varSize(t,a.t);
			if(size1 <= 4) {
				var k1;
				switch(acc[1]) {
				case 0:
					var a20 = acc[2];
					k1 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a20.g), t : a20.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(a20.pos >> 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a20.t), p : pos};
					break;
				case 1:
					var delta9 = acc[4];
					var a21 = acc[2];
					var index9 = a21.pos >> 2;
					var offset9 = index9 == 0?delta9:{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta9,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index9)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
					k1 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a21.g), t : a21.g.type, p : pos},offset9), t : hxsl_Type.TVec(4,a21.t), p : pos};
					break;
				}
				if(size1 == 4) {
					if((a.pos & 3) != 0) {
						throw new js__$Boot_HaxeError("assert");
					}
					return k1;
				} else {
					var sw1 = [];
					var _g11 = 0;
					while(_g11 < size1) sw1.push(hxsl_Tools.SWIZ[_g11++ + (a.pos & 3)]);
					return { e : hxsl_TExprDef.TSwiz(k1,sw1), t : t, p : pos};
				}
			}
			return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
		}
	}
	,optimize: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 8:
			if(_g[2].e[1] == 2) {
				if(_g[2].e[2][1] == 50) {
					if(_g[3].length == 1) {
						if(_g[3][0].e[1] == 8) {
							if(_g[3][0].e[2].e[1] == 2) {
								if(_g[3][0].e[2].e[2][1] == 49) {
									var args = _g[3][0].e[3];
									var rem = 0;
									var size = 0;
									while(size < 4) {
										size += this.varSize(args[args.length - 1 - rem].t,hxsl_VecType.VFloat);
										++rem;
									}
									if(size == 4) {
										var _g1 = 0;
										var _g2 = rem;
										while(_g1 < _g2) {
											++_g1;
											args.pop();
										}
										var emat;
										var _g3 = e.e;
										if(_g3[1] == 8) {
											emat = _g3[2];
										} else {
											throw new js__$Boot_HaxeError("assert");
										}
										return { e : hxsl_TExprDef.TCall(emat,args), t : e.t, p : e.p};
									}
								}
							}
						}
					}
				}
			}
			break;
		case 16:
			if(_g[2].e[1] == 17) {
				if(_g[3].e[1] == 0) {
					if(_g[3].e[2][1] == 2) {
						var el = _g[2].e[2];
						var i = _g[3].e[2][2];
						if(i >= 0 && i < el.length) {
							return el[i];
						}
						hxsl_Error.t("Reading outside array bounds",e.p);
					}
				}
			}
			break;
		default:
		}
		return e;
	}
	,packTextures: function(name,vars,t) {
		var alloc = [];
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : t, kind : hxsl_VarKind.Param};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			if(v.type != t) {
				continue;
			}
			var a = new hxsl__$Flatten_Alloc(g,null,alloc.length << 2,1);
			a.v = v;
			this.varMap.set(v,a);
			alloc.push(a);
		}
		g.type = hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(alloc.length));
		if(alloc.length > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return alloc;
	}
	,pack: function(name,kind,vars,t) {
		var alloc = [];
		var apos = 0;
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TVec(0,t), kind : kind};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			switch(v.type[1]) {
			case 10:case 11:
				continue;
				break;
			default:
			}
			var size = this.varSize(v.type,t);
			var best = null;
			var _g2 = 0;
			while(_g2 < alloc.length) {
				var a = alloc[_g2];
				++_g2;
				if(a.v == null && a.size >= size && (best == null || best.size > a.size)) {
					best = a;
				}
			}
			if(best != null) {
				var free = best.size - size;
				if(free > 0) {
					alloc.splice(Lambda.indexOf(alloc,best) + 1,0,new hxsl__$Flatten_Alloc(g,t,best.pos + size,free));
					best.size = size;
				}
				best.v = v;
				this.varMap.set(v,best);
			} else {
				var a1 = new hxsl__$Flatten_Alloc(g,t,apos,size);
				apos += size;
				a1.v = v;
				this.varMap.set(v,a1);
				alloc.push(a1);
				var pad = (4 - size % 4) % 4;
				if(pad > 0) {
					var a2 = new hxsl__$Flatten_Alloc(g,t,apos,pad);
					apos += pad;
					alloc.push(a2);
				}
			}
		}
		g.type = hxsl_Type.TArray(hxsl_Type.TVec(4,t),hxsl_SizeDecl.SConst(apos >> 2));
		if(apos > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return g;
	}
	,varSize: function(v,t) {
		switch(v[1]) {
		case 3:
			if(t == hxsl_VecType.VFloat) {
				return 1;
			} else {
				throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 5:
			var t2 = v[3];
			var n = v[2];
			if(t == t2) {
				return n;
			} else {
				throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 7:
			if(t == hxsl_VecType.VFloat) {
				return 16;
			} else {
				throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 6:case 8:
			if(t == hxsl_VecType.VFloat) {
				return 12;
			} else {
				throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 14:
			if(v[3][1] == 0) {
				return this.varSize(v[2],t) * v[3][2];
			} else {
				throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
		}
	}
	,gatherVar: function(v) {
		var _g = v.type;
		if(_g[1] == 12) {
			var vl = _g[2];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v1 = vl[_g1];
				++_g1;
				this.gatherVar(v1);
			}
		} else {
			switch(v.kind[1]) {
			case 0:
				if(hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.PerObject)) {
					this.params.push(v);
				} else {
					this.globals.push(v);
				}
				break;
			case 2:
				this.params.push(v);
				break;
			default:
				this.outVars.push(v);
			}
		}
	}
	,__class__: hxsl_Flatten
};
var hxsl__$Globals_GlobalSlot_$Impl_$ = {};
$hxClasses["hxsl._Globals.GlobalSlot_Impl_"] = hxsl__$Globals_GlobalSlot_$Impl_$;
hxsl__$Globals_GlobalSlot_$Impl_$.__name__ = ["hxsl","_Globals","GlobalSlot_Impl_"];
hxsl__$Globals_GlobalSlot_$Impl_$._new = function(name) {
	return hxsl_Globals.allocID(name);
};
hxsl__$Globals_GlobalSlot_$Impl_$.toInt = function(this1) {
	return this1;
};
hxsl__$Globals_GlobalSlot_$Impl_$.set = function(this1,globals,v) {
	globals.map.h[this1] = v;
};
hxsl__$Globals_GlobalSlot_$Impl_$.get = function(this1,globals) {
	return globals.map.h[this1];
};
var hxsl_Globals = function() {
	this.map = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Globals"] = hxsl_Globals;
hxsl_Globals.__name__ = ["hxsl","Globals"];
hxsl_Globals.allocID = function(path) {
	if(hxsl_Globals.MAP == null) {
		hxsl_Globals.MAP = new haxe_ds_StringMap();
		hxsl_Globals.ALL = [];
	}
	var _this = hxsl_Globals.MAP;
	var id = __map_reserved[path] != null?_this.getReserved(path):_this.h[path];
	if(id == null) {
		id = hxsl_Globals.ALL.length;
		hxsl_Globals.ALL.push(path);
		var _this1 = hxsl_Globals.MAP;
		if(__map_reserved[path] != null) {
			_this1.setReserved(path,id);
		} else {
			_this1.h[path] = id;
		}
	}
	return id;
};
hxsl_Globals.prototype = {
	set: function(path,v) {
		var key = hxsl_Globals.allocID(path);
		this.map.h[key] = v;
	}
	,get: function(path) {
		var key = hxsl_Globals.allocID(path);
		return this.map.h[key];
	}
	,fastSet: function(id,v) {
		this.map.h[id] = v;
	}
	,fastGet: function(id) {
		return this.map.h[id];
	}
	,__class__: hxsl_Globals
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hxsl_GlslOut = function() {
	this.exprIds = 0;
	this.varNames = new haxe_ds_IntMap();
	this.allNames = new haxe_ds_StringMap();
	this.flipY = true;
};
$hxClasses["hxsl.GlslOut"] = hxsl_GlslOut;
hxsl_GlslOut.__name__ = ["hxsl","GlslOut"];
hxsl_GlslOut.toGlsl = function(s) {
	return new hxsl_GlslOut().run(s);
};
hxsl_GlslOut.prototype = {
	add: function(v) {
		this.buf.b += Std.string(v);
	}
	,ident: function(v) {
		this.buf.b += Std.string(this.varName(v));
	}
	,decl: function(s) {
		var _g = 0;
		var _g1 = this.decls;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d == s) {
				return;
			}
		}
		this.decls.push(s);
	}
	,addType: function(t) {
		switch(t[1]) {
		case 0:
			this.buf.b += "void";
			break;
		case 1:
			this.buf.b += "int";
			break;
		case 2:
			this.buf.b += "bool";
			break;
		case 3:
			this.buf.b += "float";
			break;
		case 4:
			this.buf.b += "string";
			break;
		case 5:
			switch(t[3][1]) {
			case 0:
				this.buf.b += "i";
				break;
			case 1:
				break;
			case 2:
				this.buf.b += "b";
				break;
			}
			this.buf.b += "vec";
			this.buf.b += Std.string(t[2]);
			break;
		case 6:
			this.buf.b += "mat3";
			break;
		case 7:
			this.buf.b += "mat4";
			break;
		case 8:
			this.decl(hxsl_GlslOut.MAT34);
			this.buf.b += "_mat3x4";
			break;
		case 9:
			this.buf.b += "vec";
			this.buf.b += Std.string(t[2]);
			break;
		case 10:
			this.buf.b += "sampler2D";
			break;
		case 11:
			this.buf.b += "samplerCube";
			break;
		case 12:
			var vl = t[2];
			this.buf.b += "struct { ";
			var _g = 0;
			while(_g < vl.length) {
				var v = vl[_g];
				++_g;
				this.addVar(v);
				this.buf.b += ";";
			}
			this.buf.b += " }";
			break;
		case 13:
			this.buf.b += "function";
			break;
		case 14:
			var size = t[3];
			this.addType(t[2]);
			this.buf.b += "[";
			switch(size[1]) {
			case 0:
				this.buf.b += Std.string(size[2]);
				break;
			case 1:
				this.buf.b += Std.string(this.varName(size[2]));
				break;
			}
			this.buf.b += "]";
			break;
		}
	}
	,addVar: function(v) {
		var _g = v.type;
		if(_g[1] == 14) {
			var size = _g[3];
			var old = v.type;
			v.type = _g[2];
			this.addVar(v);
			v.type = old;
			this.buf.b += "[";
			switch(size[1]) {
			case 0:
				this.buf.b += Std.string(size[2]);
				break;
			case 1:
				this.buf.b += Std.string(this.varName(size[2]));
				break;
			}
			this.buf.b += "]";
		} else {
			this.addType(v.type);
			this.buf.b += " ";
			this.buf.b += Std.string(this.varName(v));
		}
	}
	,addValue: function(e,tabs) {
		var _g = e.e;
		if(_g[1] == 4) {
			var name = "val" + this.exprIds++;
			var tmp = this.buf;
			this.buf = new StringBuf();
			this.addType(e.t);
			this.buf.b += " ";
			this.buf.b += Std.string(name);
			this.buf.b += "(void)";
			var el2 = _g[2].slice();
			var last = el2[el2.length - 1];
			el2[el2.length - 1] = { e : hxsl_TExprDef.TReturn(last), t : e.t, p : last.p};
			this.addExpr({ t : hxsl_Type.TVoid, e : hxsl_TExprDef.TBlock(el2), p : e.p},"");
			this.exprValues.push(this.buf.b);
			this.buf = tmp;
			this.buf.b += Std.string(name);
			this.buf.b += "()";
		} else {
			this.addExpr(e,tabs);
		}
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g[1]) {
		case 0:
			var c = _g[2];
			switch(c[1]) {
			case 0:
				this.buf.b += "null";
				break;
			case 1:
				this.buf.b += Std.string(c[2]);
				break;
			case 2:
				this.buf.b += Std.string(c[2]);
				break;
			case 3:
				var str = "" + c[2];
				this.buf.b += Std.string(str);
				if(str.indexOf(".") == -1 && str.indexOf("e") == -1) {
					this.buf.b += ".";
				}
				break;
			case 4:
				this.buf.b += Std.string("\"" + c[2] + "\"");
				break;
			}
			break;
		case 1:
			this.buf.b += Std.string(this.varName(_g[2]));
			break;
		case 2:
			var g = _g[2];
			switch(g[1]) {
			case 33:
				this.decl("vec4 _texture2D( sampler2D t, vec2 v ) { return texture2D(t,vec2(v.x," + (this.flipY?"0.999999-v.y":"v.y") + ")); }");
				break;
			case 50:
				this.decl(hxsl_GlslOut.MAT34);
				break;
			case 52:
				this.decl("vec4 pack( float v ) { vec4 color = fract(v * vec4(1, 255, 255.*255., 255.*255.*255.)); return color - color.yzww * vec4(1. / 255., 1. / 255., 1. / 255., 0.); }");
				break;
			case 53:
				this.decl("float unpack( vec4 color ) { return dot(color,vec4(1., 1. / 255., 1. / (255. * 255.), 1. / (255. * 255. * 255.))); }");
				break;
			case 54:
				this.decl("vec4 packNormal( vec3 v ) { return vec4((v + vec3(1.)) * vec3(0.5),1.); }");
				break;
			case 55:
				this.decl("vec3 unpackNormal( vec4 v ) { return normalize((v.xyz - vec3(0.5)) * vec3(2.)); }");
				break;
			case 56:case 57:case 58:
				this.decl("#extension GL_OES_standard_derivatives:enable");
				break;
			default:
			}
			this.buf.b += Std.string(hxsl_GlslOut.GLOBALS.get(g));
			break;
		case 3:
			this.buf.b += "(";
			this.addValue(_g[2],tabs);
			this.buf.b += ")";
			break;
		case 4:
			var el = _g[2];
			this.buf.b += "{\n";
			var t2 = tabs + "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				this.buf.b += Std.string(t2);
				this.addExpr(e1,t2);
				this.buf.b += ";\n";
			}
			this.buf.b += Std.string(tabs);
			this.buf.b += "}";
			break;
		case 5:
			var e2 = _g[4];
			var e11 = _g[3];
			var op = _g[2];
			var _g2 = e2.t;
			var _g11 = e11.t;
			switch(op[1]) {
			case 1:
				if(_g11[1] == 5) {
					if(_g11[2] == 3) {
						if(_g11[3][1] == 1) {
							if(_g2[1] == 8) {
								this.decl(hxsl_GlslOut.MAT34);
								this.decl("vec3 m3x4mult( vec3 v, _mat3x4 m) { vec4 ve = vec4(v,1.0); return vec3(dot(m.a,ve),dot(m.b,ve),dot(m.c,ve)); }");
								this.buf.b += "m3x4mult(";
								this.addValue(e11,tabs);
								this.buf.b += ",";
								this.addValue(e2,tabs);
								this.buf.b += ")";
							} else {
								this.addValue(e11,tabs);
								this.buf.b += " ";
								this.buf.b += Std.string(hxsl_Printer.opStr(op));
								this.buf.b += " ";
								this.addValue(e2,tabs);
							}
						} else {
							this.addValue(e11,tabs);
							this.buf.b += " ";
							this.buf.b += Std.string(hxsl_Printer.opStr(op));
							this.buf.b += " ";
							this.addValue(e2,tabs);
						}
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 5:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v;
						switch(op[1]) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 6:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v1;
						switch(op[1]) {
						case 5:
							v1 = "equal";
							break;
						case 6:
							v1 = "notEqual";
							break;
						case 7:
							v1 = "greaterThan";
							break;
						case 8:
							v1 = "greaterThanEqual";
							break;
						case 9:
							v1 = "lessThan";
							break;
						case 10:
							v1 = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v1);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 7:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v2;
						switch(op[1]) {
						case 5:
							v2 = "equal";
							break;
						case 6:
							v2 = "notEqual";
							break;
						case 7:
							v2 = "greaterThan";
							break;
						case 8:
							v2 = "greaterThanEqual";
							break;
						case 9:
							v2 = "lessThan";
							break;
						case 10:
							v2 = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v2);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 8:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v3;
						switch(op[1]) {
						case 5:
							v3 = "equal";
							break;
						case 6:
							v3 = "notEqual";
							break;
						case 7:
							v3 = "greaterThan";
							break;
						case 8:
							v3 = "greaterThanEqual";
							break;
						case 9:
							v3 = "lessThan";
							break;
						case 10:
							v3 = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v3);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 9:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v4;
						switch(op[1]) {
						case 5:
							v4 = "equal";
							break;
						case 6:
							v4 = "notEqual";
							break;
						case 7:
							v4 = "greaterThan";
							break;
						case 8:
							v4 = "greaterThanEqual";
							break;
						case 9:
							v4 = "lessThan";
							break;
						case 10:
							v4 = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v4);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 10:
				if(_g11[1] == 5) {
					if(_g2[1] == 5) {
						this.buf.b += Std.string("vec" + _g11[2] + "(");
						var v5;
						switch(op[1]) {
						case 5:
							v5 = "equal";
							break;
						case 6:
							v5 = "notEqual";
							break;
						case 7:
							v5 = "greaterThan";
							break;
						case 8:
							v5 = "greaterThanEqual";
							break;
						case 9:
							v5 = "lessThan";
							break;
						case 10:
							v5 = "lessThanEqual";
							break;
						default:
							throw new js__$Boot_HaxeError("assert");
						}
						this.buf.b += Std.string(v5);
						this.buf.b += "(";
						this.addValue(e11,tabs);
						this.buf.b += ",";
						this.addValue(e2,tabs);
						this.buf.b += "))";
					} else {
						this.addValue(e11,tabs);
						this.buf.b += " ";
						this.buf.b += Std.string(hxsl_Printer.opStr(op));
						this.buf.b += " ";
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e11,tabs);
					this.buf.b += " ";
					this.buf.b += Std.string(hxsl_Printer.opStr(op));
					this.buf.b += " ";
					this.addValue(e2,tabs);
				}
				break;
			case 19:
				this.buf.b += "mod(";
				this.addValue(e11,tabs);
				this.buf.b += ",";
				this.addValue(e2,tabs);
				this.buf.b += ")";
				break;
			default:
				this.addValue(e11,tabs);
				this.buf.b += " ";
				this.buf.b += Std.string(hxsl_Printer.opStr(op));
				this.buf.b += " ";
				this.addValue(e2,tabs);
			}
			break;
		case 6:
			var tmp;
			switch(_g[2][1]) {
			case 0:
				tmp = "++";
				break;
			case 1:
				tmp = "--";
				break;
			case 2:
				tmp = "!";
				break;
			case 3:
				tmp = "-";
				break;
			case 4:
				tmp = "~";
				break;
			}
			this.buf.b += Std.string(tmp);
			this.addValue(_g[3],tabs);
			break;
		case 7:
			var init = _g[3];
			var v6 = _g[2];
			this.locals.h[v6.id] = v6;
			if(init != null) {
				this.buf.b += Std.string(this.varName(v6));
				this.buf.b += " = ";
				this.addValue(init,tabs);
			} else {
				this.buf.b += "/*var*/";
			}
			break;
		case 8:
			if(_g[2].e[1] == 2) {
				switch(_g[2].e[2][1]) {
				case 48:
					if(_g[3].length == 1) {
						var e3 = _g[3][0];
						if(e3.t == hxsl_Type.TMat3x4) {
							this.decl("mat3 _mat3( _mat3x4 v ) { return mat3(v.a.xyz,v.b.xyz,v.c.xyz); }");
							this.buf.b += "_mat3(";
							this.addValue(e3,tabs);
							this.buf.b += ")";
						} else {
							var e4 = _g[2];
							var args = _g[3];
							this.addValue(e4,tabs);
							this.buf.b += "(";
							var first = true;
							var _g3 = 0;
							while(_g3 < args.length) {
								var e5 = args[_g3];
								++_g3;
								if(first) {
									first = false;
								} else {
									this.buf.b += ", ";
								}
								this.addValue(e5,tabs);
							}
							this.buf.b += ")";
						}
					} else {
						var e6 = _g[2];
						var args1 = _g[3];
						this.addValue(e6,tabs);
						this.buf.b += "(";
						var first1 = true;
						var _g4 = 0;
						while(_g4 < args1.length) {
							var e7 = args1[_g4];
							++_g4;
							if(first1) {
								first1 = false;
							} else {
								this.buf.b += ", ";
							}
							this.addValue(e7,tabs);
						}
						this.buf.b += ")";
					}
					break;
				case 51:
					if(_g[3].length == 1) {
						var e8 = _g[3][0];
						this.buf.b += "clamp(";
						this.addValue(e8,tabs);
						this.buf.b += ", 0., 1.)";
					} else {
						var e9 = _g[2];
						var args2 = _g[3];
						this.addValue(e9,tabs);
						this.buf.b += "(";
						var first2 = true;
						var _g5 = 0;
						while(_g5 < args2.length) {
							var e10 = args2[_g5];
							++_g5;
							if(first2) {
								first2 = false;
							} else {
								this.buf.b += ", ";
							}
							this.addValue(e10,tabs);
						}
						this.buf.b += ")";
					}
					break;
				default:
					var args3 = _g[3];
					this.addValue(_g[2],tabs);
					this.buf.b += "(";
					var first3 = true;
					var _g6 = 0;
					while(_g6 < args3.length) {
						var e12 = args3[_g6];
						++_g6;
						if(first3) {
							first3 = false;
						} else {
							this.buf.b += ", ";
						}
						this.addValue(e12,tabs);
					}
					this.buf.b += ")";
				}
			} else {
				var args4 = _g[3];
				this.addValue(_g[2],tabs);
				this.buf.b += "(";
				var first4 = true;
				var _g7 = 0;
				while(_g7 < args4.length) {
					var e13 = args4[_g7];
					++_g7;
					if(first4) {
						first4 = false;
					} else {
						this.buf.b += ", ";
					}
					this.addValue(e13,tabs);
				}
				this.buf.b += ")";
			}
			break;
		case 9:
			var regs = _g[3];
			var e14 = _g[2];
			if(e14.t[1] == 3) {
				var _g8 = 0;
				while(_g8 < regs.length) {
					var r = regs[_g8];
					++_g8;
					if(r != hxsl_Component.X) {
						throw new js__$Boot_HaxeError("assert");
					}
				}
				switch(regs.length) {
				case 1:
					this.addValue(e14,tabs);
					break;
				case 2:
					this.decl("vec2 _vec2( float v ) { return vec2(v,v); }");
					this.buf.b += "_vec2(";
					this.addValue(e14,tabs);
					this.buf.b += ")";
					break;
				case 3:
					this.decl("vec3 _vec3( float v ) { return vec3(v,v,v); }");
					this.buf.b += "_vec3(";
					this.addValue(e14,tabs);
					this.buf.b += ")";
					break;
				case 4:
					this.decl("vec4 _vec4( float v ) { return vec4(v,v,v,v); }");
					this.buf.b += "_vec4(";
					this.addValue(e14,tabs);
					this.buf.b += ")";
					break;
				default:
					throw new js__$Boot_HaxeError("assert");
				}
			} else {
				this.addValue(e14,tabs);
				this.buf.b += ".";
				var _g9 = 0;
				while(_g9 < regs.length) {
					var r1 = regs[_g9];
					++_g9;
					var tmp1;
					switch(r1[1]) {
					case 0:
						tmp1 = "x";
						break;
					case 1:
						tmp1 = "y";
						break;
					case 2:
						tmp1 = "z";
						break;
					case 3:
						tmp1 = "w";
						break;
					}
					this.buf.b += Std.string(tmp1);
				}
			}
			break;
		case 10:
			var eelse = _g[4];
			this.buf.b += "if( ";
			this.addValue(_g[2],tabs);
			this.buf.b += ") ";
			this.addExpr(_g[3],tabs);
			if(eelse != null) {
				this.buf.b += " else ";
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buf.b += "discard";
			break;
		case 12:
			var e15 = _g[2];
			if(e15 == null) {
				this.buf.b += "return";
			} else {
				this.buf.b += "return ";
				this.addValue(e15,tabs);
			}
			break;
		case 13:
			this.buf.b += "for(...)";
			break;
		case 14:
			this.buf.b += "continue";
			break;
		case 15:
			this.buf.b += "break";
			break;
		case 16:
			this.addValue(_g[2],tabs);
			this.buf.b += "[";
			this.addValue(_g[3],tabs);
			this.buf.b += "]";
			break;
		case 17:
			var el1 = _g[2];
			this.buf.b += "[";
			var first5 = true;
			var _g10 = 0;
			while(_g10 < el1.length) {
				var e16 = el1[_g10];
				++_g10;
				if(first5) {
					first5 = false;
				} else {
					this.buf.b += ", ";
				}
				this.addValue(e16,tabs);
			}
			this.buf.b += "]";
			break;
		}
	}
	,varName: function(v) {
		if(v.kind == hxsl_VarKind.Output) {
			if(this.isVertex) {
				return "gl_Position";
			} else {
				return "gl_FragColor";
			}
		}
		var n = this.varNames.h[v.id];
		if(n != null) {
			return n;
		}
		n = v.name;
		var _this = hxsl_GlslOut.KWDS;
		if(__map_reserved[n] != null?_this.existsReserved(n):_this.h.hasOwnProperty(n)) {
			n = "_" + n;
		}
		var _this1 = this.allNames;
		if(__map_reserved[n] != null?_this1.existsReserved(n):_this1.h.hasOwnProperty(n)) {
			var k = 2;
			n += "_";
			while(true) {
				var _this2 = this.allNames;
				var key = n + k;
				if(!(__map_reserved[key] != null?_this2.existsReserved(key):_this2.h.hasOwnProperty(key))) {
					break;
				}
				++k;
			}
			n += k;
		}
		this.varNames.h[v.id] = n;
		var value = v.id;
		var _this3 = this.allNames;
		if(__map_reserved[n] != null) {
			_this3.setReserved(n,value);
		} else {
			_this3.h[n] = value;
		}
		return n;
	}
	,run: function(s) {
		this.locals = new haxe_ds_IntMap();
		this.decls = [];
		this.buf = new StringBuf();
		this.exprValues = [];
		this.decls.push("#version 100");
		this.decls.push("precision mediump float;");
		if(s.funs.length != 1) {
			throw new js__$Boot_HaxeError("assert");
		}
		var f = s.funs[0];
		this.isVertex = f.kind == hxsl_FunctionKind.Vertex;
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			switch(v.kind[1]) {
			case 0:case 2:
				this.buf.b += "uniform ";
				break;
			case 1:
				this.buf.b += "attribute ";
				break;
			case 3:
				this.buf.b += "varying ";
				break;
			case 4:
				break;
			case 5:case 6:
				continue;
				break;
			}
			if(v.qualifiers != null) {
				var _g3 = 0;
				var _g4 = v.qualifiers;
				while(_g3 < _g4.length) {
					var q = _g4[_g3];
					++_g3;
					if(q[1] == 6) {
						switch(q[2][1]) {
						case 0:
							this.buf.b += "lowp ";
							break;
						case 1:
							this.buf.b += "mediump ";
							break;
						case 2:
							this.buf.b += "highp ";
							break;
						}
					}
				}
			}
			this.addVar(v);
			this.buf.b += ";\n";
		}
		this.buf.b += "\n";
		var tmp = this.buf;
		this.buf = new StringBuf();
		this.buf.b += "void main(void) {\n";
		var _g2 = f.expr.e;
		if(_g2[1] == 4) {
			var el = _g2[2];
			var _g5 = 0;
			while(_g5 < el.length) {
				var e = el[_g5];
				++_g5;
				this.buf.b += "\t";
				this.addExpr(e,"\t");
				this.buf.b += ";\n";
			}
		} else {
			this.addExpr(f.expr,"");
		}
		this.buf.b += "}";
		this.exprValues.push(this.buf.b);
		this.buf = tmp;
		var tmp1 = this.locals.iterator();
		while(tmp1.hasNext()) {
			this.addVar(tmp1.next());
			this.buf.b += ";\n";
		}
		this.buf.b += "\n";
		var _g11 = 0;
		var _g21 = this.exprValues;
		while(_g11 < _g21.length) {
			var e1 = _g21[_g11];
			++_g11;
			this.buf.b += Std.string(e1);
			this.buf.b += "\n\n";
		}
		this.decls.push(this.buf.b);
		this.buf = null;
		return this.decls.join("\n");
	}
	,__class__: hxsl_GlslOut
};
var hxsl__$Linker_AllocatedVar = function() {
};
$hxClasses["hxsl._Linker.AllocatedVar"] = hxsl__$Linker_AllocatedVar;
hxsl__$Linker_AllocatedVar.__name__ = ["hxsl","_Linker","AllocatedVar"];
hxsl__$Linker_AllocatedVar.prototype = {
	__class__: hxsl__$Linker_AllocatedVar
};
var hxsl__$Linker_ShaderInfos = function(n,v) {
	this.name = n;
	this.vertex = v;
	this.processed = new haxe_ds_IntMap();
	this.usedFunctions = [];
	this.read = new haxe_ds_IntMap();
	this.write = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Linker.ShaderInfos"] = hxsl__$Linker_ShaderInfos;
hxsl__$Linker_ShaderInfos.__name__ = ["hxsl","_Linker","ShaderInfos"];
hxsl__$Linker_ShaderInfos.prototype = {
	__class__: hxsl__$Linker_ShaderInfos
};
var hxsl_Linker = function() {
	this.debugDepth = 0;
};
$hxClasses["hxsl.Linker"] = hxsl_Linker;
hxsl_Linker.__name__ = ["hxsl","Linker"];
hxsl_Linker.prototype = {
	debug: function(msg,pos) {
	}
	,error: function(msg,p) {
		return hxsl_Error.t(msg,p);
	}
	,mergeVar: function(path,v,v2,p) {
		switch(v.kind[1]) {
		case 0:case 1:case 3:case 4:case 5:
			break;
		case 2:case 6:
			throw new js__$Boot_HaxeError("assert");
			break;
		}
		if(v.kind != v2.kind && v.kind != hxsl_VarKind.Local && v2.kind != hxsl_VarKind.Local) {
			this.error("'" + path + "' kind does not match : " + Std.string(v.kind) + " should be " + Std.string(v2.kind),p);
		}
		var _g1 = v2.type;
		var _g2 = v.type;
		if(_g2[1] == 12) {
			if(_g1[1] == 12) {
				var fl1 = _g2[2];
				var fl2 = _g1[2];
				var _g11 = 0;
				while(_g11 < fl1.length) {
					var f1 = fl1[_g11];
					++_g11;
					var ft = null;
					var _g21 = 0;
					while(_g21 < fl2.length) {
						var f2 = fl2[_g21];
						++_g21;
						if(f1.name == f2.name) {
							ft = f2;
							break;
						}
					}
					if(ft == null) {
						fl2.push(this.allocVar(f1,p).v);
					} else {
						this.mergeVar(path + "." + ft.name,f1,ft,p);
					}
				}
			} else if(!Type.enumEq(v.type,v2.type)) {
				this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
			}
		} else if(!Type.enumEq(v.type,v2.type)) {
			this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
		}
	}
	,allocVar: function(v,p,path,parent) {
		if(v.parent != null && parent == null) {
			parent = this.allocVar(v.parent,p);
			var p1 = parent.v;
			path = p1.name;
			p1 = p1.parent;
			while(p1 != null) {
				path = p1.name + "." + path;
				p1 = p1.parent;
			}
		}
		var key = path == null?v.name:path + "." + v.name;
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				if(q[1] == 4) {
					key = q[2];
				}
			}
		}
		var _this = this.varMap;
		var v2 = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		var vname = v.name;
		if(v2 != null) {
			var _g2 = 0;
			var _g11 = v2.merged;
			while(_g2 < _g11.length) {
				var vm = _g11[_g2];
				++_g2;
				if(vm == v) {
					return v2;
				}
			}
			var tmp;
			var tmp1;
			if(!(v.kind == hxsl_VarKind.Param && !hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Shared) || v.kind == hxsl_VarKind.Function || v.kind == hxsl_VarKind.Var && hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Private))) {
				var v1 = v2.v;
				if(!(v1.kind == hxsl_VarKind.Param && !hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Shared) || v1.kind == hxsl_VarKind.Function)) {
					if(v1.kind == hxsl_VarKind.Var) {
						tmp1 = hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Private);
					} else {
						tmp1 = false;
					}
				} else {
					tmp1 = true;
				}
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				if(v.kind == hxsl_VarKind.Param) {
					tmp = v2.v.kind == hxsl_VarKind.Param;
				} else {
					tmp = false;
				}
			} else {
				tmp = true;
			}
			if(tmp) {
				var k = 2;
				while(true) {
					var _this1 = this.varMap;
					var key1 = key + k;
					var a = __map_reserved[key1] != null?_this1.getReserved(key1):_this1.h[key1];
					if(a == null) {
						break;
					}
					var _g3 = 0;
					var _g12 = a.merged;
					while(_g3 < _g12.length) {
						var vm1 = _g12[_g3];
						++_g3;
						if(vm1 == v) {
							return a;
						}
					}
					++k;
				}
				vname += k;
				key += k;
			} else {
				v2.merged.push(v);
				this.mergeVar(key,v,v2.v,p);
				this.varIdMap.h[v.id] = v2.id;
				return v2;
			}
		}
		var vid = this.allVars.length + 1;
		var v21 = { id : vid, name : vname, type : v.type, kind : v.kind == hxsl_VarKind.Output?hxsl_VarKind.Local:v.kind, qualifiers : v.qualifiers, parent : parent == null?null:parent.v};
		var a1 = new hxsl__$Linker_AllocatedVar();
		a1.v = v21;
		a1.merged = [v];
		a1.path = key;
		a1.id = vid;
		a1.parent = parent;
		a1.instanceIndex = this.curInstance;
		this.allVars.push(a1);
		var _this2 = this.varMap;
		if(__map_reserved[key] != null) {
			_this2.setReserved(key,a1);
		} else {
			_this2.h[key] = a1;
		}
		var _g4 = v21.type;
		if(_g4[1] == 12) {
			var vl = _g4[2];
			var _g5 = [];
			var _g13 = 0;
			while(_g13 < vl.length) {
				var v3 = vl[_g13];
				++_g13;
				_g5.push(this.allocVar(v3,p,key,a1).v);
			}
			v21.type = hxsl_Type.TStruct(_g5);
		}
		return a1;
	}
	,mapExprVar: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 1:
			var v = _g[2];
			if(!this.locals.h.hasOwnProperty(v.id)) {
				var v1 = this.allocVar(v,e.p);
				if(this.curShader != null && !this.curShader.write.h.hasOwnProperty(v1.id)) {
					this.curShader.read.h[v1.id] = v1;
					if(this.curShader.vertex == null && v1.v.kind == hxsl_VarKind.Var) {
						this.curShader.vertex = false;
					}
				}
				return { e : hxsl_TExprDef.TVar(v1.v), t : v1.v.type, p : e.p};
			}
			break;
		case 5:
			var e2 = _g[4];
			var e1 = _g[3];
			var op = _g[2];
			var _g1 = e1.e;
			switch(op[1]) {
			case 4:
				switch(_g1[1]) {
				case 1:
					var v2 = _g1[2];
					if(!this.locals.h.hasOwnProperty(v2.id)) {
						var e21 = this.mapExprVar(e2);
						var v3 = this.allocVar(v2,e1.p);
						if(this.curShader != null) {
							this.curShader.write.h[v3.id] = v3;
						}
						return { e : hxsl_TExprDef.TBinop(op,{ e : hxsl_TExprDef.TVar(v3.v), t : v3.v.type, p : e.p},e21), t : e.t, p : e.p};
					} else {
						var v4 = _g1[2];
						if(!this.locals.h.hasOwnProperty(v4.id)) {
							var e11 = this.mapExprVar(e1);
							var e22 = this.mapExprVar(e2);
							var v5 = this.allocVar(v4,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v5.id] = v5;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e22), t : e.t, p : e.p};
						}
					}
					break;
				case 9:
					if(_g1[2].e[1] == 1) {
						var v6 = _g1[2].e[2];
						if(!this.locals.h.hasOwnProperty(v6.id)) {
							var e12 = this.mapExprVar(e1);
							var e23 = this.mapExprVar(e2);
							var v7 = this.allocVar(v6,e12.p);
							if(this.curShader != null) {
								this.curShader.write.h[v7.id] = v7;
							}
							return { e : hxsl_TExprDef.TBinop(op,e12,e23), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			case 20:
				switch(_g1[1]) {
				case 1:
					var v8 = _g1[2];
					if(!this.locals.h.hasOwnProperty(v8.id)) {
						var e13 = this.mapExprVar(e1);
						var e24 = this.mapExprVar(e2);
						var v9 = this.allocVar(v8,e13.p);
						if(this.curShader != null) {
							this.curShader.write.h[v9.id] = v9;
						}
						return { e : hxsl_TExprDef.TBinop(op,e13,e24), t : e.t, p : e.p};
					}
					break;
				case 9:
					if(_g1[2].e[1] == 1) {
						var v10 = _g1[2].e[2];
						if(!this.locals.h.hasOwnProperty(v10.id)) {
							var e14 = this.mapExprVar(e1);
							var e25 = this.mapExprVar(e2);
							var v11 = this.allocVar(v10,e14.p);
							if(this.curShader != null) {
								this.curShader.write.h[v11.id] = v11;
							}
							return { e : hxsl_TExprDef.TBinop(op,e14,e25), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			default:
			}
			break;
		case 7:
			this.locals.h[_g[2].id] = true;
			break;
		case 11:
			if(this.curShader != null) {
				this.curShader.vertex = false;
				this.curShader.hasDiscard = true;
			}
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapExprVar));
	}
	,addShader: function(name,vertex,e,p) {
		var s = new hxsl__$Linker_ShaderInfos(name,vertex);
		this.curShader = s;
		s.priority = p;
		s.body = this.mapExprVar(e);
		this.shaders.push(s);
		this.curShader = null;
		return s;
	}
	,sortByPriorityDesc: function(s1,s2) {
		return s2.priority - s1.priority;
	}
	,buildDependency: function(s,v,isWritten) {
		var found = !isWritten;
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var parent = _g1[_g];
			++_g;
			if(parent == s) {
				found = true;
				continue;
			} else if(!found) {
				continue;
			}
			if(!parent.write.h.hasOwnProperty(v.id)) {
				continue;
			}
			if(s.vertex && parent.vertex == false) {
				continue;
			}
			s.deps.set(parent,true);
			this.debugDepth++;
			this.initDependencies(parent);
			this.debugDepth--;
			if(!parent.read.h.hasOwnProperty(v.id)) {
				return;
			}
		}
		if(v.v.kind == hxsl_VarKind.Var) {
			this.error("Variable " + v.path + " required by " + s.name + " is missing initializer",null);
		}
	}
	,initDependencies: function(s) {
		if(s.deps != null) {
			return;
		}
		s.deps = new haxe_ds_ObjectMap();
		var tmp = s.read.iterator();
		while(tmp.hasNext()) {
			var r = tmp.next();
			this.buildDependency(s,r,s.write.h.hasOwnProperty(r.id));
		}
		if(s.vertex == null) {
			var tmp1 = s.deps.keys();
			while(tmp1.hasNext()) if(tmp1.next().vertex == false) {
				s.vertex = false;
				break;
			}
		}
		if(s.vertex) {
			var tmp2 = s.deps.keys();
			while(tmp2.hasNext()) {
				var d = tmp2.next();
				if(d.vertex == null) {
					d.vertex = true;
				}
			}
		}
	}
	,collect: function(cur,out,vertex) {
		if(cur.onStack) {
			this.error("Loop in shader dependencies (" + cur.name + ")",null);
		}
		if(cur.marked == vertex) {
			return;
		}
		cur.marked = vertex;
		cur.onStack = true;
		var _g = [];
		var tmp = cur.deps.keys();
		while(tmp.hasNext()) _g.push(tmp.next());
		_g.sort($bind(this,this.sortByPriorityDesc));
		var _g1 = 0;
		while(_g1 < _g.length) {
			var d = _g[_g1];
			++_g1;
			this.collect(d,out,vertex);
		}
		if(cur.vertex == null) {
			cur.vertex = vertex;
		}
		if(cur.vertex == vertex) {
			out.push(cur);
		}
		cur.onStack = false;
	}
	,uniqueLocals: function(expr,locals) {
		var _g = expr.e;
		switch(_g[1]) {
		case 4:
			var el = _g[2];
			var _g1 = new haxe_ds_StringMap();
			var tmp = locals.keys();
			while(tmp.hasNext()) {
				var k = tmp.next();
				if(__map_reserved[k] != null) {
					_g1.setReserved(k,true);
				} else {
					_g1.h[k] = true;
				}
			}
			var _g11 = 0;
			while(_g11 < el.length) {
				var e = el[_g11];
				++_g11;
				this.uniqueLocals(e,_g1);
			}
			break;
		case 7:
			var v = _g[2];
			var key = v.name;
			if(__map_reserved[key] != null?locals.existsReserved(key):locals.h.hasOwnProperty(key)) {
				var k1 = 2;
				while(true) {
					var key1 = v.name + k1;
					if(!(__map_reserved[key1] != null?locals.existsReserved(key1):locals.h.hasOwnProperty(key1))) {
						break;
					}
					++k1;
				}
				v.name += k1;
			}
			var key2 = v.name;
			if(__map_reserved[key2] != null) {
				locals.setReserved(key2,true);
			} else {
				locals.h[key2] = true;
			}
			break;
		default:
			var f = $bind(this,this.uniqueLocals);
			var a2 = locals;
			hxsl_Tools.iter(expr,function(a1) {
				f(a1,a2);
			});
		}
	}
	,link: function(shadersData,outVars) {
		var _gthis = this;
		this.varMap = new haxe_ds_StringMap();
		this.varIdMap = new haxe_ds_IntMap();
		this.allVars = [];
		this.shaders = [];
		this.locals = new haxe_ds_IntMap();
		var dupShaders = new haxe_ds_ObjectMap();
		var _g = [];
		var _g1 = 0;
		while(_g1 < shadersData.length) {
			var s = shadersData[_g1];
			++_g1;
			var s1 = s;
			var sreal = s;
			if(dupShaders.h.__keys__[s.__id__] != null) {
				s1 = hxsl_Clone.shaderData(s);
			}
			dupShaders.set(s1,sreal);
			_g.push(s1);
		}
		this.curInstance = 0;
		var _g11 = 0;
		while(_g11 < _g.length) {
			var s2 = _g[_g11];
			++_g11;
			var _g2 = 0;
			var _g3 = s2.vars;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				this.allocVar(v,null);
			}
			var _g21 = 0;
			var _g31 = s2.funs;
			while(_g21 < _g31.length) {
				var f = _g31[_g21];
				++_g21;
				this.allocVar(f.ref,f.expr.p).kind = f.kind;
			}
			this.curInstance++;
		}
		var priority = 0;
		var _g12 = 0;
		while(_g12 < _g.length) {
			var s3 = _g[_g12];
			++_g12;
			var _g22 = 0;
			var _g32 = s3.funs;
			while(_g22 < _g32.length) {
				var f1 = _g32[_g22];
				++_g22;
				var v1 = this.allocVar(f1.ref,f1.expr.p);
				if(v1.kind == null) {
					throw new js__$Boot_HaxeError("assert");
				}
				switch(v1.kind[1]) {
				case 0:case 1:
					this.addShader(s3.name + "." + (v1.kind == hxsl_FunctionKind.Vertex?"vertex":"fragment"),v1.kind == hxsl_FunctionKind.Vertex,f1.expr,priority);
					break;
				case 2:
					var status;
					switch(f1.ref.name) {
					case "__init__fragment":
						status = false;
						break;
					case "__init__vertex":
						status = true;
						break;
					default:
						status = null;
					}
					var _g5 = f1.expr.e;
					if(_g5[1] == 4) {
						var el = _g5[2];
						var index = 0;
						var priority1 = -el.length;
						var _g51 = 0;
						while(_g51 < el.length) {
							var e = el[_g51];
							++_g51;
							this.addShader(s3.name + "." + f1.ref.name + index++,status,e,priority1++);
						}
					} else {
						this.addShader(s3.name + "." + f1.ref.name,status,f1.expr,-1);
					}
					break;
				case 3:
					throw new js__$Boot_HaxeError("Unexpected helper function in linker " + v1.v.name);
					break;
				}
			}
			++priority;
		}
		this.shaders.sort($bind(this,this.sortByPriorityDesc));
		var entry = new hxsl__$Linker_ShaderInfos("<entry>",false);
		entry.deps = new haxe_ds_ObjectMap();
		var _g13 = 0;
		while(_g13 < outVars.length) {
			var outVar = outVars[_g13];
			++_g13;
			var _this = this.varMap;
			var v2 = __map_reserved[outVar] != null?_this.getReserved(outVar):_this.h[outVar];
			if(v2 == null) {
				throw new js__$Boot_HaxeError("Variable not found " + outVar);
			}
			v2.v.kind = hxsl_VarKind.Output;
			this.buildDependency(entry,v2,false);
		}
		var _g14 = 0;
		var _g23 = this.shaders;
		while(_g14 < _g23.length) {
			var s4 = _g23[_g14];
			++_g14;
			if(s4.hasDiscard) {
				this.initDependencies(s4);
				entry.deps.set(s4,true);
			}
		}
		var _g15 = 0;
		var _g24 = this.shaders;
		while(_g15 < _g24.length) {
			var s5 = _g24[_g15];
			++_g15;
			if(s5.vertex != null) {
				continue;
			}
			var onlyParams = true;
			var tmp = s5.read.iterator();
			while(tmp.hasNext()) if(tmp.next().v.kind != hxsl_VarKind.Param) {
				onlyParams = false;
				break;
			}
			if(onlyParams) {
				s5.vertex = false;
			}
		}
		var v3 = [];
		var f2 = [];
		this.collect(entry,v3,true);
		this.collect(entry,f2,false);
		if(f2.pop() != entry) {
			throw new js__$Boot_HaxeError("assert");
		}
		var _g16 = 0;
		var _g25 = this.shaders;
		while(_g16 < _g25.length) {
			var s6 = _g25[_g16];
			++_g16;
			s6.marked = null;
		}
		var _g17 = 0;
		var _g26 = v3.concat(f2);
		while(_g17 < _g26.length) {
			var s7 = _g26[_g17];
			++_g17;
			var tmp1 = s7.deps.keys();
			while(tmp1.hasNext()) {
				var d = tmp1.next();
				if(d.marked == null) {
					this.error(d.name + " needed by " + s7.name + " is unreachable",null);
				}
			}
			s7.marked = true;
		}
		var outVars1 = [];
		var varMap = new haxe_ds_IntMap();
		var addVar = null;
		addVar = function(v4) {
			if(varMap.h.hasOwnProperty(v4.id)) {
				return;
			}
			varMap.h[v4.id] = true;
			if(v4.v.parent != null) {
				addVar(v4.parent);
			} else {
				outVars1.push(v4.v);
			}
		};
		var addVar1 = addVar;
		var _g18 = 0;
		var _g27 = v3.concat(f2);
		while(_g18 < _g27.length) {
			var s8 = _g27[_g18];
			++_g18;
			var tmp2 = s8.read.iterator();
			while(tmp2.hasNext()) addVar1(tmp2.next());
			var tmp3 = s8.write.iterator();
			while(tmp3.hasNext()) addVar1(tmp3.next());
		}
		var cleanVar = null;
		cleanVar = function(v5) {
			var _g19 = v5.type;
			if(_g19[1] == 12) {
				var vl = _g19[2];
				if(v5.kind != hxsl_VarKind.Input) {
					var vout = [];
					var _g110 = 0;
					while(_g110 < vl.length) {
						var v6 = vl[_g110];
						++_g110;
						if(varMap.h.hasOwnProperty(v6.id)) {
							cleanVar(v6);
							vout.push(v6);
						}
					}
					v5.type = hxsl_Type.TStruct(vout);
				}
			}
		};
		var cleanVar1 = cleanVar;
		var _g111 = 0;
		while(_g111 < outVars1.length) {
			var v7 = outVars1[_g111];
			++_g111;
			cleanVar1(v7);
		}
		var build = function(kind,name,a) {
			var v8 = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TFun([{ ret : hxsl_Type.TVoid, args : []}]), kind : hxsl_VarKind.Function};
			outVars1.push(v8);
			var exprs = [];
			var _g112 = 0;
			while(_g112 < a.length) {
				var s9 = a[_g112];
				++_g112;
				var _g28 = s9.body.e;
				if(_g28[1] == 4) {
					var el1 = _g28[2];
					var _g29 = 0;
					while(_g29 < el1.length) {
						var e1 = el1[_g29];
						++_g29;
						exprs.push(e1);
					}
				} else {
					exprs.push(s9.body);
				}
			}
			var expr = { e : hxsl_TExprDef.TBlock(exprs), t : hxsl_Type.TVoid, p : exprs.length == 0?null:exprs[0].p};
			_gthis.uniqueLocals(expr,new haxe_ds_StringMap());
			return { kind : kind, ref : v8, ret : hxsl_Type.TVoid, args : [], expr : expr};
		};
		var funs = [build(hxsl_FunctionKind.Vertex,"vertex",v3),build(hxsl_FunctionKind.Fragment,"fragment",f2)];
		var tmp4 = dupShaders.keys();
		while(tmp4.hasNext()) {
			var s10 = tmp4.next();
			var sreal1 = dupShaders.h[s10.__id__];
			if(s10 == sreal1) {
				continue;
			}
			var _g210 = 0;
			var _g113 = s10.vars.length;
			while(_g210 < _g113) {
				var i = _g210++;
				this.allocVar(s10.vars[i],null).merged.unshift(sreal1.vars[i]);
			}
		}
		return { name : "out", vars : outVars1, funs : funs};
	}
	,__class__: hxsl_Linker
};
var hxsl_Printer = function(varId) {
	if(varId == null) {
		varId = false;
	}
	this.varId = varId;
};
$hxClasses["hxsl.Printer"] = hxsl_Printer;
hxsl_Printer.__name__ = ["hxsl","Printer"];
hxsl_Printer.opStr = function(op) {
	switch(op[1]) {
	case 0:
		return "+";
	case 1:
		return "*";
	case 2:
		return "/";
	case 3:
		return "-";
	case 4:
		return "=";
	case 5:
		return "==";
	case 6:
		return "!=";
	case 7:
		return ">";
	case 8:
		return ">=";
	case 9:
		return "<";
	case 10:
		return "<=";
	case 11:
		return "&";
	case 12:
		return "|";
	case 13:
		return "^";
	case 14:
		return "&&";
	case 15:
		return "||";
	case 16:
		return "<<";
	case 17:
		return ">>";
	case 18:
		return ">>>";
	case 19:
		return "%";
	case 20:
		return hxsl_Printer.opStr(op[2]) + "=";
	case 21:
		return "...";
	case 22:
		return "=>";
	}
};
hxsl_Printer.toString = function(e,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).exprString(e);
};
hxsl_Printer.shaderToString = function(s,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).shaderString(s);
};
hxsl_Printer.check = function(s,from) {
	try {
		var vars = new haxe_ds_IntMap();
		var regVars = [];
		var regVar = null;
		regVar = function(v,reg) {
			if(reg) {
				if(vars.h.hasOwnProperty(v.id)) {
					throw new js__$Boot_HaxeError("Duplicate var " + v.id);
				}
				vars.h[v.id] = v;
				regVars.push(v);
			} else {
				vars.remove(v.id);
			}
			var _g = v.type;
			if(_g[1] == 12) {
				var vl = _g[2];
				var _g1 = 0;
				while(_g1 < vl.length) {
					var v1 = vl[_g1];
					++_g1;
					regVar(v1,reg);
				}
			}
		};
		var regVar1 = regVar;
		var checkExpr = null;
		checkExpr = function(e) {
			var _g2 = e.e;
			switch(_g2[1]) {
			case 1:
				var v2 = _g2[2];
				if(!vars.h.hasOwnProperty(v2.id)) {
					throw new js__$Boot_HaxeError("Unbound var " + v2.name + "@" + v2.id);
				}
				break;
			case 4:
				var el = _g2[2];
				var old = regVars;
				regVars = [];
				var _g3 = 0;
				while(_g3 < el.length) {
					var e1 = el[_g3];
					++_g3;
					checkExpr(e1);
				}
				var _g4 = 0;
				while(_g4 < regVars.length) {
					var v3 = regVars[_g4];
					++_g4;
					regVar1(v3,false);
				}
				regVars = old;
				break;
			case 7:
				var init = _g2[3];
				if(init != null) {
					checkExpr(init);
				}
				regVar1(_g2[2],true);
				break;
			case 13:
				var loop = _g2[4];
				var it = _g2[3];
				var v4 = _g2[2];
				checkExpr(it);
				regVar1(v4,true);
				checkExpr(loop);
				regVar1(v4,false);
				break;
			default:
				hxsl_Tools.iter(e,checkExpr);
			}
		};
		var checkExpr1 = checkExpr;
		var _g5 = 0;
		var _g11 = s.vars;
		while(_g5 < _g11.length) {
			var v5 = _g11[_g5];
			++_g5;
			regVar1(v5,true);
		}
		var _g6 = 0;
		var _g12 = s.funs;
		while(_g6 < _g12.length) {
			var f = _g12[_g6];
			++_g6;
			var _g21 = 0;
			var _g31 = f.args;
			while(_g21 < _g31.length) {
				var v6 = _g31[_g21];
				++_g21;
				regVar1(v6,true);
			}
			checkExpr1(f.expr);
			var _g22 = 0;
			var _g32 = f.args;
			while(_g22 < _g32.length) {
				var v7 = _g32[_g22];
				++_g22;
				regVar1(v7,false);
			}
		}
	} catch( e2 ) {
		if (e2 instanceof js__$Boot_HaxeError) e2 = e2.val;
		if( js_Boot.__instanceof(e2,String) ) {
			var msg = e2 + "\n    in\n" + hxsl_Printer.shaderToString(s,true);
			if(from != null) {
				var _g13 = [];
				var _g23 = 0;
				while(_g23 < from.length) {
					var s1 = from[_g23];
					++_g23;
					_g13.push(hxsl_Printer.shaderToString(s1,true));
				}
				msg += "\n    from\n\n" + _g13.join("\n\n");
			}
			throw new js__$Boot_HaxeError(msg);
		} else throw(e2);
	}
};
hxsl_Printer.prototype = {
	add: function(v) {
		this.buffer.b += Std.string(v);
	}
	,shaderString: function(s) {
		this.buffer = new StringBuf();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.addVar(v,hxsl_VarKind.Var);
			this.buffer.b += ";\n";
		}
		if(s.vars.length > 0) {
			this.buffer.b += "\n";
		}
		var _g2 = 0;
		var _g11 = s.funs;
		while(_g2 < _g11.length) {
			var f = _g11[_g2];
			++_g2;
			this.addFun(f);
			this.buffer.b += "\n\n";
		}
		return this.buffer.b;
	}
	,varString: function(v) {
		this.buffer = new StringBuf();
		this.addVar(v,null);
		return this.buffer.b;
	}
	,funString: function(f) {
		this.buffer = new StringBuf();
		this.addFun(f);
		return this.buffer.b;
	}
	,exprString: function(e) {
		this.buffer = new StringBuf();
		this.addExpr(e,"");
		return this.buffer.b;
	}
	,addVar: function(v,defKind,tabs,parent) {
		if(tabs == null) {
			tabs = "";
		}
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				var tmp;
				switch(q[1]) {
				case 0:
					var max = q[2];
					tmp = "const" + (max == null?"":"(" + max + ")");
					break;
				case 1:
					tmp = "private";
					break;
				case 2:
					tmp = "nullable";
					break;
				case 3:
					tmp = "perObject";
					break;
				case 4:
					tmp = "name('" + q[2] + "')";
					break;
				case 5:
					tmp = "shared";
					break;
				case 6:
					tmp = q[2][0].toLowerCase() + "p";
					break;
				case 7:
					tmp = "range(" + q[2] + "," + q[3] + ")";
					break;
				case 8:
					tmp = "ignore";
					break;
				}
				this.buffer.b += Std.string("@" + tmp + " ");
			}
		}
		if(v.kind != defKind) {
			switch(v.kind[1]) {
			case 0:
				this.buffer.b += "@global ";
				break;
			case 1:
				this.buffer.b += "@input ";
				break;
			case 2:
				this.buffer.b += "@param ";
				break;
			case 3:
				this.buffer.b += "@var ";
				break;
			case 4:
				this.buffer.b += "@local ";
				break;
			case 5:
				this.buffer.b += "@output ";
				break;
			case 6:
				this.buffer.b += "@function ";
				break;
			}
		}
		this.buffer.b += "var ";
		if(v.parent == parent) {
			this.buffer.b += Std.string(v.name + (this.varId?"@" + v.id:""));
		} else {
			this.addVarName(v);
		}
		this.buffer.b += " : ";
		var _g2 = v.type;
		if(_g2[1] == 12) {
			var vl = _g2[2];
			this.buffer.b += "{";
			var first = true;
			var _g3 = 0;
			while(_g3 < vl.length) {
				var v1 = vl[_g3];
				++_g3;
				if(first) {
					first = false;
				} else {
					this.buffer.b += ", ";
				}
				this.addVar(v1,v1.kind,tabs,v1);
			}
			this.buffer.b += "}";
		} else {
			this.buffer.b += Std.string(hxsl_Tools.toString(v.type));
		}
	}
	,addFun: function(f) {
		this.buffer.b += Std.string("function " + f.ref.name + "(");
		var first = true;
		var _g = 0;
		var _g1 = f.args;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(first) {
				this.buffer.b += " ";
				first = false;
			} else {
				this.buffer.b += ", ";
			}
			this.addVar(a,hxsl_VarKind.Local);
		}
		if(f.args.length > 0) {
			this.buffer.b += " ";
		}
		this.buffer.b += Std.string(") : " + hxsl_Tools.toString(f.ret) + " ");
		this.addExpr(f.expr,"");
	}
	,addVarName: function(v) {
		if(v.parent != null) {
			this.addVarName(v.parent);
			this.buffer.b += ".";
		}
		this.buffer.b += Std.string(v.name);
		if(this.varId) {
			this.buffer.b += Std.string("@" + v.id);
		}
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g[1]) {
		case 0:
			var c = _g[2];
			var tmp;
			switch(c[1]) {
			case 0:
				tmp = "null";
				break;
			case 1:
				tmp = c[2];
				break;
			case 2:
				tmp = c[2];
				break;
			case 3:
				tmp = c[2];
				break;
			case 4:
				tmp = "\"" + c[2] + "\"";
				break;
			}
			this.buffer.b += Std.string(tmp);
			break;
		case 1:
			this.addVarName(_g[2]);
			break;
		case 2:
			this.buffer.b += Std.string(hxsl_Tools2.toString(_g[2]));
			break;
		case 3:
			this.buffer.b += "(";
			this.addExpr(_g[2],tabs);
			this.buffer.b += ")";
			break;
		case 4:
			var el = _g[2];
			this.buffer.b += "{";
			tabs += "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				this.buffer.b += Std.string("\n" + tabs);
				this.addExpr(e1,tabs);
				this.buffer.b += ";";
			}
			tabs = HxOverrides.substr(tabs,1,null);
			if(el.length > 0) {
				this.buffer.b += Std.string("\n" + tabs);
			}
			this.buffer.b += "}";
			break;
		case 5:
			this.addExpr(_g[3],tabs);
			this.buffer.b += Std.string(" " + hxsl_Printer.opStr(_g[2]) + " ");
			this.addExpr(_g[4],tabs);
			break;
		case 6:
			var tmp1;
			switch(_g[2][1]) {
			case 0:
				tmp1 = "++";
				break;
			case 1:
				tmp1 = "--";
				break;
			case 2:
				tmp1 = "!";
				break;
			case 3:
				tmp1 = "-";
				break;
			case 4:
				tmp1 = "~";
				break;
			}
			this.buffer.b += Std.string(tmp1);
			this.addExpr(_g[3],tabs);
			break;
		case 7:
			var init = _g[3];
			this.addVar(_g[2],hxsl_VarKind.Local,tabs);
			if(init != null) {
				this.buffer.b += " = ";
				this.addExpr(init,tabs);
			}
			break;
		case 8:
			var el1 = _g[3];
			this.addExpr(_g[2],tabs);
			this.buffer.b += "(";
			var first = true;
			var _g2 = 0;
			while(_g2 < el1.length) {
				var e2 = el1[_g2];
				++_g2;
				if(first) {
					first = false;
				} else {
					this.buffer.b += ", ";
				}
				this.addExpr(e2,tabs);
			}
			this.buffer.b += ")";
			break;
		case 9:
			var regs = _g[3];
			this.addExpr(_g[2],tabs);
			this.buffer.b += ".";
			var _g3 = 0;
			while(_g3 < regs.length) {
				var r = regs[_g3];
				++_g3;
				this.buffer.b += Std.string(hxsl_Printer.SWIZ[r[1]]);
			}
			break;
		case 10:
			var eelse = _g[4];
			this.buffer.b += "if( ";
			this.addExpr(_g[2],tabs);
			this.buffer.b += " ) ";
			this.addExpr(_g[3],tabs);
			if(eelse != null) {
				this.buffer.b += " else ";
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buffer.b += "discard";
			break;
		case 12:
			var e3 = _g[2];
			this.buffer.b += "return";
			if(e3 != null) {
				this.buffer.b += " ";
				this.addExpr(e3,tabs);
			}
			break;
		case 13:
			this.buffer.b += Std.string("for( " + _g[2].name + " in ");
			this.addExpr(_g[3],tabs);
			this.buffer.b += ") ";
			this.addExpr(_g[4],tabs);
			break;
		case 14:
			this.buffer.b += "continue";
			break;
		case 15:
			this.buffer.b += "break";
			break;
		case 16:
			this.addExpr(_g[2],tabs);
			this.buffer.b += "[";
			this.addExpr(_g[3],tabs);
			this.buffer.b += "]";
			break;
		case 17:
			var el2 = _g[2];
			this.buffer.b += "[";
			var first1 = true;
			var _g4 = 0;
			while(_g4 < el2.length) {
				var e4 = el2[_g4];
				++_g4;
				if(first1) {
					first1 = false;
				} else {
					this.buffer.b += ", ";
				}
				this.addExpr(e4,tabs);
			}
			this.buffer.b += "]";
			break;
		}
	}
	,__class__: hxsl_Printer
};
var hxsl_AllocParam = function(name,pos,instance,index,type) {
	this.name = name;
	this.pos = pos;
	this.instance = instance;
	this.index = index;
	this.type = type;
};
$hxClasses["hxsl.AllocParam"] = hxsl_AllocParam;
hxsl_AllocParam.__name__ = ["hxsl","AllocParam"];
hxsl_AllocParam.prototype = {
	__class__: hxsl_AllocParam
};
var hxsl_AllocGlobal = function(pos,path,type) {
	this.pos = pos;
	this.path = path;
	this.gid = hxsl_Globals.allocID(path);
	this.type = type;
};
$hxClasses["hxsl.AllocGlobal"] = hxsl_AllocGlobal;
hxsl_AllocGlobal.__name__ = ["hxsl","AllocGlobal"];
hxsl_AllocGlobal.prototype = {
	__class__: hxsl_AllocGlobal
};
var hxsl_RuntimeShaderData = function() {
};
$hxClasses["hxsl.RuntimeShaderData"] = hxsl_RuntimeShaderData;
hxsl_RuntimeShaderData.__name__ = ["hxsl","RuntimeShaderData"];
hxsl_RuntimeShaderData.prototype = {
	__class__: hxsl_RuntimeShaderData
};
var hxsl_RuntimeShader = function() {
	this.id = hxsl_RuntimeShader.UID++;
};
$hxClasses["hxsl.RuntimeShader"] = hxsl_RuntimeShader;
hxsl_RuntimeShader.__name__ = ["hxsl","RuntimeShader"];
hxsl_RuntimeShader.prototype = {
	hasGlobal: function(gid) {
		return this.globals.h.hasOwnProperty(gid);
	}
	,__class__: hxsl_RuntimeShader
};
var hxsl_ShaderList = function(s,n) {
	this.s = s;
	this.next = n;
};
$hxClasses["hxsl.ShaderList"] = hxsl_ShaderList;
hxsl_ShaderList.__name__ = ["hxsl","ShaderList"];
hxsl_ShaderList.prototype = {
	clone: function() {
		return new hxsl_ShaderList(this.s.clone(),this.next == null?null:this.next.clone());
	}
	,iterator: function() {
		return new hxsl__$ShaderList_ShaderIterator(this,null);
	}
	,iterateTo: function(s) {
		return new hxsl__$ShaderList_ShaderIterator(this,s);
	}
	,__class__: hxsl_ShaderList
};
var hxsl__$ShaderList_ShaderIterator = function(l,last) {
	this.l = l;
	this.last = last;
};
$hxClasses["hxsl._ShaderList.ShaderIterator"] = hxsl__$ShaderList_ShaderIterator;
hxsl__$ShaderList_ShaderIterator.__name__ = ["hxsl","_ShaderList","ShaderIterator"];
hxsl__$ShaderList_ShaderIterator.prototype = {
	hasNext: function() {
		return this.l != this.last;
	}
	,next: function() {
		var s = this.l.s;
		this.l = this.l.next;
		return s;
	}
	,__class__: hxsl__$ShaderList_ShaderIterator
};
var hxsl_ShaderInstance = function(shader) {
	this.id = hxsl_Tools.allocVarId();
	this.shader = shader;
	this.params = new haxe_ds_IntMap();
};
$hxClasses["hxsl.ShaderInstance"] = hxsl_ShaderInstance;
hxsl_ShaderInstance.__name__ = ["hxsl","ShaderInstance"];
hxsl_ShaderInstance.prototype = {
	__class__: hxsl_ShaderInstance
};
var hxsl_ShaderGlobal = function(v,gid) {
	this.v = v;
	this.globalId = gid;
};
$hxClasses["hxsl.ShaderGlobal"] = hxsl_ShaderGlobal;
hxsl_ShaderGlobal.__name__ = ["hxsl","ShaderGlobal"];
hxsl_ShaderGlobal.prototype = {
	__class__: hxsl_ShaderGlobal
};
var hxsl_ShaderConst = function(v,pos,bits) {
	this.v = v;
	this.pos = pos;
	this.bits = bits;
};
$hxClasses["hxsl.ShaderConst"] = hxsl_ShaderConst;
hxsl_ShaderConst.__name__ = ["hxsl","ShaderConst"];
hxsl_ShaderConst.prototype = {
	__class__: hxsl_ShaderConst
};
var hxsl_SharedShader = function(src) {
	this.instanceCache = new haxe_ds_IntMap();
	this.data = haxe_Unserializer.run(src);
	this.consts = null;
	this.globals = [];
	var _g = 0;
	var _g1 = this.data.vars;
	while(_g < _g1.length) {
		var v = _g1[_g];
		++_g;
		this.browseVar(v);
	}
};
$hxClasses["hxsl.SharedShader"] = hxsl_SharedShader;
hxsl_SharedShader.__name__ = ["hxsl","SharedShader"];
hxsl_SharedShader.prototype = {
	getInstance: function(constBits) {
		var i = this.instanceCache.h[constBits];
		if(i == null) {
			return this.makeInstance(constBits);
		} else {
			return i;
		}
	}
	,makeInstance: function(constBits) {
		var $eval = new hxsl_Eval();
		var c = this.consts;
		while(c != null) {
			var _g = c.v.type;
			var tmp;
			switch(_g[1]) {
			case 1:
				tmp = hxsl_Const.CInt(constBits >>> c.pos & (1 << c.bits) - 1);
				break;
			case 2:
				tmp = hxsl_Const.CBool((constBits >>> c.pos & 1) != 0);
				break;
			default:
				throw new js__$Boot_HaxeError("assert");
			}
			$eval.setConstant(c.v,tmp);
			c = c.next;
		}
		$eval.inlineCalls = true;
		$eval.unrollLoops = true;
		var i = new hxsl_ShaderInstance($eval["eval"](this.data));
		hxsl_Printer.check(i.shader,[this.data]);
		this.paramsCount = 0;
		var _g1 = 0;
		var _g11 = this.data.vars;
		while(_g1 < _g11.length) {
			var v = _g11[_g1];
			++_g1;
			this.addParam($eval,i,v);
		}
		this.instanceCache.h[constBits] = i;
		return i;
	}
	,addSelfParam: function(i,v) {
		var _g = v.type;
		if(_g[1] == 12) {
			var vl = _g[2];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v1 = vl[_g1];
				++_g1;
				this.addSelfParam(i,v1);
			}
		} else if(v.kind == hxsl_VarKind.Param) {
			i.params.h[v.id] = this.paramsCount;
			this.paramsCount++;
		}
	}
	,addParam: function($eval,i,v) {
		var _g = v.type;
		if(_g[1] == 12) {
			var vl = _g[2];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v1 = vl[_g1];
				++_g1;
				this.addParam($eval,i,v1);
			}
		} else if(v.kind == hxsl_VarKind.Param) {
			i.params.h[$eval.varMap.h[v.__id__].id] = this.paramsCount;
			this.paramsCount++;
		}
	}
	,browseVar: function(v,path) {
		v.id = hxsl_Tools.allocVarId();
		if(path == null) {
			path = hxsl_Tools.getName(v);
		} else {
			path += "." + v.name;
		}
		var _g = v.type;
		if(_g[1] == 12) {
			var vl = _g[2];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var vs = vl[_g1];
				++_g1;
				this.browseVar(vs,path);
			}
		} else {
			var globalId = 0;
			if(v.kind == hxsl_VarKind.Global) {
				globalId = hxsl_Globals.allocID(path);
				this.globals.push(new hxsl_ShaderGlobal(v,globalId));
			}
			if(!hxsl_Tools.isConst(v)) {
				return;
			}
			var bits = hxsl_Tools.getConstBits(v);
			if(bits > 0) {
				var c = new hxsl_ShaderConst(v,this.consts == null?0:this.consts.pos + this.consts.bits,bits);
				c.globalId = globalId;
				c.next = this.consts;
				this.consts = c;
			}
		}
	}
	,__class__: hxsl_SharedShader
};
var hxsl__$Splitter_VarProps = function(v) {
	this.v = v;
	this.read = 0;
	this.write = 0;
};
$hxClasses["hxsl._Splitter.VarProps"] = hxsl__$Splitter_VarProps;
hxsl__$Splitter_VarProps.__name__ = ["hxsl","_Splitter","VarProps"];
hxsl__$Splitter_VarProps.prototype = {
	__class__: hxsl__$Splitter_VarProps
};
var hxsl_Splitter = function() {
};
$hxClasses["hxsl.Splitter"] = hxsl_Splitter;
hxsl_Splitter.__name__ = ["hxsl","Splitter"];
hxsl_Splitter.prototype = {
	split: function(s) {
		var vfun = null;
		var vvars = new haxe_ds_IntMap();
		var ffun = null;
		var fvars = new haxe_ds_IntMap();
		this.varNames = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			switch(f.kind[1]) {
			case 0:
				this.vars = vvars;
				vfun = f;
				this.checkExpr(f.expr);
				break;
			case 1:
				this.vars = fvars;
				ffun = f;
				this.checkExpr(f.expr);
				break;
			default:
				throw new js__$Boot_HaxeError("assert");
			}
		}
		this.varMap = new haxe_ds_ObjectMap();
		var _g2 = 0;
		var _g11 = Lambda.array(vvars);
		while(_g2 < _g11.length) {
			var inf = _g11[_g2];
			++_g2;
			var v = inf.v;
			switch(v.kind[1]) {
			case 3:case 4:
				v.kind = fvars.h.hasOwnProperty(v.id)?hxsl_VarKind.Var:hxsl_VarKind.Local;
				break;
			default:
			}
			switch(v.kind[1]) {
			case 3:case 5:
				if(inf.read > 0 || inf.write > 1) {
					var nv = { id : hxsl_Tools.allocVarId(), name : v.name, kind : v.kind, type : v.type};
					this.vars = vvars;
					this.get(nv);
					v.kind = hxsl_VarKind.Local;
					var p = vfun.expr.p;
					var e = { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(nv), t : nv.type, p : p},{ e : hxsl_TExprDef.TVar(v), t : v.type, p : p}), t : nv.type, p : p};
					this.addExpr(vfun,e);
					this.checkExpr(e);
					if(nv.kind == hxsl_VarKind.Var) {
						var old = fvars.h[v.id];
						this.varMap.set(v,nv);
						fvars.remove(v.id);
						var np = new hxsl__$Splitter_VarProps(nv);
						np.read = old.read;
						np.write = old.write;
						fvars.h[nv.id] = np;
					}
				}
				break;
			default:
			}
		}
		var finits = [];
		var todo = [];
		var tmp = fvars.iterator();
		while(tmp.hasNext()) {
			var inf1 = tmp.next();
			var v1 = inf1.v;
			switch(v1.kind[1]) {
			case 1:
				var nv1 = { id : hxsl_Tools.allocVarId(), name : v1.name, kind : hxsl_VarKind.Var, type : v1.type};
				this.uniqueName(nv1);
				var i = vvars.h[v1.id];
				if(i == null) {
					i = new hxsl__$Splitter_VarProps(v1);
					vvars.h[v1.id] = i;
				}
				i.read++;
				var vp = new hxsl__$Splitter_VarProps(nv1);
				vp.write = 1;
				vvars.h[nv1.id] = vp;
				var fp = new hxsl__$Splitter_VarProps(nv1);
				fp.read = 1;
				todo.push(fp);
				this.addExpr(vfun,{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(nv1), t : v1.type, p : vfun.expr.p},{ e : hxsl_TExprDef.TVar(v1), t : v1.type, p : vfun.expr.p}), t : v1.type, p : vfun.expr.p});
				this.varMap.set(v1,nv1);
				inf1.local = true;
				break;
			case 3:
				if(inf1.write > 0) {
					var nv2 = { id : hxsl_Tools.allocVarId(), name : v1.name, kind : hxsl_VarKind.Local, type : v1.type};
					this.uniqueName(nv2);
					finits.push({ e : hxsl_TExprDef.TVarDecl(nv2,{ e : hxsl_TExprDef.TVar(v1), t : v1.type, p : ffun.expr.p}), t : hxsl_Type.TVoid, p : ffun.expr.p});
					this.varMap.set(v1,nv2);
				}
				break;
			default:
			}
		}
		var _g3 = 0;
		while(_g3 < todo.length) {
			var v2 = todo[_g3];
			++_g3;
			fvars.h[v2.v.id] = v2;
		}
		var tmp1 = vvars.iterator();
		while(tmp1.hasNext()) this.checkVar(tmp1.next(),true,vvars);
		var tmp2 = fvars.iterator();
		while(tmp2.hasNext()) this.checkVar(tmp2.next(),false,vvars);
		var tmp3 = this.varMap.keys();
		while(tmp3.hasNext()) {
			var v3 = tmp3.next();
			var v21 = this.varMap.h[this.varMap.h[v3.__id__].__id__];
			if(v21 != null) {
				this.varMap.set(v3,v21);
			}
		}
		ffun = { ret : ffun.ret, ref : ffun.ref, kind : ffun.kind, args : ffun.args, expr : this.mapVars(ffun.expr)};
		var _g4 = ffun.expr.e;
		if(_g4[1] == 4) {
			var el = _g4[2];
			var _g5 = 0;
			while(_g5 < finits.length) {
				var e1 = finits[_g5];
				++_g5;
				el.unshift(e1);
			}
		} else {
			finits.push(ffun.expr);
			ffun.expr = { e : hxsl_TExprDef.TBlock(finits), t : hxsl_Type.TVoid, p : ffun.expr.p};
		}
		var _g12 = [];
		var tmp4 = vvars.iterator();
		while(tmp4.hasNext()) {
			var v4 = tmp4.next();
			if(!v4.local) {
				_g12.push(v4.v);
			}
		}
		var _g21 = [];
		var tmp5 = fvars.iterator();
		while(tmp5.hasNext()) {
			var v5 = tmp5.next();
			if(!v5.local) {
				_g21.push(v5.v);
			}
		}
		_g12.sort(function(v11,v22) {
			return v11.id - v22.id;
		});
		_g21.sort(function(v12,v23) {
			return v12.id - v23.id;
		});
		return { vertex : { name : "vertex", vars : _g12, funs : [vfun]}, fragment : { name : "fragment", vars : _g21, funs : [ffun]}};
	}
	,addExpr: function(f,e) {
		var _g = f.expr.e;
		if(_g[1] == 4) {
			_g[2].push(e);
		} else {
			f.expr = { e : hxsl_TExprDef.TBlock([f.expr,e]), t : hxsl_Type.TVoid, p : f.expr.p};
		}
	}
	,checkVar: function(v,vertex,vvars) {
		switch(v.v.kind[1]) {
		case 3:
			if(!vertex) {
				var i = vvars.h[v.v.id];
				if(i == null || i.write == 0) {
					throw new js__$Boot_HaxeError("Varying " + v.v.name + " is not written by vertex shader");
				}
			}
			break;
		case 4:
			if(v.requireInit) {
				throw new js__$Boot_HaxeError("Variable " + v.v.name + " is written without being initialized");
			}
			break;
		default:
		}
	}
	,mapVars: function(e) {
		var _g = e.e;
		if(_g[1] == 1) {
			var v2 = this.varMap.h[_g[2].__id__];
			if(v2 == null) {
				return e;
			} else {
				return { e : hxsl_TExprDef.TVar(v2), t : e.t, p : e.p};
			}
		} else {
			return hxsl_Tools.map(e,$bind(this,this.mapVars));
		}
	}
	,get: function(v) {
		var i = this.vars.h[v.id];
		if(i == null) {
			i = new hxsl__$Splitter_VarProps(v);
			this.vars.h[v.id] = i;
			this.uniqueName(v);
		}
		return i;
	}
	,uniqueName: function(v) {
		if(v.kind == hxsl_VarKind.Global || v.kind == hxsl_VarKind.Output || v.kind == hxsl_VarKind.Input) {
			return;
		}
		v.parent = null;
		var _this = this.varNames;
		var key = v.name;
		var n = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(n != null && n != v) {
			var k = 2;
			while(true) {
				var _this1 = this.varNames;
				var key1 = v.name + k;
				if(!(__map_reserved[key1] != null?_this1.existsReserved(key1):_this1.h.hasOwnProperty(key1))) {
					break;
				}
				++k;
			}
			v.name += k;
		}
		var _this2 = this.varNames;
		var key2 = v.name;
		if(__map_reserved[key2] != null) {
			_this2.setReserved(key2,v);
		} else {
			_this2.h[key2] = v;
		}
	}
	,checkExpr: function(e) {
		var _g = e.e;
		switch(_g[1]) {
		case 1:
			var inf = this.get(_g[2]);
			if(inf.write == 0) {
				inf.requireInit = true;
			}
			inf.read++;
			break;
		case 5:
			switch(_g[2][1]) {
			case 4:
				switch(_g[3].e[1]) {
				case 1:
					this.get(_g[3].e[2]).write++;
					this.checkExpr(_g[4]);
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						this.get(_g[3].e[2].e[2]).write++;
						this.checkExpr(_g[4]);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			case 20:
				switch(_g[3].e[1]) {
				case 1:
					var inf1 = this.get(_g[3].e[2]);
					if(inf1.write == 0) {
						inf1.requireInit = true;
					}
					inf1.read++;
					inf1.write++;
					this.checkExpr(_g[4]);
					break;
				case 9:
					if(_g[3].e[2].e[1] == 1) {
						var inf2 = this.get(_g[3].e[2].e[2]);
						if(inf2.write == 0) {
							inf2.requireInit = true;
						}
						inf2.read++;
						inf2.write++;
						this.checkExpr(_g[4]);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			default:
				hxsl_Tools.iter(e,$bind(this,this.checkExpr));
			}
			break;
		case 7:
			var init = _g[3];
			var inf3 = this.get(_g[2]);
			inf3.local = true;
			if(init != null) {
				this.checkExpr(init);
				inf3.write++;
			}
			break;
		default:
			hxsl_Tools.iter(e,$bind(this,this.checkExpr));
		}
	}
	,__class__: hxsl_Splitter
};
var invertotanks_Bullet = function(x,y,r,vx,vy,modRadius,damageRadius,damage,builder,bounce,inverse,above,origin) {
	this.x = x;
	this.y = y;
	this.r = r;
	this.vx = vx;
	this.vy = vy;
	this.modRadius = modRadius;
	this.damageRadius = damageRadius;
	this.damage = damage;
	this.builder = builder;
	this.bounce = bounce;
	this.inverse = inverse;
	this.above = above;
	this.originallyAbove = above;
	this.origin = origin;
};
$hxClasses["invertotanks.Bullet"] = invertotanks_Bullet;
invertotanks_Bullet.__name__ = ["invertotanks","Bullet"];
invertotanks_Bullet.prototype = {
	update: function(world) {
		var _g = 0;
		while(_g < 3) {
			++_g;
			if(this.inverse > 0) {
				var newPos = world.travel(this.x,this.y,this.vx,this.vy,this.above,false);
				this.x = newPos.x;
				this.y = newPos.y;
				this.vx = newPos.vx;
				this.vy = newPos.vy;
				if(newPos.inverted) {
					this.inverse--;
					this.above = !this.above;
				}
			} else {
				var newPos1 = world.travel(this.x,this.y,this.vx,this.vy,this.above,this.bounce);
				haxe_Log.trace(this.x + "," + this.y + "->" + newPos1.x + "," + newPos1.y,{ fileName : "Bullet.hx", lineNumber : 57, className : "invertotanks.Bullet", methodName : "update"});
				this.x = newPos1.x;
				this.y = newPos1.y;
				this.vx = newPos1.vx;
				this.vy = newPos1.vy;
				if(newPos1.inverted) {
					if(this.bounce) {
						if(Math.sqrt(this.vx * this.vx + this.vy * this.vy) < 2) {
							this.explode(world);
							return true;
						}
					} else {
						this.explode(world);
						return true;
					}
				}
			}
		}
		return false;
	}
	,explode: function(world) {
		world.dExplode(this.x,this.y,this.damageRadius,this.damage,this.origin);
		world.physExplode(this.x,this.y,this.modRadius,this.originallyAbove,this.builder);
		world.gExplode(new invertotanks_Explosion(this.x,this.y,this.modRadius,this.damageRadius));
	}
	,__class__: invertotanks_Bullet
};
var invertotanks_BulletType = function(r,modRadius,damageRadius,damage,builder,bounce) {
	this.r = r;
	this.modRadius = modRadius;
	this.damageRadius = damageRadius;
	this.damage = damage;
	this.builder = builder;
	this.bounce = bounce;
};
$hxClasses["invertotanks.BulletType"] = invertotanks_BulletType;
invertotanks_BulletType.__name__ = ["invertotanks","BulletType"];
invertotanks_BulletType.prototype = {
	__class__: invertotanks_BulletType
};
var invertotanks_Controller = function(up,down,left,right,cycleLeft,cycleRight,forceUp,forceDown,fire,precise) {
	this.key = [];
	this.key.push(up);
	this.key.push(down);
	this.key.push(left);
	this.key.push(right);
	this.key.push(cycleLeft);
	this.key.push(cycleRight);
	this.key.push(forceUp);
	this.key.push(forceDown);
	this.key.push(fire);
	this.key.push(precise);
};
$hxClasses["invertotanks.Controller"] = invertotanks_Controller;
invertotanks_Controller.__name__ = ["invertotanks","Controller"];
invertotanks_Controller.prototype = {
	get: function(i) {
		if(this.key[i] == null) {
			return false;
		}
		return hxd_Key.isDown(this.key[i]);
	}
	,getP: function(i) {
		if(this.key[i] == null) {
			return false;
		}
		return hxd_Key.isPressed(this.key[i]);
	}
	,get_up: function() {
		if(this.key[0] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[0]);
		}
	}
	,get_down: function() {
		if(this.key[1] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[1]);
		}
	}
	,get_left: function() {
		if(this.key[2] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[2]);
		}
	}
	,get_right: function() {
		if(this.key[3] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[3]);
		}
	}
	,get_cycleRight: function() {
		if(this.key[4] == null) {
			return false;
		} else {
			return hxd_Key.isPressed(this.key[4]);
		}
	}
	,get_cycleLeft: function() {
		if(this.key[5] == null) {
			return false;
		} else {
			return hxd_Key.isPressed(this.key[5]);
		}
	}
	,get_forceUp: function() {
		if(this.key[6] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[6]);
		}
	}
	,get_forceDown: function() {
		if(this.key[7] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[7]);
		}
	}
	,get_fire: function() {
		if(this.key[8] == null) {
			return false;
		} else {
			return hxd_Key.isPressed(this.key[8]);
		}
	}
	,get_precise: function() {
		if(this.key[9] == null) {
			return false;
		} else {
			return hxd_Key.isDown(this.key[9]);
		}
	}
	,__class__: invertotanks_Controller
};
var invertotanks_Explosion = function(x,y,rMax,r2Max,rSpeed,hollow) {
	if(hollow == null) {
		hollow = false;
	}
	if(rSpeed == null) {
		rSpeed = 60;
	}
	this.x = x;
	this.y = y;
	this.rMax = rMax;
	this.r2Max = r2Max;
	this.rSpeed = rSpeed;
	this.hollow = hollow;
	this.r = 0;
	this.r2 = 0;
	this.a = 1;
};
$hxClasses["invertotanks.Explosion"] = invertotanks_Explosion;
invertotanks_Explosion.__name__ = ["invertotanks","Explosion"];
invertotanks_Explosion.prototype = {
	update: function() {
		this.r += this.rSpeed * invertotanks_Main.dt / 60;
		this.r2 += this.rSpeed * invertotanks_Main.dt / 60;
		if(this.r > this.rMax) {
			if(this.r2 > this.r2Max) {
				this.a -= 0.1 * invertotanks_Main.dt;
				if(this.a <= 0) {
					return true;
				}
			}
			this.r = this.rMax;
		} else if(this.r2 > this.r2Max) {
			this.r2 = this.r2Max;
		}
		return false;
	}
	,__class__: invertotanks_Explosion
};
var invertotanks_Main = function(engine) {
	hxd_App.call(this,engine);
};
$hxClasses["invertotanks.Main"] = invertotanks_Main;
invertotanks_Main.__name__ = ["invertotanks","Main"];
invertotanks_Main.main = function() {
	invertotanks_Main.instance = new invertotanks_Main();
};
invertotanks_Main.makeText = function(text) {
	return invertotanks_Main.instance.makeTextI(text);
};
invertotanks_Main.__super__ = hxd_App;
invertotanks_Main.prototype = $extend(hxd_App.prototype,{
	init: function() {
		this.g = new h2d_Graphics(this.s2d);
		this.onResize();
		hxd_Res.set_loader(new hxd_res_Loader(new hxd_fs_EmbedFileSystem(haxe_Unserializer.run("oy8:logo.pngty13:logosmall.pngty12:TITUSCBZ.TTFtg"))));
		this.font = hxd_Res.get_loader().loadFont("TITUSCBZ.TTF").build(16);
		var heightMap = [];
		var _g = 0;
		while(_g < 128) {
			++_g;
			heightMap.push(0);
		}
		var _g1 = 0;
		while(_g1 < 64) heightMap.push(_g1++);
		var _g2 = 0;
		while(_g2 < 64) heightMap.push(64 - _g2++);
		var _g3 = 0;
		while(_g3 < 128) {
			++_g3;
			heightMap.push(0);
		}
		var _g4 = 0;
		while(_g4 < 64) heightMap.push(-(_g4++));
		var _g5 = 0;
		while(_g5 < 64) heightMap.push(_g5++ - 64);
		var _g6 = 0;
		while(_g6 < 128) {
			++_g6;
			heightMap.push(0);
		}
		var p = new invertotanks_Controller(87,83,65,68,81,69,82,70,32,16);
		var tanks = [];
		tanks.push(new invertotanks_Tank(160.,true,p));
		tanks.push(new invertotanks_Tank(480.,false,p));
		this.world = new invertotanks_World(heightMap,tanks);
		this.world.draw(this.g);
	}
	,update: function(dt) {
		if(dt > 1.2) {
			invertotanks_Main.dt = 1.2;
		} else {
			invertotanks_Main.dt = dt;
		}
		this.world.update();
		this.world.draw(this.g);
	}
	,onResize: function() {
		var _this = this.g;
		var v = this.s2d.width / 640;
		_this.posChanged = true;
		_this.scaleX = v;
		var _this1 = this.g;
		var v1 = this.s2d.height / 480;
		_this1.posChanged = true;
		_this1.scaleY = v1;
		if(this.g.scaleX < this.g.scaleY) {
			var _this2 = this.g;
			var v2 = this.g.scaleX;
			_this2.posChanged = true;
			_this2.scaleY = v2;
		} else {
			var _this3 = this.g;
			var v3 = this.g.scaleY;
			_this3.posChanged = true;
			_this3.scaleX = v3;
		}
		var _this4 = this.g;
		var v4 = (this.s2d.width / 2 | 0) - this.g.scaleX * 320;
		_this4.posChanged = true;
		_this4.x = v4;
		var _this5 = this.g;
		var v5 = (this.s2d.height / 2 | 0) - this.g.scaleY * 240;
		_this5.posChanged = true;
		_this5.y = v5;
	}
	,makeTextI: function(text) {
		var ret = new h2d_Text(this.font,this.s2d);
		ret.set_text(text);
		ret.posChanged = true;
		ret.scaleX = 0.7;
		ret.posChanged = true;
		ret.scaleY = 0.7;
		ret.set_textColor(0);
		this.g.addChild(ret);
		return ret;
	}
	,__class__: invertotanks_Main
});
var invertotanks_Tank = function(x,above,controller) {
	this.x = x;
	this.above = above;
	this.c = controller;
	this.degree = above?-Math.PI / 3:2 * Math.PI / 3;
	this.force = 50;
	this.invertions = 0;
	this.health = 100.0;
	this.fuel = 20.;
	this.invertionsText = invertotanks_Main.makeText(Std.string(this.invertions));
};
$hxClasses["invertotanks.Tank"] = invertotanks_Tank;
invertotanks_Tank.__name__ = ["invertotanks","Tank"];
invertotanks_Tank.prototype = {
	turnEnd: function() {
		this.fuel += 2.;
		if(this.fuel > 40.0) {
			this.fuel = 40.0;
		}
	}
	,update: function(world) {
		if(this.c != null) {
			var precise = this.c.get_precise();
			if(this.c.get_fire()) {
				world.fire(this.force,this.degree,this.invertions,new invertotanks_BulletType(3,24,12,20,false,true),this);
				return true;
			}
			if(this.c.get_left()) {
				if(!this.c.get_right()) {
					this.move(precise?-0.325:-0.65,world);
				}
			} else if(this.c.get_right()) {
				this.move(precise?0.325:0.65,world);
			}
			if(this.c.get_up()) {
				if(!this.c.get_down()) {
					this.moveDeg(precise?0.016362461733333333:0.032724923466666667);
				}
			} else if(this.c.get_down()) {
				this.moveDeg(precise?-0.016362461733333333:-0.032724923466666667);
			}
			if(this.c.get_forceUp()) {
				if(!this.c.get_forceDown()) {
					this.moveForce(precise?0.25:0.5);
				}
			} else if(this.c.get_forceDown()) {
				this.moveForce(precise?-0.25:-0.5);
			}
			if(this.c.get_cycleLeft()) {
				this.moveInvertions(1);
			}
			if(this.c.get_cycleRight()) {
				this.moveInvertions(-1);
			}
		}
		return false;
	}
	,move: function(vx,world) {
		if(vx == 0 || this.fuel <= 0) {
			return;
		}
		if(!world.canMove(this.x,vx > 0,this.above)) {
			return;
		}
		this.x += invertotanks_Main.dt * vx;
		if(this.x < 1) {
			this.x = 1;
		} else if(this.x > 638) {
			this.x = 638;
		} else {
			this.fuel -= Math.abs(invertotanks_Main.dt * vx / 10);
		}
	}
	,moveDeg: function(vd) {
		this.degree += vd * invertotanks_Main.dt;
		if(this.degree < 0) {
			this.degree += 2 * Math.PI;
		}
		if(this.degree >= 2 * Math.PI) {
			this.degree -= 2 * Math.PI;
		}
	}
	,moveForce: function(vf) {
		this.force += vf * invertotanks_Main.dt;
		if(this.force < 0) {
			this.force = 0;
		} else if(this.force > 100) {
			this.force = 100;
		}
	}
	,moveInvertions: function(dir) {
		this.invertions += dir;
		if(this.invertions < 0) {
			this.invertions = 0;
		} else if(this.invertions > 5) {
			this.invertions = 5;
		}
		this.invertionsText.set_text(Std.string(this.invertions));
	}
	,damage: function(d) {
		this.health -= d;
		if(this.health <= 0) {
			this.health = 0;
			return true;
		}
		return false;
	}
	,__class__: invertotanks_Tank
};
var invertotanks_World = function(heightMap,tanks) {
	this.heightMap = heightMap;
	this.tanks = tanks;
	this.bullets = [];
	this.explosions = [];
	this.airResistance = 0.99916666666666665;
	this.gravity = 20;
	this.wind = 0;
	this.wallHeight = 640;
	this.currentTank = 0;
	this.playerIndicatorArrowHeight = 48.;
	this.playerIndicatorArrowHeight /= 2;
	this.playerIndicatorArrowDir = 0.1;
};
$hxClasses["invertotanks.World"] = invertotanks_World;
invertotanks_World.__name__ = ["invertotanks","World"];
invertotanks_World.prototype = {
	update: function() {
		var _g = 0;
		var _g1 = this.explosions;
		while(_g < _g1.length) {
			var explosion = _g1[_g];
			++_g;
			if(explosion.update()) {
				HxOverrides.remove(this.explosions,explosion);
			}
		}
		var _g2 = 0;
		var _g11 = this.bullets;
		while(_g2 < _g11.length) {
			var bullet = _g11[_g2];
			++_g2;
			if(bullet.update(this)) {
				HxOverrides.remove(this.bullets,bullet);
			}
		}
		if(this.bullets.length == 0 && this.explosions.length == 0) {
			this.playerIndicatorArrowHeight += this.playerIndicatorArrowDir * invertotanks_Main.dt;
			if(this.playerIndicatorArrowHeight >= 26.5) {
				this.playerIndicatorArrowHeight = 26.5;
				this.playerIndicatorArrowDir = -this.playerIndicatorArrowDir;
			} else if(this.playerIndicatorArrowHeight < 21.5) {
				this.playerIndicatorArrowHeight = 21.5;
				this.playerIndicatorArrowDir = -this.playerIndicatorArrowDir;
			}
			if(this.tanks[this.currentTank].update(this)) {
				this.tanks[this.currentTank].turnEnd();
				this.currentTank++;
				this.currentTank = this.currentTank % this.tanks.length;
			}
		}
	}
	,physExplode: function(x,y,r,above,grow) {
		var j = -r;
		var r2 = r * r;
		var _g1 = x - r | 0;
		var _g = x + r | 0;
		while(_g1 < _g) {
			var i = _g1++;
			if(i >= 0 && i < this.heightMap.length) {
				var localR = Math.sqrt(r2 - j * j);
				++j;
				var height = above?this.heightMap[i] - (y - localR):y + localR - this.heightMap[i];
				if(height > 0) {
					if(height > localR * 2) {
						height = localR * 2;
					}
					this.heightMap[i] += above != grow?-height:height;
					if(this.heightMap[i] < -240) {
						this.heightMap[i] = -240;
					} else if(this.heightMap[i] > 240) {
						this.heightMap[i] = 240;
					}
				}
			}
		}
	}
	,gExplode: function(explosion) {
		this.explosions.push(explosion);
	}
	,dExplode: function(x,y,r,d,origin) {
		var _g = 0;
		var _g1 = this.tanks;
		while(_g < _g1.length) {
			var tank = _g1[_g];
			++_g;
			var dx = tank.x - x;
			var dy = this.getHeight(tank.x) - y;
			r += 8.5;
			if(dx * dx + dy * dy <= r * r) {
				tank.damage(d);
			}
		}
	}
	,travel: function(x,y,vx,vy,above,bounce) {
		var orgX = x;
		var orgY = y;
		var inverted = false;
		var outside = false;
		if(x < 0) {
			x = 0;
			outside = true;
		} else if(x >= this.heightMap.length) {
			x = this.heightMap.length - 1;
			outside = true;
		}
		var xHeight = this.getHeight(x);
		var startedUnder = y != xHeight;
		if(startedUnder) {
			startedUnder = above == y < xHeight;
		}
		y += invertotanks_Main.dt * vy / 60;
		x += invertotanks_Main.dt * vx / 60 + invertotanks_Main.dt * this.wind / 60;
		var nxHeight = this.getHeight(x);
		if(above) {
			if(y <= nxHeight) {
				inverted = true;
			} else if(y > nxHeight + 0.1) {
				vy -= invertotanks_Main.dt * this.gravity / 60;
			}
		} else if(y >= nxHeight) {
			inverted = true;
		} else if(y < nxHeight - 0.1) {
			vy += invertotanks_Main.dt * this.gravity / 60;
		}
		if(bounce && inverted) {
			if(startedUnder) {
				vy = 0;
				vx = vy;
			} else {
				var xInt = x | 0;
				var dx = vx;
				var dy = vy;
				var wdx = above?1.0:-1.0;
				var wdy = above?this.heightMap[xInt + 1] - this.heightMap[xInt]:this.heightMap[xInt] - this.heightMap[xInt + 1];
				var l = Math.sqrt(dx * dx + dy * dy);
				var wl = Math.sqrt(1 + wdy * wdy);
				wdx /= wl;
				wdy /= wl;
				dx /= l;
				dy /= l;
				var angle = 2 * Math.acos(dx * wdx + dy * wdy);
				if(!isNaN(angle)) {
					var nvx = vx * Math.cos(angle) - vy * Math.sin(angle);
					var nvy = vx * Math.sin(angle) + vy * Math.cos(angle);
					haxe_Log.trace(angle,{ fileName : "World.hx", lineNumber : 179, className : "invertotanks.World", methodName : "travel"});
					vx = nvx;
					vy = nvy;
				} else {
					vx = -vx;
					vy = -vy;
				}
				x = orgX;
				y = orgY;
				vx *= 0.8;
				vy *= 0.8;
			}
		}
		if(!outside) {
			if(x < 0) {
				if(y >= this.heightMap[0]) {
					if(y < this.heightMap[0] + this.wallHeight) {
						x = -x;
						vx = -vx;
					}
				} else if(y >= this.heightMap[0] - this.wallHeight) {
					x = -x;
					vx = -vx;
				}
			} else if(x >= this.heightMap.length) {
				if(y >= this.heightMap[this.heightMap.length - 1]) {
					if(y < this.heightMap[this.heightMap.length - 1] + this.wallHeight) {
						x = 640 - (x - 640);
						vx = -vx;
					}
				} else if(y >= this.heightMap[this.heightMap.length - 1] - this.wallHeight) {
					x = 640 - (x - 640);
					vx = -vx;
				}
			}
		}
		vx *= Math.pow(this.airResistance,invertotanks_Main.dt);
		vy *= Math.pow(this.airResistance,invertotanks_Main.dt);
		return { x : x, y : y, vx : vx, vy : vy, inverted : inverted};
	}
	,fire: function(force,degree,inverse,b,tank) {
		var dx = Math.cos(degree);
		var dy = -Math.sin(degree);
		var height = this.getHeight(tank.x);
		this.bullets.push(new invertotanks_Bullet(tank.x + dx * 8.5 * 1.5,height + dy * 8.5 * 1.5,b.r,dx * force,dy * force,b.modRadius,b.damageRadius,b.damage,b.builder,b.bounce,inverse,tank.above,tank));
	}
	,canMove: function(x,right,above) {
		if(above) {
			return this.getHeight(x + (right?1:-1)) - this.getHeight(x) <= 7;
		} else {
			return this.getHeight(x) - this.getHeight(x + (right?1:-1)) <= 7;
		}
	}
	,getHeight: function(x) {
		var xInt = x | 0;
		var height = x - xInt;
		height = (1 - height) * this.heightMap[xInt] + height * this.heightMap[xInt + 1];
		return height;
	}
	,draw: function(g) {
		g.clear();
		g.beginFill(3381759);
		g.drawRect(0,0,640,480);
		g.beginFill(13395456);
		var _g = 0;
		while(_g < 640) {
			var x = _g++;
			g.drawRect(x,0,1,240 - this.heightMap[x]);
		}
		g.beginFill(0);
		var _g1 = 0;
		while(_g1 < 640) {
			var x1 = _g1++;
			g.drawRect(x1,239 - this.heightMap[x1],1,3);
		}
		var _g2 = 0;
		var _g11 = this.tanks;
		while(_g2 < _g11.length) {
			var tank = _g11[_g2];
			++_g2;
			var x2 = tank.x | 0;
			var deg = Math.atan2(this.heightMap[x2 - 1] - this.heightMap[x2 + 1],2);
			if(tank.above) {
				deg += Math.PI;
			}
			var height = 240 - this.getHeight(tank.x);
			g.curA = 0.5;
			g.curR = 1.;
			g.curG = 1.;
			g.curB = 0.;
			g.drawPie(tank.x,height,12.75 + tank.force / 2,tank.degree - Math.PI / 16,Math.PI / 8);
			g.beginFill(30464);
			g.drawPie(tank.x,height,8.5,deg,Math.PI);
			g.drawPie(tank.x,height,12.75,tank.degree - Math.PI / 16,Math.PI / 8);
			g.beginFill(0);
			g.drawRect(tank.x - 8.5 - 1,height + (tank.above?-19.5:16.5) - 1,19.,6);
			g.beginFill(65280);
			g.drawRect(tank.x - 8.5,height + (tank.above?-19.5:16.5),tank.health * 8.5 / 50,4);
			g.beginFill(8355711);
			g.drawRect(tank.x - 8.5,height + (tank.above?-17.5:18.5),tank.fuel * 8.5 / 20,2);
			var _this = tank.invertionsText;
			var v = tank.x - (tank.above?2:3);
			_this.posChanged = true;
			_this.x = v;
			var _this1 = tank.invertionsText;
			var v1 = height - (tank.above?14:5);
			_this1.posChanged = true;
			_this1.y = v1;
		}
		if(this.bullets.length != 0) {
			var _g3 = 0;
			var _g12 = this.bullets;
			while(_g3 < _g12.length) {
				var bullet = _g12[_g3];
				++_g3;
				g.beginFill(0);
				g.drawCircle(bullet.x,240 - bullet.y,bullet.r);
				g.beginFill(16777215);
				g.drawCircle(bullet.x,240 - bullet.y,bullet.r - 1);
			}
		} else {
			var tank1 = this.tanks[this.currentTank];
			var height1 = 240 - this.getHeight(tank1.x);
			g.beginFill(65280);
			g.drawPie(tank1.x,height1 + (tank1.above?-this.playerIndicatorArrowHeight:this.playerIndicatorArrowHeight),10,tank1.above?-2 * Math.PI / 3:Math.PI / 3,Math.PI / 3);
		}
		var _g4 = 0;
		var _g13 = this.explosions;
		while(_g4 < _g13.length) {
			var explosion = _g13[_g4];
			++_g4;
			g.curA = explosion.a * 0.3;
			g.curR = 1.;
			g.curG = 0.;
			g.curB = 0.;
			g.drawCircle(explosion.x,240 - explosion.y,explosion.r2);
			g.curA = explosion.a * 0.7;
			g.curR = 1.;
			g.curG = 1.;
			g.curB = 1.;
			g.drawCircle(explosion.x,240 - explosion.y,explosion.r);
		}
	}
	,__class__: invertotanks_World
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null?0:byteOffset;
	this.length = byteLength == null?buffer.byteLength - this.offset:byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0?value + 128 & 255:value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
haxe_Resource.content = [{ name : "R_logosmall_png", data : "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTCtCgrAAAABqElEQVR4Xu3U3W6CUBBG0fL+D01RvrQmjTJDD4f52evCRJQIewa/AAAAAAAAAGCudV0/vEIsOUjmTtA0GZsySaPQ7JTJ2ExEdyuYjC0IpMgw2Kmgcg+GtQot5XjYqRwyzYmdyifBzFirrOJOjp2qYJtirEGGXau91E6H8I46PenQXUJcxJF5F7n/0it98PKR3nemEkf07c5U4oi+3ZlKGOiEzlTCQCe0pQxmOq0nNTDTaT2pgZlOq0p3WZRu0mZZFp32BrF+Ecuhe6yNShw5LLUhlhDrQTE+spTa8J9lLbWpHOtvi/3ID3um3clYJ35pvuEXeSbWcyoP8XuNVTPWRRdW+TEcruAf/HVT/G+sVvtVarOuntyAWH2Wq85mTZjZsFgd9qvCZk2b08hY5Zcr92ZNHs/gWLWXK/FmzR/MJbGq7lfKzbprGBfGqrdfl2/W2GT3DiDNYxhhTyfFqvFIJtisOKGnxvLedrR9vGGzLAliPra3PYZ7jnevMSX4z4qDWA7EciCWA7EciOVALAdiORDLgVgOxHIglgOxHIjlQCwHYjkQy2xdvwGqbWFQUdzAmwAAAABJRU5ErkJggg"},{ name : "R_logo_png", data : "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"}];
var __map_reserved = {}
var hx__registerFont;
hx__registerFont = function(name,data) {
	var s = window.document.createElement("style");
	s.type = "text/css";
	s.innerHTML = "@font-face{ font-family: " + name + "; src: url('data:font/ttf;base64," + data + "') format('truetype'); }";
	window.document.getElementsByTagName("head")[0].appendChild(s);
	var div = window.document.createElement("div");
	div.style.fontFamily = name;
	div.style.opacity = 0;
	div.style.width = "1px";
	div.style.height = "1px";
	div.style.position = "fixed";
	div.style.bottom = "0px";
	div.style.right = "0px";
	div.innerHTML = ".";
	div.className = "hx__loadFont";
	window.document.body.appendChild(div);
};
hx__registerFont("R_TITUSCBZ_TTF","AAEAAAAQAQAABAAATFRTSLNh7psAAAEMAAAnQE9TLzIMa0lnAAAoTAAAAFZjbWFw9o/B1wAAKKQAABm8Y3Z0IAOBAB8AAEJgAAAAEGZwZ235x80cAABCcAAAAOlnYXNwABcACQAAQ1wAAAAQZ2x5ZooSYdgAAENsABnvumhkbXibUNk/ABozKAACdAhoZWFk4ItHuQAcpzAAAAA2aGhlYQXGI3IAHKdoAAAAJGhtdHirIu7jABynjAAAnPBsb2NhJQLnlAAdRHwAAJz0bWF4cCldBbsAHeFwAAAAIG5hbWUioXF1AB3hkAAABCZwb3N0dHb56AAd5bgAAM6gcHJlcHYAB1YAHrRYAAAADAAAJzwBARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEZGRkBAQEBARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBARkZAQEBARkZGQEBGQEBAQEBAQEBAQEBARkZAQEBAQEBAQEZGRkBAQEBAQEBAQEBAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEBAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEZGRkZGQEBARkZGRkZGRkZGRkZGQEBAQEBAQEBAQEBGRkZGRkZGRkZGRkBAQEBGQEBAQEBAQEBAQEBAQEBAQEZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBARkZGRkZGRkZARkBGRkBGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEBGRkZAQEBARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBARkZGRkZGRkZGRkZGRkZGRkZGRkBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBGRkZGRkZGRkZGRkZAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBARkZGRkZGRkZGRkBGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkBARkZGRkZGRkZAQEBARkZGRkZGRkZGRkZGRkZGRkZGQEBARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBAQEBGRkZGRkZGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBAQEZGRkBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBGRkZGRkZGRkBARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARkZGRkZGRkZGRkZGRkZGRkZAQEZGQEBGRkZGRkZAQEZAQEZGRkZGRkZGRkZGQEZGRkZAQEZAQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBGQEBGRkZGRkZGQEBGQEBGRkBAQEBAQEBAQEBARkZGQEZAQEZGRkZGRkZGRkZGRkZGRkBAQEZARkZARkZGRkZAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEZGRkZGRkZGRkZGRkZGRkZAQEBGRkBARkZGRkZGQEBGQEBGRkZGRkZGRkZGRkBGRkZAQEBGQEBGRkZGRkZGRkZGRkZGQEBGQEBGRkZARkZGRkZGRkBARkBAQEBAQEBAQEBARkBAQEBAQEZAQEBAQEBAQEZGRkBGQEBGRkZGRkZGRkZGQEBARkZAQEBGQEZGQEZGRkBGRkBAQEBGRkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARkZAQEBGRkZAQEBAQEBGRkBAQEZGQEBARkZAQEBGRkBAQEZGQEBARkZAQEBGRkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBGRkBAQEZGRkBAQEBAQEZGQEBARkZAQEBGRkBAQEZGQEBARkZAQEBGRkBAQEZGQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQEBAQEBAQEBGRkBAQEBGQEZARkZARkBARkZAQEBAQEBAQEBARkZGRkZGRkZGRkZGRkZAQEZGRkZGQEBAQEBARkBGRkZAQEBAQEZGRkBAQEBAQEBARkZGRkBGRkZARkZGRkZAQEZGRkZAQEBGQEBAQEBAQEBAQEBAQEBAQEZGQEBARkBAQEBARkZARkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBGRkZGRkZGRkBAQEBAQEBARkZGRkZGRkZGRkZGRkZGRkZGRkBAQEBAQEBAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZAQEBGRkBAQEBGRkZGQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBAQEBAQEBGQEBAQEBAQEBAQEBGRkZGRkZAQEBAQEBAQEBARkZAQEBAQEBAQEBAQEBAQEZGQEBAQEBAQEBAQEBAQEBGRkBAQEBAQEBAQEBAQEBARkZAQEBAQEBAQEBAQEBAQEZGRkBAQEBAQEBAQEBAQEBGRkZGRkZAQEBAQEBAQEBARkZGRkZGQEBAQEBAQEBAQEZGQEBAQEBAQEBAQEBAQEBGRkZGQEBAQEBAQEBAQEBARkZGRkZGRkZGQEBAQEBAQEZGRkZGRkZGQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBGQEBAQEBAQEBAQEBAQEZGRkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZAQEBAQEBAQEBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkBGQEZAQEZAQEBAQEBARkBAQEZGQEBGRkBGQEZGRkZGRkBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGQEZARkBGRkZGQEBGRkZGRkZGRkBGQEZGRkZGRkZGRkZGQEBGRkZGRkZGRkZGQEBAQEZGRkZGRkZGRkZGRkZGRkZGQEZGRkZGRkZGQEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZARkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZ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BQUFBQcFBQUFBQQCCQgHBAQEBAQEBAQEBQQJAgICBAQEBAQFCQwDAwEHBwQGBwYFBwQHBwcHBAUFAgMHAwgEAQcEAwMDBwcHBwcHBQUEBQcEBwQHBAYEBgQGBAYEBwYHBQYEBgQGBAYEBgQHBAcEBwQHBAcFBwUDAgMCAwIDAgMHBQQCBQQEBgIGAgYDBgMGAgcFBwUHBQYHBQcFBwUHBQcDBwMHAwUDBQMFAwUDBgMGBAYDBwUHBQcFBwUHBQcFCAYHBAYEBgQGBAMHBAkHBwUEAQMHAgcIBAcIBwMHBgUGBgYHBwMHBwgHBgcHBQUGBwcHBwcDBwUEBQMEBQUEBQQEBQUDBQQFBAQFBQQFAwQFBAYGAwQFBAYGBwUGBQMDBAgJBwYGBwcGBgUGBggFBwcGBggHBwcFBgYGBwcHBgkJBwkGBgoGBAUEBAUEBgQFBQQFBgUFBQUEBQQGBAUFBwcFBgQEBwQEBQQEAwICAgcHBQQEBQUECAYIBggGBAkEAgMDBgMDCAQGBggECQcHBwcHBwkECQQJBAQHBwIHBwcHBwcFBQkJCQkJCQkJCQkJBgkJCQkJCQkGCAYGCAUFBQUHBwkJBwgHBwgICAgFBgUFBQcFBwQFBAQIBQcDBwUFBwcGBwUHBgYFBgQDAwYIBQYFBQYDAwUCAwQCDAoICQcECggGBwQDAgcFBwUHBQcFBwUHBQQHBAcECQcHBAcEBwUHBQcFBQQCDAoIBwQEBQUEBAQFBQQEBQQEBQQDBQUFBAQFBQUDAwIDAwMEBwcHBQYEBQYFBQMEBAMDAwQDBAQDBAMDBQUEBQYEBQQEAwMDBAUEBAYFAgQEBgMDBwYHBAQFBAQBAwMEAwYEAQICAgICAgICAwMDAwQEBAQEBAQCAgICAwMDAwIEAgMEAwMDAwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwICAgUFBgcGBgcFBgQJCAYEAwUEBAMHBQUEBwUFBAQCBwUHBQoHCgYMCQUFBwYHBQcFBgUGBAkGBQQFBAkHBQQHBQYFBgUHBQcFCQYIBgcEBgQGBAcFBwUHBQcFBgUGBQYFBgQGBAMIBgYEBwUGBAAAAAAAAAAAAAAAAAAAAwACAAACAAUEAwQFAgIEBQMEBQQFBQICBQQEBQQEBQQFBAUFBQECAwYPBAIDBAMDBwcCAgMDAgMDAwMDAgMCAgMCAgMDAgMDAwMDAgMCAgYGBwcJBwYFCAgICAQEAgIDAwUFBAUEBAQEBAYEAwUFAwUEBQUEBAQEBAUDBQUGBAMEBQYEBQQFBQUFBQUFBQcHBwcHBwcHBAQEBAQEBwcICAkIBAQEBAQEBAQICAoKCgoJCQMCAwMCAgMDBAQFBgYFBQUFBQUFBQUHCAkJCQgEBAQEBAQECAkJCQYGBgYGBgYGBwgJCQgICAgFBQQEBAQDAwUFBAQGBgUFBQUFBQUFBwcHBwcHBwcEBAQEBAQEBAgICgkKCgkJBgYGBgYGBgYHBwkJCAgICAUFBQUFBQUHBwcHBwICAgMDBAUEBAQICAkJBwMDAwMDAwMDAwMDBQUDAwMEBAQEBQUEBAYGCAkGAwMCBgYGBgYICAkIBwMBBwQHBAkHBgQFBAUECAYEBAUDBwUHBQcFBgQGBAYEBgQGBAYFCQYFBQUFBAUEBAYGBAMGBQQEBQUFBgUFBgUFBQYGBQUFBAUFBQUFBgICAQQCAwMGBAUFBAQEBAYFBAMGBQQEBAQEBQMEAwQDBgMFBAQGBAQDBgUEBQUCBwcHBwkGCAcHBAgHCQUFBwgGBwgGBwUFBwgHBQUFBAYHBQYFBwcFBQQHBwQAAAACBggEBAYHBwYFBQUFCAgICAYGBQYFBQUGBgYFBQUFBQUFBQUFBQUGBQYGBQQEBgcHBQYFBgUABAIDAgAAAAAAAAAAAwMCAgAHAAAAAAYGBQYFBQYFBwYAAQIDBAMEAwQEAwUEBAMABQQGBgYGBgYGBgMFBQUFBQUFBAMEBAICBQMEBQQFAgUEBQQEBAUEAgQFBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBQYICQMFBggJAwUGCAkDBAUHCQQGBQgHBAUEBQUEBgQEBAQGBAYGBAYGBwUGCAgGCAYGBwkIBgcIBwYGCAcGBwgGBAUEBgYEBQYEBgYEBgQEBQUGBgUGBQUGBQUFBgUFBQcEBwQGBAYEAwMDAgcFBwUGAwYDBwUHBQcEBgUGBQYFBgQHBAcEBwQHBAcEBgQGBAYEBgQGBAUDBwQHBQcFBwUHBQcFAwIDAwYFBwUHBQYCBgIGAgYCCAcIBwgHBwUHBQcFBwUHBQcFBwUHBQUFBQUGAwYDBgMGAwUDBQMFBAUDBQMGAwUDBQMGAwcEBwQHBAcEBwQGBAYECAYIBgcEBwQGBAYEBgQGBAUDBgQFAwcEBwQHBQcFBwUHBAcEBwQHBAcEBwQHBAYEBgQGBAYGBgUGBQYEBgQDAgMCBwUHBQcGBwUHBQcFBwUHBQcFBwUHBQgFBwQHBAgFCAUIBQgFCAUGBAYEBwQFBAMEBAAAAAAFBAQEBQUFBQUDBQUFBQQCAgIDAwMEAwQEAwMDAgIBAgICAgICAwIFBQMDBQUDAwUFBgYEBAYGBAMEBgYEBAMDAwMDAwMDBgYICAYGCAgHBwoKBwcECgQKBgQEBAQEBAYGBgQEBAQEBAQEBAYGBgUDAwMDBgYGAwMFBwcGBgcHBQQEBAUEBAQEBAYGBAQFBAQEBQUCAgQEBQQEBAMCBQUFAwQDAwMDAwUFAwQFBQMDAgUFAwMEBAQEBAQEBAAAAAAAAAAAAgICAgICAgICBQUFBAQEAwMDAwgICgoHBwQEBgQFBAQFAwMFAwUFAAICAgIDAwMFBQUFBQUFBQUEBAQEBAQEAwMDAwMDAwMDAwMDAwMDAwMDCAgICgoHBAYGBgYGBgQEBQgFBQUFBQUFBQUFBAQEBQUFBQUDAwICAwMDAwMDAwMFBQUFBQUFAwQCAgMDAwQDBAQDAgIFBQMDBQUDAwUFAwMFBQMDBQUDAwUFAwMGBgQEBgYEBAQEBgYEBAYGBAQGBgQEBgYDAwMDAwMDAwMDAwMFBgQEBQYEBAUGBAQFBgQEBQUFBQMCAwQDBAQGBQUFBQUEBQQFBQQEAwMDAwMDBAMDAwMDAwUFAwMDAwICAgICAgICAgICAgICAwICAgIDBQYCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHBwcHBwcFBQYIBgUFBQUFAwMDAwMDAwMDAwMDAwMDAwMDBwkGBAQEBAQFBAQEBAQEBAQEBAQEBAgEBAQEBAQEBAQEBAQEBQQEBAQEBAQEBAQFBQQEBgYGBgYGBgYGBgQEBAQEBQUFBQQFBAQEBAQFBAUFBQUFBQYGBQUFBQUFBQUGCQcFBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAcHBAQDAwUEBAQEBAQEBAQFBQQEBAQEBAQEBwYEBAkGBAUFBQUFBQUFBQUGBQUFBQUIAwICBggDAwMFAAMHBAYGBQYGBggGBQcGBAcGBgMDAwUFAwMFAwMFBQUFBgUFBgUHCAMDBgMDAwYGBgYGBwUHCAcHAwQGAwMDBgYGBgYGBgYHCAkICQgJBgUFBQcHBQUHBQUHBwcGBQYGBgYEBgUGCAgFBgYFBgcGBwUFCAUFBwcFBQcFBQcHBwgIBwcHBgYGBgYGBwcHBwcHBwkGBgYGBgYFBgQHBwcHBwYGBgYGBgUGBQUHBwYHBwcGBwUGBQYHBgcGBgYGBwQGBgYGBgYIBgYGCAYGBQcICAgIBgYGBgYGBgcHBwkJBwkJBwcJCQgICAsLCAsLCAgICwsICwsGBgYGBgUGBQUEBQcGBgUEBAQEAwUGBAQGAwQEBAYHBAQHBAQHBgcGBwcGBgUHBwQEBwQEBAcGBwcFBgYGBgUFAgIFAwMCBQUFBwYHBwcCAwUDBQQFCQQEBAcHBAQHBAQHBgcHBwYGBgYDBgUFBwcFBQUFBQUEBQUGCQUFBwcFBQcFBQcHBwgHBwcHBwcHBwcHBwcHBwYGBgcHBwcHBwcGBwMFBgYFBQUFBwcHBwYGBgYHBwYGBgYGBgUGBQUGBgYGBgYGBgQGBwcGBgYHBgYFCAYGBQgIBgUGBgcGBwYHBwYGBggIBggIBgYICAYGBgkJBgkJBwcGCQkGCQkHBwcHBwcHBwcGBggICAMEBAQEAwUFBwIFCwsDAwYHBwcHBwQHCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJBAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJCQkJCQkDBQUGBgUFBgQFBgUGBwcFBQUGBwcFBQUFBQYGBgUFBQUFBQUEBQUFBAUGBgUFBQUEBAAEBAAAAAAAAAAGAwUEAwMEBAAAAAAAAAAABgUFBgUGBgUHBgYGDQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCAgJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQUCAgICAgICAgIDAwMCAwICAgICAgMDAgMCAgMCBQUFBQUFBgcEBwUEBQUFBQUFBgUFBQUFBQQEBQUFAwMFBQUFAwMDBQUDBQUFBQUFBQUFBQUFAwMFBQUFBQUFBQgIBgUFBQUFBQUFBQUFBQIDAwIDAgMCAgIDAgICAwICAgICAgICAwICAgICAgMCAgICAgICAwICAgICAgICAgICAgUEBQUFBQUFBQYFBQUFBQUFBwcHBgUCAgICAgICAgIDAgIGBgUEBQYGCAYFBQkHBwMCAgICAgICAgICAgICAgIHBwcHBwcHBwcHCAIHAwIDAwMCAgICAgICBAUHBAIFBwcHBwcHBwcHBwcHBwcHCAcHCQcHBwcHBwcIBwoJBwcFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQYFBQUFBQUFBQUGBwYICAYGBQUFBQgHBAQEBAQEBAQEBAQICAYHCAcGBgcGBgYGBgYHBQUEBQUFBAQFBAQEBAQEBAQFBQQFBgUIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUIBQQEBQUFCAUDBQMDAwcDAwMDAwMIBQYDBQMDAwMEBAYEBQQEBAYFBgMFAwMEBAQEBAQEBAUEBAQFBQUICAMFBAQFBAIDAwMDAwMDAwMDAwMDAwMEBAQEBQYGBQUFBQUFBQUFBgUFBQUCAwMDBAQAAgIAAQIAAgACAgIAAgACAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAFBQMDBAQGBgQEBgYDAwMDAwMDAwMDAwMDAwMDCAgGBgQEBQQFBQQEBQUEBAUGBAQFBgQEBAQCAgQEBQUDAgMDAwMFBQMDBQUDAwUFAwMFBQQEBAQFBQUCAwIAAwIFBQYDAwMDAgMDBAMEAwMDAwMDAgMDAgICAgQDAwMDAgIDBAQCAwIDAwICAgICAgICAgICAgICAgQEBQQEAwMEBAMCAgQEAwMDAwMDAwMEBAQDAwMDAwMDAwMDAgICAwQFBQMDAwMDBAMDAwQDAwMDAwIEAgMCAwICAgICAwMDAwMEAwICAgQGAgICAwMDAwMDAwMDAwMEBAQDBAUEAwMEBAcGCAYIBQUFBQYFBgYGCAUGCAQGBgQGBgQFBQYGBQYGBQUFBQUGBQUFBgUGBQYFBgYGBQYFBQYEBwcIBQYHAwUEBQQFBgUGBwYGBgYHBQUHBwUGBQUFBQcHBQcFBQcHBQUGBggIBggGBgkJBwcIBggGBgYIBgUHBgUGBAUEBgYEBgYEBQgICAgICAgGBAQGBQYGBQUHBgUHBwcFBwYFBwcGBwYGBwcGBwQGBgYFBQcHBAUGBQYGBgUFBQcJCQcIBgYICgkJCAoICQkEBgYEBgUEBgQGBgQGBgQGBAYFAwQEBQUGBgUGBQUGBgYGBwYGBwgGBgYFAgMDAgMEAgUEBAQDBAQEBQQDBQUFBAUFBwQEBgYJCAgHCAcGBgcGBwkIBwcNBQcGCAcHCggGBgkIDAwMCAgGBgcHAAAAAAAAAAAAAAAJBwkHAAkHCAYAAAAFBgQDBAEEAwMFBQQGBQUEBAMFAwUDBAQEBAYGBAUFBQIFAwUBBQUFAwUFBwQFAgUFBAQEAwUEBgYHAgQEBQYFBggFCAcGBwIFBAcGBwUGBQUFBQUDBQMCAgUGBgcECwsIBwcHBwcHBwcHBwcHBwcHBwcHBwkHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHCQUJCQkJCQkJCQkJCQkAAAYGBgYHBgYGBgcGCAgCBggGBgYGBggGBwgIBgcIBwYGBwYGBgYGBgYGCAgGBwgHDQoFBwcHBwgHBwcHBwcHBwcHBwkKCA0KDAsJBwcGBgYHBgYGBgYGBgYGBgcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYICQYGBgYFBQUFBQcFBQUFBwcHCQcHBwcHBwcIBwcHBwcHBwcHCQoJCAcHDQoLCQUFBwcICQcHBwcJBwcJBwcHDg4LCwUDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBQUFBAQEBAQEBAQEBAQFBQUFBQUEBQcHBwcHBwcHBwgHBwcHBwcHCAkJCAkJCAgHBwcICAkIBwcNCwoKCgoFBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgkGBgoFBQgICAgICAgICAgICAgICAkICAoICAgICAgICggLCggICAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgHBwcHBwcHBwcJCggJCQgHBwcHBwwMBQYGBgYGBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgICAoHBwcFBwcHBwcHBwcHBwcHBwcHBwcHBwcFBQUFBQUFBwUFBQUFBwcHBQcHCAcGBQgIBgUFBwcHBwcHBwgHBwUIBQcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgICQcHBQUGBAQECAQEBAYHBAQEBAQEBAQFBAQEBgYFBQUFBQUFBQUFBgcFBQgIBgUFDAkGBQgGBgYGBQYGBgYHBgYGBgYGBgYICAcHBgcJCAYGDQoIBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCggHBwUFBQUFBQUHBwcHBwcHBwcHBwcHBwcHBwgHBwAFCAgICAgICwsFBQUFBwcHBwcHBwcIBwgHBwcJCAgIBQUFBwcHBwcHBwcHBwcHBwgJBwoHBwcGBgYGBgYGBgYGCAYGBgYGBggHBgYNCgUFBQUDAwMDAwMDAwMDAwMJCQkGCQcFBQcHBwkGBAQEBAQFBAQEBAQEBAQEBAQEBAgEBAQEBAQEBAQEBAQEBQQEBAQEBAQEBAQFBQQEBQUGBgYGBgYGBgYGBgYFBQQEBAQEBQUFBQUEBgcFBAUEBAQEBAUEBQUFBAUFBQQEBQQEBAQEBAQEBQUEBQYFCAgFBQUFBQUFBgYFBQUFBQUFBQcHBgkHCAkHBQUFBQQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAcHBAQEBQUFBQMDBQUFBQUEBAQHBAQEBAQEBAUFBAQEBAQEBAQHBwcGBAQJBgkGBAUFBQUFBQUFBQYFBQUFBQUICAgFAwICAgICAgICAwICAgMDAwICAwIDAwIDAgMCAgIDAgICAwICAgIEAgQCAgIFAgICAgICAgICAwICAgUEBQUFBQUFBQYFBQUFBQUFBwcHBgcHBgYFBAUGBggGBQUJCQcHBwgEAwICAgICAgICAgICAgICAgMCAgMDAwICAgICAgIEBQcEAgUHBwcHBwcHBwcHBwcHBwcIBwcJBwcHBwcHBwgHCgkHBwcFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBgcGCAgGBgUFBQUIBwUEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBQQEBAQEBAQFBAUEBAUEBAQEBAQEBAUEBQQEBAQEBAQEBAUFBQUFBAQGBwcIBAUEBQQEBAQFBQQFBwcHBwcHBwcHBwcHBAQEBAQEBAYEBQQEBQgGBgQGBwgGBQQICAYFBQUFBQUFBQUGBQUFAwMDAwMDAwMDAwMDAwMDAwMDAwUDAwMDAwMDAwMDBgYHBQMDBQMDAwcDAwMFBgMDAwMDAwMDBAMDAwUFAwMDAwMDAwMDAwUGAwMHBwUDAwgIAwUDAwMDAwMFAwMEAwMDAwMDAwMFBgQEAwQGBQQEBwcGBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBwUFBQUFBQQEBAQEBAQEBAQEBAQEBAQEBgYGBgYGCAQEBAQEBAQEBgQFBAQEBgUGBgQEBAQEBAQEBAQEBAYHBAcEBAQEBAQEBAQEBAUEBAQEBAQGBQQECAgGBQMDAwMDAwMDAwMDAwICBgQGBAMDBQUEBQMDBQQEBAQEBAQEBAUEBAQEBAQEBAUFBQQDBAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBwcHBwcHBwcHBwcHBwcHBwcFBQYHBQUFBQUHBQcFBQYFBQYGBgYGBgcIBgYGBQYHBwcFBQcFBQMDAwMDBAYEBQMEBgQDAwMDAwMDAwMGBwgIBwcHBQUGBQUHBwcIBwcHBQUHBQUGBQUFBQUFBQUFBQUFBQUFBQYFBQcHBwcICAkJBwgHCAcHBwUFBQcFBwcFBwcHBwcFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUCAgIFBgICBAQEBgQGAgIFAgIEBAQEBAQEBAQEBAIEBQUCAgIFAgIDAwMDAwMDAwMDAwMDAgIDAgIDAwMCBQQFBQQEBAICBAICAgICAgICAgICBQICAgICAgQCAgICAgICAgUFBQIDAgIEBAQEBAQEBAQEAgICBAQCAgIFAgQEAgYGBgIGBQICAgIFBQICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBQUFBQUFBQUFBwcFBQUGBgYFBQUFBQUHBwUFBQcHBQUFBgYFBQUJCQUFBQYGBQUFCQkFBQUGBgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEBAUFBQQEBAUFBQUFBQUFBQUFBQUFBQUEBAUFBQYGBQUFBAQFBQUHBwUFBQQEBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQFBQUDBQUDAwUDCAUFBQUEBAMFBQQHBAQEBQUFBQUFBQUEBAUFBQUFBQUFAwUFBQUFBAQFBQUFBQUFBQUFBQQEAwQEBQUEBgQEAwQFBQMDAwICBQUFBQUFAwUDAwMFBQUFBQMDAwUFBQUFBQUFAwMDAgUCAgIFBQMDAgMFBQMDBAMFBQUDBQUFBQUFBQUFBQUFBQUFBQMFBQUFBAUFBQUFBAUFBAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUDAwUAAgMDBAUFBQUFBQUFCAYGBgYGBgYHBQcEBQYGCAcEBgUFBQUFBQUFBQUFBQULBwoHCQcJBgsICwcLCAsHCQYLBwoHCQcJBgkGCwgLBwQFBQUCAgUFBQUAAAAABQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQUFBQUABQUFBQUFBQUFBQUAAAAAAAAFBQUFBQUFBQUFAAAFBQUFBQUFBQUFBQUFBQAABQUFBQUFBQUFBQUFBQUAAAUFBQUFBQUFBQUFBQUFAAAFBQUFBQUFBQUFBQUFBQAAAAUFBQUFBQUFBQUFBQUAAAAAAAAFBQUFBQUFBQUFAAAAAAAABQUFBQUFBQUFBQAABQUFBQUFBQUFBQUFBQUAAAAABQUFBQUFBQUFBQUFAAAAAAAAAAAGBQUFBQUFBQAAAAAAAAAABQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUABQUFBQUFBQUFBQUFBQAAAAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBQUFBQUFBQUDBwUDCAYEBgYDAgUIBAQFBQQEAwUFBQUFCAQFBQUFBQQFBQYFBQUFBQUFCAUFBQUFBQUFBAUEBQQDAwcGBgUGAwMDAwUFBQUFAwUHBwcGCQkEBAcEAwYICAIJCAUFCgYGBwYGBgUEBgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBQUDBgMFBwUFBQYFBAUEBwYEBQUHBQQHBwUHBQUHBQQHBAMFBQUEBwcEBQUEBAQEBAQEBwcHBQUFBQcHBwcHBQUDAwMDAwMDAwMDBQcFBgYGBgYGBQYGBgYGBwYGBAUEBQQEBAYGBgYGBgYGBgYEBAQEBAQEBAQEBAQFBQoEAwYFAwQDAwQEAAAAAAAAAAAAAAUEBQQHBgQHBQYGBQUGBAMAAAAEBQQDCAoEAgQDBgcGBAYDAwMEBAYFAwUDBgYDBAQEAwQEBAQDAwMDAwQEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHBwQEBgUABgkEBgYGBgcJCAYGBAQCBgQEBQIEBAYHBQYEBgUHBQgGBgcHBwYFBAgGCQcGBAYFAwUEBAYHBAQFBQQEAgMEBAYEBQQFBAUIBAUEBAQEBAUFBgUEBgQDBAYDBAUEBQQEBgQEBQQEBQUCAwQEBgQEBQQEBAQFBgMDAwQDAwMDAwMDAgMFAwMDAwMDAgMDBQMEAwMDBAMCAgMDAwMDBAMHCwcFCQkJCQcHBgYGAwsICgYFBQcFBQQDAgYFBQMFBAkGBgQGBQYEBgQHBQIBBgQGBAcFBgQFBAcFBgQFBAYEBgUHBQgGBwUIBgkHBQQHBQUDBwUHBQkHBQQGBAkGBQQFBAYEBgQGBQUDBQQGBQoHBgkCAgUEBwYFBgUFBQMGCAgGAwUDBQYGBAYFBAcHCAcIBQgGBggGBwQICgYFBgQHCAgHBQgHBwcHBgYHBgYKCgsHBgUFBgUGBAYFBQYGCAUFAwYHBQMEAwUGBgUEBgUFBQUFBQUFBQgHCAUFBwUIBggGBwUHBQMCBgQGBAYFBQgFBgQFBwQEBgYGBgQEBwcGBQQEBAYGBgQEBgcEBQQGBwAAChEFAgQEBQgCAwIDBQUFBQUFBQUFBQMDCAgIBQkHBwcIBwYICAQEBwYJBwgGCAcFBggHCQcHBwMDAwoFBQUFBAUFAwUFAwMFAwgFBQUFBAQDBQQGBAQEBQUFCAMDBAYEBQUGAwUIBgUDCAUFBQQFAwUFBwcHBwcHCgcHBwcHBAQEBAcICAgICAgICAgIBQUFBQUFBQcEBQUFBQMDAwMFBQUFBQUIBQUFBQUEAwoIBwUFBQUFBQUFBQUFCgICAgQEBAUFBgoNAwMCCAcFBggHBggFCAgICAUFBQIDBwMJBQIIBQMDAwgICAgIBwYFBAUHBQcFBwUHBAcEBwQHBAgGCAUHBQcFBwUHBQcFCAUIBQgFCAUIBQgFBAMEAwQDBAMEBwUEAgYFBQYDBgMGBAYEBgMHBQcFBwUGBwUIBQgFCAUHBAgEBwQFBAUEBQQFBAYDBgQGAwgFCAUIBQgFCAUIBQkGBwQHBAcEBwQDCAUKBwgFBQEDCAMICQUICQgDBwcGBwcHCAgEBwcJBwYICAYGBgcIBwgIBAcGBAUDBAYFBQUFBAUFAwUFBQUFBQUEBQQFBgUGBwMFBQUHBwgGBwUEBAQJCggHBwgIBgcGBwcJBQgIBwcJCAgIBgcGBwgHCAcKCggKBgcLBwUFBQQFBQcEBQUFBQcFBQUFBAUEBwUFBQgIBgcFBAgFBQUFBAQDAwMHBwUFBQUGBAkGCQYJBgQKBQIDAwYEAwkFBwcJBQoHBwgICAgKBQoFCgUFCAcCCAgICAgIBgYKCgoKCgoKCgoKCgcKCgoKCgoKBwkGBgkGBgYGBwcKCggICAgJCQkJBQcFBQUIBggFBgQFCAYHAwgFBQgHBwgGCAcGBQcFAwMGCQYGBgYHAwQFAgQFAw0LCQoIBAsJBwcFBAMIBQgFCAUIBQgFCAUFBwUIBQoHCAUIBQcFCAUIBQUEAg0LCQgFBQUFBQUFBQYFBQYFBQYFAwYFBQUFBQUFAwMCAwQDBAcIBwYGBQUHBgUEBAQEBAQFBAQEBAQEAwYFBQUHBQUEBAQEBAQFBAUGBQMFBAYEBAgHCAUFBgQEAgMDBAQGBAEDAgICAwMCAgMDAwMFBQUFBQUFAwMCAgMDAwMCBAIDBAMEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCAwMFBgcIBwYIBQcFCgkGBQQGBAQDCAYGBAcFBQUEAwcFCAULBwsHDQoGBQgHCAUHBQcFBwQJBwYEBgQKBwUEBwYHBQcFCAYIBgoHCQcIBQcFBgUHBggFCAYIBgcGBwUGBgcFBwUDCQcGBQgFBwUAAAAAAAAAAAAAAAAAAAMAAgAAAgAFBQMFBQMCBQUDBQUFBQUCAwUFBQUFBQUFBgUFBQYBAwMHEQUDAwUDAwgIAgIDAwMDAwMDAwIDAgIDAgMDAwMDAwMDAwIDAgIHBggHCggGBQkJCQkEBQICAwQFBQQGBAQEBAQHBAQFBgQFBAYGBAQEBQUFAwUFBwQEBAUGBAYEBgYGBgYGBgYICAgICAgHCAQEBAQEBAgICQkKCQUFBQUFBQUFCQkLCwsLCgoDAwMDAwMDAwUFBgYGBgYGBQUFBQUFCAkKCgoJBQUFBQUFBQkKCgoHBwcHBwcHBwgICgoJCQkJBgYEBAUFBAMFBQUFBwcGBgYGBgYGBgcHCAgICAgIBQUFBQUFBQUJCQsKCwsLCgcHBwcHBwcHCAgKCgkJCQkGBgYGBgYGBwgICAcCAwIDAwUFBQUFCQkKCggDAwMDAwQEAwMEBAYGBAMDBQUFBQUFBQUHBwkKBwMDAgcHBwcHCQkJCQcDAQcFCAUKBwcFBgUGBAkHBQQFAwgFCAUIBQYEBgQHBQcFBwUHBQkHBgUGBgUFBQUHBwUEBgYEBQYGBgYFBQYFBQUGBwUGBQUFBQYGBQYDAwEEAwQDBwUFBQUFBAUHBgQDBwYFBQUEBQYDBQQFBAcEBgUFBwUEBAYFBQYGAggICAgKBwgIBwUJCAoFBggIBggIBwgGBggJBwUGBQUHCAYGBggHBQYFBwgEAAAAAgcJBQUGBwgHBgYGBgkJCQkHBwYGBgYGBgcHBQUGBgYGBgUGBgYGBwYGBgYEBAcICAYHBgYFAAQCAwIAAAAAAAAAAAMDAgIACAAAAAAHBwYGBgYHBggHAAECAwQEBAMEBAMFBAQEAAYFBwYHBwcHBwcEBgYGBgUFBQUDBQUDAwUDBQUFBQMFBQUFBQUGBQMFBQUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAUHCQsEBQcJCwQFBwkLAwQGCAoEBwYJCAUFBQUFBQcFBAUFBgUGBwQHBggGBwkJBggHBwgKCQcICQcHBwkIBggIBgUGBQYGBQYHBQYHBAcEBAYGBgcGBgYGBgYGBgcGBgYHBQcFBwUHBQQDBAMIBQgFBwQHBAgFCAUHBAYFBgUGBQcEBwUIBQgFCAUHBQcFBwQHBAYEBgUGAwgFCAUIBQgFCAUIBQQDBAMHBQcFBwUGAgYDBgMGAwkICQgJCAcFBwUHBQcFBwUIBQgFBwUGBQYFBwQHBAcEBwQFAwUDBQQFBAUDBgMGAwYDBgMIBQgFCAUIBQgFBwUHBQkGCQcHBQcFBwUHBAcEBwQFAwcEBgQHBQgFBwYIBggFCAUIBQgFCAUIBQgFBwQHBQcFBwUHBgcFBwUHBQcFBAMEAwgFBwUIBgcGCAYIBQgFCAYIBggGCAYIBggFBwUJBgkGCQYJBgkGBwUHBQcEBgUEBQUAAAAABQUFBQYGBgUFBAUFBQUEAwMDAwQDBAQEBAMDBAICAgICAgICAgMDBgYDAwYGAwMGBgcGBQUHBgUDBQcGBQUEBAQEBAQEBAYGCQkGBgkJCAgLCwgIBQsFCwcEBAQEBAQHBwcEBAQEBAQEBAQHBwcFBAQEBAcHBwQEBQgIBwcICAUEBAUFBAQFBAQHBwQEBQUEBQYGAwMFBQUFBAQDAwUFBQQEBAQEAwMFBQQEBQUDAwMFBQQEBAUFBQUFBAUAAAAAAAAAAAICAgICAgICAgYGBgUFBQQEBAQJCQsLCAgFBQcFBgUEBQQEBQQFBQACAgICAwQEBQYGBgYGBgYGBQUFBQUFBQQEBAQEBAQEBAQEBAQEBAQEBAkJCQsLCAUHBwcHBwcFBQYJBgYGBgYGBgYGBgUFBQUFBQUFBAMDAwQEBAQEBAQEBQYFBQUGBgMFAwMDBAMEBAQEAwICBgYDAwYGAwMGBgMDBgYDAwYGAwMGBgMDBwcEBAcHBAQFBQcGBQUHBgUFBwYFBQcGBAQEBAQEBAQEBAQEBgYEBQYGBAUGBgQFBgYEBQUFBQUDAwQEBAQFBgUGBQUGBAYEBgYEBQQEBAQEBAQEBAQEBAQFBQMDAwMCAgICAgICAgICAgICAgMCAgICBAUHAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCAgHCAgIBQUHCAcFBQUFBQQEBAQEBAQEBAQEBAQEBAQEBAgJBgUFBQUFBQUFBQUFBQUFBQUFBQUIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgYFBQcHBwcHBwcHBwcFBQUFBQUFBQYFBgQEBAQEBgQFBQUFBgYGBgUFBQUFBQYFBwoIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQEBQUFBQUFBQQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEBQUFBQUFBQQFBQUFBQUFBQUFBQUICAUFBAQGBQUFBQUFBQUFBgUFBQUFBQUFBQgHBQUKBwQGBQUFBQYFBQUFBgUGBQUFCQMDAwcJAwMDBQADBwQGBwYHBwcJBwYIBgQIBwYDAwMGBgMDBgMDBgYGBgYGBgcFCAgEBAYEBAQGBgYHBggGCAkICAQEBgQEBAYGBgcGBgYGBwkKCQoJCgcGBgYICAYGCAYGCAgIBgYHBwcHBAcGBwkJBgcHBgcIBggFBQkFBQgIBQUIBQYICAgJCQgHBwcHBgYGBggICAgHCAcKBwcGBgYGBQYFBwgIBwcHBwcHBwcGBgYGCAgHCAcHBwgGBgYGCAcHBwcHBwcEBwcHBwcHCQcHBggHBwYICQkJCQcHBwcGBwYHBwcKCgcKCgcHCgoJCQkMDAkMDAkJCQwMCQwMBgcGBgYGBgYGBQUHBgYGBAQEBAQGBgQFBgMFBQUHBwUFBwUFBwcHBwgHBwcFCAgFBQcFBQUIBwcIBgcGBwYFBgMDBgMDAwYFBggHCAcIAwQGBAYEBgoFBQUICAUFCAUFCAcICAgHBwYHAwYFBggIBgYGBQYGBQYFBwoFBQgIBQUIBQUICAgICAgICAgICAgICAgIBwcGBwYICAgHBwcHBgcEBgcHBgYGBgcHBwcHBwYHBwcHBwYHBgcGBgYGBwcGBgcHBwYEBwgIBwcHBwcHBgkHBwYJCAYGBgcIBwgHCAcHBwcJCQcJCQcHCQkHBwcKCgcKCgcHBwoKBwoKCAgICAgHBwcHBgcJCQkEBAQEBAQGBQcCBgwMAwMHCAcIBwgFBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgUKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCgoKCgoKBAUGBgYFBQcEBgcGBggIBgYFBwgIBQUGBgUGBgYFBQYGBgYFBQYGBgUFBwYGBgYFBQUABQUAAAAAAAAABwMGBAQEBQQAAAAAAAAAAAcFBQcGBgYFCAYHBg4KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgkJCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoFAwMDAwMDAwMDAwMDAwMDAwMCAwIDAwMDAwMDAwUFBQUFBQcIBQgFBQUFBQUFBQYFBQUFBQUEBAUFBQQEBQUFBQQEBAUFBAUFBQUFBQUFBQUFBQQEBQUFBQUFBQUICQYFBQUFBQUFBQUFBQUDAwMDAwMDAwMDAwMDAwMDAwMDAgIDAgMDAgICAgIDAwICAgMCAgMDAgICAwICAgIDAgIFBQUFBQUFBQUGBQUFBQUFBQcIBwYFAgICAwMCAgMCAwMCBwcFBQUHBwgHBgUKCAgEAwMDAwMDAwMDAwMDAwMDCAgICAgICAgICAgDCAMDBAQDAwMDAwMDAwUFCAQDBQgICAgICAgICAgICAgICAkICAoICAgICAgICQgLCggIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBwgHCQkHBgUFBQUJBwUFBQQEBQUFBQUFCAgHCAkIBwcIBwcHBwcHCAYGBAYFBQQEBgQEBAQEBAQEBgYEBgYFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGCQUFBQUFBQkFBAUDAwMIAwMEBAMECAUHAwUDAwMDBAQGBAYFBAQHBgYEBQQEBAQEBAQEBAQFBAQEBQUFCQkDBgUFBgUDAwMDAwMDAwMDAwMDAwMDBQUFBQUHBwYGBgYGBgYGBgYGBgYGAwMEBAUFAAICAAECAAIAAgICAAIAAgIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABgYDAwUFBwYFBQcGBAQEBAQEBAQEBAQEBAQEBAkJBgYFBAUEBgYEBQYGBAUGBgQFBgYEBQUFAwMEBQUFAwMEBAQEBQUDAwUFAwMGBgMDBgYEBQUFBQUFAgMCAAQDBgUHBAQEAwIEAwQEBAQDAwQEAwMDAwIDAwIEAwMDAwICBAQEAgQCAwMCAgICAgIDAwMCAgICAgIEBAUEBAQEBAQDAgIEBAMEBAMDAwMEBAQEBAMDBAMEAwMDAwMCAwQFBQYDAwMDAwQDAwMEBAQDAwMDBAIDAgQCAgICAgQDAwQEBAMCAgIFBgICAgQEBAQEAwMDAwMDBAQEAwUFBAQDBAQIBgkGCQYGBgYHBgcGBgkGBgkEBwYEBgYEBgYHBwYHBwYGBgYGBwYGBgcGBgYGBgcGBwUHBgUHBQgHCQYGCAMFBAUEBQYFBwcHBgcGBwUGCAgFBwYGBgUHBwUHBQUICAYGBwcJCQcJBwcKCgcICQcIBgYGCQcFBwcGBwUGBQcHBQYGBQYJCQkJCQkJBwQFBwYHBwYGCAcGCAcIBggHBggIBwgHBwgHBwgEBgYGBQYHCAUGBwUHBwYGBgYHCgoICQYHCQsKCgkLCQoKBQcHBQYGBQcFBwcFBgYFBwQGBQQFBAUGBgYGBwYGBwYGBggGBwgJBwcHBQIDBAIEBQIFBQQEBAUEBQYEBAYGBgQGBggEBAYHCgkJCAkIBwcIBwgKCQcIDgUIBwkICAwJBwcKCQ4ODgkJBwcHCAAAAAAAAAAAAAAACQcJBwAJBwkGAAAABgcEAwQBBAMDBgYEBwUFBAQEBQQGAwUFBQUGBgUFBQYCBQQFAgYGBgQGBQgFBQIGBgQEBQQGBQcHCAIEBQYHBgcJBgkIBggCBQUIBggGBwUFBgYFBAUDAwIFBwYHBQwMCQgIBwgICAgICAgIBwgHCAcIBwgLCAcHBwcHCAgHBwcHBwgHBwgICAgICAcICAkICAoFCgoKCgoKCgoKCgoKAAAHBwcHCAYHBwYIBwkJAgcIBwcHBwcIBwgICAcICQgHBwgHBwcHBwcHBwgIBwgJCA4MBQcHBwcJBwgHBwcHBwgHBwgKCwkOCw0MCggIBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcIBwcHBwcHBwcHCQoHBwcHBQUFBgYIBQUFBQgICAoICAgICAgICQgICAgICAgICAoLCgkICA4LDAoFBQgICQoICAgICwgICggICA8PDAwFBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAUFBQQFBAQEBAQEBAQEBQUFBQUFBAUHBwcHBwcHBwcIBwcIBwcHBwkKCgkKCggIBwcHCAkKCQgHDgwLCwsLBQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBgcKBgYLBQUJCQkJCQkJCQkJCQkJCQkLCQkLCQkJCQkJCQsJDAsJCQkHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcJCAcHBwcHBwcHCgsJCgoJBwcHBwgNDQUGBgYGBggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkLCAgIBQgICAgICAgICAgICAgICAgICAgIBgYGBgYGBgcGBgYGBggHBwYHCAkIBwYJCQcFBQgICAgICAgJCAgFCQUHBwcHBwcHBwcHBwcHBwcHCAcHCAgHBwcIBwcHBwcJCQoIBwUFBgUFBQkFBQUHCAUFBQUFBQUFBQUFBQYGBQUFBQUFBQUFBQcIBQUJCQcFBQ0KBwYIBgYGBgYGBgYGCAYGBgYGBgYGCAkICAYICQgHBw4LCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsJCAgFBQUFBQUFBwcHBwcHBwcHBwcHBwcHBwcJBwcABQkJCQkJCQwMBQUFBQcHBwcHBwcHCQcJBwcHCgkJCQUFBQcHBwcHBwcHBwcHBwcJCgcLBwcIBwcHBwcHBwcHBwgHBwcHBwcJCAcHDgwFBQUFBAQEBAQEBAQEBAQECgoKBwoHBQUICAgJBgUFBQUFBQUFBQUFBQUFBQUFBQUIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgYFBQUFBwcHBwcHBwcHBwcHBQUFBQUFBQUFBQUGBQcIBQQGBAQEBAQGBAYGBgQGBQUEBAYEBAQEBAQEBAYGBAYGBQkJBQUFBQUGBgYGBQUFBQUFBgUHCAcKCAkKCAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEBAUFBQUFBQUFBAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQFBQUFBQUFBQQFBQUFBQUFBQUFBQUICAUFBQUFBQUEBAYFBQUFBQUFBwUFBQUFBQUGBQUFBQUFBQUFBwgIBwUFCgcKBwQGBQUFBgUFBQUGBQUGBQUFCQkJBQMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBAIEAgICBQICAwIDAgIDAgMDAwMFBQUFBQUFBQUGBQUFBQUFBQcIBwcICAcHBQUFBwcIBwYFCgoICAgIBAQDAwMDAwMDAwMDAwMDAwMDAwMEBAMDAwMDAwMDBQUIBAMFCAgICAgICAgICAgICAgICQgICggICAgICAgJCAsKCAgIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgUFBQUFBQUFBQcIBwkJBwYFBQUFCQcFBQUEBAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgcHCQUFBQUFBQUFBQUFBQgICAgICAgICAgICAUFBQUFBQUHBQUFBQUIBwcFBwgJBwYFCAgHBQUFBQUFBQUFBwUFBQQEBAQEBAQEBAQEBAQEBAQEBAQFBAQEBAQEBAQEBAYHCAYEBAUDAwMIAwMEBgcDAwQDBAQEBAUEBAQFBQQEBAQEBAQEBAQGBwMDCAgGAwQICAMFAwMDAwMDBQMDBQMDAwMDAwMDBQYFBQMFBwUEBQgIBgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQgGBQUFBQUEBAQEBAQEBAQEBAQEBAQEBAcHBgYHBwkEBAQEBAQEBAYEBgUEBAcGBgcEBAQEBAQEBAQEBAQHBwQIBAQEBAQEBAQEBQQGBAQEBAQEBgUEBAkJBwUDAwMDAwMDAwMDAwMDAwcFBwUEAwUFBAUEBAUEBAQEBAQEBAQFBAQEBAQEBAQGBgYFBAQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQgICAgIBwgICAgIBwgIBwgIBQUHCAUFBgYGBwYIBQUHBQUHBwcHBwcICQcHBwUHCAgIBQUIBQUEBAQEBAUGBQYEBQYFAwMDBAQEBAQEBwcJCQcHBwUFBgUFCAgICAgICAUFCAUFBwYFBQUFBQUFBQUFBQYGBgUGBQUHBwcHCQkKCgcJBwkHBwcFBQUIBQcHBQgICAgIBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBgYGBgYGBgYGBgYGBgYGAgICBQcCAgUFBQYFBgICBQICBQUFBQUFBQUFBQUCBAUFAgICBQICAwMDAwMDAwMDAwMDAwICAwICAwMDAgUFBQUFBQUCAgUCAgICAgICAgICAgUCAgICAgIEAgICAgICAgIFBQUCBAICBQUFBQUFBQUFBQICAgUFAgICBgIFBQIGBwcCBwYCAgICBgYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQUFBQUFBQUFBQcIBQUFBwcHBQUFBQUFCAgFBQUICAUFBQcHBQUFCgoFBQUHBwUFBQoKBQUFBwcFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBAQFBQUHBwUFBQQEBQUFCAgFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQYFBgYFBAUGAwMGAwkGBgYGBAQEBgYFBwUFBQUFBQUFBQUFBQQFBQUFBQUFBQQFBQUFBQQEBQUFBQUFBQUFBQUFBQQEBAUFBAYFBQQEBQUDBAMCAgUFBQUFBQQFBAQEBQUFBQUDAwMFBQUFBQUFBQMDAwIFAgICBQUDBAIEBQUEBAQDBQUFAwUFBQUFBQUFBQUFBQUFBQUDBgUFBQUFBQUFBQUGBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFAwMFAAMDAwUFBQUFBQUFBQkHBgcHBwYGBwYIBAYHBwkIBAcFBQUFBQUFBQUFBQUFDQcMCAoHCgcNCA0HDQgNBwoHDQcMCAoHCgcKBw0IDQcEBQUFAgIFBQUFAAAAAAUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUFBQUFAAUFBQUFBQUFBQUFAAAAAAAABQUFBQUFBQUFBQAABQUFBQUFBQUFBQUFBQUAAAUFBQUFBQUFBQUFBQUFAAAFBQUFBQUFBQUFBQUFBQAABQUFBQUFBQUFBQUFBQUAAAAFBQUFBQUFBQUFBQUFAAAAAAAABQUFBQUFBQUFBQAAAAAAAAUFBQUFBQUFBQUAAAUFBQUFBQUFBQUFBQUFAAAAAAUFBQUFBQUFBQUFBQAAAAAAAAAABwUFBQUFBQUAAAAAAAAAAAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFAAUFBQUFBQUFBQUFBQUAAAAFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgYGBgYGBgYGBgYGBgYFBQUFBQUFBQUFBQUFBAgFBAkHBAcGBAMFCAQEBQUFBQQFBgUFBQkEBQUFBQUEBQUHBQUFBQUFBQkFBQUFBgUFBQUFBQUFBAQIBwcFBgQEBAQGBQUFBQQGCAgIBgoKBAQHBQMHCQkCCgkFBgsHBwgGBgYGBAcGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwUFBAYDBQgFBQUHBQQFBQgHBQUFCAUFCAgFCAUFBwUEBwQDBQUGBQgIBQUFBQUFBQUFBQcHBwUFBQUHBwcHBwYFBAQEBAQEBAQEBAUIBQcHBwcHBwUHBwcHBwcHBwUFBQYEBAQHBwcHBwcHBwcHBAQEBAQEBAQEBAQEBQYLBQQGBQQEBAMFBAAAAAAAAAAAAAAFBQYFCAcFCAUHBwYFBwQDAAAABQUFBAkLBQIEAwcHBwQGBAQEBQUGBgQFAwYGBAQEBQQEBAQEAwMEAwMEBQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBwgFBQYFAAcKBAcHBgcICggGBgUFAwcFBAYDBQQGCAUGBQcFCAUJBwYICAgGBgQIBwoHBwUGBgQFBQUHBwQFBQUFBQMDBQQGBQUFBQQFCAUFBQQFBQQFBQcGBQYFBAUHBAUFBAUFBQcEBAUFBQUFAgMFBAYFBQUFBAUEBQYDAwQFAwQDAwMDAwIDBQQEAwMDBAIEBAUDBQQDAwQDAgIEAwQDBAQDCA0HBQoKCgoIBwcHBwQNCAwHBQUHBQUEBAIHBQUEBQQKBwYFBwUGBAYFCAYCAgcFBwUIBgYFBQQIBgYFBQQGBQcFCAYIBggGCQcKCAYFCAYFBAgFCAUKCAUEBgUKBwUEBgQGBAYEBwUFBAUEBwYLCAYKAwIGBAcHBQcFBQUEBwkJBwQFBAUHBgUHBQUICAkICQYIBwcJBwgECQsHBQYFCAkJCAYIBwgHCAcHCAcHDAsNCAcGBgcGBwQGBQUHBwkFBgMHCAUEBQQGBwcGBAYFBgUGBQUGBQUICAkGBQgGCQYJBwgGBwUDAgcFBgUGBgYIBgcEBggFBAcGBwcFBQgHBwUFBQUHBwcFBQcIBQYFBgcAAAsSBgIEBAUJAwMDAwUFBQUFBQUFBQUDAwkJCQUKCAcHCAcGCAkEBQgHCggIBggIBgcJCAoICAcDAwMKBQUFBgUGBQMFBgMDBQMJBgYGBgQEAwYFBwUFBQUFBQkDBAUGBQUFBgMFCQYFAwkFBgUEBQMFBQgICAgICAsHBwcHBwQEBAQICAgICAgICQkJCQYFBQUFBQUIBQUFBQUDAwMDBgYGBgYGCQYGBgYGBQMLCQgFBQUFBQUFBQUGBQoDAwMFBQUFBQYKDgMDAgkIBQcIBwcJBQkJCQkFBgYCAwgECgUCCQUDAwMICAgICQgGBgUGCAUIBQgFBwUHBQcFBwUIBwgGBwUHBQcFBwUHBQgFCAUJBQgFCQYJBgQDBAMEAwQDBAgGBQMHBQUHAwcDBwQHBAcDCAYIBggGBwgGCAYIBggGCAQIBAgEBgQGBAYEBgQHBAcFBwMJBgkGCQYJBgkGCQYKBwgFBwUHBQcFAwgFCwgIBgUBAwgDCAoFCQoIAwgHBgcHBwkIBAgICggHCAgGBwcICAgJCAQIBgUGAwUGBgUGBQUGBgMGBQYFBQYGBQYEBQcFBwcDBQYFBwcIBggGBAQFCgsJCAgJCAcHBggHCgYJCQcICgkICQYHBwcICAkICwsJCwcIDAgFBgUFBgUHBQYGBQYIBgYGBgUGBQgFBgYICAYHBQQIBQUGBQQEAwMDCAgGBQUGBgUKBwoHCgcFCgUDAwMHBAQKBQgICgULCAgICAgICgUKBQoFBQkIAwkJCQkJCQYGCgoKCgoKCgoKCgoICgoKCgoKCggKBwcKBgYGBggICgoJCQkJCgoKCgYIBgYGCQYIBQYEBQkHCAMIBgYJCAcJBggHBwYIBQMDBwoGBwYHBwQEBgMEBQMPDAoLCAQMCgcIBQQDCAYIBggGCAYJBggGBQgFCAULCAgFCQUIBgkGCAYGBQMPDAoIBQUGBgUFBQYHBQUGBQUGBQMHBgYFBQYGBgQDAwQEAwUICQgGBwUGCAYGBAQEBAQEBQQEBAQFBAMGBgUGCAUGBQUEBAQEBgUFBwYDBQUHBAQJCAkFBQYFBQIDAwQEBwUCAwICAgMDAwMDAwMDBQUFBQUFBQMDAwMDAwMEAgUCAwUEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDBgYHCAgHCAYHBQsKBwUEBwUFAwkHBgUIBgYFBQMIBggGDAgMCA8LBwYJCAgGCAYIBgcECggGBQcFCwgGBQgGBwYIBgkGCQcLBwoICQUIBQcFCAYJBgkGCQYIBggGBwYHBQcFAwoIBwUJBgcFAAAAAAAAAAAAAAAAAAADAAIAAAIABgUDBQYDAwUGAwUGBQYGAgMGBQUGBQUGBQYFBgYGAgMDBxIFAwMFBAMJCQICAwMDAwMDAwMCAwICAwIDAwMDAwMDAwMCAwICBwcJCAsJBwYKCgoKBQUCAgQEBgYEBgUFBQUECAQEBgcEBgUHBgUFBQUFBgQGBgcEBAQGBwQGBQYGBgYGBgYGCAgICQgICAgFBQUFBQUJCQoKCwoFBQUFBQUFBQoKDAwMDAsLAwMDAwMDAwQFBQcHBwcGBgYGBgYGBgkJCwsLCgUFBQUFBQUJCwsLBwcHBwcHBwcJCQsLCgoKCgYGBQUFBQQDBgYFBQcHBgYGBgYGBgYICAkJCAgJCQUFBQUFBQUFCgoMCwwMDAsHBwcHBwcHBwkJCwsKCgoKBgYGBgYGBggICAgIAwMCBAMFBgUFBQoKCwsJBAQEBAMEBAQEBAQGBgQDAwUFBQUGBgUFCAgKCggDBAMHBwcHBwoKCgkIAwIIBQgFCwgHBQYFBgUKCAUEBgQJBgkGCAYHBQcFBwUHBQcFCAYKCAYGBwcFBgUFCAcFBAcHBQUGBgYHBgYHBgYGBwcGBwYFBgYGBgYHAwMCBAMEBAgFBgYFBQUFBwYFAwcGBQUFBQUGAwUEBQQIBAcFBQcFBQQHBgUGBgIJCQkJCwgJCAgFCgkLBgcJCQcJCQgIBgYJCggGBgYFCAkGBwYJCAYHBQgJBQAAAAIHCQUFBwgJCAYGBgYKCQkKCAcGBwcHBgcHBwYGBgYHBgcGBwYGBggHBwcHBQUHCQkGBwYHBgAEAgMCAAAAAAAAAAADAwICAAkAAAAABwcGBwYGBwcIBwABAgQFBAQEBQUEBgUEBAAGBQgHBwgHCAcHBAYGBgYGBgYFAwUFAwMGAwUGBQYDBgUGBQUFBgUDBQYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQGCAoMBAYICgwEBggKDAMFBgkLBQgGCQgFBgUGBgUHBQUFBQcFBwgFBwcIBwcKCQcJBwcJCwoICQoICAcJCQcICQcFBgUHBwUHBwUHBwUHBQUGBgcHBgcGBgcHBwcIBwcGCAUIBQcFBwUEAwQDCAYIBggECAQIBggGCAUHBgcGBwYIBQgFCAUIBQgFCAUHBQcFBwUHBQcFBgQIBQkGCQYJBgkGCQYEAwQDCAYIBggGBwMHAwcDBwMKCAoJCgkIBggGCAYIBggGCAYIBggGBgYGBggECAQIBAgEBgQGBAYEBgQGBAcDBwMHAwcECAUIBQgFCAUIBQgFCAUKBwoHCAUIBQgFBwUIBQcFBgMHBQYECAUIBQgGCAYIBggFCAUIBQgFCAUIBQgFBwUHBQcFBwcHBgcGBwUHBQQDBAMIBggGCAcIBggGCAYIBgkGCQYIBgkGCQYIBQgFCgYJBgkGCQYJBggFCAUIBQYFBAUFAAAAAAYFBQUGBgYGBgQGBgYGBAMDAwQEBAQEBAQEAwQDAgICAgICAgIDAwYGAwMGBgQDBgYHBwUFBwcFAwUHBwUFBAQEBAQEBAQHBwoKBwcKCgkJDAwJCQUMBQwIBQUFBQUFBwcHBQUFBQUFBQUFCAgIBgQEBAQICAgEBAYICAgICAgGBAQFBgQEBQQFBwcEBQYFBQUGBgMDBQUGBQUFAwMGBgYEBAQEBAMDBgYEBAYGBAMDBgYEBAUFBQUFBQUFAAAAAAAAAAADAwMDAwICAgIGBgYFBQUEBAQECgoMDAgIBQUHBQYFBQYEBAYEBgYAAgICAgMEBAYGBgYGBgYGBgUFBQUFBQUEBAQEBAQEBAQEBAQEBAQEBAQKCgoMDAgFBwcHBwcHBQUGCgYGBgYGBgYGBgYFBQUGBgYGBgQDAwMEBAQEBAQEBAYHBgYGBgYDBQMDBAQDBAQEBAQCAgYGAwMGBgMDBgYDAwYGAwMGBgMDBgYDAwcHBAUHBwQFBQUHBwUFBwcFBQcHBQUHBwQEBAQEBAQEBAQEBAYHBQUGBwUFBgcFBQYHBQUGBgYGAwMEBAQFBQcGBgYGBgUGBQYGBQUEBAQEBAQEBAQEBAQEBgYDAwMDAwMDAwMDAwMDAwMDAwMEAwMDAwQGCAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACggICAgICAYGBwkHBgYGBgYEBAQEBAQEBAQEBAQEBAQEBAQJCgcFBQUFBQYFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBQYGBQUICAgICAgICAgIBQUFBQUGBgYGBQYFBQUFBQYFBgYGBgYGBwcGBgYGBgYGBgcLCQYFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCAkFBQQEBgUFBQUFBQUFBQcGBQUFBQUFBQUJBwUFCwgFBgYGBgYGBgYGBgcGBgYGBgoDAwMHCgMDAwYAAwgFBwgHCAcICQgGCAcFCQcHBAQEBgYEBAYEBAYGBgcHBgcHBgkJBAQHBAQEBwcHBwcIBwgKCQkEBQcEBAQHBwcIBwcHBwgKCwoLCgsHBgYGCQkGBgkGBgkJCQcHCAgICAUIBwgKCgcIBwcICQcJBgYKBgYJCQYGCQYGCQkJCgoJCAgICAcHBwcJCQkJCAkICwgIBwcHBwYHBQgJCQgICAgHCAcHBgcGBwkJCAkICAcJBwcGBwgICAgIBwgIBQgICAcICAoICAcJCAgHCAkJCgoICAgIBwcHCAgICwsICwsICAsLCgoKDQ0KDQ0KCgoNDQoNDQcIBwcHBgcGBgUGCAcHBgQEBAUEBgcFBQcEBQUFCAgFBQgFBQgICAgJCAgIBggIBQUIBQUFCAgICQYHBwcHBgYDAwYDAwMGBgYJCAgICQMEBgQGBQYLBQUFCQkFBQkFBQkICQkJCAcHBwQHBgcJCQYHBgYHBgUGBgcLBgYICAYGCAYGCQkICQkICQkJCQgICAgJCQgIBwgHCQkJCAgICAcIBAYHBwYHBgcICAgIBwcHCAgIBwcHCAcHBgcGBgcHBwcIBwcHBQgJCQgICAgICAcKCAgHCQkHBgcICQgICAgIBwcHCgoHCgoHBwoKCAgICwsICwsICAgLCwgLCwkJCQkJCAgICAcICgoKBAUFBQUEBwYIAgcNDQMDBwgICQgJBQgLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsFCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgsLCwsLCwQGBgcHBgYHBAYHBwcJCQYGBgcICQYGBgcGBwcHBgYHBwYGBgUGBgYFBgcHBwcGBgUFAAUFAAAAAAAAAAcDBgQEBAUEAAAAAAAAAAAHBgYIBgcHBgkHCAcPCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsKCgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLBgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGBgYGBgYICQUJBgUGBgYGBgYHBgYGBgYGBQUGBgYEBAYGBgYEBAQGBgQGBgYGBgYGBgYGBgYEBAYGBgYGBgYGCQoHBgYGBgYGBgYGBgYGAwMDAwMDBAMDAwMDAwMDAwMDAwMDAwMDAwMDAgMDAwMDAwIDAwMDAwMDAgMDAwMDAwMDBgUGBgYGBgYGBwYGBgYGBgYICQgHBgMDAwMDAwIDAwMDAwcHBgUGCAcJCAcGCwkJBAMDAwMDAwMDAwMDAwMDAwkJCQkJCQkJCQkJAwkDAwQEAwMDAwMDAwMFBggFAwYJCQkJCQkJCQkJCQkJCQkKCQkLCQkJCQkJCQoJDAsJCQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBwYGBgYGBgYGBggJCAoKBwcGBgYGCggFBQUFBQUFBQUFBQkJBwkKCAcHCQcHBwcHBwkHBgUGBgYFBQYFBQUFBQUFBQcGBQYHBgoGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBwoGBQUGBgYKBgQGBAQECQQEBAQEBAkGCAMGAwMDAwUFBwUHBQUFCAcHBAYEBAUFBQUFBQUFBgUFBQYGBgoKAwYFBQYFAwMDAwMDAwMDAwMDAwMDAwUFBQUGBwcGBgYGBgYGBgYHBgYGBgMDBAQFBQADAwABAwACAAMDAwADAAMDAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAYGAwMFBQcHBQUHBwQEBAQEBAQEBAQEBAQEBAQKCgcHBQQGBAYGBQUGBgUFBgcFBQYHBQUFBQMDBQUGBgMDBAQEBAYGAwMGBgMDBgYEBAcGBQUFBQYGBgIEAwAEAwYGCAQEBAMDBAQFBAQEBAQEBAMDAwQDAwMCBAMDAwMCAgQFBQMEAgMDAwICAgICAwMDAwICAwICBAQGBAQEBAQFAwMDBAQEBAQEBAQEBAUFBAQEBAQDBAMDAwMDAgMEBQYGAwQEBAQFBAMDBAQEBAMDAwUDAwIEAgIDAwMEBAQEBAQEAwICBQcCAwMEBAQEBAMDAwMDBAUEBQMFBgUEAwUFCQcKBwoGBwcHCAcHBwcKBgcKBQcHBQcHBQcGCAgGBwgGBwcHBwcHBwYHBwcHBwcHBwcGCAcGBwUJCAoGBwkEBgUGBQYHBgcIBwcHBwgGBggJBggGBgYGCAgGCAYGCQkHBwgICgoICggICwsICQoICQcHBwoHBggIBggFBgUIBwUHBwUGCgoKCgoKCggFBQcGBwcHBggIBgkICAYICAYJCAgICAcICAgIBQcHBwYHCAkFBwcGBwcHBgcHCAsLCAoHCAoMCwsKDAoLCwUHCAUHBgUHBQgIBQcHBQcFBwYEBQUGBgcHBwgGBwcHBwcIBwgJCgcICAYCBAQDBAUCBgUEBQQFBQUGBQQGBgYFBgYIBAQHCAsKCggKCQcHCQgJCwoICQ8GCQgKCQkNCggICwoPDw8KCgcHCAkAAAAAAAAAAAAAAAoICggACggKBwAAAAYHBAMEAQUDAwYHBQgGBgQEBAYEBgQFBQUFBwcFBgYGAwYEBgIGBwYEBgYJBQYCBgYFBQUEBgUHBwkDBQUHCAYHCgYKCAcIAgYFCQcJBwcGBgcHBgQGBAMDBgcHCAUNDQoICAgICAgICAgICAgICAgICAgIDAgICAgICAgICAgICAgICAgICAgICAgICAgKCAgLBgsLCwsLCwsLCwsLCwAABwcHBwgHBwcHCQcJCgIHCQcHBwcHCQcJCQkHCQoIBwcJBwcHBwcHBwgJCQcJCQgPDQYICAgICggJCAgICAgICAgJCwwKEAwPDQsICAcHBwgHBwcHBwcHBwcHCAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcHBwcHBwoLCAcHBwYGBgYGCQYGBgYICAgLCAgICAgICAkICAgICAgICAgLDAsKCQgQDA4LBgYJCQoLCQkJCQwJCQoJCQkREQ0NBgQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQGBgYFBQUFBQUFBQUFBQYGBgYGBgUGCAgICAgICAgICQgICAgICAgKCwsKCwsJCQgICAkKCwoJCBANDAwMDAYHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcICwcHDAYGCgoKCgoKCgoKCgoKCgoKDAoKDAoKCgoKCgoMCg0MCgoKCAgICAgICAgICAgICAgICAgICAgICAgICgkICAgICAgICAsMCgsLCggICAgIDg4GBwcHBwcICAgICAkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoKDAgICAYICAgICAgICAkJCQkJCQkJCQkJCQYGBgYGBgYIBgYGBgYJCAgGCAkKCQcGCgoHBgYICAgICAgICggIBgoGCAgICAgICAgICAgICAgICAgICAgJCAgICAgICAgICQoLCQgGBgcFBQUKBQUFCAkFBQUFBQUFBQYFBQUHBwYGBgYGBgYGBgYICQYGCgoIBgYOCwgHCQcHBwcHBwcHBwkHBwcHBwcHBwkKCQkHCQoJCAgPDAoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkMCgkJBgYGBgYGBggICAgICAgICAgICAgICAgICggIAAYKCgoKCgoNDQYGBgYICAgICAgICAoICggICAsKCgoGBgYICAgICAgICAgICAgICgsIDAgICAcHBwcHBwcHBwcJBwcHBwcHCQkHBxANBgYGBgQEBAQEBAQEBAQEBAsMCwgKCAYGCAgJCgcFBQUFBQYFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBQYGBQUGBggICAgICAgICAgICAYGBQUFBQUGBgYGBgUHCAYFBgUFBQUFBgUHBwYFBgYGBQUGBQUFBQUFBQUHBgUGBwYKCgYGBgYGBgYHBwYGBgYGBgYGCAkHCwkKCwkGBgYGBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCAkFBQUGBgYGBAQGBgYGBgUFBQgFBQUFBQUFBwYFBQUFBQUFBQgJCQcFBQsICwgFBgYGBgYGBgYGBwYGBgYGBgoKCgYDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBAMDAwMDAwMDAwMDAwUDBQMDAwYDAwMDAwIDAwMDAwMDBgUGBgYGBgYGBwYGBgYGBgYICQgHCQkHBwYFBggHCQgHBgsLCQkJCQUEAwMDAwMDAwMDAwMDAwMDAwMDBAQDAwMDAwMDAwUGCAUDBgkJCQkJCQkJCQkJCQkJCQoJCQsJCQkJCQkJCgkMCwkJCQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYICQgKCgcHBgYGBgoIBgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQUFBQYFBgUFBgUFBQUFBQUFBgUGBQUFBQUFBQUFBgYGBgYFBQcICAoFBgUGBQUFBQYGBQYJCQkJCQkJCQkJCQkFBQUFBQUFBwUGBQUGCQcHBQcJCgcHBQkJBwYGBgYGBgYGBgcGBgYEBAQEBAQEBAQEBAQEBAQEBAQEBgQEBAQEBAQEBAQHCAkGBAQGBAQECQQEBAYHBAQEBAQEBAQFBAQEBgYEBAQEBAQEBAQEBgcEBAkJBgQECQkDBgMDAwMDAwYDAwUDAwMEBAQDAwYHBQUDBQgGBQUJCQcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYJBgYGBgYGBQUFBQUFBQUFBQUFBQUFBQUHBwcHBwcKBQUFBQUFBQUHBQcFBQUIBwcHBQUFBQUFBQUFBQUFBwgFCQUFBQUFBQUFBQUFBwUFBQUFBQcGBQUKCgcGAwMDAwMDAwMDAwMDAwMIBQgFBAMGBgUGBAQGBQUFBQUFBQUFBgUFBQUFBQUFBgYGBQQEBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYICAgICAgICQkICAgJCAgICAYGBwkGBgYGBggGCAYGBwYGBwcHBwcHCQoHBwcGBwkJCQYGCAYGBAQEBAQFBwUHBAUHBQQEBAQEBAQEBAgICgoICAgGBgcGBggICAkICAgGBggGBggGBgYGBgYGBgYGBgYGBgYGBwYGCAgICAoJCwsICQgKCAgIBgYGCAYICAYJCAgICAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgICAgYHAgIFBQUHBQcCAgYCAgUFBQUFBQUFBQUFAgUGBgICAgYCAgMDAwMDAwMDAwMDBAMCAgMCAgMDBAIGBQYGBQUFAgIFAgICAgICAgICAgIGAgICAgICBQICAgICAgICBgYGAgQCAgUFBQUFBQUFBQUCAgIFBQICAgcCBQUCBwcHAgcGAgICAgYGAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYGBgYGBgYGBgYICAYGBgcHBwYGBgYGBgkJBgYGCAgGBgYHBwYGBgsLBgYGCAgGBgYLCwYGBggIBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgUFBgYGBQUFBgYGBgYGBgYGBgYGBgYGBgUFBgYGBwcGBgYEBAYGBggIBgYGBQUGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBQcHBgQGBwMDBgMKBwcHBwUFBAcHBQgFBQUGBgYGBgYGBgUFBgYGBgYGBgYEBgYGBgYFBAYGBgYGBgYGBgYGBQUEBQUGBgUHBQUEBQYGBAQDAgIGBgYGBgYEBgQEBAYGBgYGBAQEBgYGBgYGBgYEBAMCBgICAgYGBAQDBAYGBAQEAwYGBgQGBgYGBgYGBgYGBgYGBgYGAwYGBgYFBgYGBgYFBgYFBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgMDBgADAwMFBgYGBgYGBgYJCAcHCAcHBwgHCQUGCAcKCAUIBgYGBgYGBgYGBgYGBg4IDQkMCAsIDgkOCA4JDggLCA4IDQkMCAsICwgOCQ4IBQYGBgICBgYGBgAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYGBgYGBgAGBgYGBgYGBgYGBgAAAAAAAAYGBgYGBgYGBgYAAAYGBgYGBgYGBgYGBgYGAAAGBgYGBgYGBgYGBgYGBgAABgYGBgYGBgYGBgYGBgYAAAYGBgYGBgYGBgYGBgYGAAAABgYGBgYGBgYGBgYGBgAAAAAAAAYGBgYGBgYGBgYAAAAAAAAGBgYGBgYGBgYGAAAGBgYGBgYGBgYGBgYGBgAAAAAGBgYGBgYGBgYGBgYAAAAAAAAAAAgGBgYGBgYGAAAAAAAAAAAGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAGBgYGBgYGBgYGBgYGAAAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBgYGBgYGBgQJBgQKBwUHBwQDBgkFBQYGBQUEBgcGBgYKBQYGBgYGBQYGCAYGBgYGBgYKBgYGBgYGBgYFBgUGBQQECAcIBgcEBAQEBgYGBgYEBgkJCQcKCgQECAUDCAoKAwsKBgcMBwcIBwcHBgQIBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBgQHAwYJBgYGBwYFBgUIBwUGBggGBQgIBggGBggGBQgFAwYGBgUJCQUGBgUFBQUFBQUICAgGBgYGCAgICAgGBgQEBAQEBAQEBAQGCAYHBwcHBwcGBwcHBwcIBwcFBgUGBQUFBwcHBwcHBwcHBwUFBQUFBQUFBQUFBQYHDAUEBwYEBQQDBQUAAAAAAAAAAAAABgUGBQkHBQkGCAcGBggEBAAAAAUGBQQKDAUCBQMHCAcFBwQEBAUFBwYEBgQHBwQFBQUEBQQFBAMEBAMEBQUHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACggIBQUHBgAHCgQHCAcHCQsJBwcFBQMIBQUHAwUEBwkGBwUIBgkGCggHCQgIBwYFCQgKCAcFBwcEBgUFBwgFBQYGBQUDAwUFBwUGBQYFBgkFBgUEBQUFBgYIBgUHBQQFBwQFBgQGBQUHBQUGBQUGBgMDBQUHBQUGBQQFBQYHBAQEBQQEBAQDAwMCBAYEBAQEBAQCBAQGAwUEBAQFAwIDBAMEBAQFAwkOCAYMCwsLCQgICAgEDgkNCAYGCAYGBQQDCAYGBAYECwgHBQgGBwUHBQkGAgIHBQcFCAYHBQYECQYHBQYEBwUIBgkGCQcJBgoHCwgHBQkGBgQIBggGCwgGBAcFCwgGBAcFBwUHBQcGBgQGBAcHDAgHCwMCBwUICAYIBgYGBAgKCggEBgQGCAcFCAYFCAgKCAoGCQgICgcIBAoMBwYHBQkKCgkGCQgJCAkICAgHCA0MDgkHBgYHBgcFBwYGBwcKBgYDBwkGBAUEBgcHBwUHBgYGBwYGBgYGCQkKBwYIBgoHCgcJBggGBAMHBQcFBwcGCQYIBAcJBQUHBwgIBQUJCAcGBQUFCAgIBQUICQUGBQcIAAAMFAYDBAQGCgMEAwMGBgYGBgYGBgYGAwMKCgoGCwkICAkIBwkJBAUIBwsJCQcJCQYICQkLCQkIBAMECwYGBgYFBgYEBgYDAwYDCQYGBgYEBAQGBQgFBQUGBgYKBAQFBwUGBgcDBgoHBQQKBgYGBAYDBgYJCQkJCQkMCAgICAgEBAQECQkJCQkJCQkJCQkGBgYGBgYGCQUGBgYGAwMDAwYGBgYGBgoGBgYGBgUDDAoJBgYGBgYGBgYGBgYLAwMDBQUFBgYHCw8EBAIJCQYICQgHCgYKCgoKBgYHAwQJBAsGAgkGBAQECQkJCQoJBwYFBgkGCQYJBggFCAUIBQgFCQgJBggGCAYIBggGCAYJBgkGCQYJBgkGCQYEAwQDBAMEAwQJBgUDBwYGCAMIAwgFCAUIAwkGCQYJBggJBgkGCQYJBgkECQUJBAYEBgQGBAYECAQIBQgECQYJBgkGCQYJBgkGCwgJBQgFCAUIBQQJBgwJCQYGAQQJAwkLBgoKCQQJCAcICAgJCQQJCQsJCAkJBwcICQkJCQkFCQcFBgMFBwYGBgYFBgYDBgUGBQYGBgUGBAYHBggIBAYGBggICQcIBgQEBQsLCggICQkICAcICAsGCQkICAsJCQkHCAgICQkJCAwMCQwHCA0JBgYGBQYGCAUGBwYGCQYGBgYFBgUIBgYGCQkHCAYFCQYGBgUFBAMDAwkJBgYGBgcFCwgLCAsIBQsFAwQEBwQECwYICAsGDAkJCQkJCQsGCwYLBgYKCQMKCgoKCgoHBwsLCwsLCwsLCwsLCQsLCwsLCwsJCwgICwcHBwcJCQsLCgoJCQsLCwsGCAYGBgoHCQUHBQYKBwkECQYGCQkICgcJCAgGCQYEAwgKBwgHBwgEBQYDBAYDEA4LDAkFDQsICQYEAwkGCQYJBgkGCQYJBgYJBgkGDAkJBgkGCQYJBgkGBgUDEA0LCQYGBgYGBgYHBwYGBwYGBwYEBwYGBgYGBgYEAwMEBQQFCQoJBwcGBggHBgQFBQUFBQYFBQUFBQQEBwYGBgkGBgUFBQUFBQYFBggGAwYFBwUFCggJBgYHBQUCAwMFBQgFAgMCAgIDAwMDAwMDAwYGBgYGBgYDAwMDAwMDBAIFAgQFBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwYHCAkICAkGCAYLCwcGBAcFBQQKBwcFCQYGBgUDCQYJBg0JDQkQDAcGCQkJBgkGCAYIBQsIBwUHBQwJBgUJBwgGCAYKBwoHDAgLCAkGCAUIBgkHCQYJBwoHCQcIBgcHCAYIBgQLCAcGCQYIBgAAAAAAAAAAAAAAAAAABAADAAACAAYGBAYGAwMGBgQGBgYGBgMDBgYGBwUGBgYHBgYHBwIDBAgUBgMEBgQECgoDAwQEAwQEBAQEAgQDAwQDAwMEAwQEBAQEAgQDAwgICQkMCggGCwsLCwUGAgMEBAcGBQcFBQUFBQgFBAYHBQYFBwcFBQUGBgYEBgYIBQUFBgcFBwUHBwcHBwcHBwkJCQkJCQkJBQUFBQUFCgoLCwwLBgYGBgYGBgYLCw0NDQ0MDAMDAwQDAwMEBgYHBwgHBwcGBgYGBgYKCgwMCwsGBgYGBgYFCgwMDAgICAgICAgICgoMDAsLCwsHBwUFBgYEAwYGBgYICAcHBwcHBwcHCQkJCgkJCQkGBgYGBgYGBgsLDQwNDQ0NCAgICAgICAgKCgwMCwsLCwcHBwcHBwcJCQkJCQMDAgQEBgYGBgYLCwwMCQQEBAQEBAQEBAQEBwcEBAQGBgYGBgYGBgkICwsIBAQDCAgICAgLCwsKCQQCCQYJBQwJCAYHBgcFCwgGBQYECQYJBgkGBwUHBQgGCAYIBggGCwgHBgcHBgcGBggIBgUHBwUGBwcHCAYGBwYGBgcIBgcGBgYGBwcHBwMDAgUDBAQIBgYGBQUFBQgHBQQIBwYGBgUGBwQGBAYECAQHBgYIBgUECAYGBwcDCgkKCgwICgkJBgsKDAYHCQoHCgoICQcHCgsJBgcGBggKBwgHCgkGBwYJCgUAAAACCAoGBQgJCQgHBwcHCgoKCggIBwgHBwcICAgGBgcHBwcHBwcHBwcJBwgIBwUFCAoJBwgHCAcABQMDAwAAAAAAAAAABAQDAwAKAAAAAAgIBwgHBwgHCQgAAQIEBQUFBAUFBAcFBQQABwYICAgJCAgICAUHBwcHBgYGBgMFBgMDBgMFBgYGAwYGBgYGBgcGAwYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBwkLDQUHCQsNBQcJCw0EBQcKDAUJBwoJBgcGBwYFCAYFBgYHBQgIBQgICQcICgoICggICgwLCAoLCQkICgkHCQoHBgcGBwcGBwgFCAgFCAUFBwcICAcIBwcIBwcHCAcHBwkGCQYIBggGBAMEAwkGCQYIBQkFCQYJBgkFCAYIBggGCAUJBgkGCQYJBgkGCAYIBQgFCAUIBQcECQYJBgkGCQYJBgkGBAMEBAkGCQYJBggDCAMIAwcDCwkLCQsJCQYJBgkGCQYJBgkGCQYJBgcGBwYJBAgECQUJBQYEBgQGBQYEBgQHBAcDBwMHBAkGCQYJBgkGCQYJBgkGCwgLCAkGCQUJBQgFCAUIBQYECAUHBAkGCQYJBwkHCQYJBgkGCQYJBgkGCQYJBQgFCAUIBggHCAYIBwgGCAUEAwQDCQYJBgkICQcJBwkGCQYKBwoHCQcKBwoHCQYJBgoHCgcKBwoHCgcJBggGCQUHBgQGBgAAAAAGBgYGBwcHBgYEBgYGBgUDAwMEBQQFBAUFBAMEAwMCAwIDAwMCAwMHBwQEBwcEBAcHCAgGBggIBgMGCAgGBgQFBAUEBAQECAgLCwgICwsKCg0NCgoGDQYNCQUFBQUFBQgICAUFBQUFBQUFBQkJCQYEBAQECQkJBAQGCQkJCQkJBgUFBgYFBQYFBQgIBQUGBgUGBwcDAwYGBgYFBQMDBgYGBAUEBAQEBAYGBAUGBgQEAwYGBAQFBgYGBgYFBgAAAAAAAAAAAwMDAwMDAwMDBwcHBgYGBAQEBAsLDQ0JCQYGCAYHBgUGBAQGBAYGAAMDAwMEBAQGBwcHBwcHBwcGBgYGBgYGBAQEBAQEBAQEBAQEBAQEBAQECwsLDQ0JBggICAgICAYGBwsHBwcHBwcHBwcHBgYGBgYGBgYEBAMDBAQEBAQEBAQGBwYGBgcHAwYDAwQFBAUEBQUEAwIHBwMEBwcDBAcHAwQHBwMEBwcDBAcHAwQICAUFCAgFBQYGCAgGBggIBgYICAYGCAgEBQQFBAUEBQQEBAQHBwUGBwcFBgcHBQYHBwUGBgYGBgMDBAUEBQYIBgcGBgcFBwUHBwUGBAQEBAQEBQQEBAQEBAYGBAQEBAMDAwMDAwMDAwMDAwMDBAMDAwMEBgkDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsJCQkJCQkGBggKCAYGBgYGBAQEBAQEBAQEBAQEBAQEBAQECgsIBgYGBgYGBgYGBgYGBgYGBgYGBgoGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBwYGCQkJCQkJCQkJCQYGBgYGBgYGBwYHBQUFBQUHBQYGBgYHBwgHBgYGBgYGBwYIDAkGBgYGBgYGBgYGBgYGBgYGBgUFBQUGBQUFBQUFBQUFBQUFBQUFBQUFBQUFBgUGBQUFBQUFBQUFBgUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQkKBQYEBAcGBgYGBgYGBgYHBgYGBgYGBgYGCQgGBgwJBQcGBgYGBwYGBgYIBgcGBgYLBAMDCAsEBAQGAAQJBQcIBwgICAoJBwkHBQoICAQEBAcHBAQHBAQHBwcHCAcHCAcKCgQECAQEBAgHBwgHCQcJCwoKBQUIBQUFCAcICAcICAcJCwwKDAsMCAcHBwoKBwcKBwcKCQoHBwgICAgFCAcICwsHCAgHCAoICgYGCwYHCgoGBgoGBwoKCgsLCgkJCQkICAcICgoKCgkKCQwICAgIBwgHCAYJCgoJCQgJCAgICAcHBwcKCQgJCQkICQcHBwcJCQkJCQgJCQUJCQkICQgLCQgICgkJBwkKCgsLCQkICAcIBwkJCQwMCQwMCQkMDAsLCw4OCw4OCwsLDw8LDw4ICAgICAcIBwcFBgkICAcFBQUFBAcIBQUHBAYGBgkJBgYJBgYJCAkJCQkJCAYJCQYGCQYGBgkICQkHCAgIBwcHAwMHAwMDBwYHCggJCQkDBAcEBwUHDQYGBgoKBgYKBgYKCQoKCQgICAgEBwcHCgoHBwcHBwcGBwYIDAYGCQkGBgkGBgkJCQoKCQoKCgoJCQkJCgoJCQgICAoKCgkJCQkICQQHCAgHBwcHCQkJCQgICAgJCQgICAgICAcHBwcICAgICAgICAUICQkICAgJCAgHCggIBwoKCAcHCAkICQgJCQgICAsLCAsLCAgLCwgICAwMCAwMCQkJDAwJDAwKCgoKCgkJCQkICAsLCgQFBQUFBAcGCQMHDg4DAwgJCQoJCgYJDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMBgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYMDAwMDAwEBgcHCAYGCAUHCAcICgoHBwYICQoGBgcHBggHCAYGBwcHBwYGBwcHBQYICAcHBwYFBgAFBQAAAAAAAAAIBAcFBQQFBQAAAAAAAAAACAYGCAcHBwYJBwgHEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCwsMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAYDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBgYGBgYGCQoFCgYGBgYGBgYGCAYGBgYGBgUFBgYGBAQGBgYGBAQEBgYEBgYGBgYGBgYGBgYGBAQGBgYGBgYGBgoLCAYGBgYGBgYGBgYGBgMDAwMDAwQDAwMDAwMDAwMDAwMDAwMDAwMDAwIDAwMDAwMCAwMDAwMDAwIDAwMDAwMDAwYGBgYGBgYGBggGBgYGBgYGCQoJBwYDAwMDAwMCAwMDAwMICAYGBggICggHBgwKCgQDAwMDAwMDAwMDAwMDAwMJCQkJCQoKCgoKCgMJAwMFBQQDAwMDAwMDBgYJBQMGCQkJCQkJCQkJCQkJCQkJCwkJDAkJCQkJCQkLCQ0MCQkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggGBgYGBwYGBgYJCggLCwgHBgYGBgoJBQYFBQUFBgYGBgYKCggKCgkICAoICAgICAgKBwcFBwYGBQUHBQUFBQUFBQUHBwUHBwYKBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcLBgUFBgYGCwYEBgQEBAkEBAQEBAQKBggEBgQEBAQFBQcFBwYFBQkHBwQHBAQFBQUFBQUFBQYFBQUGBgYLCwMHBgUHBQMDAwMDAwMDAwMDAwMDAwMGBgYGBggIBwcHBwcHBwcHBwcHBwcDBAQEBgYAAwMAAQMAAwADAwMAAwADAwADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAHBwQEBgYICAYGCAgEBQQFBAQEBAQEBAQEBAQECwsICAYFBgUHBwUGBwcFBgcHBQYHBwUGBgYDAwUGBgYDAwQEBAQGBgQEBgYEBAcHBAQHBwUGBgYGBgYDBAMABAMHBggEBQQDAwUEBQQFBAQEBAQEAwQEAwMDAwUDAwMEAgIEBQUDBAMEBAMCAgICAgMDAwMCAwMDAgUFBgUFBQUFBQQDAwUFBAQEBAQEBAQFBQUEBAQEBAQEBAMDAwMDBAYGBwQEBAQEBQQEBAUEBQQEBAMFAwMDBAMDAwMDBAQEBQUFBAMCAgYIAgMDBAQEBAQEBAQEAwQFBQUEBgYFBQQFBQkICwcKBwcHBwgHCAgICwcHCgUICAUICAUHBwkIBwgIBwcHBwcIBwcHCAcHBwcHCAcIBggHBwgGCQkKBwgKBAYFBwUGCAcICQgICAcJBgcJCgcIBwcHBgkJBgkGBgkKBwcICAsLCAsICAsMCQkKCAoICAgLCAYJCQcIBgcGCAgGCAgGBwoKCgoKCgoIBQYIBwgIBwcJCAcKCQkHCQgHCgkICQkICQkJCQUICAgHBwkJBgcIBggICAcHBwkMDAkLCAgLDQwMCw0LDAwGCAkGCAcGCAYICAUIBwUIBQcGBQYFBgcHCAcIBwcICAgICQgJCQsICQkGAgQEAwQGAgYFBQUFBgUGBwUFBwcHBQcHCQUFBwgMCwsJCwkICAoICQwLCQoRBgoICwkKDgsICAwLERERCwsICAkKAAAAAAAAAAAAAAALCQsJAAsJCwcAAAAHCAUEBQEFBAQHBwUIBgYFBQQGBAcEBQYGBggIBgYHBwMHBAcCBwcHBAcGCQYGAgcHBQUGBAcGCAgJAwUGBwgHCAsHCwkICQIHBQkICgcIBgYHBwcEBwQDAwYICAkGDg4LCQkJCQkJCQkJCQkJCQkJCQkJCQ0JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCgkJDAYMDAwMDAwMDAwMDAwAAAgICAgJCAgICAoICgsDCAoICAgICAoICgoKCAoKCQgICggICAgICAgICgoICgoJEQ4GCQkJCQoJCgkJCQkJCQkJCgwNChENEA8MCQkICAgJCAgICAgICAgICAkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkICAgICAgICAgLDAgICAgGBgYHBwoGBgYGCQkJDAkJCQkJCQkKCQkJCQkJCQkJDA0MCwoJEQ0PDAYGCQkLDAkKCQkNCQkLCQkJEhIODgYFBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBgYGBQYFBQUFBQUFBQUGBgYGBgYFBgkJCQkJCQkJCQoJCQkJCQkJCwwMCg0NCgoJCQkKCwwLCQkRDw0NDQ0GCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwICA0GBgsLCwsLCwsLCwsLCwsLCw0LCw0LCwsLCwsLDQsODQsLCwkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQsKCQkJCQkJCQkMDQsMDAsJCQkJCRAQBggICAgICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoLCw0JCQkGCQkJCQkJCQkKCgoKCgoKCgoKCgoHBwcHBwcHCQcHBwcHCgkJBwkKCwoIBwsLCAYGCQkJCQkJCQsJCQYKBgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoLDAoJBgYIBgYGCwYGBggJBgYGBgYGBgYHBgYGCAgGBgYGBgYGBgYGCAkGBgsLCAYGDwwIBwoICAgIBwgICAgJCAgICAgICAgKCwkJCAkLCgkIEQ4LCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDQsJCQYGBgYGBgYJCQkJCQkJCQkJCQkJCQkJCQsJCQAGCwsLCwsLDw4GBgYGCQkJCQkJCQkLCQsJCQkMCwsLBgYGCQkJCQkJCQkJCQkJCQsMCQ0JCQkICAgICAgICAgICggICAgICAoJCAgRDgYGBgYEBAQEBAQEBAQEBAQNDQwJCwkGBgkJCgsIBgYGBgYGBgYGBgYGBgYGBgYGBgoGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBwYGBgYJCQkJCQkJCQkJCAgGBgYGBgYGBgYGBgcGCAkGBQcFBQUFBQcFBwcHBQcGBgUFBwUFBQUFBQUFBwcFBwcGCgoGBgYGBgcHCAcGBgYGBgYHBgkKCAwJCwwJBgYGBgYGBgYGBgYGBgYGBgYGBgYFBQUFBgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQYFBQUFBQUFBQUGBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQkKBQYFBgYGBgQEBwYGBgYGBgYJBgYGBgYGBgcHBgYGBgYGBgYJCgkIBgYMCQwJBQcGBgYHBgYGBggGBgcGBgYLCwsGAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwQDAwMDAwMDAwMDAwMFAwUDAwMGAwMDAwMCAwMDAwMDAwYGBgYGBgYGBggGBgYGBgYGCQoJCAoKCAgGBgYICAoIBwYMDAoKCgoFBAMDAwMDAwMDAwMDAwMDAwMDAwUFBAMDAwMDAwMGBgkFAwYJCQkJCQkJCQkJCQkJCQkLCQkMCQkJCQkJCQsJDQwJCQkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYIBgYGBgcGBgYGCQoICwsIBwYGBgYKCQYGBQUFBQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYICQkLBgYGBgYGBgYGBgYGCgoKCgoKCgoKCgoKBgYGBgYGBggGBgYGBgoICAYICgoIBwYKCggGBgYGBgYGBgYIBgYGBAQEBAQEBAQEBAQEBAQEBAQEBAcEBAQEBAQEBAQECAgKBwQEBgQEBAkEBAQHCAQEBQQEBAQEBgQEBAYGBQQEBAQEBAQEBAcIBAQKCgcEBAoKBAYEBAQEBAQGBAQGBAQEBAQEBAQHCAYGBAYJBgUGCQkHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGCgcGBgYGBgUFBQUFBQUFBQUFBQUFBQUFCAgICAgICwUFBQUFBQUFBwUHBgUFCQcHCAUFBQUFBQUFBQUFBQgJBQoFBQUFBQUFBQUGBQcFBQUFBQUIBgUFCwsIBgMDAwMDAwMDAwMDAwMDCAYIBgUEBgYFBgQEBgUFBQUFBQUFBQYFBQUFBQUFBQcHBwYEBQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGCQkJCQkJCQoKCQkJCgkJCQkGBggKBgYHBwcJBwkGBggGBggICAgICAoLCAgIBggJCQkGBgkGBgQEBAQEBggGBwQGBwYEBAQEBAQEBAQICQsLCQkJBgYIBgYJCQkKCQkJBgYJBgYIBwYGBgYGBgYGBgYGBwcHBggGBgkJCQkLCgwMCQoJCwkJCQYGBgkGCQkGCQkJCQkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcHBwcHBwcHBwcHBwcHBwcDAwMGCAMDBgYGCAYHAwMGAwMGBgYGBgYGBgYGBgMFBgYDAwMGAwMDAwMDAwMDAwMDAwQEAwMDAwMDAwQDBgUGBgUFBQMDBgMDAwMDAwMDAwMDBgMDAwMDAwUDAwMDAwMDAwYGBgMEAwMGBgYGBgYGBgYGAwMDBgYDAwMHAwYGAwgICAMIBwMDAwMHBwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGBgYGBgYGBgYGCQkGBgYICAgGBgYGBgYJCQYGBgkJBgYGCAgGBgYMDAYGBggIBgYGDAwGBgYJCQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYFBQYGBggIBgYGBQUGBgYJCQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBwYHBwYEBgcEBAcECwcHBwcFBQQHBwYJBgYGBgYGBgYGBgYGBQYGBgYGBgcGBAcGBgYGBQUGBgYGBgYGBgYGBgYGBAUFBgYFCAYGBAUGBgQEBAMDBgYGBgYGBAYEBAQGBgYGBgQEBAYGBgYGBgYGBAQEAwYDAwIGBwQEAwQGBgQEBQQGBgYEBgYGBgYGBgYGBgYGBgYGBgMHBgYGBgYGBgYGBQcGBQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYEBAYAAwQEBQYGBgYGBgYGCgkHCAgICAcJBwoFBwgICwkFCAYGBgYGBgYGBgYGBgYPCQ4JDQkMCA8KDwkPCg8JDAgPCQ4JDQkMCAwIDwoPCQUGBgYCAwYGBgYAAAAABgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgYGBgYABgYGBgYGBgYGBgYAAAAAAAAGBgYGBgYGBgYGAAAGBgYGBgYGBgYGBgYGBgAABgYGBgYGBgYGBgYGBgYAAAYGBgYGBgYGBgYGBgYGAAAGBgYGBgYGBgYGBgYGBgAAAAYGBgYGBgYGBgYGBgYAAAAAAAAGBgYGBgYGBgYGAAAAAAAABgYGBgYGBgYGBgAABgYGBgYGBgYGBgYGBgYAAAAABgYGBgYGBgYGBgYGAAAAAAAAAAAIBgYGBgYGBgAAAAAAAAAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYABgYGBgYGBgYGBgYGBgAAAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBwcHBwcHBwcHBwcHBwYGBgYGBgYGBgYGBgYECgYECwgFCAgEAwYKBQUGBgYGBQYHBgYGCwUGBgYHBgUGBggGBgYGBgYGCwYGBgYHBgYGBgYGBgUEBAkICAYIBAQEBAcGBgYGBAcKCgkICwsFBQkGBAgLCwMMCwYHDQgICQgICAcFCAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBgYECAQGCQYGBggGBQYGCQgGBgYJBgYJCQYJBgYJBgUJBQQGBgcGCQkGBgYGBgYGBgYGCQkJBgYGBgkJCQkJBwYEBAQEBAQEBAQEBgkGCAgICAgIBggICAgICQgIBQYGBwUFBQgICAgICAgICAgFBQUFBQUFBQUFBQUGBw0FBAgGBQUEAwYFAAAAAAAAAAAAAAYFBwYKCAYJBgkIBwYIBQQAAAAGBgYECw0GAwUDCAkIBQcEBAQFBQcHBQYEBwcFBQUGBQUFBQUDBAQEBAUGBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsJCQYGCAYACAsFCAkICAoMCggIBgYDCQYFBwMFBQgJBwcGCAYJBgsJBwoJCQcHBQoJCwkIBggHBAYGBggJBQYGBgUGAwMGBQcGBgYGBQYKBgYGBQYGBQYGCAcGCAYEBQgFBgYFBgYGCAUFBgUFBgYDAwYFBwYGBgYFBgUGCAQEBAYEBAQEBAQEAgQGBAQEBAQEAwQEBgQFBAQEBQQCAwQEBAQEBQQKDwkGDQwMDAkJCAgIBA8KDggGBgkGBgUEAwkGBgUHBQwJCAYJBgcFCAYJBwMCCAYIBgkHBwYHBQkHBwYGBQgGCQYKBwoICQcLCAwJBwYJBwYECQcJBwwJBwUHBgwIBwUHBQcFBwUIBgYFBwUIBw0JCAwDAgcFCQkGCQYGBwQICwsIBAYEBggIBgkGBgkJCwkLBwoICAsICQULDQgGCAYJCwsKBwoJCgkKCQgJCAkODQ8KCAcHCAcIBQcGBggICwYHBAgKBgUGBAcICAcFBwcHBwcGBgcGBwoKCwcGCQcLCAsICgcJBgQDCAYIBgcHBwoHCAUHCgYFCAgICAYFCgkIBgUGBggICAYGCAoGBwYICQAADRYHAwUFBgoDBAMDBgYGBgYGBgYGBgMDCgoKBgwKCAkKCQgKCgUFCQgMCgoHCgoHCAoJDAoJCQQDBAwGBgYHBQcGBAYHAwMGAwoHBwcHBQUEBwYIBQYFBgYGCgQEBQgFBgYIBAYKCAYECgYHBgUGBAYGCgoKCgoKDQkJCQkJBQUFBQoKCgoKCgoKCgoKBwYGBgYGBgoFBgYGBgMDAwMHBwcHBwcKBwcHBwcGAw0LCQYGBgYGBgYGBgcGDAMDAwYGBgYGBwwRBAQCCgkGCAoJCAoGCgoKCgYHBwMECgQMBgIKBgQEBAoKCgoKCQcHBgcKBgoGCgYJBQkFCQUJBQoICgcJBgkGCQYJBgkGCgYKBgoGCgYKBwoHBQMFAwUDBQMFCgcFAwgGBggDCAMIBQgFCAMKBwoHCgcICgcKBwoHCgcKBQoFCgUHBQcFBwUHBQgECAUIBAoHCgcKBwoHCgcKBwwICQYJBQkFCQUECgYNCgoHBgEECgMKCwYLCwoECggHCQkJCgoFCgkMCggKCgcICAkKCgoKBQoHBgcEBgcHBgcGBQcHBAcGBwYGBwcFBwUGCAYICQQGBwYJCQoICQcFBQUMDAsJCQoKCAgHCQkLBwoKCQkMCgoKBwkICQoKCgkNDQoMCAkOCQYHBgYHBgkFBwcGBwkHBwcHBQcGCQYHBwoKBwkGBQoGBgcGBQUDAwMJCQcGBgcIBgwIDAgMCAYMBgMEBAgFBAwGCQkMBg0JCgoKCgoMBgwGDAYGCgoDCgoKCgsKBwcMDAwMDAwMDAwMDAkMDAwMDAwMCQwICAwHBwcHCgoMDAoLCgoMDAwMBwkHBwcLBwoGCAUGCwgKBAoHBwoKCAsICgkIBwkGBAQICwgICAgJBQUHAwUGAxEPDA0KBQ4LCQoGBQMKBwoHCgcKBwoHCgcGCQYKBg0JCgYKBgoHCgcKBwcGAxEPDAoGBgcHBgYGBwgGBggGBgcGBAgHBwYGBwcHBAQDBAUEBgoKCgcIBgcJBwcFBQUFBQUGBQUFBQYFBAcHBgcJBgcGBQUFBQUHBgYIBwMGBQgFBQoJCgYGBwYGAgQEBQUIBgIDAwMDBAQDAwQEBAQGBgYGBgYGAwMDAwQEBAQDBgMEBgQFBQUFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQDAwMHBwkKCQgKBwkGDAwIBgUIBgYECwgHBgoHBwYGAwkHCgcOCg4JEQ0IBwoJCgcKBwkHCAUMCQgGCAYMCgcFCgcJBwkHCwcKCAwJDAkKBgkGCAYKBwoHCggKBwkHCQcIBwkGCQYEDAkIBgoHCQYAAAAAAAAAAAAAAAAAAAQAAwAAAgAHBgQGBwMDBgcEBgcGBwcDBAcGBgcGBgcGBwYHBwgCAwQJFgYEBAYEBAsLAwMEBAMEBAQEBAIEAwMEAwQEBAMEBAQEBAIEAwMJCAoKDQsIBwwMDAwGBgIDBAUHBwUHBgUFBgUJBQUHCAUHBQgHBQUGBgYHBQcHCQUFBQcIBQcGBwcHBwcHBwcKCgoKCgoKCgUGBgYGBgoKDAwNDAYGBgYGBgYGDAwODg4ODg0EAwQEBAQEBAYGCAgICAgHBwcHBwcHCgsNDQwMBgYGBgYGBgsNDQ0ICQkICQkICAsLDQ0MDAwMBwcGBQYGBQQHBwYGCQkHBwcHBwcHBwkKCgoKCgoKBgYGBgYGBgYMDA4ODg4ODgkJCQkJCQkJCgsNDAwMCwwHBwcHBwcHCgoKCgoDAwIEBAYHBgYGDAsNDQoEBAQEBAUFBAQFBQcIBQQEBgYGBgcHBgYJCQwMCQQEAwkJCQgJDAsMCwoEAgoGCgYNCgkGCAYIBgwJBgUHBQoHCgcKBwgFCAUJBgkGCQYJBwwJBwcICAYHBgYJCQYFCAgGBgcHBwgHBwgHBwcICQcIBwYHBwgIBwgDBAIFAwUFCQYHBwYGBQYJBwYECQgGBgYGBggEBgUGBQkFCAYGCQYGBQgHBggHAwoKCwoNCQsKCgYMCg0HCAoLCAsLCQoIBwsLCQcHBwYJCwcIBwsJBwgGCgsFAAAAAwkLBgYICgoJBwcHCAsLCwsJCQgICAgICAkJBwcHBwgHCAcICAgICQgICAgFBQkKCgcJCAgHAAUDBAMAAAAAAAAAAAQEAwMACwAAAAAJCQgIBwcJCAoJAAECBAYFBQQGBgUHBQUFAAcGCQgJCQgJCAkFBwcHBwcHBwYEBgYDAwcEBgcGBwMHBgcGBgYHBgMGBwcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQcJCw4FBwkLDgUHCQsOBAUICw0GCQcLCgYHBgcHBggGBgYGCAYICQUICAoICAsLCAsICAsNDAkLDAoJCQsKCAoLCAYIBggIBggJBggJBggGBggHCAgHCAcHCAgICAkICAgKBgkGCAYJBgUEBQQKBwoHCQUJBQoHCgcKBQgHCAcIBwkGCgYKBgoGCgYKBggGCAYJBggGCAYIBAoGCgcKBwoHCgcKBwUEBQQJBwoHCgcIAwgECAMIAwwKCwoMCgoHCgcKBwoHCgcKBwoHCgcHBwcHCQUJBQkFCQUHBAcEBwUHBQcECAQIBAgECAQKBgoGCgYKBgoGCQYJBgwIDAkKBgoGCQYJBQkFCQUHBAkGBwUKBgoGCgcKBwoHCgYKBgoGCgYKBgoGCgYJBggGCAYJCAkHCQcIBgkGBQMFAwoHCgcKCAoHCggKBwoHCwgLCAoICwgLCAoGCgYLBwsICwcLBwsICQYJBgkGBwYFBgYAAAAABwYGBggICAcHBQcHBwcFAwMDBAUEBQUFBQQEBQMDAgMDAwMDAwQDBwcEBAcHBAQHBwkIBgYJCAYEBgkIBgYFBQUFBQUFBQgIDAwICAwMCwsODgsLBg4GDgkGBgYGBgYJCQkGBgYGBgYGBgYJCQkHBQUFBQkJCQUFBwoKCQkKCgcFBQYHBQUGBQUJCQUFBwYGBgcHAwMGBgcGBQUEAwcHBwUFBQUFBAQHBwUFBwcEBAMHBwUFBgYGBgYGBgYAAAAAAAAAAAMDAwMDAwMDAwcHBwYGBgUFBQUMDA4OCgoGBgkGBwYFBwUFBwUHBwADAwMDBAUFBwcHBwcHBwcHBgYGBgYGBgUFBQUFBQUFBQUFBQUFBQUFBQwMDA4OCgYJCQkJCQkGBggMCAcHBwgICAgICAYGBgcHBwcHBQQDAwUFBQUFBQUFBwgHBwcICAQGAwMEBQQFBQUFBAMDBwcEBAcHBAQHBwQEBwcEBAcHBAQHBwQECQkFBQkJBQUGBgkIBgYJCAYGCQgGBgkIBQUFBQUFBQUFBQUFCAgGBggIBgYICAYGCAgGBgcHBwcEAwUFBQYGCAcHBwcIBggGBwcGBgUFBQUFBQUFBQUFBQUHBwQEBAQDAwMDAwMDAwMDAwMDAwQDAwMDBQcJAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCgoKCgoKBwcJCwkHBwcHBwUFBQUFBQUFBQUFBQUFBQUFBQsMCAYGBgYGBwYGBgYGBgYGBgYGBgYLBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBwcGBgkJCQkJCQkJCQkGBgYGBgcHBwcGCAUFBQUFCAUHBwcHBwcICAcHBwcHBwcHCQ0KBwYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYKCwYGBQUHBgYGBgYGBgYGCAcGBgYGBgYGBgoJBgYNCQYIBwcHBwcHBwcHCAcHBwcHDAQEAwkMBAQEBwAECQYICQgJCQkLCQcKCAYKCQgEBAQIBwQECAQECAcICAgHCAkHCwsFBQgFBQUICAgJCAoICgwLCgUFCAUFBQgICAkICAgICQsNCw0MDQkHBwcLCwcHCwcHCwoLCAgJCQkJBgkICQsLCAkJCAkKCAsHBwsHBwsLBwcLBwcLCgsMDAoJCQkJCAgICAsLCwsJCwkNCQkICAgIBwgGCQsKCQkJCQkJCQkICAcICgoJCgoKCQoICAcICgkJCQkJCQoGCQkJCAkJDAkJCAsJCQgKCwsMCwkJCQkICAgJCQkNDQkNDQoKDQ0MDAwPDwwPDwwMDBAQDBAQCAkICAgICAgIBgcKCAgHBQUFBQUICAUGCAQGBgYJCQYGCQYGCQkJCQoKCQkHCgoGBgoGBgYKCQoKCAkICQgHBwMDCAQEAwgHCAsJCgkKBAUHBQcFBw4GBgYLCwYGCwYGCwkLCwoJCQgJBQgHCAsLBwgIBwgHBgcHCA0HBwoKBwcKBwcKCgoLCwoLCwsLCgoKCgoLCQkICQgLCgoKCgoKCAoFCAkJCAgHCAoKCgoJCQgJCgoJCQgJCAkICAgICQkICAkJCQgGCQoKCQkJCQkJCAsJCQgLCwgICAkKCQoJCgoJCQkMDAkMDAkJDAwJCQkNDQkNDQkJCQ0NCQ0NCgsKCgoKCgoKCAkMDAsFBgYGBgUIBwoDCA8PBAQJCgkLCgsGCg0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQYNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHDQ0NDQ0NBQcHCAgHBwkFBwkICAsKCAgHCQoLBwcHCAcICAgHBwgICAgHBgcICAYHCQgICAcHBgYABgYAAAAAAAAACQQHBQUFBgUAAAAAAAAAAAkHBwkHCAgHCggJCBINDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQsLDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0HAwMDBAMEAwMEBAQEAwQDAwMDAwMEBAMEAwMEAwcHBwcHBwkKBgoHBgcHBwcHBwgHBwcHBwcGBgcHBwUFBwcHBwUFBQcHBQcHBwcHBwcHBwcHBwUFBwcHBwcHBwcLDAgHBwcHBwcHBwcHBwcDBAQEBAMEAwMDBAMDAwQDAwMEAwMDAwQDAwMCAwMEAwMDAgQDAwQDAwMCBAMDAwMDAwMHBgcHBwcHBwcIBwcHBwcHBwoLCggHAwMDBAMDAgMDBAMDCQkHBgcJCQsJCAcNCgsFAwMDAwQEAwQDAwMEAwMDCgoKCgoLCwoKCwsDCgQEBQUEAwMDAwMDBAYHCgUDBwoKCgoKCgoKCgoKCgoKCgwKCg0KCgoKCgoKDAoODQoKBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcIBwcHBwcHBwcHCQoJDAwJCAcHBwcLCgYGBgYGBgYGBgYGCwsJCwsKCQkLCQkJCQkJCggIBQgHBwYFCAUFBQUFBQUGCAgFCAgHCwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcIDAcGBgcHBwwHBQcFBAQKBQQFBQQFCwcJBAcEBAQEBgYIBggGBgYJCAgFBwUFBgYGBgYGBgYHBgYGBwcHDAwEBwYGCAYDBAQEBAQEBAQEBAQEBAQEBgYGBgcICAgICAgICAgICAgICAgIAwQFBQYGAAMDAAEDAAMAAwMDAAMAAwMAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAMABwcEBAYGCQgGBgkIBQUFBQUFBQUFBQUFBQUFBQwMCAgGBQcFBwcGBgcHBgYICAYGCAgGBgYGAwMGBgcHBAMFBQUFBwcEBAcHBAQHBwQECAgGBgYGBwcHAwQDAAUECAcJBQUFBAMFBAYFBQUEBAUFBAMEBAMEBAMFBAQEBAICBQYFAwUDBAQDAgIDAgIDAwMDAwMDAwIFBQcFBQUFBQYEAwMFBQUFBQUEBAUFBgYFBQQEBQQFBAQEBAQDAwUGBwcEBAQEBAUEBAQFBQUEBAQDBgMEAwUDAwMDAwUEBAUFBQQDAgIGCAIDAwUFBQUFBAQEBAQEBgUGBAYHBgUEBgYKCAwICwcICAgJCAkICAwHCAsGCAgGCAgGCAcJCQcJCQcICAgICQgIBwkICAgICAgICQcJCAcJBgoKCwcICwQHBQcFBwgHCAoJCAkICgcHCgsHCQcHBwcKCgcJBwcKCggICQkMDAkLCQkMDQoKCwkLCAgIDAkHCQkHCQYHBgkJBggIBgcLCwsLCwsLCQUGCQcJCAgHCgkHCgoKBwoJBwoKCQoJCQoKCQoFCAgIBwgKCgYICQcJCQgHCAgKDQ0KDAgJDA4NDQwPDA0NBgkJBggIBgkGCQkGCAgGCQUIBwUGBQcICAgICQgICQgICAoICQoMCQkJBwIFBQMFBgIHBgUGBQYGBgcGBQcIBwYHCAoFBQgJDQwMCgwKCQkLCQoNCwkLEgcLCQwKCw8LCQkNDBISEgsLCQkJCwAAAAAAAAAAAAAADAoMCgAMCgwIAAAACAkFBAUBBgQEBwgGCQcHBQUFBwUHBQYGBgYICAYHBwcDBwUHAggIBwUHBwoGBwIHBwUGBgUHBgkJCgMGBggJCAkMBwwKCAoCBwYKCAoICQcHCAgHBQcEAwMHCQgJBg8PCwoKCgoKCgoKCgoKCgoKCgoKCgoOCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgsKCg0HDQ0NDQ0NDQ0NDQ0NAAAICAgICggICAgKCQsMAwkLCQkJCQkLCQoLCwkLCwoJCQsJCQkJCQkJCQsLCQsLChIPBwoKCgoLCgsKCgoKCgoKCgsNDgsTDhEQDQoKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJDA0JCQkJBwcHCAgKBwcHBwoKCg0KCgoKCgoKCwoKCgoKCgoKCg0ODQwLChMPEA4HBwoKDA0KCgoKDgoKDAoKChQUDw8HBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQcHBwUGBQUFBQUFBQUFBwcHBwcHBQcKCgoKCgoKCgoLCgoKCgoKCgwNDQsODgsLCgoKCwsNDAoKExAODg4OBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCAkNCAgOBwcMDAwMDAwMDAwMDAwMDAwODAwODAwMDAwMDA4MEA4MDAwKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoMCwoKCgoKCgoKDQ4MDQ0MCgoKCgoREQcICAgICAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoLDAwOCgoKBwoKCgoKCgoKCwsLCwsLCwsLCwsLBwcHBwcHBwoHBwcHBwsKCgcJCwwKCQcMDAkHBwoKCgoKCgoMCgoHCwcKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoLDA0KCgcHCAYGBgwGBgYJCgYGBgYGBgYGBwYGBggIBwcHBwcHBwcHBwkKBwcMDAkHBxENCQgLCAgICAgICAgICggICAgICAgICwwKCggKDAsJCRIPDAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg4MCgoHBwcHBwcHCQkJCQkJCQkJCQkJCQkJCQkMCgkABwwMDAwMDBAQBwcHBwoKCgoKCgoKDAoLCgoKDQwMDAcHBwoKCgoKCgoKCgoKCgoMDQoOCgoKCQkJCQkJCQkJCQsJCQkJCQkLCgkJEw8HBwcHBQUFBQUFBQUFBQUFDg4NCQwKBwcKCgsMCAYGBgYGBwYGBgYGBgYGBgYGBgYLBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBwcGBgcHCQkJCQkJCQkJCQkJBwcGBgYGBgcHBwcHBgkKBwUIBQUFBQUIBQgICAUIBwcGBQgFBQUFBQUFBggIBQgIBwsLBwcHBwcHBwgIBwcHBwcHBwcJCwkNCgwNCgcHBwcGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYKCwYGBgcHBwcFBQcHBwcHBgYGCgYGBgYGBgYIBwYGBgYGBgYGCgsKCQYGDQkNCQYIBwcHBwcHBwcIBwcHBwcHDAwMBwQEBAMDAwMEBAQDAwQEBAQDAwQDBAQEBAMEAwMDBAMDAwQDAwMDBgMGAwMDBwMDAwMEAgMDAwQDAwMHBgcHBwcHBwcIBwcHBwcHBwoLCggLCwkJBwYHCQkLCQgHDQ0LCgsLBQUDAwMDBAQDBAMDAwQDAwMEAwQFBQQDAwMDAwMEBgcKBQMHCgoKCgoKCgoKCgoKCgoKDAoKDQoKCgoKCgoMCg4NCgoKBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcHBwcHBwkKCQwMCQgHBwcHCwoHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBwYHBgYHBgYGBgYGBgYHBgcGBgYGBgYGBgYHBwcHBwYGCAoKCwYHBgcGBgYGBwcGBwsLCwsLCwsLCwsLCwYGBgYGBgYJBgcGBgcLCQkGCQsLCQgGCwsJBwcHBwcHBwcHCQcHBwUFBQUFBQUFBQUFBQUFBQUFBQUHBQUFBQUFBQUFBQgJCggFBQcFBAQKBQQFBwgEBAUEBQUFBQYFBQUHBwUFBQUFBQUFBQUICAQECgoHBAULCwQHBAQEBAQEBwQEBgQEBAUEBAQEBwgGBgQGCQcFBgoKCAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwsHBwcHBwcGBgYGBgYGBgYGBgYGBgYGBgkICAgICAwGBgYGBgYGBggGCAYGBgkICAkGBgYGBgYGBgYGBgYJCgYKBgUFBQUFBQUFBgUIBQUFBQUFCAcFBQwMCQcEBAQEBAQEBAQEBAQDAwkGCQYFBAcHBgcFBQcGBgYGBgYGBgYHBgYGBgYFBgYICAgGBQUHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwoKCgoKCgoKCgoKCgoKCgoKBwcICwcHBwcHCgcKBwcJBwcJCQkJCQkKDAkJCQcJCgoKBwcKBwcFBQUFBQYIBggFBggGBAQEBQUFBQUFCQkMDAoKCgcHCAcHCgoKCwoKCgcHCgcHCQcHBwcHBwcHBwcHBwgICAcIBwcJCQkJCwsODQkLCQsJCQkHBwcKBwoKBwoKCgoKBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHAwMDBwkDAwYGBggGCAMDBwMDBgYGBgYGBgYGBgYDBQcHAwMDBwMDBAQEBAQEBAQEBAQEBAMDBAMDBAQEAwcGBwcGBgYDAwYDAwMDAwMDAwMDAwcDAwMDAwMFAwMDAwMDAwMHBwcDBQMDBgYGBgYGBgYGBgMDAwYGAwMDCAMGBgMICQkDCQcDAwMDBwcDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBwcHBwcHBwcHBwoKBwcHCQkJBwcHBwcHCgoHBwcKCgcHBwkJBwcHDAwHBwcJCQcHBw0NBwcHCQkHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBgYHBwcGBgYHBwcHBwcHBwcHBwcHBwcHBgYHBwcJCQcHBwUFBwcHCgoHBwcGBgcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgGCAgHBQcIBAQHBAwICAgIBQUFCAgGCgYGBgcHBwcHBwcHBgUHBwcHBwcHBwUHBwcHBwUFBwcHBwcHBwcHBwcGBgUGBgcHBQgGBgUGBwcEBQQDAwcHBwcHBwUHBQUFBwcHBwcEBAQHBwcHBwcHBwQEBAMHAwMDBwcEBQMFBwcFBQUEBwcHBAcHBwcHBwcHBwcHBwcHBwcEBwcHBwYHBwcHBwYIBwYHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBAQHAAMEBAYHBwcHBwcHBwsJCAkJCQgICQgKBgcJCQwKBgkHBwcHBwcHBwcHBwcHEAoPCg4KDQkRCxAKEQsQCg0JEAoPCg4KDQkNCRELEAoGBwcHAgMHBwcHAAAAAAcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwcHBwcHAAcHBwcHBwcHBwcHAAAAAAAABwcHBwcHBwcHBwAABwcHBwcHBwcHBwcHBwcAAAcHBwcHBwcHBwcHBwcHAAAHBwcHBwcHBwcHBwcHBwAABwcHBwcHBwcHBwcHBwcAAAAHBwcHBwcHBwcHBwcHAAAAAAAABwcHBwcHBwcHBwAAAAAAAAcHBwcHBwcHBwcAAAcHBwcHBwcHBwcHBwcHAAAAAAcHBwcHBwcHBwcHBwAAAAAAAAAACQcHBwcHBwcAAAAAAAAAAAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHAAcHBwcHBwcHBwcHBwcAAAAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAgICAgICAgICAgICAgHBwcHBwcHBwcHBwcHBQoHBQwJBQkIBQMHCwUFBwcGBgUHCAcHBwwGBwcHBwcGBwcJBwcHBwcHBwwHBwcHBwcHBwYHBgcGBQUKCAkHCAUFBQUHBwcHBwUICwoKCAwMBQUJBgQJCwsDDQwHCA4JCQoICAgIBQkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgcHBQgEBwoHBwcJBwUHBgoJBgcHCgcGCgoHCgcHCQcGCgYEBwcIBgoKBgcHBgYGBgYGBgoKCgcHBwcKCgoKCgcHBQUFBQUFBQUFBQcKBwkJCQkJCQcJCQkJCAoICAYHBgcGBgYICAgICAgICAgIBgYGBgYGBgYGBgYGBwgOBgUIBwUGBQQGBQAAAAAAAAAAAAAHBgcGCgkGCgcJCQcHCQUEAAAABgcGBQwOBgMFBAkKCQUIBQUFBgYIBwUHBAgIBQUGBgUFBQYFBAQFBAQGBggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCgoGBggHAAkMBQkJCAkLDQsICAYGAwkGBggDBgUICgcIBgkHCgcMCQgLCgoICAULCQwJCQYICAUHBgYJCgYGBwcGBgMEBgYIBgcGBwUHCwYHBgUGBgYHBwkIBggGBQYJBQYHBQcGBgkGBgcGBgcHAwQGBQgGBgcGBQYGBwgEBAUGBAUEBAQEBAIEBwUFBAQEBQMFBQcEBgUEBAUEAgMFBAUEBQUEChAKBw4NDQ0KCgkJCQURCw8JBwcKBwcGBQMJBwcFBwUNCQgGCQcIBggGCgcDAgkGCQYKBwgGBwUKBwgGBwUIBgkHCggLCAoHDAkNCggGCgcHBQoHCgcNCgcFCAYNCQcFCAYIBggGCQcHBQcFCQgOCggNAwIIBgoJBwkHBwcFCQwMCQUHBQcJCAYJBwYKCgwKDAcLCQkMCQoFDA4JBwgGCgsMCgcLCQoJCgkJCgkJDw4RCgkHBwkHCQYIBwcJCQwHBwQJCgcFBgUICAkIBggHCAcIBwcHBwcLCwwIBwoHCwgLCQoICQcEAwkGCAYICAgLCAkFCAsGBgkICQkGBgsKCAcGBgYJCQkGBgkKBgcGCAkAAA4XBwMFBQcLAwQDBAcHBwcHBwcHBwcEBAsLCwcNCgkJCwkICwsFBgoJDQoLCAsKBwkLCg0KCgkEBAQNBwcHBwYHBwQHBwQEBwQLBwcHBwUFBAcGCQYGBgcHBwsEBQYIBgcHCAQHCwgGBAsHBwcFBwQHBwoKCgoKCg4JCQkJCQUFBQUKCwsLCwsLCwsLCwcHBwcHBwcKBgcHBwcEBAQEBwcHBwcHCwcHBwcHBgQODAoHBwcHBwcHBwcHBw0DAwMGBgYHBwgNEgQEAgsKBwkLCgkLBwsLCwsHBwgDBAoEDQcCCwcEBAQLCwsLCwoIBwYHCgcKBwoHCQYJBgkGCQYLCQsHCQcJBwkHCQcJBwsHCwcLBwsHCwcLBwUEBQQFBAUEBQoHBgMIBwcJBAkECQUJBQkECgcKCAoHCQoHCwcLBwsHCgULBQoFBwUHBQcFBwUJBAkGCQQLBwsHCwcLBwsHCwcNCQoGCQYJBgkGBAsHDgoLBwcBBAsECwwHCwwLBAoJCAkJCQsLBQoKDQoJCwsICQkKCwoLCwUKCAYHBAYIBwcHBgYHBwQHBgcGBwcHBgcFBwkHCQkEBgcHCQkLCAoHBQUGDQ0LCgoLCwkJCAoJDAcLCwkKDQsLCwgJCQkLCgsKDg4LDQkKDwoHBwcGBwcJBggIBwcKCAcIBwYHBgoGBwcLCwgKBwYLBwcHBgYFBAQECgoHBwYICAYNCQ0JDQkGDQYDBAQJBQUNBwoKDQcOCgoLCwsLDQcNBw0HBwsKAwsLCwsMCwgIDQ0NDQ0NDQ0NDQ0KDQ0NDQ0NDQoNCQkNCAgICAoKDQ0LDAsLDQ0NDQcKBwgHDAgLBggGBwwICgQLBwcLCgkMCAsJCQcKBwQECQwICQgICQUFBwMFBwQTEA0OCwYPDAkKBwUECwcLBwsHCwcLBwsHBgoHCwcOCgsHCwcKBwsHCwcHBgMTEA0LBwcHBwcHBwgIBwcIBgYIBwQIBwcHBwcHBwUEAwQFBAYKCwoICQcHCggHBQYGBQUFBwUGBgUGBQQIBwcHCgcHBgYFBQUGBwYHCQgEBwYJBQULCgsHBwgGBgIEBAUFCQYCBAMDAwQEAwMEBAQEBwcHBwcHBwQEAwMEBAQFAwYDBAYFBQUFBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAwQEBwgKCwoJCwgJBw0NCQcFCAYGBAwICAYKBwcHBgQKBwsHEAoPChMOCQcLCgsHCgcKBwkGDQoIBggGDQoHBgoICgcKBwwICwgNCQ0KCwcKBgkHCggLCAsICwgKCAoHCQgJBwkHBA0KCQcLBwkHAAAAAAAAAAAAAAAAAAAEAAMAAAIABwcEBwcEAwcHBAYIBwcHAwQHBwcIBgcHBwgHBwgIAgQECRcHBAQHBQQLCwMDBAQEBAQEBAQDBAMDBAMEBAQEBAQEBAQDBAMDCQkLCg4MCQcNDQ0NBgcDAwUFCAcGCAYGBgYGCgUFBwgFBwYICAYGBgcHBwUHBwkGBQYHCQYIBggICAgICAgICwsLCwsLCgsGBgYGBgYLCw0NDg0HBwcHBwcHBw0NDw8PDw8OBAQEBAQEBAUHBwgJCQgICAcHBwcHBwsMDg4NDQcHBwcGBgYMDg4OCQkJCQkJCQkMDA4ODQ0MDQgIBgYHBwUEBwcGBgkJCAgICAgICAgKCgsLCwsLCwcHBwcHBwcHDQ0PDw8PDw8JCQkJCQkJCQsLDg0NDQwNCAgICAgICAoLCwsKAwQDBQQHBwcHBw0MDg4LBQUFBAQFBQQFBQUICAUEBAcGBwcHBwYHCgoNDQoEBQMJCQkJCQ0MDQwKBAIKBgsGDgoJBggGCAYNCgcFBwULBwsHCwcJBgkGCQcJBwkHCgcNCggHCQgHCAYGCgkHBQkIBgcICAgJBwcJBwcHCQkHCQcGBwcICAgJBAQCBgQFBQoGBwcGBgYGCQgGBAkIBwcHBgcIBAcFBwUKBQgHBgkHBgUJBwcICAMLCwsLDgoMCwoHDAsNCAgLDAkLDAoLCAgLDAoHCAcHCgsICQgMCgcIBwoMBgAAAAMKDAcGCQoLCggICAgMDAwMCgkICQgJCAkJCQcHCAgJCAgICQgICAoICQkJBgYJCwsICQgJCAAGAwQDAAAAAAAAAAAEBAMDAAsAAAAACQkICQgICQgLCQABAgUGBQUEBgYFCAYFBQAIBgoJCgoJCgkJBQgICAgHBwcHBAYHBAQHBAYHBwcEBwcHBwcHCAcEBwcHCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUICgwPBQgKDA8FCAoMDwQGCAsOBgoIDAsHCAYIBwYJBwYHBwkGCQoGCQkLCAkMDAkMCQkMDg0KDAwKCgkMCwkLDAkHCAcJCQcICQYJCQYJBgYICAkJCAkICAkICAgKCAgICgYKBwkGCQYFBAUECwcLBwoFCgULBwsHCgYJBwkHCQcKBgoHCwcLBwsHCgcJBgkGCQYJBgkGCAULBwsHCwcLBwsHCwcFBAUECgcKBwoHCQMJBAkECQQMCwwLDQsKBwoHCgcKBwoHCwcLBwoHCAcIBwoFCgUKBQoFBwUHBQcGBwUHBQkECAQIBAkFCwcLBwsHCwcLBwoHCgcNCQ0JCgcKBgoGCQYKBgkGBwQJBggFCgYLBgoICwgLBwsHCwcLBwsHCwcLBwoGCQYJBgkGCgkJBwkICQYJBgUEBQQLBwoHCwkKCAsICwcLBwwIDAgLCAwIDAgLBwoHDAgMCAwIDAgMCAoGCgYKBggHBQcHAAAAAAcHBwcICAgHBwUHBwcHBgQEBAUFBQYFBgYFBAUDAwIDAwMDAwMEBAgIBAQICAUECAgJCQcHCQkHBAcJCQcHBQUFBQUFBQUJCQwMCQkMDAwMDw8MDAcPBw8KBgYGBgYGCQkJBgYGBgYGBgYGCgoKBwUFBQUKCgoFBQcLCwoKCwsHBgUHBwYFBwYGCgkGBgcHBgcICAQEBwcHBwYGBAQHBwcFBQUFBQQEBwgFBQcIBQQEBwgFBQYHBwcHBwYHAAAAAAAAAAADAwMDAwMDAwMICAgHBwcFBQUFDAwPDwsLBwcJBwgHBgcFBQgFBwgAAwMDAwQFBQgICAgICAgICAcHBwcHBwcFBQUFBQUFBQUFBQUFBQUFBQUMDAwPDwsHCQkJCQkJBwcIDQgICAgICAgICAgHBwcHBwcHBwUEBAQFBQUFBQUFBQgICAgICAgEBwQEBQUEBgUGBgUDAwgIBAQICAQECAgEBAgIBAQICAQECAgEBAkKBgYJCgYGBwcJCQcHCQkHBwkJBwcJCQUFBQUFBQUFBQUFBQgJBgcICQYHCAkGBwgJBgcHBwcHBAQFBQUGBwkHCAcHCAYIBggIBgcFBQUFBQUGBQUFBQUFCAcEBAQEAwMDAwMDAwMDAwMDAwMFAwMDAwUICgMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAsLCgsLCwcHCQwJBwcHBwcFBQUFBQUFBQUFBQUFBQUFBQUMDQkHBwcHBwcHBwcHBwcHBwcHBwcHDAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgIBwcKCgoKCgoKCgoKBwcHBwcHBwcIBwgGBgYGBggGBwcHBwgICQkHBwcHBwcIBwkOCwcHBwcHBwcHBwcHBwcHBwcHBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGCwwGBwUFCAcHBwcHBwcHBwgHBwcHBwcHBwcLCQcHDgoGCAcHBwcIBwcHBwkHCAcHBw0EBAQJDQQEBAcABAoGCQoJCgkKDAoICwkGCwkJBQUFCAgFBQgFBQgICAgJCAkJCAsMBQUJBQUFCQkJCgkLCQsMCwsFBgkFBQUJCQkKCQkJCQoMDgwODQ4JCAgIDAsICAwICAwLDAkICgoKCgYKCAoMDAgKCQgKCwkMCAgMCAgMDAgIDAcIDAsMDQ0LCgoKCgkJCQkMDAsLCgwKDgoKCQkJCQgJBwoLCwoKCgoJCgkJCAkICAsLCgsKCgkLCQkICQsKCgoKCQoKBgoKCgkKCg0KCgkMCgoICwwMDAwKCgoKCQkJCgoKDg4KDg4KCg4ODQ0NERENERENDQ0REQ0REQkKCQkJCAkICAYHCgkJCAYGBgYFCAkGBgkFBwcHCgoHBwoHBwoKCgoLCgoKBwsLBwcKBwcHCwoKCwgKCQoJCAgEBAgEBAQIBwgLCgsKCwQFCAUIBggPBwcHCwsHBwsHBwsKCwwLCgkJCQUJCAkMDAgJCAgJCAcIBwkOBwcLCwcHCwcHCwsLDAwLCwwLCwsLCwsLCwoKCQoJDAsLCgoKCgkKBQgJCQgJCAgKCgoKCQkJCgoKCQkJCgkKCAkICAkJCQkKCQkJBgoLCwoKCgoKCgkMCgoIDAwJCAkKCwoLCgsKCQkJDQ0JDQ0JCQ0NCgoKDg4KDg4KCgoODgoODgsLCwsLCgoKCgkKDQ0MBQYGBgYFCAcKAwgQEAQECQsKCwoLBwoODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4HDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw4ODg4ODgUHCAkJCAgJBggJCAkLCwgICAoLDAgICAgHCQkJBwcICAgICAcICAgGCAkJCAgICAYHAAYGAAAAAAAAAAkECAYFBQYFAAAAAAAAAAAJBwcKCAkJBwsJCgkUDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4MDA4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OBwQEBAQEBAQEBAQEBAQEBAQEAwQDBAQEBAQEBAQHBwcHBwcKCwYLBwcHBwcHBwcJBwcIBwcHBgYHBwcFBQcHBwcFBQUHBwUHBwcHBwcHBwcHBwcFBQcHBwcHBwcHDA0JBwcHBwcHBwcHBwcHBAQEBAQEBQQEBAQEBAQEBAQEBAMDBAMEBAMDAwMDBAQDAwMEAwMEBAMDAwQDAwMDBAMDBwcHBwcHBwcHCQcHCAcHBwcKCwoJBwMDAwQEAwMEAwQEAwkJBwcHCgkMCggHDgsMBQQEBAQEBAQEBAQEBAQEBAsLCwsLCwsLCwwMBAsEBAUFBAQEBAQEBAQGBwsGBAcLCwsLCwsLCwsLCwsLCwsMCwsOCwsLCwsLCw0LDw4LCwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCQcHBwcIBwcHBwoLCg0NCgkHBwcHDAoGBgYGBgYHBwcHBwwMCQwMCwkJDAkJCQkJCQsICAYICAcGBggGBgYGBgYGBggIBggJBwwHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCA0HBgYHBwcNBwUHBQUFCwUFBQUFBQwHCgQHBAQEBAYGCQYJBwYGCgkJBQgFBQYGBgYGBgYGBwYGBgcHBwwMBAgHBggGBAQEBAQEBAQEBAQEBAQEBAcHBwcHCQkICAgICAgICAgJCAgICAQEBQUHBwADAwABAwADAAMDAwADAAMDAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAgIBAQHBwkJBwcJCQUFBQUFBQUFBQUFBQUFBQUMDAkJBwUHBggIBgcICAYHCAkGBwgJBgcHBwQEBgcHBwQEBQUFBQgHBAQIBwQECAgFBAgIBgcHBwcHBwMFAwAFBAgHCgUFBQQDBQUGBQUFBQUFBQQEBAUDBAQDBQQEBAQCAgUGBgMFAwQEAwMDAwMDBAQEAwMDAwMDBgYHBQUFBQYGBAMDBgUFBQUFBQUFBQYGBQUFBQUEBQQEBAQEAwQFBwcIBAUFBQUGBQQEBgUFBQQEBAYDBAMFAwMDAwMFBQUFBQYFAwICBgkCAwMFBQUFBQQEBAQEBQYFBgQHBwYFBAYGCwkMCQwICAgICggKCQkMCAkMBgkJBgkJBggICgoICQoICAgICAkICAgJCAkICQgJCQkHCggICQcLCgwICQsFBwYIBgcJCAkKCQkJCQoHCAsLCAoICAgHCgoHCgcHCwsICQoKDQ0KDAoKDQ4KCwwKDAkJCQ0JBwoKCAoHCAcKCQcJCQcIDAwMDAwMDAoGBwkICQkICAsKCAsKCwgLCggLCwoLCgkLCgoLBgkJCQgJCgsHCQkHCgkJCAkICg4OCw0JCgwPDg4NEA0ODgcJCgcJCAcJBwoKBgkJBgkGCQcFBwYHCAkJCQoICQkJCQkLCQoLDQkKCgcCBQUDBQcCBwYGBgUHBgcIBgUICAgGCAgLBgYJCg4MDQsMCwkJDAoLDgwKDBMICwoNCwsQDAoKDg0TExMMDAkJCgwAAAAAAAAAAAAAAA0KDQoADQoNCQAAAAgJBgQGAQYEBAgIBgoICAYFBQgFCAUGBwcHCQkHCAgIAwgFCAIICAgFCAcLBwcCCAgGBgcFCAcJCQsDBgcICggJDQgNCwkLAggGCwkLCAoHBwgICAUIBQQDBwkJCgcQEAwLCwoLCwsLCwsLCwoLCgsKCwoLDwsKCgoKCgsLCgoKCgoLCgoLCwsLCwsKCwsMCwsOBw4ODg4ODg4ODg4ODgAACQkJCQsJCQkJCwkMDQMJDAkJCQkJDAkLDAwJDAwLCQkMCQkJCQkJCQoMDAkMDAsUEAcKCgoKDAoMCgoKCgoLCgoLDg8MFA8TEQ4LCwkJCQoJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCwkJCQkJCQkJCQ0OCgkJCQcHBwgICwcHBwcLCwsOCwsLCwsLCwwLCwsLCwsLCwsODw8NCwsUEBEPBwcLCw0OCwsLCw8LCw0LCwsVFRAQBwUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUHBwcGBgYGBgYGBgYGBgcHBwcHBwYHCgoKCgoKCgoKDAoKCwoKCgoNDg4MDw8MDAoKCgwMDg0LChQRDw8PDwcJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKDgkJDwcHDQ0NDQ0NDQ0NDQ0NDQ0NDw0NDw0NDQ0NDQ0PDREPDQ0NCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQsKCgoKCgoKCg4PDQ8ODQoKCgoLEhIHCQkJCQkLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDA0NDwsLCwcLCwsLCwsLCwsLCwsLCwsLCwsLCwgICAgICAgKCAgICAgLCgoICgwNCwkIDQ0JBwcLCwsLCwsLDAsLBwwHCgoKCgoKCgoKCgoKCgoKCgsKCgsLCgoKCwoKCgoKDA0OCwoHBwkHBwcNBwcHCgsHBwcHBwcHBwgHBwcJCQcHBwcHBwcHBwcKCwcHDQ0KBwcSDgoIDAkJCQkICQkJCQsJCQkJCQkJCQwNCwsJCw0MCgoUEA0LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsPDQsLBwcHBwcHBwoKCgoKCgoKCgoKCgoKCgoKDQoKAAcNDQ0NDQ0REQcHBwcKCgoKCgoKCg0KDAoKCg4NDQ0HBwcKCgoKCgoKCgoKCgoKDQ4KDwoKCwkJCQkJCQkJCQkMCQkJCQkJDAsJCRQQBwcHBwUFBQUFBQUFBQUFBQ8PDgoNCgcHCwsMDQkHBwcHBwcHBwcHBwcHBwcHBwcHDAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgIBwcHBwoKCgoKCgoKCgoKCgcHBwcHBwcHBwcHCAcJCwcGCAYGBgYGCAYICAgGCAgHBgYIBgYGBgYGBgYICAYICQcMDAcHBwcHCAgJCQcHBwcHBwgHCgsJDgsNDgsHBwcHBwcHBwcHBwcHBwcHBwcHBwYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGBgYGBgYGBgYGBgYGBgYGBgcGBgYGCwwGBwYHBwcHBQUIBwcHBwcHBwoHBwcHBwcHCAgHBwcHBwcHBwoLCwkHBw4KDgoGCAcHBwgHBwcHCQcHCAcHBw0NDQcEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBQQEBAQEBAQEBAQEBAYDBgMDAwcDAwQDBAMDBAMEBAQEBwcHBwcHBwcHCQcHCAcHBwcKCwoJDAsJCQcHBwoJDAoIBw4OCwsMDAYFBAQEBAQEBAQEBAQEBAQEBAQEBQUEBAQEBAQEBAYHCwYEBwsLCwsLCwsLCwsLCwsLCwwLCw4LCwsLCwsLDQsPDgsLCwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwkHBwcHCAcHBwcKCwoNDQoJBwcHBwwKBwYGBgYGBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwkKCgwHBwcHBwcHBwcHBwcMDAwMDAwMDAwMDAwHBwcHBwcHCQcHBwcHDAkJBwkLDAkIBwwMCQcHBwcHBwcHBwkHBwcFBQUFBQUFBQUFBQUFBQUFBQUFCAUFBQUFBQUFBQUJCgsIBQUHBQUFCwUFBQgJBQUFBQUFBQUHBQUFBwcFBQUFBQUFBQUFCAkFBQsLCAUFDAwEBwQEBAQEBAcEBAcEBAQFBAUEBAgJBwcEBwoHBgcLCwkHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcMCAcHBwcHBgYGBgYGBgYGBgYGBgYGBgYJCQkJCQkNBgYGBgYGBgYJBgkHBgYKCQkJBgYGBgYGBgYGBgYGCQoGCwYGBgYGBgYGBgcGCAYGBgYGBgkHBgYMDAkHBAQEBAQEBAQEBAQEBAQKBgoGBQQHBwYHBQUHBgYGBgYGBgYGBwYGBgYGBgYGCAgIBwUFBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcLCwsLCwoLCwsLCwoLCwoLCwcHCQwHBwgICAoICwcHCQcHCQkJCQkJCw0JCQkHCQsLCwcHCwcHBQUFBQUHCQcIBQcJBwUFBQUFBQUFBQoKDQ0KCgoHBwkHBwsLCwwLCwsHBwsHBwoIBwcHBwcHBwcHBwcICAgHCQcHCgoKCgwMDw4KDAoMCgoKBwcHCwcKCgcLCwsLCwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAgICAgICAgICAgICAgICAMDAwcJAwMHBwcJBwkDAwcDAwYGBgYGBgYGBgYGAwYHBwMDAwcDAwQEBAQEBAQEBAQEBQQDAwQDAwQEBQMHBgcHBgYGAwMHAwMDAwMDAwMDAwMHAwMDAwMDBgMDAwMDAwMDBwcHAwUDAwcHBwcHBwcHBwcDAwMHBwMDAwkDBwcDCQkJAwkIAwMDAwgIAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwcHBwcHBwcHBwcKCwcHBwkJCQcHBwcHBwsLBwcHCwsHBwcJCQcHBw0NBwcHCgoHBwcODgcHBwoKBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAgHBwcHBwcHBwYGBwcHCgoHBwcGBgcHBwsLBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgIBwgICAUHCAQECAQNCAgICAYGBQgIBwoHBwcHBwcHBwcHBwcGBwcHBwgHCAcFCAcHBwcGBgcHBwcHBwcHBwcHBwcFBgYHBwYJBwcFBgcHBQUEAwMHBwcHBwcFBwUFBQcHBwcHBQUEBwcHBwcHBwcFBQQDBwMDAwcIBQUDBQcHBQUFBAcHBwQHBwcHBwcHBwcHBwcHBwcHBAgHBwcHBwcHBwcGCAcGBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwQEBwAEBAQGBwcHBwcHBwcMCgkJCgkJCQoJCwYICgkNCwYKBwcHBwcHBwcHBwcHBxIKEAsPCg4KEgwSChIMEgoOChIKEAsPCg4KDgoSDBIKBgcHBwMDBwcHBwAAAAAHBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcHBwcHBwAHBwcHBwcHBwcHBwAAAAAAAAcHBwcHBwcHBwcAAAcHBwcHBwcHBwcHBwcHAAAHBwcHBwcHBwcHBwcHBwAABwcHBwcHBwcHBwcHBwcAAAcHBwcHBwcHBwcHBwcHAAAABwcHBwcHBwcHBwcHBwAAAAAAAAcHBwcHBwcHBwcAAAAAAAAHBwcHBwcHBwcHAAAHBwcHBwcHBwcHBwcHBwAAAAAHBwcHBwcHBwcHBwcAAAAAAAAAAAoHBwcHBwcHAAAAAAAAAAAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwAHBwcHBwcHBwcHBwcHAAAABwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgICAgICAgICAkICAgIBwcHBwcHBwcHBwcHBwULBwUNCQYJCQUEBwwGBgcHBwcFCAkHBwgNBgcHBwgHBgcHCgcHBwcHBwcNBwcHBwgHBwcHBwcHBgUFCwkKBwkFBQUFCAcHBwcFCAsLCwkNDQYGCgcECgwMAw0NBwkPCQkLCQkJCAYKCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoHBwUJBAcLBwcHCQcGBwcLCQYHBwsHBwsLBwsHBwoHBgoGBAcHCAcLCwYHBwYGBgYGBgYKCgoHBwcHCgoKCgoIBwUFBQUFBQUFBQUHCwcJCQkJCQkHCQkJCQkKCQkGBwcIBgYGCQkJCQkJCQkJCQYGBgYGBgYGBgYGBgcJDwYFCQcFBgUEBwYAAAAAAAAAAAAABwYIBwsJBwsICgoIBwoGBQAAAAcHBwUMDwcDBgQJCgkGCQUFBQYGCQgFBwQJCQUGBgcFBgYGBQQFBQQFBgcIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQoLBwcJCAAJDQYJCgkKCw0MCQkHBwQKBwYIBAYGCQsICQcKBwsIDQoJCwsLCQgGDAoNCgkGCQgFBwcHCgoGBgcHBgYEBAcGCQcHBgcGBwwHBwcFBwcGBwcKCAcJBgUGCQUHBwUHBwcKBgYHBgYHBwMEBwYJBwcHBwUHBgcJBAQFBwUFBAQEBAQCBQcFBQQFBQUDBQUHBAYFBAUGBAIDBQQFBAUGBAsSCgcPDg4OCwoKCgoFEgwQCgcHCgcHBgUDCgcHBQgGDgoJBwoHCQYJBwsIAwIJBwkHCwgJBggGCwgJBgcGCQcKBwsIDAkLCA0JDgsIBgsIBwULCAsIDgsIBgkGDgoIBggGCQYJBgkHBwUIBQkIDwsJDgQDCQYKCgcKBwcIBQoNDQoFBwUHCgkHCgcHCwsMCw0IDAoKDQkLBg0PCQcJBwsMDQsIDAoLCgsKCgsJChAQEgsJCAgJCAkGCQcHCQkNBwgECQsHBQcFCAkJCAYJCAgICAcHCAcIDAsNCAcLCAwJDAkLCAoHBAMJBwkHCQgIDAgKBQgLBwYKCQoKBwYLCgkHBgcHCgoKBwcKCwYIBwkKAAAPGQgDBQUHDAQFBAQHBwcHBwcHBwcHBAQMDAwHDgsKCgwKCQwMBQYLCQ4LDAkMCwgJDAsOCwsKBQQFDgcHBwgGCAcFBwgEBAcEDAgICAgFBQUIBgoGBgYHBwcMBQUGCQYHBwkEBwwJBwUMBwgHBQcEBwcLCwsLCwsPCgoKCgoFBQUFCwwMDAwMDAwMDAwIBwcHBwcHCwYHBwcHBAQEBAgICAgICAwICAgICAYEDw0LBwcHBwcHBwcHCAcOBAQEBwcHBwcIDhMEBAIMCwcJCwoJDAcMDAwMBwgIAwULBQ0HAgwHBQUFCwsLDAwLCQgGCAsHCwcLBwoGCgYKBgoGDAoMCAoHCgcKBwoHCgcMBwwHDAcMBwwIDAgFBAUEBQQFBAULCAYDCQcHCgQKBAoGCQYKBAsICwgLCAkLCAwIDAgMCAsFCwYLBQgFCAUIBQgFCgUJBgkFDAgMCAwIDAgMCAwIDgoLBgoGCgYKBgULBw8LDAgHAgULBAsNBwwNCwULCggKCgoMDAULCw4LCQwLCQkJCwsLDAsGCwgGCAQHCQgHCAcGCAgECAcIBwcICAYIBgcJBwoKBAcIBwoKCwkKCAUFBg0ODAoKDAsKCgkKCg0IDAwKCg4MDAwJCgkKCwsMCg8PDA4JChALBwgHBggHCgYICAcICwgICAgGCAYKBwgICwsICgcGCwcHCAcGBQQEBAsLCAcHCAkHDgoOCg4KBg4HBAUFCQUFDQcKCw4HDwsLCwsLCw4HDgcOBwcMCwQMDAwMDAwJCQ4ODg4ODg4ODg4OCw4ODg4ODg4LDQoKDgkJCQkLCw4ODA0MDA4ODg4ICggICAwICwcJBgcNCQsFCwgIDAsKDAkLCgoICwcFBAkNCQoJCQoFBggEBQcEFBEODwwGEA0KCwcFBAsIDAgMCAsIDAgMCAcLBwsHDwsMBwwHCwgMCAsICAYDFBEODAcHCAgHBwcICQcHCQcHCQcFCQgIBwcICAgFBAQFBgUGCwwLCAkHCAsJCAUGBgYGBgcGBgYGBwUFCAgHCAsHCAcGBgYGBggHBwoIBAcGCQYGDAsMBwcJBwcCBAQGBgoGAgQDAwMEBAQEBAQEBAcHBwcHBwcEBAQEBAQEBQMGAwQGBQYFBQUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAgJCgsKCgwICgcODQkHBQkGBwUMCQgGCwgIBwcECwgMCBELEAsUDwkIDAsLCAsICwgKBg4LCQcJBw4LCAYLCQoICggMCQwJDgoOCwwHCgcKBwsIDAgMCQwICwkKCAkICgcKBwUOCgkHDAgKBwAAAAAAAAAAAAAAAAAABQADAAADAAgHBQcIBAQHCAUHCAcICAMECAcHCAcHCAcIBwgICQIEBQoZBwQFBwUFDAwDAwQFBAQFBQQEAwUDAwQDBAQFBAQFBQQEAwUDAwoKDAsPDAkIDg4ODgcHAwMFBQgIBggHBgYGBgoGBQgJBggGCQkGBgcHBwgFCAgKBgYGCAkGCAcICAgICQgICAsLCwwLCwsLBgYHBgYGDAwODg4OBwcHBwcHBwcODhAQEBAQEAQEBAQEBAQFBwcJCQoJCQkICAgICAgMDQ8PDg4HBwcHBwcHDQ8PDwoKCgoKCgoKDA0PDw4ODQ4JCQcGBwcGBAgIBwcKCgkICAkICAgICwsMDAwMDAwHBwcHBwcHBw4OEBAQEBAQCgoKCgoKCgoMDA8ODg4NDgkICAkJCAgLCwsLCwQEAwUFBwgHBwcODQ8PDAUFBQUFBQYFBQYFCAkFBAUHBwcHCAgHBwsLDg4LBQUECgoKCgoODQ4NCwUCCwcLBw8LCgcJBwkHDgoHBggFDAgMCAsICQYJBgoHCgcKBwoIDgoJCAkJBwgHBwoKBwYJCQcHCAgICQgICQgICAkKCAkIBwgICQkICQQEAgYEBgULBwgIBwcGBwoJBwUKCQcHBwcHCQUHBQcFCgUJBwcKBwcFCggHCQgDDAwMDA8LDQsLBw0MDggJDA0JDA0KCwkIDA0LCAgIBwsMCAoIDAsICQcLDAYAAAADCg0HBwkLDAoICAgJDQ0NDQsKCQoJCQkKCgoICAgICQgJCAkJCQkLCQoKCQYGCgwMCAoJCggABgMEAwAAAAAAAAAABQUDAwAMAAAAAAoKCQoICAoJCwoBAQMFBwYGBQYGBQgGBgUACAcKCgoLCgsKCgYJCAkICAgIBwQHBwQECAQHCAcIBAgHCAcHBwgHBAcICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCAsNEAYICw0QBggLDRAFBgkMDwcLCA0LBwgHCAgHCgcGBwcJBwkKBgoJCwkKDQ0JDQoKDA8OCgwNCwsKDQwJCw0JBwkHCQkHCQoHCQoHCgcHCQgJCggKCQgKCQkJCgkJCQsHCwcKBwoHBQQFBAsICwgLBgsGCwgLCAsGCQgJCAoICgYLBwsHCwcLBwsHCgcKBgoGCgYKBwkFDAcMCAwIDAgMCAwIBQQFBQsICwgLCAoECgQJBAkEDQwNDA0MCwgLCAsICwgLCAsICwgLCAkICAgLBgsFCwYLBggFCAUIBggFCAUJBQkECQQJBQsHCwcLBwsHCwcLBwsHDgoOCgsHCwcLBwoGCgYKBggFCgcIBgsHCwcLCAsICwgLBwsHCwcLBwsHCwcLBwoHCgcKBwoJCggKCAoHCgcFBAUECwgLCAsJCwkLCQsICwgMCQwJCwkMCQ0JCwcLBw0JDQkNCQ0JDQkLBwoHCwcIBwUHBwAAAAAIBwcHCQkJCAgGCAgICAYEBAQFBgUGBQYGBQQFBAMCAwMDAwMDBAQICQUFCAkFBQgJCgoHBwoKBwQHCgoHBwUGBQYFBgUGCQoNDQkKDQ0MDBERDAwHEQcRCwYGBgYGBgoKCgYGBgYGBgYGBgsLCwgFBQUFCwsLBgYIDAwLCwwMCAYGBwgGBgcGBgoKBgYIBwcHCAgEBAcHCAcGBgQECAgIBgYFBgYFBQgIBQYICAUEBAgIBgYGBwcHBwcGBwAAAAAAAAAAAwMEAwMDAwMDCQkJBwcHBQUFBQ0NEREMDAcHCgcIBwYIBQYIBQgIAAMDAwMFBgYICQkJCQkJCQkHBwcHBwcHBQUFBQUFBQUFBQUFBQUFBQUFDQ0NEREMBwoKCgoKCgcHCQ4JCAgICQkJCQkJBwcHCAgICAgFBQQEBgYGBgYGBgYICQgICAkJBAcEBAUGBQYGBgYFAwMJCAQFCQgEBQkIBAUJCAQFCQgEBQkIBAUKCgYGCgoGBgcHCgoHBwoKBwcKCgcHCgoFBgUGBQYFBgUGBQYJCQcHCQkHBwkJBwcJCQcHCAgICAQEBQYFBgcJCAgICAkHCQcICAcHBgYGBgYGBgYGBgYGBggIBQUFBQMDAwMDAwMDAwMDAwMDBQMDAwMGCAsDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0LCwsLCwsICAoNCggICAgIBQUFBQUFBQUFBQUFBQUFBQUFDA4KBwcHBwcIBwcHBwcHBwcHBwcHBw0HBwcHBwcHBwcHBwcHCAcHBwcHBwcHBwcJCAcHCwsLCwsLCwsLCwcHBwcHCAgICQcJBgYGBgYJBggICAgJCAoJCAgICAgICAgKDwwIBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwwMBwcFBQkHBwcHBwcHBwcJCAcHBwcHBwcHDAoHBw8LBgkICAgICAgICAgKCAgICAgOBAQECg0FBQUIAAULBwkKCQoKCw0LCAwJBwwKCQUFBQkJBQUJBQUJCAkJCQgJCggMDQUFCQYFBQoJCQoJCwkLDQwMBgYKBgYGCgkKCgkJCgkLDQ8NDw4PCggICAwMCAgMCAgMDAwJCQoLCgoGCwkLDQ0JCwoJCgwJDAgIDQgIDAwICAwICAwMDA0ODAsLCwsKCgkKDAwMDAsMCw8LCwkKCQoICQcLDAwLCwsLCgoKCgkJCQkMDAoMCwsKDAkJCQkLCwsLCwoLCwcLCwsKCwsOCwsKDQsLCQsNDQ0NCwsKCgkKCQsLCw8PCw8PCwsPDw4ODhISDhISDg4OEhIOEhIKCgoKCgkJCQkHCAsJCggGBgYGBQkJBgcJBQcHBwsLBwcLBwcLCwsLDAsLCwgLCwcHCwcHBwsKCwwJCgoKCQgIBAQJBAQECQgJDAsMCwwEBggGCAYIEAcHBwwMBwcMBwcMCwwMDAoKCgoFCQgJDAwJCQkICQgHCAgKDwgICwsICAsICAwMDA0MCwwMDAwLDAwMDAwLCwoKCgwMDAsLCwsKCwUJCgoJCQkJCwsLCwoKCgoLCwoKCgoKCgkJCQkKCgoKCgoKCgcKDAwLCwoLCgoJDQsKCQ0NCgkJCgwKDAoMCwoKCg0NCg4OCgoODgsLCw8PCw8PCwsLDw8LDw8MDAwMDAsLCwsKCg0ODQUHBwcHBQkICwMJEhIEBAoLCwwLDAcLDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PBw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPDw8PDw8FCAgJCQgICgYJCgkJDAwJCQgKCwwICAgJCAoJCQgICQkJCQgHCAkJBwgKCgkJCQgHBwAHBwAAAAAAAAAKBQgGBgYHBgAAAAAAAAAACggICgkJCQgMCQoJFQ8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDQ0PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDwgEBAQEBAQEBAQEBAQEBAQEBAMEAwQEBAQEBAQECAgICAgICwwHDAgHCAgICAgICggICAgICAcHCAgIBQUICAgIBQUFCAgFCAgICAgICAgICAgIBQUICAgICAgICA0OCggICAgICAgICAgICAQEBAQEBAUEBAQEBAQEBAQEBAQDAwQDBAQEAwMDAwQEBAMDBAMDBAQEAwMEAwMDAwQDAwgHCAgICAgICAoICAgICAgICwwLCQgDAwMEBAMDBAMEBAMKCggHCAoKDQsJCA8MDAYEBAQEBAQEBAQEBAQEBAQMDAwMDAwMDAwMDQQMBAQGBgQEBAQEBAQEBwgLBgQIDAwMDAwMDAwMDAwMDAwMDQwMDwwMDAwMDAwODBAPDAwICAgICAgICAgICAgICAgICAgICAgICAgICAoICAgICAgICAgLDAoODgoJCAgICA0LBwcHBwcHBwcHBwcNDQoMDQsKCgwKCgoKCgoMCQkGCQgIBgYJBgYGBgYGBgYJCQYJCQgNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkOCAcHCAgIDggFCAUFBQwFBQUFBQUNCAsFCAUFBQUHBwkHCQcHBwsJCQUIBQUHBwcHBwcHBwgHBwcICAgNDQQIBwcJBwQEBAQEBAQEBAQEBAQEBAQHBwcHCAoKCQkJCQkJCQkJCQkJCQkEBQUFBwcAAwMAAQMAAwADAwMAAwAEAwAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAJCAUFBwcKCgcHCgoFBgUGBQUFBgUGBQYFBgUGDQ0JCgcGCAYICAcHCAgHBwkJBwcJCQcHBwcEBAYHCAgEBAYGBgYICAUFCAgFBQkJBQUJCQcHBwcICAgDBQMABgQJCAoGBgYEBAYFBgUGBQUFBgUFBAUFBAQEAwYEBAQEAwMGBgYEBgMFBQQDAwMDAwQEBAMDAwQDAwYGCAYGBgYGBwUEBAYGBQYFBQUFBQYHBwYGBQUFBQUFBQQEBAMEBgcICAUFBQUFBgUFBQYGBgUFBQQGBAQDBQMDBAMEBgUFBgYGBQQDAwcJAwMEBQYGBgYEBQQFBAUHBgYFBwgHBgUHBwwKDQkNCAkJCQoJCgkKDQgJDQcKCgcJCQcJCAsLCAoLCAkJCQkKCQkJCgkJCQkJCgkKCAsJCAoHDAsNCAkMBQgGCAYICQgKCwoJCgkLCAkLDAgLCQgJCAsLCAsICAwMCQkKCg4OCg0KCg4PCwwNCg0KCgoOCggLCwgKBwgHCgoHCgkHCA0NDQ0NDQ0LBgcKCAoKCQkLCwgMCwsJCwsIDAsKDAsKCwsLCwYKCgoICQsMBwkKCAoKCgkJCQsPDwsOCgoNEA8PDRENDw8HCgsHCQkHCgcKCgcJCQcKBgkIBgcGCAkJCQkLCQkKCgoKCwoLDA4KCwsIAwUFBAUHAwgHBgYGBwYHCAYGCAkIBwkJCwYGCQsPDQ4LDQwKCgwKDA8NCwwVCAwKDgwMEQ0LCw8OFRUVDQ0KCgsMAAAAAAAAAAAAAAAOCw4LAA4LDgkAAAAJCgYFBgIHBAUICQcKCAgGBgUIBggFBwcHBwkKBwgICAQIBQgCCQkIBQgIDAcIAwgIBgcHBQgHCgoMBAYHCQoJCg4JDQwKDAMIBwwJDAkKCAgJCQgGCAUEBAgKCgsHEhINCwsLCwsLCwsLCwsLCwsLCwsLCxALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDQsLDwgPDw8PDw8PDw8PDw8AAAoKCgoLCQoKCgwKDQ4DCg0KCgoKCg0KDA0NCgwNCwoKDAoKCgoKCgoKDQ0KDA0LFREICwsLCw0LDAsLCwsLCwsLDA8QDRUQFBIPDAwKCgoLCgoKCgoKCgoKCgsKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgsKCgoKCgoKCgoODwoKCgoICAgJCQwICAgIDAwMDwwMDAwMDAwNDAwMDAwMDAwMDxAQDgwMFhETEAgIDAwODwwMDAwQDAwODAwMFxcSEggGBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCAgIBgcGBgYGBgYGBgYICAgICAgGCAsLCwsLCwsLCw0LCwwLCwsLDg8PDRAQDQ0LCwsNDRAODAsWEhAQEBAICgoKCQkKCgkKCQoKCQkJCQoJCQkJCQkJCgoJCgoKCg8JCRAICA4ODg4ODg4ODg4ODg4ODhAODhAODg4ODg4OEA4SEA0ODgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw4MCwsLCwsLCwsPEA4QEA4LCwsLCxQUCAoKCgoKDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0ODhAMDAwIDAwMDAwMDAwMDAwMDAwMDAwMDAwJCQkJCQkJCwkJCQkJDAsLCQsMDgwKCQ4OCggIDAwMDAwMDA0MDAgNCAsLCwsLCwsLCwsLCwsLCwsLCwsLDAsLCwsLCwsLCw0ODwwLCAgKBwcHDgcHBwsMBwcHBwcHBwcIBwcHCgoICAgICAgICAgICwwICA4OCggIEw8KCQ0JCQkJCQkJCQkMCQkJCQkJCQkNDgwMCQwODQsLFRENDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEA4MDAgICAgICAgLCwsLCwsLCwsLCwsLCwsLCw4LCwAIDg4ODg4OEhIICAgICwsLCwsLCwsOCw0LCwsPDg4OCAgICwsLCwsLCwsLCwsLCw4PCxALCwsKCgoKCgoKCgoKDQoKCgoKCg0MCgoWEQgICAgFBQUFBQUFBQUFBQUQEA8LDgsICAsLDA4KBwcHBwcIBwcHBwcHBwcHBwcHBw0HBwcHBwcHBwcHBwcHCAcHBwcHBwcHBwcJCAcHCAgLCwsLCwsLCwsLCgoICAcHBwcHCAgICAkHCgsIBgkGBgYGBgkGCQkJBgkICAYGCQYGBgYGBgYGCQkGCQkIDQ0ICAgICAkICgkICAgICAgICAsMCg8MDg8MCAgICAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwwMBwcHCAgICAUFCQgICAgHBwcLBwcHBwcHBwkIBwcHBwcHBwcLDAwKBwcPCw8LBgkICAgICAgICAoICAgICAgODg4IBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAUEBAQEBAQEBAQEBAQHAwYDAwMIAwMEAwQDAwQDBAQEBAgHCAgICAgICAoICAgICAgICwwLCgwMCgoIBwgKCg0LCQgPDwwMDA0GBgQEBAQEBAQEBAQEBAQEBAQEBAYGBAQEBAQEBAQHCAsGBAgMDAwMDAwMDAwMDAwMDAwNDAwPDAwMDAwMDA4MEA8MDAwICAgICAgICAgICAgICAgICAgICAgICAgKCAgICAgICAgICwwKDg4KCQgICAgNCwgHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcHBwcIBwgHBwgHBwcHBwcHBwgHCAcHBwcHBwcHBwgICAgIBwcKCwsNBwgHCAcHBwcICAcIDAwMDAwMDAwMDAwMBwcHBwcHBwoHCAcHCA0KCgcKDA0KCQcNDQoICAgICAgICAgKCAgIBQUFBQUFBQUFBQUFBQUGBQUFBQgFBQUFBQUFBQUFCQoMCQUFCAUFBQwFBQUJCgUFBgUFBQUFBwUFBQgIBgUFBQUFBQUFBQkKBQUMDAgFBQ0NBQgFBQUFBQUIBQUHBQUFBQUFBQUICQcHBQcLCAYHDAwJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAkICAgICAcHBwcHBwcHBwcHBwcHBwcHCgoKCgoKDgcHBwcHBwcHCQcJBwcHCwkJCgcHBgcHBgYHBwcHBwoLBwwHBgYGBgYGBgYHBgkGBgYGBgYKCAYGDQ0KCAQEBAQEBAQEBAQEBAQECgcKBwYFCAgGCAUFCAcHBwcHBwcHBwgHBwcHBgYHBgkJCQcGBggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwsLCwsLCwwMCwsLDAsLCwsICAoMCAgICAgLCAsICAoICAoKCgoKCgwOCgoKCAoMDAwICAwICAUFBQUFBwkHCQUHCQcFBQUFBQUFBQULCw4OCwsLCAgJCAgMDAwNDAwMCAgLCAgLCQgICAgICAgICAgICQkJCAkICAsLCwsNDRAPCw0LDQsLCwgICAsICwsIDAsLCwsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJCQkJCQkJCQkJCQkJCQkDAwMICgMDBwcHCgcJAwMIAwMHBwcHBwcHBwcHBwMGCAgDAwMIAwMEBAQEBAQEBAQEBAUFAwMEAwMEBAUDCAcICAcHBwMDBwMDAwMDAwMDAwMDCAMDAwMDAwYDAwMDAwMDAwgICAMGAwMHBwcHBwcHBwcHAwMDBwcDAwMJAwcHAwoKCgMKCAMDAwMJCQMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMICAgICAgICAgICwsICAgKCgoICAgICAgMDAgICAwMCAgICgoICAgODggICAoKCAgIEBAICAgLCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgHBwgICAcHBwgICAgICAgICAgICAgICAgGBggICAoKCAgIBgYICAgLCwgICAcHCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQcJCQgFCAkFBAkEDQkJCQkGBgUJCQcLBwcHCAgICAgICAgHBggICAgICAgIBggICAgIBgYICAgICAgICAgICAcHBgcHCAgGCgcHBgcICAUFBQMDCAgICAgIBQgFBQUICAgICAUFBQgICAgICAgIBQUFAwgDAwMICAUFBAUICAUFBgUICAgFCAgICAgICAgICAgICAgICAQICAgIBwgICAgIBwkIBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgFBQgABAUFBwgICAgICAgIDQsJCgsKCQkLCQwHCAoKDQwHCggICAgICAgICAgICAgTCxEMEAsPChMNEwsTDRMLDwoTCxEMEAsPCg8KEw0TCwcICAgDAwgICAgAAAAACAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgICAgACAgICAgICAgICAgAAAAAAAAICAgICAgICAgIAAAICAgICAgICAgICAgICAAACAgICAgICAgICAgICAgAAAgICAgICAgICAgICAgIAAAICAgICAgICAgICAgICAAAAAgICAgICAgICAgICAgAAAAAAAAICAgICAgICAgIAAAAAAAACAgICAgICAgICAAACAgICAgICAgICAgICAgAAAAACAgICAgICAgICAgIAAAAAAAAAAAKCAgICAgICAAAAAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgACAgICAgICAgICAgICAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCQkJCQkJCQkJCQkJCQgICAgICAgICAgICAgFDAgFDQoGCgkFBAgNBgYICAcHBggJCAgIDgcICAgICAcICAsICAgICAgIDggICAgJCAgIBwgHCAcFBQsKCwgKBgYGBgkICAgIBgkMDAwKDg4GBgsHBAoNDQQODggJEAoKCwoKCgkGCgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCAgFCQUIDAgICAoIBggHCwoHCAgMCAcMCwgLCAgLCAYLBgUICAkHDAwHCAgHBwcHBwcHCwsLCAgICAsLCwsLCAgGBgYFBgYGBQUFCAwICgoKCgoKCAoKCgoKCwoKBwgHCAYGBgoKCgoKCgoKCgoGBgYGBgYGBgYGBwcICRAHBQoIBgcFBAcGAAAAAAAAAAAAAAgHCAcMCgcMCAsKCQgKBgUAAAAHCAcGDREHAwYECgsKBgkFBQUHBwkIBggFCQkGBgcHBgYGBgYEBQUFBQcHCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4LDAcHCggACg4GCgsJCgwODQkJBwcECwcHCQQHBgoMCAkHCggMCA4LCQwLCwkJBg0LDgsKBwoJBQgHBwoLBwcICAcHBAQHBgkHCAcIBggNBwgHBgcHBggICgkHCgcFBwoGBwgGCAcHCgcHCAcHCAgEBAcGCQcHCAcGBwYICgUFBQcFBQUFBQUFAwUIBQUFBQUFAwUFCAQHBQUFBgUDBAUEBQUFBgUMEwsIEA8PDwwLCgoKBRMNEQsICAsICAcGBAsICAYIBg8LCgcLCAkHCgcMCAMCCgcKBwsICQcIBgwICQcIBgoHCwgMCQ0JDAgOCg8LCQcMCAgGCwgLCA8LCAYJBw8LCAYJBwkHCQcKCAgGCAYKCRALCg8EAwkHCwsICwgICAUKDg4KBQgFCAsKBwsIBwsLDQsOCA0LCw4KDAYOEAoICgcMDQ4MCA0LDAsMCwoLCgsRERMMCggICggKBgkICAoKDggJBQoMCAYHBQkKCgkGCQgJCAkICAgICA0MDgkIDAgNCQ0KDAkLCAUDCgcJBwkJCQ0JCgYJDAcHCgoKCgcHDAsKCAcHBwsLCwcHCgwHCAcJCwAAEBsIAwYGCA0EBQQECAgICAgICAgICAQEDQ0NCA8MCgsMCwkMDAYHCwoODAwJDAwICgwMDwwMCwUEBQ8ICAgIBwgIBQcIBAQIBA0ICAgIBgYFCAcKBwcHCAgIDQUFBwkHCAgJBAgNCQcFDQgICAYIBQgIDAwMDAwMEAsLCwsLBgYGBgwMDAwMDAwMDAwMCAgICAgICAwHCAgICAQEBAQICAgICAgNCAgICAgHBBENDAgICAgICAgICAkIDwQEBAcHBwgICQ8VBQUDDQwICgwLCg0IDQ0NDQgJCQMFDAUOCAMMCAUFBQwMDAwNDAkIBwgMCAwIDAgLBwsHCwcLBwwKDAgLCAsICwgLCAsIDAcMBwwHDAcMCAwIBgQGBAYEBgQGDAgHBAoICAoECgQKBgoGCgQMCAwJDAgKDAgMCAwIDAgMBgwGDAYIBggGCAYIBgoFCgcKBQwIDAgMCAwIDAgMCA8KDAcLBwsHCwcFDAcQDAwICAIFDAQMDgcNDgwFDAoJCwsLDAwGDAwODAoMDAkKCgwMDA0MBgwJBwgFBwkICAgHBwgIBQgHCAcHCAgHCAYICgcKCwUHCAcLCwwJCwgGBgcODw0LCwwMCgoJCwsOCAwMCwsODAwMCQsKCwwMDQsQEAwPCgsRCwgICAcJCAsHCQkICAsJCAkIBwgHCwcJCAwMCQsHBgwICAgHBgYEBAQMDAgIBwkJBw8KDwoPCgcPBwQFBQoGBQ4ICwsPCBAMDAwMDAwPCA8IDwgIDQwEDQ0NDQ0NCQkPDw8PDw8PDw8PDwsPDw8PDw8PCw4KCg4JCQkJDAwPDw0NDQ0PDw8PCAsICQgNCQwHCQYHDgoMBQwJCA0MCg0JDAsKCAsIBQUKDgkKCQoLBgYIBAYIBBUSDxAMBxEOCwwHBgQMCAwIDAkMCAwIDAgHDAgMBxAMDAgMBwwIDAkMCAgHBBUSDwwHCAgICAgHCQoICAkHBwkIBQoICAgICAgIBQUEBQYFBwwNDAkKCAgLCQgGBwYGBgYIBgYGBgcGBQkICAgLCAgHBwYGBgYIBwgKCQQIBwoGBg0LDQgHCQcHAwUFBgYKBwIEAwMDBAQEBAUFBQUICAgICAgIBAQEBAUFBQUDBwMFBwUGBgYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQICQsMCwoMCQsIDw4KCAYKBwcFDQoJBwwJCAgHBAwJDAgSDBEMFQ8KCAwLDAgMCQsICgYPCwkHCgcPDAgHDAkLCAsIDQkNCQ8LDwsNCAsHCggMCQwJDAkNCQsJCwgKCQsICwgFDwsKCA0ICwgAAAAAAAAAAAAAAAAAAAUAAwAAAwAJCAUICAQECAkFBwkICAgEBAgHCAkHCAgICQgICQkCBAULGwgEBQgFBQ0NBAQFBQQFBQUFBQMFAwQFBAQEBQQFBQUFBQMFAwQLCg0MEQ0KCA8PDw8HBwMDBQYJCAYJBwcHBwcLBgYICgYIBwoJBwcHBwgIBggJCwcGBggKBgkHCQkJCQkJCQkMDAwNDAwMDAcHBwcHBw0NDw8PDwgICAgICAgIDw8REREREREFBAUFBAQFBQgICgoKCgkJCAgICAgIDQ4QEA8PBwcHBwcHBw4QEBAKCwsKCwsKCg0NEBAPDg4OCQkHBwgIBgUICAcHCwsJCQkJCQkJCQwMDQ0MDA0MCAgICAgICAgPDxEREhEREQsLCwsKCwsLDQ0QDw8PDg4JCQkJCQkJDAwMDAwEBAMFBQgICAgIDg4QEA0GBQUFBQYGBQUGBgkJBgUFCAcHBwgIBwcLCw8PCwUFBAsLCwoLDw4PDgwFAgwHDAcQDAsHCQcJBw8LCAYIBg0IDQkMCAoHCgcLCAsICwgLCA8LCQgKCgcJBwcLCwcGCgoHCAkJCQoICAoICAgKCwgKCAcICAkJCQoEBAIGBAYGCwcICAcHBwcLCQcFCwkICAgHCAkFCAYIBgsGCggHCwgHBgoIBwkJBA0NDQ0QCw0MDAgODQ8JCgwNCg0NCwwJCQ0ODAgJCQgLDQkKCQ0MCAoIDA0HAAAAAwsOCAcKDAwLCQkJCQ4ODg4LCwkKCQoJCgsLCQkJCQoJCgkKCQkJCwoKCgoHBwsNDAkLCQoJAAYDBQQAAAAAAAAAAAUFAwMADQAAAAALCwkKCQkLCgwLAQEDBQcGBgUHBwYJBwYGAAkHCwoLCwoLCgsGCQkJCQgICAgFBwgEBAgFBwgICAQICAkICAcJCAQICQgJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgkLDhEGCQsOEQYJCw4RBQcJDRAHCwkODAcJBwkJBwoIBwgICgcKCwcKCgwKCg4OCg0KCg0QDgsNDgwLCw4MCgwNCgcJCAoKCAoKBwoLBwoHBwkJCgoJCgkJCgoKCgsKCgkMBwwHCgcLBwYEBgQMCAwICwYLBgwIDAgMBwoICggKCAsHDAgMCAwIDAgMCAoHCgcLBwoHCgcJBQwHDAgNCAwIDQgNCAYEBgUMCAwIDAgKBAoECgQKBA4MDgwODAwIDAgMCAwIDAgMCAwIDAgJCAkICwYLBgsGDAYIBQgFCAYIBggFCgUKBQoFCgUMCAwIDAgMCAwICwgLBw8KDwsMBwwHCwcLBwsHCwcIBQsHCQYMBwwHDAkMCQwIDAgMCAwIDAgMCAwIDAcLBwoHCgcLCgsICwkKBwoHBgQGBAwIDAgMCgwJDAkMCAwIDQkNCQwJDQkNCQwIDAgOCQ4JDgkOCQ4JCwcLBwwHCQcGCAcAAAAACAgICAkJCQgIBggICAgGBAQEBQYFBgYGBgUEBgQDAgMDBAQDAwQECQkFBQkJBQUJCQsKCAgLCggECAsKCAgGBgYGBgYGBgoKDg4KCg4ODQ0SEg0NCBIIEgsHBwcHBwcKCgoHBwcHBwcHBwcLCwsIBgYGBgsLCwYGCAwMCwsMDAgHBggIBwYIBgcLCwYHCAgHCAkJBAQICAgHBwcEBAgICAYGBgYGBQUICQYGCAkFBQQICQYGBwcHBwcIBwcAAAAAAAAAAAQEBAQEAwMEAwkJCQgICAYGBgYODhISDAwICAsICQgHCAYGCQYICQADAwMDBQYGCQkJCQkJCQkJCAgICAgICAYGBgYGBgYGBgYGBgYGBgYGBg4ODhISDAgLCwsLCwsICAkPCQkJCQkJCQkJCQgICAgICAgIBgUEBAYGBgYGBgYGCQoJCQkJCQQIBAQFBgUGBgYGBQMDCQkEBQkJBAUJCQQFCQkEBQkJBAUJCQQFCwsGBwsLBgcICAsKCAgLCggICwoICAsKBgYGBgYGBgYGBgYGCQoHCAkKBwgJCgcICQoHCAgICAgEBAYGBgcICggJCAgJBwkHCQkHCAYGBgYGBgYGBgYGBgYJCAUFBQUEBAQEBAQEBAQEBAQEBAUEBAQEBgkLAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODAwMDAwMCAgLDQsICAgICAYGBgYGBgYGBgYGBgYGBgYGBg0PCggICAgICAgICAgICAgICAgICAgNCAgICAgICAgICAgICAgICAgICAgICAgICQkICAwLCwsLCwsLCwsICAgICAgICAkICQcHBwcHCQcICAgICQkKCggICAgICAkICxANCAgICAgICAgICAgICAgICAgHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcMDQcIBgYJBwcHBwcHBwcHCggICAgICAgHBwwLCAcQCwcJCAgICAkICAgICggJCAgIDwUEBAsOBQUFCAAFDAcKCwoLCwsOCwkMCgcNCwoFBQYJCQUFCQUFCQkJCgoJCgoJDQ0GBgoGBgYKCgoLCgwKDA4NDQYHCgYGBgoKCgsKCgoKDA4QDhAPEAsJCQkNDQkJDQkJDQ0NCgoLCwsLBwsKCw4OCgsLCgsNCg0JCQ4JCQ0NCQkNCQkNDQ0ODg0MDAwLCgoKCg0NDQ0MDQwQCwsKCgoKCQoHDA0NDAwLDAsLCwsJCgkJDQ0LDQwMCw0KCgkKDAsMCwsLCwwHCwsLCgsLDgsLCg0MCwoMDg4ODgsLCwsKCgoMDAwQEAwQEAwMEBAPDw8TEw8TEw8PDxMTDxMTCgsKCgoJCgkJBwgMCgoJBgYGBwYJCgcHCgUICAgMDAgIDAgIDAsMCw0MDAsIDAwICAwICAgMCwwNCQsKCwoJCQQECQUEBAkICQ0LDAwMBAYJBgkHCREICAgNDQgIDQgIDQwNDQwLCwoLBgoJCg0NCQoJCQoJBwkIChAICAwMCAgMCAgMDAwODQwNDQ0NDAwMDA0NDAwKCwoNDQ0MDAwMCgwGCQsLCQoJCgwMDAwLCwoLDAwLCwoLCgsJCgkJCwsKCgsLCwoHCwwMCwsLDAsLCg4LCwoODQoJCgsMCwwLDAwLCwsODgsODgsLDw8LCwsQEAsQEAwMCxAQCxAQDQ0NDQ0MDAwMCgsODw4GBwcHBwYKCQwEChMTBQULDAwNDA0HDBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAgQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBAQEBAQBggJCgoJCQsGCQsKCg0NCQkJCwwNCQkJCggKCgoICAoKCQkJCAkJCQcJCwoKCgkJBwgABwcAAAAAAAAACwUJBgYGBwYAAAAAAAAAAAsICAsJCgoIDQoLChYQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA4OEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAIBAQEBAQEBAQEBAQEBAQEBAQEBAQFBQQFBAQFBAgICAgICAsNBw0ICAgICAgICAoICAkICAgHBwgICAYGCAgICAYGBggIBggICAgICAgICAgICAYGCAgICAgICAgODgoICAgICAgICAgICAgEBAUEBQQFBAQEBQQEBAQEBAQEBAQEBAUEBAQDBAQFBAQEAwQEBAUEBAQDBAQEBAQEBAQICAgICAgICAgKCAgJCAgICAwNDAoIBAQEBAQEAwQEBQQECwsICAgLCw0LCggQDQ0GBAQEBAQEBAQEBAQEBAQEDQ0NDQ0NDQ0NDQ4EDQQEBgYFBAQEBAQEBAcJDAcECA0NDQ0NDQ0NDQ0NDQ0NDQ4NDRANDQ0NDQ0NDg0REA0NCAgICAgICAgICAgICAgICAgICAgICAgICAgKCAgICAkICAgICw0LDw8LCggICAgODAcHBwcHBwgICAgIDQ0LDQ4MCwsNCwsLCwsLDQkJBwkJCAcHCQcHBwcHBwcHCgkHCQoIDggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKDwgHBwgICA8IBggGBgYMBgYGBgYGDggLBQgFBQUFBwcKBwoIBwcLCgoGCQYGBwcHBwcHBwcJBwcHCAgIDg4FCQgHCQcEBQUFBQUFBQUFBQUFBQUFCAgICAgKCgkJCQkJCQkJCQoJCQkJBAUGBggIAAQEAAEEAAMABAQEAAQABAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQACQkFBQgICwoICAsKBgYGBgYGBgYGBgYGBgYGBg4OCgoIBggHCQkHCAkJBwgJCgcICQoHCAgIBAQHBwgIBAQGBgYGCQgFBQkIBQUJCQUFCgkHCAcICAgIBAYEAAYECQgLBgYGBAQGBQcGBgYFBQYGBQQFBQQEBAQGBQUFBQMDBgcHBAYEBQUEAwMDAwMEBAQEAwMEAwMGBggGBgYGBwcFBAQGBgYGBgYFBQYGBwcGBgYFBgUGBQUEBQQDBAYICAkFBQUFBQcFBQUHBgYFBQUEBwQFBAYDBAQEBAYFBQYGBgUEAwMHCgMEBAYGBgYGBQUFBQUFBwYHBQgIBwYFBwcNCg4KDgkKCgoLCgsKCg4JCg4HCgoHCgoHCgkLCwkLCwkKCgoKCwoKCQoKCgoKCgoKCwgLCgkLCAwMDgkKDQYIBwkHCAoJCgwLCgsKDAkJDA0JCwkJCQgMDAgMCAgNDQoKCwsPDwsOCwsPEAwNDgsOCgoKDgsIDAsJCwcJCAsLBwoKCAkODg4ODg4OCwcICwkLCgoJDAsJDQwMCQwLCQ0MCwwLCwwMCwwHCgoKCQoMDAgKCwgLCwoJCgoMEBAMDgoLDhEQEA4SDhAQCAsLCAoJCAoICwsHCgoHCgcKCAYIBwgJCgoKCwkKCgoKCgwKCw0PCwsLCAMGBgQGCAMIBwYHBggHCAkHBgkJCQcJCQwGBgoLEA4PDA4NCwsNCwwQDgwNFgkNCw8MDRMOCwsQDxYWFg4OCwsMDQAAAAAAAAAAAAAADwwPDAAPDA8KAAAACQsGBQYCBwUFCQoHCwkJBgYGCQYJBgcICAgKCgcJCQkECQYJAwkKCQYJCQ0HCAMJCQcHCAYJCAsLDAQHBwoLCQsOCQ4MCgwDCQcNCg0KCwkICgkJBgkFBAQICwoMCBMTDgwMDAwMDAwMDAwMDAwMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4MDBAIEBAQEBAQEBAQEBAQAAAKCgoKDAoKCgoNCw4PAwsNCwsLCwsNCw0NDQsNDgwLCw0LCwsLCwsLCw0NCw0ODBYTCAwMDAwODA0MDAwMDAwMDA0QEQ4XERUUEAwMCwsLDAsLCwsLCwsLCwsMCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMCwsLCwsLCwsLDhALCwsLCAgICQkNCAgICAwMDBAMDAwMDAwMDgwMDAwMDAwMDBAREQ4NDBcSFBEICAwMDxAMDQwMEQwMDwwNDBgYExMIBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBggICAcHBwcHBwcHBwcHCAgICAgIBwgMDAwMDAwMDAwNDAwMDAwMDA8QEA4REQ4ODAwMDg4RDw0MFxMRERERCAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoLCgsQCgoRCAgODg4ODg4ODg4ODg4ODg4RDg4RDg4ODg4ODhEOExEODg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwPDQwMDAwMDAwMEBEOEREPDAwMDAwVFQgKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwODw8RDAwMCAwMDAwMDAwMDQ0NDQ0NDQ0NDQ0NCQkJCQkJCQwJCQkJCQ0MDAkMDQ8NCwkPDwsICAwMDAwMDAwODAwIDggMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwODxANDAgICggICA8ICAgLDQgICAgICAgICQgICAoKCAgICAgICAgICAsNCAgPDwsICBURCwoNCgoKCgoKCgoKDAoKCgoKCgoKDg8MDAoMDw0MCxYSDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBEODA0ICAgICAgIDAwMDAwMDAwMDAwMDAwMDAwPDAwACA8PDw8PDxMTCAgICAwMDAwMDAwMDwwODAwMEA8PDwgICAwMDAwMDAwMDAwMDAwPEAwRDAwMCwsLCwsLCwsLCw0LCwsLCwsODQsLFxIICAgIBgYGBgYGBgYGBgYGERERDA8MCAgMDA0PCggICAgICAgICAgICAgICAgICAgNCAgICAgICAgICAgICAgICAgICAgICAgICQkICAgIDAsLCwsLCwsLCwsLCAgICAgICAgICAgJCAsMCAcJBwcHBwcJBwoJCQcJCQgHBwkHBwcHBwcHBwoJBwkKCA4OCAgICAgJCQoKCAgICAgICQgMDQsQDQ8QDQgICAgICAgICAgICAgICAgICAgIBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcHBwcHBwcHBwcHBwcHBwcHCAcHBwcMDQcIBwgICAgGBgkICAgIBwcHDAcHBwcHBwcKCQgICAgICAcHDA0MCwgHEAsQCwcJCAgICQgICAgKCAgJCAgIDw8PCAUEBAQEBAQEBAQEBAQEBAUEBAUEBAUEBQQFBAQEBQQEBAQEBAQEBwQHBAQECAQEBAQEAwQEBAUEBAQICAgICAgICAgKCAgJCAgICAwNDAoNDQsLCAgICwsNCwoIEBANDQ0OBwYEBAQEBAQEBAQEBAQEBAQFBAQGBgUEBAQEBAQEBwkMBwQIDQ0NDQ0NDQ0NDQ0NDQ0NDg0NEA0NDQ0NDQ0ODREQDQ0NCAgICAgICAgICAgICAgICAgICAgICAgICggICAgJCAgICAsNCw8PCwoICAgIDgwIBwcHBwcICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgwMDggICAgICAgICAgICA0NDQ0NDQ0NDQ0NDQgICAgICAgLCAgICAgNCwsICw0OCwoIDQ0LCAgICAgICAgICwgICAYGBgYGBgYGBgYGBgYGBgYGBgYJBgYGBgYGBgYGBgoLDQkGBggGBgYMBgYGCQoGBgYGBgYGBggGBgYICAYGBgYGBgYGBgYJCgYGDQ0JBgYODgUIBQUFBQUFCAUFBwUFBQYFBQUFCQoHCAUICwgHBw0NCggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0JCAgICAgHBwcHBwcHBwcHBwcHBwcHBwsKCgoKCg4HBwcHBwcHBwoHCggHBwsKCgsHBwcHBwcHBwcHBwcLDAcNBwcHBwcHBwcHCAcKBwcHBwcHCggHBw4OCwgFBQUFBQUFBQUFBQUEBAsHCwcGBQgIBwgGBggHBwcHBwcHBwcJBwcHBwcHBwcJCQkIBgYICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwMDAwMDAwNDQwMDA0MDAwMCAgKDQgICQkJDAkMCAgLCAgLCwsLCwsNDwsLCwgLDAwMCAgMCAgGBgYGBggKCAoGCAoIBQYGBgYGBgYGCwwODgwMDAgICggIDAwMDgwMDAgIDAgICwkICAgICAgICAgICAkJCQgKCAgMDAwMDg4REAwODA4MDAwICAgMCAwMCA0MDAwMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCQkJCQkJCQkJCQkJCQkJAwMDCAsDAwgICAoICgMDCAMDBwcHBwcHBwcHBwcDBwgIAwMDCAMDBQUFBQUFBQUFBQUFBQMDBQMDBQUFAwgHCAgHBwcDAwcDAwMDAwMDAwMDAwkDAwMDAwMHAwMDAwMDAwMICAgDBgMDCAgICAgICAgICAMDAwgIAwMDCgMHBwMKCwsDCwkDAwMDCQkDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDCAgICAgICAgICAwMCAgICwsLCAgICAgIDAwICAgMDAgICAsLCAgIDw8ICAgLCwgICBERCAgICwsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCQgICAgICAgIBwcICAgLCwgICAYGCAgIDAwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkICgoJBgkKBQUJBQ4KCgoJBwcGCgoIDAgICAgICAgICAgICAcICAgICQgJCAYJCAgICAcHCAgICAgICAgICAgICAYHBwgIBwoICAYHCAgFBgUDAwgICAgICAYIBgYGCAgICAgFBQUICAgICAgICAUFBQMIAwMDCAkFBgQGCAgGBgYFCAgIBQgICAgICAgICAgICAgICAgFCQgICAgICAgICAcJCAcICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBQUIAAQFBQcICAgICAgICA4LCgsLCwoKDAoNBwkLCw4MBwsICAgICAgICAgICAgIFAwTDREMEAsUDRQMFA0UDBALFAwTDREMEAsQCxQNFAwHCAgIAwMICAgIAAAAAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgICAgIAAgICAgICAgICAgIAAAAAAAACAgICAgICAgICAAACAgICAgICAgICAgICAgAAAgICAgICAgICAgICAgIAAAICAgICAgICAgICAgICAAACAgICAgICAgICAgICAgAAAAICAgICAgICAgICAgIAAAAAAAACAgICAgICAgICAAAAAAAAAgICAgICAgICAgAAAgICAgICAgICAgICAgIAAAAAAgICAgICAgICAgICAAAAAAAAAAACwgICAgICAgAAAAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAgICAgICAgICAgICAgAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkJCQkJCQkJCgkJCQkICAgICAgICAgICAgIBg0IBg4LBwsKBgQIDQcHCAgICAYJCggICQ8HCAgICQgHCAgLCAgICAgICA4ICAgICQgICAcICAgHBgYMCgsICgYGBgYJCAgICAYJDQ0NCg8PBwcMCAULDg4EDw8JChELCwwKCgoJBwsKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAgIBgoFCAwICAgLCAcICAwLBwgIDAgIDAwIDAgIDAgHDAcFCAgJCA0NBwgIBwcHBwcHBwwMDAgICAgMDAwMDAkIBgYGBgYGBgYGBggMCAsLCwsLCwgLCwsLCgwKCgcICAkHBwcKCgoKCgoKCgoKBwcHBwcHBwcHBwcHCAoRBwYKCAYHBgUIBwAAAAAAAAAAAAAIBwkIDQsIDAkMCwkICwYFAAAACAgIBg4SCAMHBQsMCwcKBgYGBwcKCQYIBQoKBgcHCAYHBgcGBQUGBQUHBwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODAwICAoJAAsPBwsLCgsNDw0KCggIBAsIBwoEBwYKDAkKBwsIDAkOCwoNDAwKCQcOCw8MCwcKCgYICAgLDAcHCAgHBwQFCAcKCAgHCAcIDQgICAYICAcICAsJCAoHBgcLBggIBgkHCAsHBwgHBwgIBAUIBwoICAgIBggHCAoFBQYIBQYFBQUFBQMFCQYGBQYFBgMGBggFBwYFBQcFAwQGBQYFBgcFDRQMCBEQEBAMDAsLCwYUDRMLCAgMCAgHBgQLCAkGCQYQCwoICwkKBwoHDAkDAwsICwgMCQoHCQYMCQoHCAYKCAwJDQkOCgwJDwsQDAoHDAkIBgwJDAkQDAkGCgcQCwkGCgcKBwoHCwgIBgkGCwoRDAoQBAMKBwwLCAsICAkGCw8PCwYIBggLCgcLCAgMDA4MDgkNCwsOCwwGDhELCAoHDQ4PDQkNDA0MDQsLDAsLExIUDQsJCQsJCwcKCAgLCw4ICQULDQgGCAYJCgsKBwoJCQkKCQgJCAkODQ8KCAwJDgoOCw0JDAgFBAsICggKCgkOCQsGCg0IBwsKCwsIBw0MCggHCAgLCwsICAsNBwkICgwAABEcCQQGBggNBAUEBAgICAgICAgICAgEBA0NDQgQDAsLDQsKDQ0GBwwKDwwNCg0MCQsNDBAMDAwFBAUQCAgICQcJCAUICQQECAQNCQkJCQYGBQkHCwcHBwgICA0FBgcKBwgICgUIDQoIBQ0ICQgGCAUICAwMDAwMDBELCwsLCwYGBgYMDQ0NDQ0NDQ0NDQkICAgICAgMBwgICAgEBAQECQkJCQkJDQkJCQkJBwQSDgwICAgICAgICAgJCBAEBAQICAgICAoQFgUFAw0MCAsNDAoNCA0NDQ0ICQkEBQwFDwgDDQgFBQUNDQ0NDQwKCQcJDAgMCAwICwcLBwsHCwcNCw0JCwgLCAsICwgLCA0IDQgNCA0IDQkNCQYEBgQGBAYEBgwJBwQKCAgLBAsFCwcLBgsEDAkNCQwJCw0JDQkNCQ0JDAYNBgwGCQYJBgkGCQYLBQsHCwUNCQ0JDQkNCQ0JDQkQCwwHDAcMBwwHBQ0IEQwNCQgCBQ0EDQ8IDg8NBQwLCgsLDA0NBg0MDwwLDQ0KCgsMDQwNDQcNCgcJBQgKCQgJCAcJCQUJCAkICAkJBwkGCAoICwsFCAkICwsNCgwJBgYHDxAODAwNDQsLCgwLDwkNDQsMDw0NDQoLCwsNDA0MERENEAsMEgwICQgHCQgLBwkJCAkMCQkJCQcJBwwICQkNDQoMCAcNCAgJCAcGBAQEDAwJCAgJCggQCxALEAsHEAgEBQULBgUPCAwMEAgRDAwNDQ0NEAgQCBAICA0NBA0NDQ0ODQoKEBAQEBAQEBAQEBAMEBAQEBAQEAwPCwsPCgoKCg0NEBANDg0NEBAQEAkMCQkJDgoNCAoHCA4KDQUNCQkNDQsOCg0LCwkMCAUFCw8KCwoKCwYGCQQGCAQXEw8RDQcSDwsMCAYFDQkNCQ0JDQkNCQ0JCAwIDQgRDA0IDQgNCQ0JDQkJBwQXEw8NCAgJCQgICAkKCAgKCAgKCAUKCQkICAkJCQYFBAUGBQcNDg0KCwgJDAoJBgcHBgYGCAcHBwYIBgUKCQgJDAgJBwcGBgYHCQgICwkECAcKBgYODA0ICAoIBwMFBQcHCwcDBAMDAwUFBAQFBQUFCAgICAgICAQFBAQFBQUGBAcEBQcGBgYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBAQECQoMDQwLDQkLCBAPCggGCgcIBQ4KCgcMCQkIBwQMCQ0JEw0SDBcQCgkNDA0JDQkMCQsHEAwKBwoHEA0JBw0KDAkMCQ4KDQoQDBAMDQgMCAsIDAkNCQ0KDgoMCgwJCgoLCAsIBRAMCggNCQsIAAAAAAAAAAAAAAAAAAAFAAQAAAMACQgFCAkEBAgJBQgJCAkJBAUJCAgJCAgJCAoICQkKAgQFCxwIBQUIBgUODgQEBQUFBQUFBQUDBQQEBQQFBQUFBQUFBQUDBQQECwsNDBIOCwkQEBAQCAgDBAYGCQkHCgcHBwcHDAcGCQoGCQcKCgcHBwgICQYJCQwHBgcJCgcJBwoJCgoKCgkJDQ0NDQ0NDA0HBwgHBwcODhAQEBAICAgICAgICBAQEhISEhISBQQFBQUFBQYICAoKCwoKCgkJCQkJCQ4PEREQEAgICAgICAgPERERCwsLCwsLCwsODhEREA8PDwoKBwcICAYFCQkICAsLCgoKCgoKCgoMDQ0ODQ0NDQgICAgICAgIEBASEhMSEhILCwsLCwsLCw4OERAQDw8PCgoKCgoKCg0NDQ0NBAQDBgUICQgICA8PERINBgYGBQUGBgUGBgYJCgYFBQgICAgJCQgIDAwQEAwFBgQLCwsLCxAPEA4NBQINCA0IEQwLCAoICggQDAgHCQYNCQ0JDQkLBwsHCwgLCAsIDAkQDAoJCgoICQgIDAsIBgsKBwgKCgkLCQkKCQkJCwsJCgkICQkKCgkKBAUCBwQGBgwICQkICAcICwoIBQsKCAgIBwgKBQgGCAYMBgoICAsICAYLCQgKCQQODQ4OEQwODQ0IDw4QCQoNDgoODgwNCgkODwwJCgkIDA4JCwkODAkKCA0OBwAAAAMMDwgICw0NDAkKCgoPDw8PDAsKCwoKCgsLCwkJCQkKCgoJCgoKCgwKCwsKBwcLDg0KCwoLCQAHBAUEAAAAAAAAAAAFBQQEAA4AAQAADAsKCwkJCwoNCwEBAwYHBwcFBwcGCQcHBgAJCAwLDAwLDAsLBwoJCgkJCQkIBQgIBAQJBQgJCAkFCQgJCAgICQgECAkJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYJDA8SBgkMDxIGCQwPEgUHCg4RBwwJDg0ICQgJCQgLCAcICAsICwwHCwsNCgsPDwsOCwsOEQ8MDg8MDAsPDQsNDgoICggLCggKCwgLCwgLCAgKCQsLCgsKCQsKCgoMCgoKDAgMCAsICwgGBQYFDQkNCQwGDAcNCQ0JDQcLCQsJCwkMBw0IDQgNCA0IDQgLCAsHCwcLBwsICgYNCA0JDQkNCQ0JDQkGBQYFDAkNCQ0JCwQLBQsECwUPDQ8NDw0MCQwJDQkNCQ0JDQkNCQ0JCgkKCQwGDAYMBgwGCQYJBgkHCQYJBgoFCgUKBQoFDQgNCA0IDQgNCAwIDAgQCxALDQgMCAwICwcMBwsHCQULCAoGDAgNCAwJDQkNCQ0IDQgNCA0IDQgNCAwICwgLCAsIDAoLCQsJCwgLCAYFBgUNCQ0JDQsNCg0KDQkNCQ4KDgoNCg4KDgoNCA0IDwoPCg8KDwoOCgwIDAgMBwoIBggIAAAAAAkICAgKCgoJCQYJCQkJBwUEBAYHBgcGBwcGBQYEBAMEAwQEBAQFBQoKBQUKCgYFCgoLCwgICwsIBQgLCwgIBgcGBwYGBgYLCw8PCwsPDw4OExMODggTCBMMBwcHBwcHCwsLBwcHBwcHBwcHDAwMCQYGBgYMDAwGBgkNDQwMDQ0JBwcICQcHCAcHDAsHBwkIBwgKCgUFCAgJCAcHBQUJCQkGBwYGBgUFCQkGBwkJBgUFCQkGBgcICAgICAcIAAAAAAAAAAAEBAQEBAQEBAQKCgoICAgGBgYGDw8TEw0NCAgLCAoIBwkGBgkGCQkABAQEBAUGBgkKCgoKCgoKCggICAgICAgGBgYGBgYGBgYGBgYGBgYGBgYPDw8TEw0ICwsLCwsLCAgKEAoKCgoKCgoKCgoICAgJCQkJCQYFBQUGBgYGBgYGBgkKCQkJCgoFCAQEBgcFBwYHBwYEAwoKBQUKCgUFCgoFBQoKBQUKCgUFCgoFBQsMBwcLDAcHCAgLCwgICwsICAsLCAgLCwYHBgcGBwYHBgYGBgoKBwgKCgcICgoHCAoKBwgJCQkJBQUGBwYHCAsJCgkJCggKCAoKBwgGBgYGBgYHBgYGBgYGCQkFBQUFBAQEBAQEBAQEBAQEBAQGBAQEBAYJDAQDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw0NDQ0NDQkJCw4LCQkJCQkGBgYGBgYGBgYGBgYGBgYGBgYOEAsICAgICAkICAgICAgICAgICAgIDggICAgICAgICAgICAgJCAgICAgICAgICAoKCAgMDAwMDAwMDAwMCAgICAgJCQkKCAoHBwcHBwoHCQkJCQoJCwsJCQkJCQkJCQsRDQkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ4ICAYGCggICAgICAgICAoJCAgICAgICAgNCwgIEQwHCgkJCQkKCQkJCQsJCgkJCRAFBQQLDwUFBQkABQwICgwKDAsMDwwJDQsIDgsLBgYGCgoGBgoGBgoKCgoLCgoLCQ4OBgYLBgYGCwsLDAsNCg0PDg4GBwsGBgYLCgsMCgsLCwwPEQ8REBELCQkJDg4JCQ4JCQ4NDgsKDAwMDAcMCgwPDwoMCwoMDQsOCQkPCQkODgkJDgkJDg4ODw8ODAwMDAsLCgsODg4ODA4MEQwMCwsKCwkLCAwODgwMDAwLDAsLCgoKCg4NDA0NDQsNCgoKCg0MDAwMCwwNBwwMDAsMDA8MDAsODAwKDQ4ODw8MDAwMCwsKDAwMEREMERENDREREBAQFBQQFBQQEBAVFRAVFAsMCwsLCgsKCggJDQsLCgcHBwcGCgsHCAsGCAgIDAwICAwICAwMDAwNDAwMCQ0NCAgNCAgIDQwNDQoMCwwLCQkEBAoFBQQKCQoODA0MDQUGCQYJBwkSCAgIDg4ICA4ICA4MDg4NDAsLCwYKCQoODgoKCgkKCQgKCQsRCQkNDQkJDQkJDQ0NDg4NDg4ODg0NDQ0ODgwMCwwLDg4ODQ0NDQsNBgoLCwoKCgoNDA0NCwsLDA0NCwwLDAsMCgoKCgsLCwsMCwwLCAwNDQwMDAwMDAoPDAwKDw4LCgoMDQwNDA0NCwsLDw8LDw8LCxAQDAwMEREMEREMDAwREQwREQ4ODg4ODQ0NDQsMDw8PBgcHBwgGCgkNBAoUFAUFCw0MDgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCREREREREQYJCgoLCQkLBwoLCgsODgoKCQwNDgkJCgoJCwoLCQkKCgoKCQgKCgoICQsLCgoKCQgIAAgIAAAAAAAAAAsFCgcHBggHAAAAAAAAAAAMCQkMCgsLCQ0LDAsYEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREPDxERERERERERERERERERERERERERERERERERERERERERCQQEBAUEBQQEBQUFBQQFBAQEBAQEBQUEBQQFBQQJCQkJCQkMDQgOCQgJCQkJCQkLCQkJCQkJBwgJCQkGBgkJCQkGBgYJCQYJCQkJCQkJCQkJCQkGBgkJCQkJCQkJDg8LCQkJCQkJCQkJCQkJBAUFBQUEBQQEBQUEBAQFBAQEBQQEBAQFBAQEAwQEBQQEBAMFBAQFBAQEAwUEBAQEBAQECQgJCQkJCQkJCwkJCQkJCQkNDg0LCQQEBAUEBAMEBAUEBAsLCQgJDAsODAoJEQ4OBgQEBAQFBQUFBAQEBQQEBA0NDQ0NDg4ODg4OBA0FBQcHBQQEBAQEBAUICQ0HBAkNDQ0NDQ0NDQ0NDQ0NDQ0PDQ0RDQ0NDQ0NDQ8NEhENDQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCwkJCQkJCQkJCQwODBAQDAsJCQkJDw0ICAgICAgICAgICA4OCw4PDQsLDgsLCwsLCw4KCgcKCQkHBwoHBwcHBwcHBwoKBwoLCQ8JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJChAJCAgJCQkQCQYJBgYGDQYGBgYGBg4JDAUJBQUFBQcICwcKCAgIDAoLBgkGBggHBwcHBwcHCQcHBwkJCQ8PBQkICAoIBQUFBQUFBQUFBQUFBQUFBQgICAgJCwsKCgoKCgoKCgoKCgoKCgQFBgYICAAEBAABBAAEAAQEBAAEAAQEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAoKBQUICAsLCAgLCwYHBgcGBgYGBgYGBgYGBgYPDwsLCAcJBwoKBwgKCgcICgoHCAoKBwgICAUFBwgJCQUFBgYGBgkJBQUJCQUFCgoFBQoKCAgICAkJCQQGBAAGBQoJDAYHBgUEBgYHBgcGBgYGBgUEBQYEBQUEBwUFBQUDAwYHBwQGBAUFBAMDAwMDBAQEBAQEBAQDBwcJBwcGBgcIBQQEBwcGBgYGBgYGBgcHBwYGBgYFBgUFBQUFBAQGCAkKBQYGBgUHBgUFBwYHBgUFBAcEBQQGBAQEBAQGBgYHBgcGBAMDCAsDBAQGBgYGBgUFBQUFBgcHBwUICQgHBQgIDQsPCw8KCgoKDAoMCwsPCgsPBwsLBwsLBwoKDAwKCwwKCgoKCgwKCgoLCgoKCwoLCgsJDAoJCwgNDQ8JCw4GCQcJBwkLCQsNCwsLCgwJCg0OCQwKCQoJDAwJDAkJDQ4KCgwMEA8MDwwMEBENDQ8MDgsLCw8LCQwMCQwICggMCwgLCwgKDw8PDw8PDwwHCAwJCwsKCg0MCQ4MDQoNDAkODQwNDAsNDAwNBwsLCwkKDQ0ICgsJDAsLCgoKDRARDQ8LDA8SEREPEw8REQgLDAgLCggLCAwMCAsLCAsHCgkHCAcJCgoLCgwKCgsLCwsNCwwNEAsMDAkDBgYEBggDCQgHBwcIBwgJBwcKCgoHCgoNBwcLDBEPEA0PDQsLDgwNEQ8MDhgJDgwQDQ4UDwwMERAYGBgPDwsLDA4AAAAAAAAAAAAAABANEA0AEA0QCwAAAAoLBwUHAggFBQkKBwwJCQcHBgkGCQYICAgICwsICQkJBAkGCQMKCgkGCQkNCAkDCQkHCAgGCQgLCw0EBwgKDAoMDwoPDQsNAwkIDQsOCgwJCQoKCQYJBgQECQsLDAgUFA8NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NEg0MDQ0NDQ0NDAwMDAwNDQ0NDQ0NDQ0NDQ0PDQ0RCREREREREREREREREQAACwsLCw0LCwsLDgsPEAQLDgsLCwsLDgsODg4LDg8NCwsOCwsLCwsLCwwODgsODw0YFAkNDQ0NDw0ODQ0NDQ0NDQ0OERIPGBIXFRENDQsLCwwLCwsLCwsLCwsLDAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDQsLCwsLCwsLCw8RDAsLCwkJCQoKDgkJCQkNDQ0RDQ0NDQ0NDQ4NDQ0NDQ0NDQ0REhIPDg0YExUSCQkNDRARDQ4NDRINDRANDQ0aGhQUCQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYJCQkHCAcHBwcHBwcHBwkJCQkJCQcJDQwMDA0MDQ0NDg0NDQ0MDQ0QEREPEhIODg0NDQ4PEg8NDBgVExMTEwkLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMEQsLEgkJDw8PDw8PDw8PDw8PDw8PEg8PEg8PDw8PDw8SDxQTDw8PDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEA4MDAwMDAwMDBESDxISDwwMDA0NFhYJCwsLCwsNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDhAQEg0NDQkNDQ0NDQ0NDQ4ODg4ODg4ODg4ODgoKCgoKCgoNCgoKCgoODQ0KDA4QDgsKEBALCQkNDQ0NDQ0NDw0NCQ8JDAwMDAwMDAwMDAwMDAwMDA0MDA0NDAwMDQwMDAwMDxARDgwJCQsICAgPCAgIDA0ICAgICAgICAkICAgLCwkJCQkJCQkJCQkMDQkJDw8MCQkWEgwKDgsLCwsKCwsLCw0LCwsLCwsLCw4QDQ0LDRAODAwYEw8NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0SDw0NCQkJCQkJCQwMDAwMDAwMDAwMDAwMDAwMEA0MAAkQEBAQEBAVFAkJCQkMDAwMDAwMDBAMDwwMDBEPEBAJCQkNDQ0NDQ0NDQ0NDQ0NEBENEg0NDQwMDAwMDAwMDAwODAwMDAwMDg0MDBkUCQkJCQYGBgYGBgYGBgYGBhISEgwQDQkJDQ0OEAsICAgICAkICAgICAgICAgICAgIDggICAgICAgICAgICAgJCAgICAgICAgICAoKCAgJCQwMDAwMDAwMDAwMDAkJCAgICAgJCQkJCggLDQkHCgcHBwcHCgcKCgoHCgkJBwcKBwcHBwcHBwcKCgcKCwkPDwkJCQkJCgkLCwkJCQkJCQkJDA4LEQ0QEQ0JCQkJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ4ICAgJCQkJBgYKCQkJCQgICA0ICAgICAgICgkICAgICAgICA0ODQsICBEMEQwHCgkJCQoJCQkJCwkJCgkJCRAQEAkFBQUEBAQEBQUFBAQFBQUFBAQFBAUFBQUEBQQEBQUEBAQFBAQEBAcEBwQEBAkEBAQEBQMEBAQFBAQECQgJCQkJCQkJCwkJCQkJCQkNDg0LDg4LCwkICQwLDgwKCRERDg4ODgcGBAQEBAUFBQUEBAQFBAQEBQQFBwcFBAQEBAQEBQgJDQcECQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDRENDQ0NDQ0NDw0SEQ0NDQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQsJCQkJCQkJCQkMDgwQEAwLCQkJCQ8NCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCAgICAgICAkICQgICQgICAgICAgICQgJCAgICAgICAgICQkJCQkICAsNDQ8ICQgJCAgICAkJCAkODg4ODg4ODg4ODg4ICAgICAgICwgJCAgJDgsLCAsODwwKCA4OCwkJCQkJCQkJCQsJCQkGBgYGBgYGBgYGBgYGBgYGBgYGCQYGBgYGBgYGBgYLDA4KBgYJBgYGDQYGBgoLBgYGBgYGBgYIBgYGCQkHBgYGBgYGBgYGCgsGBg4OCQYGDg4FCQUFBQUFBQkFBQgFBQUGBQYFBQkLCAgFCAwJBwgNDQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkOCgkJCQkJBwgIBwcHCAgHBwcHCAgICAcLCwsLCwsPBwcHBwgHBwgLBwoICAgMCgsLBwcHBwcHBwgHBwcICw0HDgcHBwcHBwcHBwgHCgcHBwcHBwsJBwcPDwsJBQUFBQUFBQUFBQUFBAQMCAwIBgUJCQcJBgYJBwcHBwcHBwcHCQcHBwcHBwgHCgoKCAYHCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkNDQ0NDQ0NDQ4NDQ0NDQ0NDQkJCw4JCQoKCg0KDQkJCwkJCwsLCwsLDhALCwsJDA0NDQkJDQkJBgYGBgYICwgKBggLCAYGBgYGBgYGBgwMDw8MDAwJCQsJCQ0NDQ4NDQ0JCQ0JCQwKCQkJCQkJCQkJCQkKCgoJCwkJDAwMDA8OEhEMDgwPDAwMCQkJDQkMDAkNDQ0NDQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCgoKCgoKCgoKCgoKCgoKCgQEBAkLBAQICAgLCAoEBAkEBAgICAgICAgICAgIBAcJCQQEBAkEBAUFBQUFBQUFBQUFBgUEBAUEBAUFBgQJCAkJCAgIBAQIBAQEBAQEBAQEBAQJBAQEBAQEBwQEBAQEBAQECQkJBAYEBAgICAgICAgICAgEBAQICAQEBAoECAgECwsLBAsJBAQEBAoKBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAkJCQkJCQkJCQkNDQkJCQsLCwkJCQkJCQ0NCQkJDQ0JCQkLCwkJCRAQCQkJDAwJCQkSEgkJCQwMCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQgICQkJCAgICQkJCQkJCQkJCQkJCQkJCQcHCQkJDAwJCQkHBwkJCQ0NCQkJCAgJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCAoKCQYJCgUFCgUPCgoKCgcHBgoKCA0ICAgJCQkJCQkJCQgHCQkJCQkJCQkGCQkJCQkHBwkJCQkJCQkJCQkJCAgGCAgJCQcLCAgGCAkJBgYFBAQJCQkJCQkGCQYGBgkJCQkJBgYFCQkJCQkJCQkGBgUECQQEAwkJBgYEBgkJBgYHBQkJCQUJCQkJCQkJCQkJCQkJCQkJBQkJCQkICQkJCQkICgkICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQUFCQAEBQUICQkJCQkJCQkPDAsLDAsLCgwKDggJDAsPDQgMCQkJCQkJCQkJCQkJCRUMFA0SDBIMFg4VDBYOFQwSDBUMFA0SDRIMEgwWDhUMCAkJCQMECQkJCQAAAAAJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJCQkJCQAJCQkJCQkJCQkJCQAAAAAAAAkJCQkJCQkJCQkAAAkJCQkJCQkJCQkJCQkJAAAJCQkJCQkJCQkJCQkJCQAACQkJCQkJCQkJCQkJCQkAAAkJCQkJCQkJCQkJCQkJAAAACQkJCQkJCQkJCQkJCQAAAAAAAAkJCQkJCQkJCQkAAAAAAAAJCQkJCQkJCQkJAAAJCQkJCQkJCQkJCQkJCQAAAAAJCQkJCQkJCQkJCQkAAAAAAAAAAAwJCQkJCQkJAAAAAAAAAAAJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQAJCQkJCQkJCQkJCQkJAAAACQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoKCgoKCgoKCgoKCgoKCQkJCQkJCQkJCQkJCQYOCQYPCwcLCwYECQ4HBwkJCAgGCQoJCQkQBwkJCQkJBwkJDAkJCQkJCQkPCQkJCQoJCQkICQgJCAYGDQsMCQsGBgYGCgkJCQkGCg4NDQsQEAcHDAgFDA8PBBAQCQoSCwsNCwsLCgcMCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwJCQYLBQkNCQkJDAkHCQgNCwgJCQ0JCA0NCQ0JCQwJBwwHBQkJCggNDQgJCQgICAgICAgNDQ0JCQkJDQ0NDQ0JCQYGBgYGBgYGBgYJDQkLCwsLCwsJCwsLCwsMCwsICQgJBwcHCwsLCwsLCwsLCwcHBwcHBwcHBwcICAkKEggGCwkGCAYFCAcAAAAAAAAAAAAACQgJCA4LCA0JDAwKCQwHBgAAAAgJCAYPEwgEBwUMDAwHCwYGBggICgoGCQUKCgcHCAgHBwcHBwUGBgUGBwgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwwNCAgLCQALEAcLDAsMDhAOCwsICAQMCAgKBAgHCw0JCwgMCQ0JDwwLDg0NCwoHDgwQDAsICwoGCQgIDAwICAkJCAgEBQgHCggJCAkHCQ4ICQgHCAgHCQkMCggLCAYICwcICQcJCAgMCAgJCAgJCQQFCAcKCAgJCAcIBwkLBQUGCAYGBQUFBQUDBgkGBgUGBgYEBgYJBQgGBQYHBQMEBgUGBQYHBQ4VDAkSEhISDQ0MDAwGFg4UDAkJDQkJBwYEDAkJBwkHEQwLCAwJCggLCA0KBAMLCAwIDQkKCAkHDQoKCAkHCwgMCQ0KDgsNChALEQ0KCA0KCQYNCQ0JEQ0JBwoIEQwJBwoHCggKCAsJCQYJBwsKEg0LEQQDCgcNDAkMCQkJBgwQEAwGCQYJDAsIDAkIDQ0PDQ8KDgwMDwsNBw8SCwkLCA0PEA4KDgwNDA4MDA0LDBQTFg4LCgkLCgsHCwkJCwsPCQoFCw4JBggGCgsLCgcLCQoJCgkJCgkJDg4QCgkNCQ8LDwsOCgwJBQQLCAsICgoKDgoMBwoOCAcMCwwMCAgODQsJCAgIDAwMCAgMDggKCAsMAAASHgkEBwcJDgQGBAUJCQkJCQkJCQkJBQUODg4IEQ0MDA4MCw4OBwgNCxANDgoODQkLDg0RDQ0MBgUGEQkJCAkICQgGCAkFBQkFDgkJCQkHBwYJCAwICAcJCQkOBgYICgcJCQsFCQ4LCAYOCQkJBwkFCQgNDQ0NDQ0SDAwMDAwHBwcHDQ4ODg4ODg4ODg4JCAgICAgIDQgICAgIBQUFBQkJCQkJCQ4JCQkJCQgFEw8NCQkJCQkJCQkJCgkRBAQECAgICQkKERcFBQMODQkLDgwLDgkODg4OCAoKBAYNBhAJAw4JBgYGDg4ODg4NCgkICQ0IDQgNCAwIDAgMCAwIDgwOCQwIDAgMCAwIDAgOCA4IDggOCA4JDgkHBQcFBwUHBQcNCQgECwkJCwUMBQwHCwcLBQ0JDQoNCQsNCQ4JDgkOCQ0HDgcNBwkHCQcJBwkHCwYLBwsGDgkOCQ4JDgkOCQ4JEQwNCAwHDAcMBwYOCBINDgkJAgUOBQ4QCA8QDgUNDAoMDAwODgcNDRANCw4OCgsLDQ4NDg4HDQoICQUICgkICQgICQkFCQgJCAgJCQcKBwkLCAsMBQgJCAwMDgoMCQcHCBARDw0MDg4MDAoMDBAJDg4MDBAODg4KDAsMDg0ODRISDhELDBMNCAkJCAoIDAcKCggKDQoJCgkICQgMCAoJDg4KDAgHDgkICQgHBwUFBQ0NCQkICgsIEQwRDBEMCBEIBAYGCwYGEAkMDREJEg0NDg4ODhEJEQkRCQkODQQODg4ODw4KChERERERERERERERDRERERERERENEAwMEAoKCgoNDRERDg8ODhEREREJDAkKCQ8KDggLBwgPCw0GDgoKDg0MDwoODAwJDQgGBQsQCwsKCwwGBwkEBgkFGBQQEg4HFBAMDQgGBQ4JDgkOCg4JDgkOCggNCA4IEg0OCQ4IDQkOCg4JCQgEGBQQDggICQkJCAgKCwgICggICgkGCwkJCQkJCQkGBQQGBwUIDQ4NCgsJCQ0KCQcHBwcHBwkHBwcHCAYGCgkJCQ0JCQgIBwcHBwkICQsKBQkHCwcHDg0OCQgKCAgDBQUHBwsIAwUEBAQFBQQEBQUFBQkJCQkJCQkFBQQEBQUFBgQIBAUIBgcGBgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQQFBQkKDA4MDA4KDAkREAsJBgsICAYPCwoIDQoKCQgFDQoOCRQNEw0YEQsJDg0OCQ0KDQkMBxENCggLCBENCQcNCgwJDAkPCg4LEQwRDQ4JDQgMCQ0KDgoOCw4KDQoMCQsKDAkMCQYQDQsJDgkMCQAAAAAAAAAAAAAAAAAABQAEAAADAAoJBQgJBQQJCgUICgkJCQQFCQgJCggJCQkKCQkKCwMFBgweCQUGCQYGDw8EBAUFBQUGBgUFAwUEBAUEBQUFBQUGBgUFAwUEBAwMDg0TDwsJEREREQgIAwQGBgoJBwoICAgIBw0HBgoLBwoHCwoHBwgICQkGCQoMBwcHCQsHCggKCgoKCgoKCg4ODg4ODg0OCAgICAgIDg4RERERCQkJCQkJCQkREBMTExMTEwUFBQUFBQUGCQkLCwsLCgoJCQkJCQkODxISEREICAgICAgIDxISEgwMDAwMDAwMDw8SEhEQEBAKCggICQkHBQkJCAgMDAoKCgoKCgoKDQ0ODg4ODg4JCQkJCQkJCRERFBMUExMTDAwMDAwMDAwODxIRERAQEAoKCgoKCgoNDg4ODQQFAwYFCQkJCQkQEBITDgYGBgYGBgcGBgcGCgoGBQYJCAgICQkICA0NERENBgYEDAwMDAwREBEPDQYDDQgOCBINDAgLCAsIEQwJBwkGDgoOCg4JCwcLCAwJDAkMCAwJEQwKCQsLCAoICA0MCAcLCwgJCgoKCwkJCwkJCQsMCQsJCAkJCgsKCwUFAgcFBwYNCAkJCAgICAwKCAYMCwgJCAgJCwYJBggGDAYLCQgMCAgHCwkICwoEDw4PDxINDw4NCRAOEQoLDg8LDw8MDgoKDxANCQoKCQ0PCgwKDw0JCwkNDwgAAAADDA8JCAsNDg0KCgoKEA8PEA0MCgwLCwoLDAwKCgoKCwoLCgsKCgoNCwwMCwgIDA4OCgwKDAoABwQFBAAAAAAAAAAABQUEBAAPAAEAAAwMCgsKCgwLDgwBAQMGCAcHBggIBgoHBwYACggMDAwNDA0MDAcKCgoKCQkJCQUICQUFCQUICQgJBQkJCgkJCAoJBQkKCQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCg0QEwcKDRATBwoNEBMGCAsPEggNCg8OCAoICgoIDAkICQkLCAsMBwwLDgsMEA8LDwwMDxIQDQ8QDQ0MDw4LDg8LCAsJCwsJCwwICwwIDAgICgoLDAoMCgoMCwsLDQsLCw0IDQgMCAwIBgUGBQ4JDgkNBw0HDgkOCQ0ICwkLCQsJDAgNCQ4JDgkOCQ0JDAgMCAwIDAgMCAsGDggOCQ4JDgkOCQ4JBgUGBQ0JDQkNCQwECwULBQsFEA4QDhAODQkNCQ0JDQkNCQ4JDgkNCQoJCgkNBw0HDQcNBwkGCQYJBwkHCQYLBgsFCwULBg4JDgkOCQ4JDgkNCQ0IEQwRDA0IDQgNCAwIDAgMCAkGDAgKBw0IDggNCg4KDgoOCQ4IDggOCA4JDggNCAwIDAgMCAwLDAkMCgwIDAgGBQYFDgkNCQ4LDQoOCg4JDgkPCg8LDgsPCw8KDgkNCRAKDwoPCg8KDwoNCA0IDQgKCAcICAAAAAAJCQkJCgoKCQkHCQkJCQcFBQUGBwYHBwcHBgUGBAQDBAQEBAQEBQUKCgYGCgoGBgoKDAsJCQwLCQUJDAsJCQYHBgcGBwYHCwsQEAsLEBAPDxQUDw8JFAkUDQgICAgICAwMDAgICAgICAgICA0NDQkGBgYGDQ0NBwcJDg4NDQ4OCgcHCQoHBwkHCAwMBwgJCQgJCgoFBQkICQgHBwUFCQkJBwcGBwcGBgkKBgcJCgYFBQkKBwcICAgICAkICAAAAAAAAAAABAQEBAQEBAQECgoKCQkJBgYGBhAQFBQODgkJDAkKCAcJBgcKBgkKAAQEBAQFBwcKCgoKCgoKCgoJCQkJCQkJBgYGBgYGBgYGBgYGBgYGBgYGEBAQFBQOCQwMDAwMDAkJCxELCgoKCwsLCwsLCAgICQkJCQkGBgUFBwcHBwcHBwcKCwoKCgoKBQkFBQYHBgcHBwcGBAQKCgUGCgoFBgoKBQYKCgUGCgoFBgoKBQYMDAcIDAwHCAkJDAsJCQwLCQkMCwkJDAsGBwYHBgcGBwYHBgcLCwgJCwsICQsLCAkLCwgJCQkJCQUFBgcGCAkLCQoJCQoICggKCggJBwcHBwcHBwcHBwcHBwoJBgYGBgQEBAQEBAQEBAQEBAQEBgQEBAQHCg0EBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAODg0ODg4JCQwPDAkJCQkJBwcHBwcHBwcHBwcHBwcHBwcHDxEMCQkJCQgJCAgJCAgICAgICAgICQ8ICQgICAgICAgICAgICggICAgICAgICAgKCggIDQ0NDQ0NDQ0NDQkJCQkJCQkJCgkKCAgICAgLCAkJCQkKCgwLCQkJCQkJCgkMEg4JCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQgICAgICAgICAgICAgICAgICAgICAgICA4PCAgGBgoICAgICAgICAgLCQkJCQkJCQgIDgwJCBINCAsJCQkJCgkJCQkLCQoJCQkRBQUFDBAGBgYJAAUNCAsNCwwMDQ8NCg4LCA8MCwYGBgoKBgYKBgYKCgoLCwoLDAoPDwcHCwcHBgsLCwwLDgsOEA8OBwgLBwcHCwsLDAsLDAsNEBIQEhASDAoKCg8PCgoPCgoPDg8LCw0NDAwIDQsNEBALDQwLDQ4LDwoKEAoKDw8KCg8KCg8ODxAQDw0NDQ0MCwsMDw8PDw0PDRINDQsMCwsKCwgNDw4NDQ0NDAwMDAsLCgsPDg0ODQ0MDgsLCgsODQ0NDQwNDQgNDQ0MDQ0QDQ0LDw0NCw4PDxAQDQ0MDAsMCw0NDRISDRISDQ0SEhERERUVERUVERERFhYRFhULDQwLCwsLCgoICQ0LDAoHBwcHBgsLBwgLBggICA0NCAgNCAgNDQ0NDg0NDQkODggIDQgICA4NDQ4LDAwMCwoKBQULBQUFCwkLDw0ODQ4FBwoHCggKEwkJCQ8PCQkPCQkPDQ8PDgwMDAwGCwoLDw8KCwoKCwoICgkMEgkJDg4JCQ4JCQ4ODg8PDg8PDw8ODg4ODw8NDQsMCw8PDw0NDQ0MDQcKDAwKCwoLDQ0NDQwMDAwNDQwMDAwLDAoLCwsMDAwLDAwMDAgMDg4NDQwNDAwLEA0MCxAPCwsLDQ4MDgwODQwMDBAQDBAQDAwREQ0NDRISDRISDQ0NEhINEhIODw4ODg0NDQ0MDBAQEAcICAgIBgsKDQQLFRUFBQwODQ8NDwgNEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISCRISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkSEhISEhIGCQoLCwoKDAcKDAsLDw4LCwoMDg8KCgoLCQwLCwkJCwsLCwoJCgsLCAoMDAsLCgoICQAICAAAAAAAAAAMBgoHBwcIBwAAAAAAAAAADAkJDAoLCwkOCwwLGRISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEBASEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEgkFBQUFBQUFBQUFBQUFBQUFBQQFBAUFBQUFBQUFCQkJCQkJDQ4IDgkJCQkJCQkJDAkJCgkJCQgICQkJBwcJCQkJBwcHCQkHCQkJCQkJCQkJCQkJBwcJCQkJCQkJCQ8QDAkJCQkJCQkJCQkJCQUFBQUFBQYFBQUFBQUFBQUFBQUEBAUEBQUEBAMEBAUFBAQDBQQEBQUEBAMFBAQEBAUEBAkJCQkJCQkJCQwJCQoJCQkJDQ8NCwkEBAQFBQQDBQQFBQQMDAkJCQwMDw0LCRIODwcFBQUFBQUFBQUFBQUFBQUODg4ODg8PDg4PDwUOBQUHBwUFBQUFBQUFCAoOBwUJDg4ODg4ODg4ODg4ODg4OEA4OEg4ODg4ODg4QDhMSDg4JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQsJCQkJCgkJCQkNDgwQEAwLCQkJCRANCAgICAgICQkJCQkPDwwPEA4MDA8MDAwMDAwOCwsICgoJCAgLCAgICAgICAgLCggLCwkQCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQsRCQgICQkJEQkHCgYGBg4GBgcHBgcPCQ0GCQYGBgYICAsICwgICA0LCwcKBwcICAgICAgICAoICAgJCQkQEAUKCQgLCAUFBQUFBQUFBQUFBQUFBQUJCQkJCQwMCwsLCwsLCwsLCwsLCwsFBgcHCQkABAQAAQQABAAEBAQABAAEBAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAKCgYGCQkMCwkJDAsGBwYHBgYGBwYHBgcGBwYHEBALCwkHCgcKCggJCgoICQsLCAkLCwgJCAkFBQgICQkFBQcHBwcKCQYGCgkGBgoKBgYLCwgJCAkJCQkEBgQABwUKCQ0HBwcFBAcGCAcHBgYGBwYGBQYGBAUFBAcFBQUFAwMHCAgEBwQFBgQDAwMDAwUFBQQEBAQEAwcHCQcHBwcHCAYEBAcHBgcGBgYGBgcICAcHBgYHBgcGBgUFBQQFBwgJCgYGBgYGBwYGBgcHBwYGBgUIBAUEBgQEBAQEBwYGBwcHBgQDAwgLAwQEBwcHBwcFBgUFBQYIBwgGCQkIBwYICA4LEAsQCgsLCw0LDAsLEAoLEAgMDAgLCwgLCg0NCgwNCgsLCwsMCwsKDAsLCwsLDAsMCQ0LCgwJDg0QCgsPBgkICgcJCwoMDQwLDAsNCgoODwoNCgoKCQ0NCQ0JCQ4OCwsMDREQDRANDRESDQ4QDQ8MDAwQDAkNDQoMCAoJDQwIDAsJChAQEBAQEBANCAkMCgwMCwoODQoODQ4KDg0KDg4NDg0MDg0NDgcMCwwKCw0OCQsMCQwMDAoLCw0REg4QDAwQExISEBQQEhIJDA0ICwoIDAkMDAgLCwgMBwsJBwkHCQoLCwsNCwsMCwsMDgsNDhEMDQ0JAwYGBAYIAwkIBwgHCQgICggHCgoKCAoLDgcHCw0SEBEOEA4MDA8MDhIQDQ8ZCg8MEQ4PFRANDRIRGRkZEBAMDA0PAAAAAAAAAAAAAAARDRENABENEQsAAAALDAcGBwIIBQYKCwgMCgoHBwYKBwoGCAgJCAsLCAoKCgQKBgoDCwsKBwoKDggJAwoKBwgJBwoJDAwOBAgICwwLDBAKEA4LDgMKCA4LDgsMCgoLCwoHCgYFBAkMCw0JFRUQDg4NDg4ODg4ODg4NDg0ODQ4NDhMODQ0NDQ0ODg0NDQ0NDg0NDg4ODg4ODQ4OEA4OEgkSEhISEhISEhISEhIAAAwMDAwOCwwMCw4MDxEEDA8MDAwMDA8MDg8PDA8QDgwMDwwMDAwMDAwMDw8MDxAOGRUJDQ0NDRANDw0NDQ0NDg0NDxITEBoTGBYSDg4MDAwNDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4MDAwMDAwMDAwQEgwMDAwJCQkLCw4JCQkJDg4OEg4ODg4ODg4PDg4ODg4ODg4OEhMTEA8OGhQWEwkJDg4REg4PDg4TDg4RDg4OGxsVFQkHBwcHBwcHBwcHBwcHBgcHBwcHBwcHBwcHBwcHBwcHBwcHCQkJCAgICAgICAgICAgJCQkJCQkHCQ0NDQ0NDQ0NDQ8NDQ4NDQ0NERISEBMTDw8NDQ0PEBMQDg0aFhQUFBQJDAsLCwsLCwsLCwwMCwsLCwsLCwsLCwsLCwsLCwwMDBILCxMJCRAQEBAQEBAQEBAQEBAQEBMQEBMQEBAQEBAQExAWFBAQEA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDRAPDQ0NDQ0NDQ0SExATExANDQ0NDhgYCQwMDAwMDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg8RERMODg4JDg4ODg4ODg4PDw8PDw8PDw8PDw8KCgoKCgoKDQoKCgoKDw0NCg0PEQ4MChERDAkJDg4ODg4ODhAODgkQCQ0NDQ0NDQ0NDQ0NDQ0NDQ0ODQ0ODg0NDQ4NDQ0NDQ8REg8NCQkMCQkJEAkJCQ0OCQkJCQkJCQkKCQkJDAwJCQkJCQkJCQkJDQ4JCRAQDQkJFxMMCw8LCwsLCwsLCwsOCwsLCwsLCwsPEQ4OCw4RDw0NGRQQDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OExAODgkJCQkJCQkNDQ0NDQ0NDQ0NDQ0NDQ0NDRENDQAJERERERERFhYJCQkJDQ0NDQ0NDQ0RDRANDQ0SEBERCQkJDQ0NDQ0NDQ0NDQ0NDRESDRMNDQ4MDAwMDAwMDAwMDwwMDAwMDA8ODAwaFQkJCQkHBwcHBwcHBwcHBwcTExMNEQ0JCQ4ODxEMCQkJCQgJCAgJCAgICAgICAgICQ8ICQgICAgICAgICAgICggICAgICAgICAgKCggICQkNDQ0NDQ0NDQ0NDAwJCQkJCQkJCQkJCQoJDA4JCAoICAgICAsICwsLCAoKCQgICwgICAgICAgICwoICwsJEBAJCQkJCQoKDAsJCQkJCQkKCQ0PDBIOERIOCQkJCQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCAgICAgICAgICAgICAgICAgICAgICAgICA4PCAgICQkJCQYGCgkJCQkICAgNCAgICAgICAsKCQkJCQkJCAgNDw4MCQgSDRINCAsJCQkKCQkJCQsJCQoJCQkREREJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQYFBQUFBQUFBQUFBQUIBAgEBAQJBAQFBAUDBAUEBQUFBQkJCQkJCQkJCQwJCQoJCQkJDQ8NDA8PDAwJCQkMDA8NCwkSEg8ODw8HBwUFBQUFBQUFBQUFBQUFBQUFBQcHBQUFBQUFBQUICg4HBQkODg4ODg4ODg4ODg4ODg4QDg4SDg4ODg4ODhAOExIODg4JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkLCQkJCQoJCQkJDQ4MEBAMCwkJCQkQDQkICAgICAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkMDQ0QCQkJCQkJCQkJCQkJDw8PDw8PDw8PDw8PCQkJCQkJCQwJCQkJCQ8MDAkMDxAMCwkPDwwJCQkJCQkJCQkMCQkJBwcHBwcHBwcHBwcHBwcHBwcHBwoHBwcHBwcHBwcHCw0OCgcHCgYGBg4GBgYKDAYGBwYHBwcGCQYHBwkKBwcHBwcHBwcHBwoMBgYODgoGBw8PBgkGBgYGBgYJBgYIBgYGBgYGBgYKCwgJBggNCQgIDg4LCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDwoJCQkJCQgICAgICAgICAgICAgICAgIDAwMDAwMEAgICAgICAgICwgLCAgIDQsLDAgICAgICAgICAgICAwNCA4IBwcHBwgHBwgJBwsHBwcHBwcMCQcHEBAMCQUFBQUFBQUFBQUFBQUFDQgMCAcGCQkICQcHCQgICAgICAgICAoICAgICAgICAsKCgkHBwkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDg4ODg4NDg4ODg4NDg4NDg4JCQwPCQkKCgoNCg4JCQwJCQwMDAwMDA4RDAwMCQwODg4JCQ4JCQcHBwcHCQsJCwcJCwkGBgYGBgcHBwcNDRAQDQ0NCQkLCQkODg4PDg4OCQkOCQkNCgkJCQkJCQkJCQkJCgoKCQsJCQ0NDQ0QDxMSDQ8NEA0NDQkJCQ4JDQ0JDg4ODg4JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoKCgoKCgoKCgoKCgoKCgoEBAQJDAQECAgICwgLBAQJBAQICAgICAgICAgICAQICQkEBAQJBAQFBQUFBQUFBQUFBQYFBAQFBAQFBQYECQgJCQgICAQECAQEBAQEBAQEBAQECgQEBAQEBAcEBAQEBAQEBAoKCgQHBAQJCQkJCQkJCQkJBAQECQkEBAQLBAgIBAsMDAQMCgQEBAQKCgQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQJCQkJCQkJCQkJDQ4JCQkMDAwJCQkJCQkODgkJCQ4OCQkJDAwJCQkREQkJCQwMCQkJExMJCQkNDQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQgICAkJCQkJCQoKCQkJCQkJCQkICAkJCQwMCQkJBwcJCQkODgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCgkLCwoGCgsFBQoFEAsLCwsICAYLCwkNCQkJCQkJCQkJCQkJCAkJCQkKCQoJBwoJCQkJBwcJCQkJCQkJCQkJCQkJBwgICQkHDAkJBwgJCQYGBgQECQkJCQkJBgkGBgYJCQkJCQYGBgkJCQkJCQkJBgYGBAkEBAQJCgYGBAYJCQYGBwYJCQkGCQkJCQkJCQkJCQkJCQkJCQUKCQkJCQkJCQkJCAsJCAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkGBgkABQUGCAkJCQkJCQkJDw0LDA0MCwsNCw8ICg0MEA4IDAkJCQkJCQkJCQkJCQkXDRUOEw0TDRcPFw0XDxcNEwwXDRUOEw0TDBMMFw8XDQgJCQkDBAkJCQkAAAAACQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQkJCQkACQkJCQkJCQkJCQkAAAAAAAAJCQkJCQkJCQkJAAAJCQkJCQkJCQkJCQkJCQAACQkJCQkJCQkJCQkJCQkAAAkJCQkJCQkJCQkJCQkJAAAJCQkJCQkJCQkJCQkJCQAAAAkJCQkJCQkJCQkJCQkAAAAAAAAJCQkJCQkJCQkJAAAAAAAACQkJCQkJCQkJCQAACQkJCQkJCQkJCQkJCQkAAAAACQkJCQkJCQkJCQkJAAAAAAAAAAAMCQkJCQkJCQAAAAAAAAAACQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkACQkJCQkJCQkJCQkJCQAAAAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkLCwsLCwsLCwsLCwsLCwkJCQkJCQkJCQkJCQkGDgkHEAwHDAsHBQkPBwcJCQkJBwoLCQkKEQgJCQkKCQgJCQ0JCQkJCQkJEAkJCQkKCQkJCAkJCQgHBw4MDQkMBwcHBwoJCQkJBwoPDg4LEREHBw0JBQwQEAQREAoLEwwMDgsLDAsHDAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANCQkGCwYJDgkJCQwJBwkIDgwICQkOCQkODgkOCQkNCQgNCAUJCgsJDg4ICQkICAgICAgIDQ0NCQkJCQ0NDQ0NCgkHBwcHBwcHBwcHCQ4JDAwMDAwMCQwMDAwMDQwMCAkJCggICAwMDAwMDAwMDAwICAgICAgICAgICAgJCxMIBwwJBwgGBQkIAAAAAAAAAAAAAAkICgkODAgOCg0MCgkMBwYAAAAICQkHEBQJBAcFDA0MBwsGBgYICAsKBwkGCwsHBwgJBwgHCAcFBgcGBggICwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABANDgkJDAoADBEHDA0LDA8RDwsLCQkFDQkICwUIBwsOCgsIDAoOChANCw8ODgsKCA8NEQ0MCAwLBwkJCQwNCAgJCQgIBQUJCAsJCQgJCAkPCQkJBwkJCAoJDAsJCwgGCAwHCQkHCggJDAgICQgICQoEBQkHCwkJCQkHCQgKCwYGBgkGBgYGBgYGAwYKBgYGBgYGBAYGCQUIBgYGBwYDBAYFBgYGBwYOFw0JExMTEw4NDAwMBhcPFQ0JCQ0JCQgHBA0JCgcKBxINCwkNCgsICwgOCgQDDAkMCQ4KCwgKBw4KCwgJBwsJDQoOCw8LDgoRDBIOCwgOCgkHDgoOChIOCgcLCBINCgcLCAsICwgMCQkHCgcMCxMOCxIFAwsIDQ0JDQkKCgYNERENBwkHCQ0MCA0JCQ4OEA4QCg8NDRAMDgcQFAwJDAgOEBAOCg8NDg0ODQ0ODA0VFBcODAoKDAoMCAsJCQwMEAkKBQwOCQcJBgsMDAsICwoLCgsKCQoJCg8PEQsJDgoQCxAMDwoNCQYEDAkLCQsLCg8KDAcLDwkIDAsMDQkIDw0MCQgJCQ0NDQkJDQ4ICgkLDQAAEx8KBAcHCQ8FBgUFCQkJCQkJCQkJCQUFDw8PCRIODA0PDQsPDwcIDQwRDg8LDw4KDA8OEg4ODQYFBhIJCQkKCAoJBgkKBQUJBQ8KCgoKBwcGCggMCAgICQkJDwYGCAsICQkLBQkPCwkGDwkKCQcJBgkJDg4ODg4OEw0NDQ0NBwcHBw4PDw8PDw8PDw8PCgkJCQkJCQ4ICQkJCQUFBQUKCgoKCgoPCgoKCgoIBRQQDgkJCQkJCQkJCQoJEgUFBQgICAkJCxIZBgYDDw4JDA4NDA8JDw8PDwkKCgQGDgYRCQMPCQYGBg4ODg8PDgsKCAoOCQ4JDgkNCA0IDQgNCA8MDwoNCQ0JDQkNCQ0JDwkPCQ8JDwkPCg8KBwUHBQcFBwUHDgoIBAsJCQwFDAUMBwwHDAUOCg4KDgoMDgoPCg8KDwoOBw4HDgcKBwoHCgcKBwwGDAgMBg8KDwoPCg8KDwoPChIMDggNCA0IDQgGDwkTDg8KCQIGDgUOEQkQEA8GDgwLDQ0NDw8HDg4RDgwPDgsMDA4ODg8OBw4LCAoFCAsKCQoJCAoKBQoJCgkJCgoICgcJDAkMDQYJCgkNDQ8LDQoHBwgREg8NDQ8ODAwLDQ0RCg8PDQ0RDw8PCw0MDQ4ODw0TEw8SDA0UDQkKCQgKCQ0ICgoJCg0KCgoKCAoIDQkKCg4OCw0JCA4JCQoJCAcFBQUODgoJCQoLCBIMEgwSDAgSCQUGBgwHBhEJDQ0SCRMODg4ODg4SCRIJEgkJDw4FDw8PDxAPCwsSEhISEhISEhISEg4SEhISEhISDhEMDBELCwsLDg4SEg8QDw8SEhISCg0KCgoQCw4JCwgJEAwOBg4KCg8ODBALDg0MCg4JBgUMEAsMCwwNBwcKBAcJBRkVERMPCBURDQ4JBwUOCg8KDwoPCg8KDwoJDgkOCRMODwkPCQ4KDwoPCgoIBBkVEQ8JCQoKCQkJCgsJCQsJCQsJBgsKCgkJCgoKBgUFBgcGCA4PDgsMCQoNCwoHCAgHBwcJBwcHBwgHBgsKCQoOCQoICAcHBwgKCAkMCgUJCAwHBw8NDwkJCwgIAwUFBwcMCAMFBAQEBQUFBQYGBgYJCQkJCQkJBQUFBQYGBgYECAQGCAYHBwcHBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQUKCw0ODQwPCg0JEhEMCQcMCAgGEAsLCA4KCgkIBQ4KDwoVDhUOGRIMCg8ODgoOCg0KDAgSDQsICwgSDgoIDgsNCg0KEAsPCxINEg0PCQ0JDAkOCg8KDwsPCw4LDQoMCw0JDQkGEQ0MCQ8KDQkAAAAAAAAAAAAAAAAAAQYABAAAAwAKCQYJCgUFCQoGCQoJCgoEBQoJCQoJCQoJCwkKCgsDBQYMHwkFBgkGBg8PBAQGBgUGBgYGBgMGBAQGBAUFBgUGBgYGBgMGBAQNDA8OFBAMChISEhIJCQQEBgcKCggLCAgICAgNBwcKCwcKCAsLCAgICQkKBwoKDQgHCAoMCAoICwsLCwsLCwsODw8PDg4ODggICAgICA8PEhISEgkJCQkJCQkJEhEUFBQUFBQFBQYGBQUFBgkJCwwMCwsLCgoKCgoKDxATExISCQkJCQkJCRATExMMDQ0MDAwMDBAQExMSERERCwsICAkJBwUKCgkJDA0LCwsLCwsLCw4ODw8PDw8PCQkJCQkJCQkSEhUUFRUUFA0NDQ0MDQ0NDw8TEhIRERELCwsLCwsLDg4ODg4FBQMGBgkKCQkJERETFA8HBgYGBgcHBgYHBwsLBwYGCQkJCQoKCQkNDRISDQYGBQ0NDQwNEhESEA4GAw4JDgkTDg0JCwkLCBINCQcKBw8KDwoOCgwIDAgNCQ0JDQkNChINCwoMDAkKCQkNDAkHDAsICQsLCwwKCgwKCgoMDQoMCgkKCgsLCgwFBQMIBQcHDQkKCgkJCAkNCwkGDQsJCQkICQsGCQcJBw0HCwkJDQkIBwwKCQsLBA8PDw8TDRAODgkRDxIKDA8QDBAQDQ4LCxARDgoLCgkNDwsMCxAOCgsJDhAIAAAABA0QCQkMDg8NCwsLCxAQEBANDQsMCwwLDA0NCgoLCwwLCwoMCwsLDQsMDAwICA0PDwsNCwwKAAgEBQQAAAAAAAAAAAYGBAQADwABAAANDQsMCwsNCw4NAQEDBggHBwYICAcKCAcHAAoJDQwNDgwNDA0HCwsLCwoKCgkGCQkFBQoGCQoJCgUKCQoJCQkLCQUJCgoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwoOERQHCg4RFAcKDhEUBggLDxIIDQsQDgkKCQoKCQwJCAkJDAkMDQgMDA4LDBAQDBAMDBATEQ0QEQ4NDRAPDA4QDAkLCQwMCQsMCQwNCQwJCQsLDAwLDAsLDAsLCw0LCwsOCQ4JDAkNCQcFBwUOCg4KDQcOBw8KDgoOCAwKDAoMCg0IDgkOCQ4JDgkOCQwJDAgMCAwIDAkLBw8JDwoPCg8KDwoPCgcFBwYOCg4KDgoMBQwFDAUMBREPEQ8RDw4KDgoOCg4KDgoOCg4KDgoLCgsKDQcNBw4HDgcKBwoHCggKBwoHDAYLBQsFDAYOCQ4JDgkPCQ4JDQkOCRIMEg0OCQ4JDgkNCA0IDQgKBg0ICwcOCQ4JDgsOCg4KDgkOCQ4JDgkOCQ4JDggNCQwJDAkNDAwKDQoMCQwJBwUHBQ4KDgoODA4LDgsOCg8KEAsQCw8LEAsQCw4JDgkQCxALEAsQCxALDgkNCQ4ICwkHCQkAAAAACgkJCQsLCwoKBwoKCgoIBQUFBgcGCAcICAYFBwQEAwQEBAQEBAUFCwsGBgsLBgYLCw0MCQkNDAkFCQ0MCQkHBwcHBwcHBwwMEREMDBEREBAVFRAQCRUJFQ4ICAgICAgMDAwICAgICAgICAgODg4KBwcHBw4ODgcHCg8PDg4PDwoIBwkKCAcJCAgNDQgICgkICQsLBQUJCQoJCAgFBQoKCgcHBwcHBgYKCgcHCgoHBgUKCgcHCAkJCQkJCAkAAAAAAAAAAAQEBQQEBAQEBAsLCwkJCQcHBwcRERUVDw8JCQ0JCwkICgcHCgcKCgAEBAQEBgcHCgsLCwsLCwsLCQkJCQkJCQcHBwcHBwcHBwcHBwcHBwcHBxERERUVDwkNDQ0NDQ0JCQsSCwsLCwsLCwsLCwkJCQoKCgoKBwYFBQcHBwcHBwcHCgwKCgoLCwUJBQUGBwYIBwgIBgQECwsFBgsLBQYLCwUGCwsFBgsLBQYLCwUGDQ0ICA0NCAgJCQ0MCQkNDAkJDQwJCQ0MBwcHBwcHBwcHBwcHCwwICQsMCAkLDAgJCwwICQoKCgoFBQcHBwgJDAoLCgoLCAsICwsICQcHBwcHBwgHBwcHBwcKCgYGBgYEBAQEBAQEBAQEBAQEBAcEBAQEBwoOBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARDg4ODg4OCgoNEA0KCgoKCgcHBwcHBwcHBwcHBwcHBwcHBxASDAkJCQkJCgkJCQkJCQkJCQkJCQkQCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCwsJCQ4ODg4ODg4NDg4JCQkJCQoKCgsJCwgICAgICwgKCgoKCwoMDAoKCgoKCgoKDRMPCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkPEAkJBwcLCQkJCQkJCQkJDAoJCQkJCQkJCQ8NCQkTDggLCgoKCgsKCgoKDAoLCgoKEgYFBQ0RBgYGCgAGDggMDQwNDQ0QDgsPDAgPDQwGBgcLCwYGCwYGCwsLCwwLDAwKEBAHBwwHBwcMDAwNDA4MDhEPDwcIDAcHBwwMDA0MDAwMDhETERMREw0KCgsQEAoKEAoLEA8QDAsNDQ0NCA0LDRERCw0NCw0PDBAKChEKChAQCgoQCgoQDxAREQ8ODg4ODAwMDBAQDxAOEA4TDQ0MDAwMCgwJDg8PDg4NDgwNDAwLDAsLDw8NDw4ODQ8MDAsMDg0ODg4NDg4IDg4ODA4NEQ4NDBAODQsOEBAREQ0NDQ0MDAwODg4SEg4SEg4OExMSEhIXFxIXFxISEhcXEhcXDA0MDAwLDAsLCQoODAwLCAgICAcLDAgJDAYJCQkODgkJDgkJDg0ODg8ODg0KDg8JCQ4JCQkODQ4PCw0MDQwKCgUFCwUFBQsKCw8NDw4PBQcKBwsICxQJCQkPDwkJDwkJDw4PEA8NDQwNBwwKDBAQCwwLCgwLCQsKDBMKCg8PCgoOCgoPDw8QEA4PEA8PDg8PDw8PDg4MDQwQDw8ODg4ODA4HCw0NCwwLCw4ODg4NDQwNDg4NDQwNDA0LDAsLDQ0MDA0NDQwIDQ8PDQ0NDg0NDBENDQsQEAwLDA0PDQ8NDw4NDQ0REQ0REQ0NEhINDQ0TEw0TEw4ODhMTDhMTDw8PDw8ODg4ODA0RERAHCAgICAcLCg4ECxYWBQUNDg4QDhAJDhMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEwkTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKExMTExMTBwoLDAwKCg0ICw0LDA8PCwsKDQ8QCgoLCwoMDAwKCgsLCwsKCQsLCwkKDQwLCwsKCQkACQkAAAAAAAAADQYLCAcHCQcAAAAAAAAAAA0KCg0LDAwKDwwNDBsTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExERExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMKBQUFBQUFBQUFBQUFBQUFBQUEBQQFBQUFBQUFBQoKCgoKCg4PCQ8KCQoKCgoKCgwKCgoKCgoICAoKCgcHCgoKCgcHBwoKBwoKCgoKCgoKCgoKCgcHCgoKCgoKCgoQEQwKCgoKCgoKCgoKCgoFBQUFBQUGBQUFBQUFBQUFBQUFBAQFBAUFBAQEBAQFBQQEBAUEBAUFBAQEBQQEBAQFBAQKCQoKCgoKCgoMCgoKCgoKCg4QDgwKBAQEBQUEBAUEBQUEDQ0KCQoNDBANCwoTDxAHBQUFBQUFBQUFBQUFBQUFDw8PDw8PEA8PEBAFDwUFBwcGBQUFBQUFBQkKDggFCg8PDw8PDw8PDw8PDw8PDxEPDxMPDw8PDw8PEQ8UEg8PCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoMCgoKCgoKCgoKDg8NERENDAoKCgoRDgkJCQkJCQkJCQkJEBANEBAPDQ0QDQ0NDQ0NDwsLCAsKCggICwgICAgICAgICwsICwwKEQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoLEgoJCQoKChIKBwoHBwcPBwcHBwcHEAoNBgoGBgYGCAgMCAwJCAgODAwHCgcHCQgICAgICAgKCAgICgoKEREFCwkJCwkFBQUFBQUFBQUFBQUFBQUFCQkJCQoMDAsLCwsLCwsLCwwLCwsLBQYHBwkJAAQEAAEEAAQABAQEAAQABAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQACwsGBgkJDQwJCQ0MBwcHBwcHBwcHBwcHBwcHBxERDAwJBwoICwsICQsLCAkLDAgJCwwICQkJBQUICQoKBQUHBwcHCgoGBgoKBgYLCwYGDAsICQkJCgoKBAcEAAcFCwoNBwcHBQUHBggHBwcHBgcHBgUGBgUFBQQHBgUGBgMDBwgIBAcEBgYFAwQEBAMFBQUEBAQFBAQICAoHBwcHCAgGBQQIBwcHBwcGBgcHCAgHBwcGBwYHBgYFBQUEBQcJCgsGBgYGBggGBgYIBwcGBgYFCAQGBAcEBAUEBQcGBgcHCAYFAwMJDAMEBQcHBwcHBgYGBgUGCAcIBgkKCQcGCQkPDBEMEAsLCwsNCw0MDBELDBAIDAwIDAwICwsNDQsNDQsLCwsLDQsLCwwLDAsMCwwMDQoNCwoNCQ8OEAoMDwcKCAoICgwKDA4NDA0MDgoLDg8KDQsLCwoODgoOCgoPDwsMDQ0SEQ0RDQ0SEw4PEA0QDAwMEQ0KDg4LDQkLCQ0NCQwMCQsRERARERARDQgJDQsNDAsLDg0LDw4OCw4NCw8ODQ8ODQ4ODg4IDAwMCgwODwkMDQoNDQwLDAsOEhMOEQwNERQTExEVERMTCQ0NCQwLCQwJDQ0JDAwJDAgMCgcJCAoLDAwMDQsMDAwMDA8MDQ8RDA0OCgMHBwUHCQMKCQgIBwkICQoIBwsLCwgLCw4HCAwNFBESDhEPDQ0QDQ8TEQ4QGgoPDRIPDxYRDQ0TEhoaGhERDQ0OEAAAAAAAAAAAAAAAEg4SDgASDhIMAAAACw0IBggCCAYGCwsIDQoKCAcHCgcLBwkJCQkMDAkKCgsFCgcKAwsMCgcKCg8JCgMLCwgJCQcKCQ0NDwUICQsNCw0RCxEPDA8DCgkPDA8LDQoKCwsKBwoGBQUKDQwOCRYWEQ4ODg4ODg4ODg4ODg4ODg4ODg4UDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODhAODhMKExMTExMTExMTExMTAAAMDAwMDgwMDAwPDRASBA0QDQ0NDQ0QDQ8QEA0QEA8NDRANDQ0NDQ0NDRAQDRAQDhsWCg4ODg4QDhAODg4ODg4ODg8TFBEbFRkXEw8PDQ0NDg0NDQ0NDQ0NDQ0ODQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PDQ0NDQ0NDQ0NERMNDQ0NCgoKCwsPCgoKCg8PDxMPDw8PDw8PEA8PDw8PDw8PDxMUFBEPDxsVFxQKCg8PEhMPDw8PFA8PEg8PDx0dFhYKBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwoKCggJCAgICAgICAgICgoKCgoKCAoODg4ODg4ODg4QDg4PDg4ODhITExEUFBAQDg4OEBEUEQ8OGxcVFRUVCgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDA0TDAwUCgoREREREREREREREREREREUEREUERERERERERQRFxUREREODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4REA4ODg4ODg4OExQRFBQRDg4ODg4ZGQoMDAwMDA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8QERIUDw8PCg8PDw8PDw8PDw8PDw8PDw8PDw8PCwsLCwsLCw4LCwsLCxAODgsOEBIPDQsSEg0KCg8PDw8PDw8RDw8KEAoODg4ODg4ODg4ODg4ODg4ODg4ODg8ODg4ODg4ODg4QEhMPDgoKDAkJCREJCQkNDwkJCQkJCQkJCgkJCQwMCgoKCgoKCgoKCg0PCgoREQ0KChkUDQwQDAwMDAwMDAwMDwwMDAwMDAwMEBIPDwwPEhAODRsVEQ8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDxURDw8KCgoKCgoKDg4ODg4ODg4ODg4ODg4ODg4SDg4AChISEhISEhcXCgoKCg4ODg4ODg4OEg4RDg4OExESEgoKCg4ODg4ODg4ODg4ODg4SEw4UDg4PDQ0NDQ0NDQ0NDRANDQ0NDQ0QDw0NGxYKCgoKBwcHBwcHBwcHBwcHFBQUDhIOCgoODhASDAkJCQkJCgkJCQkJCQkJCQkJCQkQCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCwsJCQoKDg4ODg4ODg0ODg0NCgoJCQkJCQoKCgoLCQ0OCggLCAgICAgLCAsLCwgLCgoICAsICAgICAgICAsLCAsMChERCgoKCgoLCgwMCgoKCgoKCgoOEA0TDxITDwoKCgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkPEAkJCQoKCgoHBwsKCgoKCQkJDgkJCQkJCQkMCgkJCQkJCQkJDhAPDQkJEw4TDggLCgoKCwoKCgoMCgoLCgoKEhISCgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGBQUFBQUFBQUFBQUFCAQIBAQECgQEBQQFBAQFBAUFBQUKCQoKCgoKCgoMCgoKCgoKCg4QDgwQEA0NCgkKDQwQDQsKExMPDxAQCAcFBQUFBQUFBQUFBQUFBQUFBQUHBwYFBQUFBQUFCQoOCAUKDw8PDw8PDw8PDw8PDw8PEQ8PEw8PDw8PDw8RDxQSDw8PCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDAoKCgoKCgoKCg4PDRERDQwKCgoKEQ4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCgkKCQkKCQkJCQkJCQkKCQoJCQkJCQkJCQkKCgoKCgkJDA4OEQkKCQoJCQkJCgoJChAQEBAQEBAQEBAQEAkJCQkJCQkMCQoJCQoQDQ0JDRARDQsJEBAMCgoKCgoKCgoKDQoKCgcHBwcHBwcHBwcHBwcHBwcHBwcKBwcHBwcHBwcHBwwNDwsHBwoHBwcPBwcHCwwHBwcHBwcHBwkHBwcKCgcHBwcHBwcHBwcLDAcHDw8KBwcQEAYKBgYGBgYGCgYGCQYGBgcGBgYGCgwJCQYJDQoICQ8PDAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKChALCgoKCgoICAgICAgICAgICAgICAgICA0MDAwMDBEICAgICAgICAwIDAkICA4MDA0ICAgICAgICAgICAgNDggPCAgICAgICAgICQgLCAgICAgIDAoICBERDAoFBQUFBQUFBQUFBQUFBQ0JDQkHBgoKCAoHBwoICAgICAgICAgKCAgICAgICAgLCwsJBwcKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg4ODg4ODg4PDw8ODg8ODg4OCgoMEAoKCwsLDgsOCgoNCgoNDQ0NDQ0PEg0NDQoNDw8PCgoPCgoHBwcHBwkMCQsHCQwJBgcHBwcHBwcHDQ4REQ4ODgoKDAoKDw8PEA8PDwoKDgoKDQsKCgoKCgoKCgoKCgsLCwoMCgoODg4OERAUEw4QDhEODg4KCgoOCg4OCg8ODg4OCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoLCwsLCwsLCwsLCwsLCwsLBAQECg0EBAkJCQwJDAQECgQECQkJCQkJCQkJCQkECAoKBAQECgQEBQUFBQUFBQUFBQUGBgQEBQQEBQUGBAoJCgoJCQkEBAkEBAQEBAQEBAQEBAoEBAQEBAQIBAQEBAQEBAQKCgoEBwQECQkJCQkJCQkJCQQEBAkJBAQEDAQJCQQMDQ0EDQoEBAQECwsEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECgoKCgoKCgoKCg4OCgoKDQ0NCgoKCgoKDw8KCgoPDwoKCg0NCgoKEhIKCgoNDQoKChQUCgoKDQ0KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCQkKCgoJCQkKCgoKCgoKCgoKCgoKCgoKCAgKCgoNDQoKCggICgoKDg4KCgoJCQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgsJCwsKBwoLBgYLBhELCwsLCAgHCwsJDgkJCQoKCgoKCgoKCQgKCgoKCgoKCgcKCgoKCggICgoKCgoKCgoKCgoJCQcICAoKCAwJCQcICgoGBwYEBAoKCgoKCgcKBwcHCgoKCgoGBgYKCgoKCgoKCgYGBgQKBAQECgoGBwUHCgoHBwcGCgoKBgoKCgoKCgoKCgoKCgoKCgoFCwoKCgkKCgoKCgkLCgkKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKBgYKAAUGBgkKCgoKCgoKChAODA0NDQwMDgwPCAsNDREPCA0KCgoKCgoKCgoKCgoKGA4WDxQOFA0YEBgOGBAYDhQNGA4WDxQOFA0UDRgQGA4JCgoKBAQKCgoKAAAAAAoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgoKCgoKAAoKCgoKCgoKCgoKAAAAAAAACgoKCgoKCgoKCgAACgoKCgoKCgoKCgoKCgoAAAoKCgoKCgoKCgoKCgoKAAAKCgoKCgoKCgoKCgoKCgAACgoKCgoKCgoKCgoKCgoAAAAKCgoKCgoKCgoKCgoKAAAAAAAACgoKCgoKCgoKCgAAAAAAAAoKCgoKCgoKCgoAAAoKCgoKCgoKCgoKCgoKAAAAAAoKCgoKCgoKCgoKCgAAAAAAAAAADQoKCgoKCgoAAAAAAAAAAAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKAAoKCgoKCgoKCgoKCgoAAAAKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCwsLCwsLCwsLDAsLCwsKCgoKCgoKCgoKCgoKBw8KBxENCA0MBwUKEAgICgoJCQcKDAoKChIICgoKCgoICgoNCgoKCgoKChEKCgoKCwoKCgkKCQoJBwcODA0KDAcHBwcLCgoKCgcLDw8PDBISCAgOCQYNEREFEhEKDBUNDQ4MDAwLCA0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgoKBwwGCg8KCgoNCggKCQ4NCQoKDwoJDw4KDgoKDgoIDggGCgoLCQ8PCQoKCQkJCQkJCQ4ODgoKCgoODg4ODgsKBwcHBwcHBwcHBwoPCg0NDQ0NDQoNDQ0NDA4MDAkKCQsICAgMDAwMDAwMDAwMCAgICAgICAgICAgICgwUCQcMCgcIBwYJCAAAAAAAAAAAAAAKCQoJDw0JDwoODQsKDQgHAAAACQoJBxEVCQQIBg0ODQgMBwcHCQkMCwcKBgwMBwgICQcICAgHBQYHBgYICQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARDg8JCQwKAA0SCA0ODA0PEhAMDAkJBQ4JCAsFCQgMDwoMCQ0KDwoRDQwPDg4MCwgQDRIODQkMCwcKCQkNDggJCgoJCQUFCQgMCQoJCggKEAkKCQcJCQgKCg0LCQwJBwkNBwkKBwoJCQ0ICAoJCQoKBQUJCAwJCQoJBwkICgwGBgcJBwcGBgYGBgMGCgcHBgcGBwQHBwoGCQcGBggGAwUHBgcGBwgGDxgOChQUFBQPDg0NDQcYEBYNCgoOCgoIBwUNCgoHCggSDQwJDQoMCQwJDwsEAwwJDQkPCwwJCggPCwwJCggMCQ4KDwsQDA8LEg0TDgwJDwsKBw4KDgoTDgoIDAkSDQoICwgMCQwIDQoKBwoHDQsUDgwTBQMMCA4OCg4KCgoHDRISDQcKBwoNDAkOCgkODhEOEQsQDQ0RDQ8IERUNCgwJDxERDwsQDg8ODw4NDg0OFhUYDw0LCw0LDQgMCgoNDREKCwYNDwoHCQcLDA0LCAwKCwoLCgoLCgoQDxILCg8LEQwRDQ8LDgoGBA0JDAkMCwsQCw0HDBAJCA0MDQ0JCRAODAoJCQkNDQ0JCQ0PCQsJDA4AABQhCgQHBwoQBQYFBQoKCgoKCgoKCgoFBRAQEAkTDw0NDw0MDxAHCA4MEg8PDA8PCg0QDxMPDw4GBQYTCgoJCggKCQYJCgUFCgUQCgoKCgcHBgoJDQgICAoKChAGBwgMCAoKDAUKEAwJBhAKCgoHCgYKCQ8PDw8PDxQNDQ0NDQcHBwcPDw8PDw8PEBAQEAoJCQkJCQkPCAkJCQkFBQUFCgoKCgoKEAoKCgoKCAUVEQ8KCgoKCgoKCgoLChMFBQUJCQkKCgsTGgYGAxAPCg0PDgwQChAQEBAJCwsEBg8GEgoDEAoGBgYPDw8PEA8LCggKDwkPCQ8JDQgNCA0IDQgPDQ8KDQkNCQ0JDQkNCQ8JDwkQCQ8JEAoQCgcFBwUHBQcFBw8KCAUMCgoNBQ0FDQgNCA0FDwoPCw8KDQ8KDwoPCg8KDwcPCA8HCgcKBwoHCgcNBg0IDQYQChAKEAoQChAKEAoTDQ8IDggOCA4IBg8JFA8PCgoCBg8FDxIJEBEPBg8NCw0NDhAPBw8PEg8NDw8MDA0PDw8QDwgPCwkKBgkLCgkKCQgKCgYKCQoJCQoKCAsHCgwJDQ0GCQoJDQ0PDA4KBwcIEhMQDg4QDw0NDA4NEgoQEA0OEhAPEAwNDQ0PDxAOFBQQEwwOFQ4JCgoJCwkNCAsLCQsOCwoLCggKCA4JCwoPDwsOCQgPCgkKCQgHBQUFDg8LCgkLDAkTDRMNEw0IEwkFBgYMBwYSCg4OEwoUDw8PDw8PEwoTChMKChAPBRAQEBAREAsLExMTExMTExMTExMOExMTExMTEw4SDQ0SCwsLCw8PExMQERAQExMTEwoOCgsKEQsPCQwICREMDwYPCwsQDw0RDA8NDQoOCQYGDREMDQwMDQcICgUHCgUbFxIUDwgWEg4PCQcFDwoPCg8LDwoQCg8LCQ8JDwkUDg8KDwkPCg8LDwoKCAUbFhIPCQkKCgoJCQsMCQkMCQkLCgYMCgoKCgoKCwcGBQYIBggPEA8LDAoKDgsKBwgICAgICggICAgJBwYLCgoKDgoKCQgICAgICgkKDQsFCggMCAgQDhAKCQsJCQMGBggIDQkDBQQEBAUFBQUGBgYGCgoKCgoKCgUFBQUGBgYHBAkEBgkHBwcHBwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBQUFCgsODw4NDwsNChMSDAoHDAgJBhEMCwkPCwsKCQUPCw8KFg8WDhsTDAoPDg8KDwsOCg0IEw4MCQwJEw8KCA8LDgoOChAMEAwTDhIOEAoOCQ0KDwsQCxAMEAsODA4KDAsNCg4KBhIODAoQCw0KAAAAAAAAAAAAAAAAAAEGAAQAAAMACwoGCQoFBQoLBgkLCgsLBQYKCQoLCQoKCgsKCgsMAwUGDSEKBQYKBwYQEAQEBgYFBgYGBgYEBgQEBgQFBgYFBgYGBgYEBgQEDQ0QDxUQDQoTExMTCQkEBAcHCwoICwkICAkIDggHCwwICwgMCwgICQkKCgcKCw4ICAgKDAgLCQsLCwsLCwsLDw8PEA8PDw8ICAkJCQkQEBMTExIKCgoKCgoKChISFRUVFRUVBgUGBgUFBgcKCgwMDQwMCwoKCgoKChARFBQTEwkJCQkJCQkRFBQUDQ0NDQ0NDQ0QERQUExISEgsLCQgKCgcGCgoJCQ0NCwsLCwsLCwsPDxAQDw8QEAoKCgoKCgoKExMWFRYWFRUNDQ0NDQ0NDRAQFBMTEhISCwsLCwsLCw8PDw8PBQUEBwYKCgoKChISFBUQBwcHBgYHBwYHBwcLDAcGBgkJCQkKCgkJDg4TEw4GBwUNDQ0NDRMSExEPBgMPCQ8JFA8NCQwJDAkTDgoICgcQCxALDwoMCAwIDQkOCg0JDgoTDgwKDAwJCwkJDg0JCAwMCQoLCwsNCgsMCwoKDA0KDAoJCgoMDAsMBQUDCAUHBw4JCgoJCQgJDQsJBg0MCQoJCQkMBgoHCQcOBwwKCQ0JCQcNCgkMCwUQEBAQFA4RDw8KEhATCwwQEQwQEQ4PDAsQEg8KCwsKDhALDQsRDgoMCg8RCAAAAAQOEQkJDQ8QDgsLCwwRERERDg0MDQwMDA0ODQsLCwsMCwwLDAwMDA4MDQ0MCAgOEA8LDgwNCwAIBAYEAAAAAAAAAAAGBgQEABAAAQAADg0MDQsLDQwPDQEBAwcJCAgGCQkHCwgIBwALCQ4NDg4NDg0NCAsLCwsKCgsJBgkKBQUKBgkLCQoFCgoLCgoJCwoFCgsLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLDhIVCAsOEhUICw4SFQYIDBATCQ4LEQ8JCwkLCwkNCgkKCQwJDQ4IDQ0PDA0REQ0RDQ0RFBIOERIPDg0REAwPEQwJDAoMDAoMDQkNDQkNCQkMCw0NCw0MCw0MDAwODAwMDwkOCQ0JDQkHBgcFDwoPCg4IDggPCg8KDwgNCg0KDQoOCQ8KDwoPCg8KDwoNCQ0JDQkNCQ0JDAcPCRAKEAoQChAKEAoHBQcGDgoPCg8KDQUNBQ0FDAUSDxIQEg8PCg8KDwoPCg8KDwoPCg8KCwoLCg4HDgcOCA4ICgcKBwoICgcKBwwGDAYMBgwGDwoPCg8KDwoPCg4KDgkSDRINDwkPCQ4JDQgOCA0ICgYNCQsHDwkPCQ8LDwsPCw8JDwkPCQ8JDwkPCQ8JDQkNCQ0JDgwNCg0LDQkNCQcFBwUPCg8KDw0PCw8MDwoPChAMEAwPDBEMEQwPCg8KEQwRDBEMEQwRDA4JDgkPCQsJBwkJAAAAAAoKCgoMDAwKCgcKCgoKCAUFBQcIBwgHCAgHBgcFBAMEBAQEBAQGBQsLBgYLCwYGCwsNDQoKDQ0KBgoNDQoKBwgHCAcHBwcNDRISDQ0SEhERFhYREQoWChYOCQkJCQkJDQ0NCQkJCQkJCQkJDg4OCgcHBwcODg4HBwoPDw4ODw8LCAgJCwgICQgIDg0ICAoKCQoLCwUFCgkKCQgIBgUKCgoHCAcHBwYGCgsHCAoLBwYFCgsHBwkJCQkJCgkJAAAAAAAAAAAFBQUFBQQEBAQLCwsKCgoHBwcHEhIWFg8PCQkNCgsJCAoHBwsHCgsABAQEBAYHBwsLCwsLCwsLCwoKCgoKCgoHBwcHBwcHBwcHBwcHBwcHBwcSEhIWFg8JDQ0NDQ0NCgoMEwwLCwsMDAwMDAwJCQkKCgoKCgcGBQUHBwcHBwcHBwsMCwsLDAwGCgUFBwgGCAcICAcEBAsLBgYLCwYGCwsGBgsLBgYLCwYGCwsGBg0OCAgNDggICgoNDQoKDQ0KCg0NCgoNDQcIBwgHCAcIBwcHBwwMCQoMDAkKDAwJCgwMCQoKCgoKBgUHCAcJCg0KCwoKDAkMCQsLCQoHBwcHBwcIBwcHBwcHCwoGBgYGBQUFBQUFBQUFBQUFBQUHBQUFBQcLDgQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEg8PDw8PDwoKDRENCgoKCgoHBwcHBwcHBwcHBwcHBwcHBwcREw0KCQoKCQoJCQoJCQkJCQkJCQkKEQkKCQkJCQkJCQkJCQkLCQkJCQkJCQkJCQsLCQkODg4ODg4ODg4OCgoKCgoKCgoLCgwICAgICAwICgoKCgsLDQwKCgoKCgoLCg0UEAoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDxEJCQcHCwkJCQkJCQkJCQwKCgoJCQoKCQkQDQoJFA4JDAoKCgoLCgoKCg0KCwoKChIGBQUNEgYGBgoABg8JDA4MDg0OEQ4LDwwJEA0NBwcHDAsHBwwHBwwLDAwNCwwNCxARBwcNBwcHDQwMDgwPDA8SEBAICA0ICAgNDA0ODA0NDA8SFBEUEhQNCwsLEBALCxELCxEQEQwMDg4ODgkODA4SEgwODQwOEA0RCwsSCwsREAsLEAsLERAQEhIQDg8ODg0NDA0QERAQDxEPFA4ODQ0MDQsNCQ4QEA4PDg4NDg0NDAwLDBAQDhAPDw0QDAwLDA8ODg4ODQ4PCQ4ODg0ODhIODg0RDg4MDxEREhIODg4ODA0MDw8PExMPExMPDxQUExMTGBgTGBgTExMYGBMYGA0ODQ0NDA0MDAkKDw0NCwgICAgHDA0ICQwHCQkJDg4JCQ4JCQ4ODg4QDw4OCg8PCQkPCQkJDw4PEAwODQ4MCwsFBQwGBgUMCgwQDg8PDwUHCwcLCAsVCgoKEBAKChAKChAOEBEPDg0NDQcMCwwREQsMDAsMCwkLCg0UCgoPDwoKDwoKEA8PEREPEBAQEA8PDw8QEA8ODQ4NEBAQDw8PDw0PBwwNDQwMCwwPDw8PDQ0NDg8PDQ4NDg0ODAwMDA0ODQ0ODQ4NCQ4QEA4ODg8ODgwRDg4MERENDAwOEA4PDg8PDQ0NEhINEhINDRMTDg4OFBQOFBQODg4UFA4UFBAQEBAQDw8PDw0OEhIRBwkJCQkHDAsPBAwXFwgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKChQUFBQUFAcKCwwNCwsNCAsNDA0QEAwMCw4PEQsLCwwKDQwNCwsMDAwMCwoLDAwJCw4NDAwLCwkKAAkJAAAAAAAAAA0GCwgIBwkIAAAAAAAAAAAOCwsODAwMChAMDgwcFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQSEhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUCgUFBQUFBgUFBgYGBgUGBQUFBQUFBgYFBgUFBgUKCgoKCgoOEAkQCgoKCgoKCgoNCgoLCgoKCQkKCgoHBwoKCgoHBwcKCgcKCgoKCgoKCgoKCgoHBwoKCgoKCgoKERINCgoKCgoKCgoKCgoKBQYGBgYFBgUFBQYFBQUGBQUFBQUFBQUGBQUFBAUFBgUFBQQFBQUGBQUFBAUFBQUFBQUFCgoKCgoKCgoKDQoKCwoKCgoPEA8MCgUFBQUFBQQFBQYFBQ0NCgoKDg0RDgwKFBARBwUFBQUGBQUFBQUFBQUFBRAQEBAQEBAQEBERBRAGBggIBgUFBQUFBQYJCw8IBQoQEBAQEBAQEBAQEBAQEBASEBAUEBAQEBAQEBIQFRMQEAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoKCgoLCgoKCg4QDhISDgwKCgoKEQ8JCQkJCQkKCgoKChERDRERDw0NEQ0NDQ0NDRAMDAgMCwoJCAwICAgICAgICAwMCAwMChEKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDBMKCQkKCgoSCgcLBwcHEAcHBwcHBxEKDgYLBgYGBgkJDAkMCQkJDgwMBwsHBwkJCQkJCQkJCwkJCQoKChISBgsKCQwJBQYGBgYGBgYGBgYGBgYGBgoKCgoKDQ0MDAwMDAwMDAwMDAwMDAUGBwcKCgAFBQABBQAEAAUFBQAFAAUFAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAsLBgYKCg0NCgoNDQcIBwgHBwcHBwcHBwcHBwcSEg0NCQgLCAsLCQoLCwkKDAwJCgwMCQoJCgUFCQkKCgYFBwcHBwsKBgYLCgYGCwsGBgwMCQoJCgoKCgUHBQAHBQwKDgcIBwYFCAcJBwgHBwcHBwYFBgcFBgYECAYGBgYDAwcJCAUHBAYGBQQEBAQEBQUFBQQEBQQECAgKCAgICAgJBgUFCAgHBwcHBwcHBwkJCAcHBwcGBwYGBgYFBAUHCQoLBgcHBwYIBwYGCAcIBwYGBQkFBgQHBAQFBQUHBwcICAgHBQMDCQ0DBQUHBwcHBwYGBgYGBwkICQYKCgkIBgkJEA0SDBELDAwMDgwODQ0SCwwRCQ0NCQ0NCQwLDg4LDQ4LDAwMDA4MDAsNDAwMDAwNDA0KDgwLDQoQDxELDRAHCggLCAoNCw0PDQ0NDA8LCw8QCw4LCwsKDw8KDgoKEBAMDA4OExIOEg4OExQPEBEOEQ0NDRINCg8OCw4JCwkODQkNDQkLEREREREREQ4ICg4LDQ0MDA8OCxAPDwwPDgsQDw4PDg0PDw4PCA0NDQsMDw8KDA0LDg0NDAwMDxMUDxINDhIVFBQSFhIUFAoNDgkNDAkNCg4OCQ0MCQ0IDAoICggKDAwNDA4MDA0NDQ0PDQ4QEg0ODgoDBwcFBwkDCgkICAgKCQkLCAgLDAsJCwwPCAgMDhUSEw8SEA4NEQ4QFBIPERwLEA4TEBAXEg4OFBMcHBwSEg0NDxEAAAAAAAAAAAAAABMPEw8AEw8TDAAAAAwNCAYIAgkGBgsMCQ4LCwgIBwsHCwcJCQkJDQ0JCwsLBQsHCwMMDAsHCwsQCQoDCwsICQoHCwoNDRAFCQkMDgwOEgsSDw0PAwsJEA0QDA4LCwwMCwcLBwUFCg0NDwoXFxIPDw8PDw8PDw8PDw8PDw8PDw8PFQ8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8RDw8UChQUFBQUFBQUFBQUFAAADQ0NDQ8NDQ0NEA4REwQNEQ0NDQ0NEQ0QERENEREPDQ0RDQ0NDQ0NDQ4REQ0REQ8cFwoPDw8PEQ8RDw8PDw8PDw8QFBURHBYbGBQPDw0NDQ8NDQ0NDQ0NDQ0NDw0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDw0NDQ0NDQ0NDRIUDg0NDgoKCgwMEAoKCgoPDw8UDw8PDw8PDxEPDw8PDw8PDw8UFRUSEA8dFhkVCgoQEBMTEBAQEBUQEBMQEBAeHhgYCggHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcKCgoICQgICAgICAgICAoKCgoKCggKDw8PDw8PDw8PEQ8PDw8PDw8TFBQRFRUREQ8PDxESFRIQDx0YFhYWFgoNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0OFA0NFQoKEhISEhISEhISEhISEhISFRISFRISEhISEhIVEhgWEhISDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PEhAPDw8PDw8PDxQVEhUVEg8PDw8PGhoKDQ0NDQ0PDw8PDxAPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PERITFQ8PDwoPDw8PDw8PDxAQEBAQEBAQEBAQEAwMDAwMDAwPDAwMDAwQDw8MDxETEA0MExMNCgoPDw8PDw8PEg8PChEKDw8PDw8PDw8PDw8PDw8PDw8PDw8QDw8PDw8PDw8PERMUEA8KCg0KCgoSCgoKDhAKCgoKCgoKCgsKCgoNDQoKCgoKCgoKCgoOEAoKEhIOCgoaFQ4MEQ0NDQ0MDQ0NDRANDQ0NDQ0NDRETDxANEBMRDg4cFxIQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAWEhAQCgoKCgoKCg8PDw8PDw8PDw8PDw8PDw8PEw8PAAoTExMTExMYGAoKCgoPDw8PDw8PDxMPEg8PDxQSExMKCgoPDw8PDw8PDw8PDw8PExQPFg8PDw4ODg4ODg4ODg4RDg4ODg4OERAODh0XCgoKCgcHBwcHBwcHBwcHBxUVFQ4TDwoKDw8REw0KCQoKCQoJCQoJCQkJCQkJCQkKEQkKCQkJCQkJCQkJCQkLCQkJCQkJCQkJCQsLCQkKCg4ODg4ODg4ODg4ODgoKCgoKCgoKCgoKCwoNDwoIDAgICAgIDAgMDAwIDAsKCQgMCAgICAgICAgMDAgMDAoREQoKCgoKCwsNDAoKCgoKCgsKDxANFBATFBAKCgoKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDxEJCQkKCgoKBwcLCgoKCgkJCQ8JCQkJCQkJDAsKCgkJCgoJCQ8QEA0KCRQOFA4JDAoKCgsKCgoKDQoKCwoKChISEgoGBQUFBQUFBgUGBQUGBgYGBQUGBQYGBgYFBgUFBQYFBQUGBQUFBQkFCAUFBQoFBQUFBQQFBQUGBQUFCgoKCgoKCgoKDQoKCwoKCgoPEA8NEBANDQoKCg4NEQ4MChQUEBAREQgHBQUFBQYFBQUFBQUFBQUFBgUGCAgGBQUFBQUFBgkLDwgFChAQEBAQEBAQEBAQEBAQEBIQEBQQEBAQEBAQEhAVExAQEAoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KCgoKCwoKCgoOEA4SEg4MCgoKChEPCgkJCQkJCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0PDxIKCgoKCgoKCgoKCgoQERAQEBAQERAREBAKCgoKCgoKDQoKCgoKEQ0NCg0QEQ4MChERDQoKCgoKCgoKCg0KCgoHBwcHBwcHBwcHBwcHBwcHBwcHCwcHBwcHBwcHBwcNDhAMBwcLBwcHEAcHBwsNBwcIBwcHBwcKBwcHCwsIBwcHBwcHBwcHDA0HBxAQCwcHEREGCwYGBgYGBgoGBgkGBgYHBgYGBgsNCQkGCQ4LCAkQEAwKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoRDAoKCgoKCQkJCQkJCQkJCQkJCQkJCQkNDQ0NDQ0SCQkJCQkJCQkMCQwJCQkODAwNCQkJCQkJCQkJCQkJDQ8JEAkICAgICAgICAoIDAgICAgICA0KCAgSEg0KBgYGBgYGBgYGBgYGBQUOCQ4JCAYKCgkKBwcKCQkJCQkJCQkJCwkJCQkICAkJDAwMCgcICgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoPDw8PDw8PEBAPDw8QDw8PDwoKDREKCgsLCw8LDwoKDQoKDQ0NDQ0NEBMNDQ0KDhAQEAoKDwoKBwcHBwcKDQoMBwoMCgcHBwcHBwcHBw4PEhIPDw8KCg0KCg8PDxEPDw8KCg8KCg4MCgoKCgoKCgoKCgoMDAwKDQoKDw8PDxIRFRQPEQ8SDw8PCgoKDwoPDwoQDw8PDwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCwsLCwsLCwsLCwsLCwsLCwQEBAoNBAQJCQkNCQwEBAoEBAkJCQkJCQkJCQkJBAgKCgQEBAoEBAYGBgYGBgYGBgYGBwYEBAYEBAYGBwQKCQoKCQkJBAQJBAQEBAQEBAQEBAQLBAQEBAQECAQEBAQEBAQECwsLBAcEBAoKCgoKCgoKCgoEBAQKCgQEBAwECQkEDQ0NBA0LBAQEBAsLBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAoKCgoKCgoKCgoPDwoKCg0NDQoKCgoKChAQCgoKDw8KCgoNDQoKChMTCgoKDg4KCgoVFQoKCg4OCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoJCgoKCQkJCgoKCgoKCwsKCgoKCgoKCggICgoKDg4KCgoICAoKCg8PCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgsMCgwMCwcLDAYGCwYSDAwMDAgIBwwMCg8KCgoKCgoKCgoKCgkICgoKCgsKCwoHCwoKCgoICAoKCgoKCgoKCgoKCgoHCQkLCggNCgoHCQoKBwcGBAQKCgoKCgoHCgcHBwoKCgoKBwcGCgoKCgoKCgoHBwYECgQEBAoLBwcFBwoKBwcIBgoKCgYKCgoKCgoKCgoKCgoKCgoKBgsKCgoKCgoKCgoJDAoJCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgYGCgAFBgYJCgoKCgoKCgoRDgwNDg0NDA8MEAkLDg0SDwkOCgoKCgoKCgoKCgoKChkPFxAVDxUOGREZDxkRGQ8VDhkPFxAVDxUOFQ4ZERkPCQoKCgQECgoKCgAAAAAKCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKCgoKCgAKCgoKCgoKCgoKCgAAAAAAAAoKCgoKCgoKCgoAAAoKCgoKCgoKCgoKCgoKAAAKCgoKCgoKCgoKCgoKCgAACgoKCgoKCgoKCgoKCgoAAAoKCgoKCgoKCgoKCgoKAAAACgoKCgoKCgoKCgoKCgAAAAAAAAoKCgoKCgoKCgoAAAAAAAAKCgoKCgoKCgoKAAAKCgoKCgoKCgoKCgoKCgAAAAAKCgoKCgoKCgoKCgoAAAAAAAAAAA4KCgoKCgoKAAAAAAAAAAAKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgAKCgoKCgoKCgoKCgoKAAAACgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMCgoKCgoKCgoKCgoKCgcQCgcSDQgNDQcFChEICAoKCgoICwwKCgsSCQoKCgsKCQoKDgoKCgoKCgoSCgoKCgsKCgoJCgoKCQcHDw0OCg0HBwcHCwoKCgoHDBAQEA0TEwgIDgoGDhISBRMSCwwWDQ0PDQ0NDAgODAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8KCgcNBgoQCgoKDgoICgkPDQkKCg8KCg8PCg8KCg8KCQ8JBgoLDAoQEAkKCgkJCQkJCQkPDw8KCgoKDw8PDw8LCgcHBwcHBwcHBwcKDwoNDQ0NDQ0KDQ0NDQ0PDQ0JCgoLCQkJDQ0NDQ0NDQ0NDQkJCQkJCQkJCQkJCQoMFQkHDQoICQcGCggAAAAAAAAAAAAACgkLChANCRALDg4MCw4IBwAAAAkKCgcSFgkECAYODw4IDAcHBwkJDAsICgYMDAgICQoICAgJCAYHBwYHCQkMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEg8PCgoNCwANEwgNDg0OEBMRDQ0KCgUOCgkMBQkIDRALDAkOCxALEg4MEA8PDAwIEQ4TDw0JDQwHCgoKDg8JCQoKCQkFBgoJDAoKCQoIChEKCgoICgoJCwoODAoNCQcJDQgKCggLCQoOCQkKCQkKCwUGCggMCgoKCggKCQsNBgYHCgcHBgYGBgYEBwsHBwYHBwcEBwcKBgkHBgcIBgQFBwYHBgcIBhAZDwoVFRUVDw8ODg4HGREXDgoLDwoKCQcFDgoLCAsIEw4NCg4LDAkNCQ8LBAMNCg4KDwsMCQsIDwsMCQoIDQoOCxAMEQ0PCxINFA8MCQ8LCgcPCw8LFA8LCAwJEw4LCAwJDAkMCQ0KCggLCA0MFg8NFAUEDAkPDgoOCgsLBw4TEw4HCgcKDg0JDgoKDw8SDxILEQ4OEg0PCBIWDQoNCRASEhALEQ8QDxAODg8NDhcWGRANCwsNCw0JDAoKDQ0SCgwGDRAKCAoHDA0NDAkMCwwLDAsKCwoLERATDAoPCxINEg0QDA8KBgUNCg0KDAwMEQwOCAwQCgkODQ4OCgkQDw0KCQoKDg4OCgkOEAkLCg0PAAAVIwsFCAgKEQUHBQUKCgoKCgoKCgoKBQUREREKFA8ODhAODBAQCAkPDRMPEAwQDwsNEA8UDw8OBwUHFAoKCgsJCwoHCgsFBQoFEAsLCwsICAcLCQ4JCQkKCgoRBwcJDAkKCgwGChEMCQcRCgsKCAoGCgoPDw8PDw8VDg4ODg4ICAgIDxAQEBAQEBAQEBALCgoKCgoKDwkKCgoKBQUFBQsLCwsLCxELCwsLCwkFFhIPCgoKCgoKCgoKCwoUBQUFCQkJCgoMFBsGBgMQDwoNEA4NEQoRERERCgsLBQcPBxMKAxAKBwcHEBAQEBEPDAsJCw8KDwoPCg4JDgkOCQ4JEA4QCw4KDgoOCg4KDgoQChAKEAoQChALEAsIBQgFCAUIBQgPCwkFDQoKDQUOBg4IDQgNBQ8LEAsPCw0PCxALEAsQCw8IEAgPCAsICwgLCAsIDQcNCQ0HEAsQCxALEAsQCxALFA4PCQ4JDgkOCQcQChUPEAsKAgYQBRASChESEAYPDgwODg4QEAgQDxMPDRAQDA0NDxAPEBAIDwwJCwYJDAsKCwoJCwsGCwoLCgoLCwkLCAoNCg0OBgoLCg4OEAwOCwgICRMUEQ8PEBAODgwODhILEBAODhMQEBAMDg0OEA8QDxUVEBQNDhYPCgsKCQsKDgkLCwoLDwsLCwsJCwkOCgsLEBAMDgoIEAoKCwoICAUFBQ8PCwoKCwwJFA4UDhQOCRQJBQcHDQgHEwoPDxQKFQ8PEBAQEBQKFAoUCgoREAUREREREREMDBQUFBQUFBQUFBQUDxQUFBQUFBQPEw0NEwwMDAwQEBQUERIQEBQUFBQLDgsLCxEMEAoMCAoSDRAHEAsLERAOEQwQDg4LDwoHBg0SDA0MDQ4HCAsFBwoGHBgTFhAJFxMODwoHBhALEAsQCxALEAsQCwoPChAKFQ8QChAKEAsQCxALCwkFHBgTEAoKCwsKCgoLDQoKDAoKDAoHDAsLCgoLCwsHBgUHCAYJEBEQDA0KCw8MCwgJCAgICAoICAgICQcHDAsKCw8KCwkJCAgICAsJCg0LBQoJDQgIEQ8RCgoMCQkDBgYICA0JAwUEBAQGBgUFBgYGBgoKCgoKCgoFBgUFBgYGBwQJBAYJBwgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgUGBQsMDhAODhALDgoUEw0KBw0JCQYRDQwJDwsLCgkFDwsQCxcQFw8cFA0LEA8QCxALDwsOCBQPDAkNCRQQCwkQDA4LDgsRDBEMFA4TDxAKDwkNCg8MEAsQDBEMDwwPCw0MDgoOCgYTDw0KEAsOCgAAAAAAAAAAAAAAAAABBgAFAAAEAAsKBgoLBQUKCwYKCwoLCwUGCwoKCwoKCwoMCgsMDAMFBw4jCgYHCgcGEREFBQYGBgYGBgYGBAYFBQYFBgYGBgYGBgYGBAYFBQ4NEA8WEQ0LFBQUFAkKBAUHCAsLCAwJCQkJCQ8ICAsNCAsJDAwJCQkKCgsHCwsOCQgICw0IDAkMDAwMDAwMDBAQEBAQEA8QCQkJCQkJEREUFBQTCgoKCgoKCgoTExYWFhYWFgYFBgYGBgYHCgoNDQ0NDAwLCwsLCwsREhUVFBQKCgoKCgoKEhUVFQ4ODg4ODg4OERIVFRQTExMMDAkJCgoIBgsLCgoODgwMDAwMDAwMDxARERAQEBAKCgoKCgoKChQUFxYXFxYWDg4ODg4ODg4RERUUFBMSEwwMDAwMDAwQEBAQEAUGBAcGCgsKCgoTExUWEQcHBwcGBwgHBwgIDAwHBgYKCgoKCwsKCg8PExQPBwcFDg4ODg4UExQSEAcDEAoQCRUPDgoMCgwJFA8KCAsHEAsQCxALDQkNCQ4KDgoOCg8LFA4MCw0NCgwKCg8OCggNDQkKDAwMDQsLDQsLCw0OCw0LCgsLDAwMDQYGAwgFCAcPCgsLCgkJCg4MCQcODAoKCgkKDAcKBwoIDggNCgoOCgkIDQsKDAwFERARERUPEhAQChMRFAsNEBINERIOEAwMERIPCwwLCg8RDA4MEQ8LDQoQEQkAAAAEDhIKCg0QEA8MDAwMEhISEg8ODA0MDQwNDg4LCwwMDQwNCw0MDAwPDQ0NDQkJDhEQDA4MDgsACAUGBQAAAAAAAAAABgYFBAARAAEAAA4ODA0MDA4NEA4BAQQHCQgIBwkJBwsJCAcADAoPDQ4PDg8ODggMDAwMCwsLCgYJCgUGCwYKCwoLBgsKCwoKCgwKBQoLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICw8TFggLDxMWCAsPExYGCQwRFAkPDBIQCgsKCwsKDgoJCgoNCg0OCQ4NEA0OEhINEg4OERUTDxETDw8OEhANEBINCgwKDQ0KDQ4KDQ4JDgkJDAwNDgwNDAwODQ0NDw0NDA8KDwoOCg4KBwYHBhALEAsPCA8IEAsQCw8JDQsNCw0LDgkQChAKEAoQChAKDgoOCQ4JDgkOCgwHEAoQCxELEAsQCxALCAYHBg8LEAsQCw0FDQYNBQ0GExATEBMQDwsPCxALDwsQCxALEAsQCwwLDAsPCA8IDwgPCAsHCwcLCAsICwcNBw0GDQYNBxAKEAoQChAKEAoPCg8KEw4TDg8KDwkPCg4JDgkOCQsHDgkMCA8KEAoPDBAMEAsQChAKEAoQChAKEAoPCQ4KDgkOCg4NDgsODA4KDgoHBgcGEAsQCxANEAwQDBALEAsRDBEMEAwRDBIMEAoQChIMEgwSDBIMEgwPCg8KDwkMCggKCgAAAAALCgoKDAwMCwsICwsLCwgGBQUHCAcICAgIBwYHBQQDBAQFBQQEBgYMDAYGDAwHBwwMDg0KCg4NCgYKDg0KCgcIBwgHCAcIDQ0TEw0NExMRERcXEREKFwoXDwkJCQkJCQ4ODgkJCQkJCQkJCQ8PDwsHBwcHDw8PCAgLEBAPDxAQCwkICgsJCAoJCQ4OCQkLCgkKDAwGBgoKCwoJCQYGCwsLCAgHCAgGBgsLBwgLCwcGBgsLCAgJCgoKCgoJCgAAAAAAAAAABQUFBQUEBAUEDAwMCgoKBwcHBxMTFxcQEAoKDgoMCgkLBwgLBwsLAAQEBAQGCAgLDAwMDAwMDAwKCgoKCgoKBwcHBwcHBwcHBwcHBwcHBwcHExMTFxcQCg4ODg4ODgoKDBQMDAwMDAwMDAwMCgoKCwsLCwsHBgYGCAgICAgICAgLDQsLCwwMBgoFBQcIBggICAgHBAQMDAYGDAwGBgwMBgYMDAYGDAwGBgwMBgYODgkJDg4JCQoKDg0KCg4NCgoODQoKDg0HCAcIBwgHCAcIBwgMDQkKDA0JCgwNCQoMDQkKCwsLCwYGBwgHCQoNCwwLCwwJDAkMDAkKCAgICAgICAgICAgICAsLBgYGBgUFBQUFBQUFBQUFBQUFBwUFBQUICw8EBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMQEBAQEBALCw4SDgsLCwsLCAgICAgICAgICAgICAgICAgIERQNCgoKCgoLCgoKCgoKCgoKCgoKChIKCgoKCgoKCgoKCgoKCwoKCgoKCgoKCgoMDAoKDw8PDw8PDw8PDwoKCgoKCwsLDAoMCQkJCQkMCQsLCwsMDA4NCwsLCwsLDAsOFRELCgoKCgoKCgoKCgoKCgoKCgkKCQoKCQoJCQkKCQkKCQoJCQoKCQoKCQoJCgkKCgkKCQkJCgoKCgoJCgkKCgoKCQoJCQoJCQkJCQkKCgoJChARCQoIBwwKCgoKCgoKCgoNCwoKCgoKCgoKEA4KChUPCQwLCwsLDAsLCwsNCwwLCwsTBgYFDhMHBwcLAAYPCQ0PDQ4ODxIPDBANCREODQcHBwwMBwcMBwcMDAwNDQwNDgwREggIDQgICA0NDQ4NEA0QExERCAkNCAgIDQ0NDg0NDg0PEhUSFRMVDgwMDBERDAwRDAwREBENDQ8PDg4JDw0PExINDw4NDxENEQsLEgsLERELCxELDBERERMTEQ8PDw8NDQ0OEREREQ8RDxUPDw0ODQ0MDQoPEREPDw8PDg4ODgwNDAwREQ8QEBAOEA0NDA0QDw8PDw4PEAkPDw8ODw8TDw8NEg8PDRASEhMSDw8PDw0ODQ8PDxQUDxQUEBAVFRQUFBkZFBkZFBQUGRkUGRkNDw0NDQwNDAwKCxANDgwICAgJCAwNCQkNBwoKCg8PCgoPCgoPDw8PEQ8PDwsQEAoKEAoKChAPEBEMDg4ODQsMBQUMBgYFDAsMEQ8QDxAGCAwIDAkMFgoKChERCgoRCgoRDxEREA4ODQ4HDQsNEREMDQwLDQwKDAsOFQsLEBALCxALCxAQEBIREBEREREQEBAQEREPDw0PDRERERAQEA8OEAgMDg4MDQwMEA8QEA4ODg4QEA4ODg4NDgwNDAwODg4NDg4ODgkOEBAPDw8PDw4NEg8PDRISDQwNDxAOEA8QEA4ODhMTDhMTDg4UFA8PDxUVDxUVDw8PFRUPFRURERERERAQEBAODhMTEggJCQkJBw0LEAUNGRkGBg4QDxEQEQoQFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVChUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVFRUVFRUHCwwNDQsLDgkMDg0NEREMDAsOEBELCwwNCw0NDQsLDQ0MDAsKDAwMCQsODQ0NDAsJCgAJCQAAAAAAAAAOBwwICAgJCAAAAAAAAAAADgsLDgwNDQsQDQ8NHRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVEhIVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFQsFBQUGBQYFBQYGBgYFBgUFBQUFBQYGBQYFBgYFCwsLCwsLDxEJEQsKCwsLCwsLDgsLCwsLCwkJCwsLCAgLCwsLCAgICwsICwsLCwsLCwsLCwsLCAgLCwsLCwsLCxITDgsLCwsLCwsLCwsLCwUGBgYGBQcFBQYGBQUFBgUFBQYFBQUFBgUFBQQFBQYFBQUEBgUFBgUFBQQGBQUFBQUFBQsKCwsLCwsLCw4LCwsLCwsLEBEQDQsFBQUGBQUEBQUGBQUODgsKCw4OEg8NCxUREQgFBQUFBgYGBgUGBQYFBQUQEBAQEBEREREREgUQBgYICAYFBQUFBQUGCgsQCQULEBAQEBAQEBAQEBAQEBAQExAQFRAQEBAQEBATEBYUEBALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw0LCwsLCwsLCwsPEQ4TEw4NCwsLCxIQCQoJCQkJCgoKCgoSEg4REhAODhEODg4ODg4RDAwJDAsLCQkMCQkJCQkJCQkNDAkMDQsSCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw0UCwoKCwsLEwsICwcHBxAHBwgIBwgSCw8HCwcHBwcJCQ0JDQoJCQ8NDQgLCAgJCQkJCQkJCQsJCQkLCwsTEwYMCgoMCQYGBgYGBgYGBgYGBgYGBgYKCgoKCw4ODAwMDAwMDAwMDQwMDAwFBwgICgoABQUAAgUABAAFBQUABQAFBQAFAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAMDAYGCgoODQoKDg0HCAcIBwcHCAcIBwgHCAcIExMNDQoICwkMDAkKDAwJCgwNCQoMDQkKCgoGBgkKCwsGBggICAgLCwYGCwsGBgwMBwcNDAkKCgoLCwsFBwUACAYMCw8ICAgGBQgHCQgICAcHCAcHBgYHBQYGBQgGBgYGBAQICQkFCAUGBgUEBAQEBAUFBQUEBQUEBAgICwgICAgJCQYFBQkIBwgHBwcHBwgJCQgIBwcIBwgHBwYGBgUFCAoLDAYHBwcHCQcHBwkICAcHBwUJBQYFBwUFBQUFCAcHCAgIBwUEBAoNBAUFCAgICAgGBwYGBgcJCAkGCgsJCAcJCRENEw0SDA0NDQ8NDg0NEwwNEgkODQkNDQkNDA8PDA4PDA0NDQ0ODQ0MDg0NDQ0NDg0OCw8NDA4KEBASDA0RBwsJDAkLDQwOEA4NDg0PCwwQEQwPDAwMCw8PCw8LCxARDQ0ODxMTDxMPDxQVEBESDxINDQ0TDgsPDwwOCgwKDw4KDQ0KDBISEhISEhIPCQoODA4ODQwQDwwRDxAMEA8MERAPEA8OEA8PEAkODQ4LDRAQCg0OCw4ODgwNDRAUFRATDg4TFhUVExcTFRUKDg8KDQwKDgoODwkNDQkOCQ0LCAoJCwwNDQ0PDA0ODQ0OEA0PEBMODw8LBAcIBQgKBAsJCAkICgkKDAkIDAwMCQwMEAgIDQ8WExQQExEODhEOEBUSDxEdCxEPFBARGBIPDxUUHR0dEhIODg8RAAAAAAAAAAAAAAAUEBQQABQQFA0AAAAMDggHCAIJBgcMDQkOCwsICAcLCAwHCQoKCg0NCgsLDAUMBwsDDA0MCAwLEAoLBAwMCQkKCAwKDg4QBQkKDQ4MDhMMExANEAQLChANEQ0OCwsNDAsICwcFBQsODQ8KGRkTEBAQEBAQEBAQEBAQEBAQEBAQEBYQDxAQEBAQEA8PDw8PEBAQEBAQEBAQEBAQEhAQFQsVFRUVFRUVFRUVFRUAAA4ODg4QDQ4ODREOEhQFDhIODg4ODhIOERISDhESEA4OEQ4ODg4ODg4OEhIOERIQHRgLEBAQEBIQERAQEBAQEA8QERUWEh4XHBoVEBAODg4PDg4ODg4ODg4ODg8ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODhAODg4ODg4ODg4TFQ4ODg4LCwsMDBELCwsLEBAQFRAQEBAQEBASEBAQEBAQEBAQFRYWExEQHhgaFgsLEBAUFBAREBAWEBAUEBAQICAZGQsICAgICAgICAgICAgIBwgICAgICAgICAgICAgICAgICAgICwsLCQoJCQkJCQkJCQkLCwsLCwsJCxAPDw8PDw8PDxIPEBAPDxAQFBUVEhYWEhIQEA8SExYTEQ8eGRcXFxcLDQ0NDQ0NDQ0NDQ4NDQ0NDQ0NDQ0NDQ0NDQ0NDQ4ODhUNDRYLCxMTExMTExMTExMTExMTExYTExYTExMTExMTFhMZFxMTEw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDxMRDw8PDw8PDw8VFhMWFhMPDw8QEBwcCw4ODg4OEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBITFBYQEBALEBAQEBAQEBAREREREREREREREREMDAwMDAwMEAwMDAwMERAQDA8RFBEODBMTDgsLEBAQEBAQEBMQEAsSCw8PDw8PDw8PDw8PDw8PDw8QDw8QEA8PDxAPDw8PDxIUFhEPCwsNCgoKEwoKCg8QCgoKCgoKCgoLCgoKDQ0LCwsLCwsLCwsLDxALCxMTDwsLGxYPDRINDQ0NDQ0NDQ0QDQ0NDQ0NDQ0SFBAQDRAUEg8PHRgTEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFxMQEQsLCwsLCwsPDw8PDw8PDw8PDw8PDw8PDxQQDwALFBQUFBQUGRkLCwsLDw8PDw8PDw8TDxIPDw8VExMUCwsLEBAQEBAQEBAQEBAQEBQVEBcQEBAODg4ODg4ODg4OEg4ODg4ODhIRDg4eGAsLCwsICAgICAgICAgICAgWFhYPFA8LCxAQERQNCgoKCgoLCgoKCgoKCgoKCgoKChIKCgoKCgoKCgoKCgoKCwoKCgoKCgoKCgoMDAoKCwsPDw8PDw8PDw8PDw8LCwoKCgoKCwsLCwwKDhALCQwJCQkJCQwJDQwMCQwLCwkJDAkJCQkJCQkJDQwJDA0LEhILCwsLCwwMDg0LCwsLCwsMCw8RDhURFBURCwsLCwoKCgoKCgoKCgoKCgoKCgoJCgkKCgkKCQkJCgkJCgoJCgkJCgoJCgoJCgkKCQoKCQoJCQkKCgoKCgkKCQoKCgoKCQoJCQoJCQkJCQkKCgoJChARCQoKCwsLCwgHDAsLCwsKCgoQCgoKCgoKCg0LCgoKCgoKCgoQERAOCgoVDxUPCQwLCwsMCwsLCw0LCwwLCwsTExMLBgYGBQUFBQYGBgUFBgYGBgUFBgUGBgYGBQcFBQYGBQUFBgUFBQUJBQkFBQULBQUFBQYEBQUFBgUFBQsKCwsLCwsLCw4LCwsLCwsLEBEQDhERDg4LCgsODhIPDQsVFRERERIJCAUFBQUGBgYGBQYFBgUFBQYFBggIBgUFBQUFBQYKCxAJBQsQEBAQEBAQEBAQEBAQEBATEBAVEBAQEBAQEBMQFhQQEBALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsNCwsLCwsLCwsLDxEOExMODQsLCwsSEAsKCQkJCQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCwoKCgoKCgoLCgsKCgsKCgoKCgoKCgsKCwoKCgoKCgoKCgsLCwsLCgoOEBASCgsKCwoKCgoLCwoLERERERERERERERERCgoKCgoKCg4KCwoKCxIODgoOERIODQoSEg4LCwsLCwsLCwsOCwsLCAgICAgICAgICAgICAgICAgICAsICAgICAgICAgIDQ8RDAgICwcHBxAHBwcMDgcHCAcICAgHCgcICAsLCAgICAgICAgICAwOBwcREQwHCBISBwsHBwcHBwcLBwcKBwcHBwcHBwcLDQoKBwoPCwkKERENCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLEQwLCwsLCwkJCQkJCQkJCQkJCQkJCQkJDg4ODg4OEwkJCQkJCQkJDQkNCgkJDw0NDgkJCQkJCQkJCQkJCQ4QCREJCQkJCQkJCQkKCQ0JCQkJCQkOCwkJExMOCwYGBgYGBgYGBgYGBgUFDwoOCggHCwsJCwgICwkJCQkJCQkJCQsJCQkJCQkJCQwMDAoICAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLEBAQEBAQEBEREBAQERAQEBALCw4RCwsMDAwQDBALCw4LCw4ODg4ODhETDg4OCw4QEBALCxALCwgICAgICg0KDQgKDQoHBwcHBwgICAgPDxMTDw8PCwsNCwsQEBASEBAQCwsQCwsPDAsLCwsLCwsLCwsLDAwMCw0LCw8PDw8SEhYVDxIPEg8PDwsLCxALDw8LEBAQEBALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwwMDAwMDAwMDAwMDAwMDAwFBQULDgUFCgoKDQoNBQULBQUKCgoKCgoKCgoKCgUJCwsFBQULBQUGBgYGBgYGBgYGBgcGBQUGBQUGBgcFCwoLCwoKCgUFCgUFBQUFBQUFBQUFCwUFBQUFBQkFBQUFBQUFBQsLCwUIBQUKCgoKCgoKCgoKBQUFCgoFBQUNBQoKBQ0ODgUODAUFBQUMDAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQULCwsLCwsLCwsLEBALCwsODg4LCwsLCwsQEAsLCxAQCwsLDg4LCwsUFAsLCw4OCwsLFhYLCwsPDwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsKCgsLCwoKCgsLCwsLCwsLCwsLCwsLCwsJCQsLCw4OCwsLCAgLCwsQEAsLCwoKCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDAoNDQsICw0GBgwGEw0NDQwJCQgNDQoQCgoKCwsLCwsLCwsKCQsLCwsLCwsLCAsLCwsLCQkLCwsLCwsLCwsLCwoKCAkJCwsJDQoKCAkLCwcHBwQFCwsLCwsLBwsHBwcLCwsLCwcHBwsLCwsLCwsLBwcHBAsEBAQLCwcHBQcLCwcHCAcLCwsHCwsLCwsLCwsLCwsLCwsLCwYMCwsLCgsLCwsLCgwLCQsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsHBwsABQYHCQsLCwsLCwsLEg8NDg8ODQ0PDREJDA8OExAJDgsLCwsLCwsLCwsLCwsaDxgRFg8WDxsSGg8bEhoPFg4aDxgRFhAWDxYOGxIaDwkLCwsEBQsLCwsAAAAACwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCwsLCwsACwsLCwsLCwsLCwsAAAAAAAALCwsLCwsLCwsLAAALCwsLCwsLCwsLCwsLCwAACwsLCwsLCwsLCwsLCwsAAAsLCwsLCwsLCwsLCwsLAAALCwsLCwsLCwsLCwsLCwAAAAsLCwsLCwsLCwsLCwsAAAAAAAALCwsLCwsLCwsLAAAAAAAACwsLCwsLCwsLCwAACwsLCwsLCwsLCwsLCwsAAAAACwsLCwsLCwsLCwsLAAAAAAAAAAAOCwsLCwsLCwAAAAAAAAAACwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsACwsLCwsLCwsLCwsLCwAAAAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMDAwMDAwMDAwNDAwMDAsLCwsLCwsLCwsLCwsHEQsIEw4JDg0IBQsSCQkLCwoKCAsNCwsLEwkLCwsMCwkLCw8LCwsLCwsLEwsLCwsMCwsLCgsKCwoICBAODwsOCAgICAwLCwsLCAwRERENFBQJCQ8KBg4SEgUUEwsNFw4OEA0NDgwJDg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCwsHDQcLEAsLCw4LCQsKEA4KCwsQCwoQEAsQCwsPCwkPCQYLCwwKEREKCwsKCgoKCgoKDw8PCwsLCw8PDw8PDAsICAgICAgICAgICxALDg4ODg4OCw4ODg4ODw4OCQsKDAkJCQ4ODg4ODg4ODg4JCQkJCQkJCQkJCQkLDRYKCA4LCAkIBgoJAAAAAAAAAAAAAAsJDAoRDgoQCw8ODAsOCAcAAAAKCwoIExcKBAkGDg8OCQ0ICAgKCg0MCAsHDQ0ICQkKCAkICQgGBwgHBwkKDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMPEAoKDgsADhQJDg8NDhEUEg0NCgoFDwoJDAUJCA0QCw0KDgsQCxMPDREQEA0MCRIPFA8OCg4MCAsKCg4PCQoLCwkKBQYKCQ0KCwoLCQsSCgsKCAoKCQsLDwwKDQoHCQ4ICgsICwoKDgkJCwkJCwsFBgoJDQoKCwoICgkLDQcHBwoHBwcHBwcHBAcLBwcHBwcHBAcHCwYJBwcHCQcEBQcGBwcHCQcRGg8LFhYWFhAQDw8OCBsSGA8LCxALCwkIBQ8LCwgLCBQPDQoPCw0JDQoQDAUDDgoOChAMDQoLCBAMDQoLCA0KDwsRDBINEAwTDhUQDQoQDAsIEAsQCxUQCwgNChQPCwgNCQ0JDQkOCwsICwgODRcQDRUFBA0JDw8LDwsLCwcPFBQPCAsICw8OCg8LChAQExATDBIPDxMOEAgTFw4LDQoQEhMRDBIPEQ8RDw8QDg8YFxsRDgwMDgwOCQ0LCw4OEwsMBg4RCwgKCAwODg0JDQsMCw0LCwwLCxIRFA0LEAwSDRMOEQwPCwcFDgoNCg0NDBIMDggNEQoJDg0ODwoJERAOCwkKCg8PDwoKDxEKDAoNDwAAFiQLBQgIChEFBwUGCgoKCgoKCgoKCgYGERERChUQDg8RDw0REQgJEA0UEBENERALDhEQFRAQDwcGBxUKCgoLCQsKBwoLBgYLBhELCwsLCAgHDAkOCQkJCgoKEQcHCQ0JCgoNBgsRDQoHEQoLCggKBgsKEBAQEBAQFg8PDw8PCAgICBARERERERERERERCwoKCgoKChAJCgoKCgYGBgYLCwsLCwsRCwwMDAwJBhcSEAoKCgoKCgoKCgwKFQUFBQoKCgoKDBUcBgYEERALDhEPDRELEREREQoMDAUHEAcUCgQRCgcHBxEREREREA0MCQsQChAKEAoPCQ8JDwkPCREOEQsPCg8KDwoPCg8KEQoRChEKEQoRCxELCAYIBggGCAYIEAsJBQ0LCw4GDgYOCA4IDgYQCxAMEAsOEAsRCxELEQsQCBEIEAgLCAsICwgLCA4HDgkOBxEMEQwRDBEMEQwRDBUOEAkPCQ8JDwkHEQoWEBELCgIHEQYREwoSExEHEA4MDw8PEREIEBAUEA4REQ0NDhAREBERCBAMCQsGCgwLCgsKCQsLBgsKCwoKCwwJDAgLDQoODwYKCwoPDxENDwsICAkUFRIPDxERDg4NDw8TCxERDw8UERERDQ8ODxEQEQ8WFhEVDg8XEAoMCwkMCg8JDAwKDBAMCwwLCQsJDwoMCxERDA8KCRELCgsKCQgGBgYQEAwLCgwNChUOFQ4VDgkVCgUHBw4IBxQKDxAVChYQEBEREREVChUKFQoKERAFERERERIRDQ0VFRUVFRUVFRUVFRAVFRUVFRUVEBQODhQNDQ0NEBAVFRESEREVFRUVCw8LDAsSDBEKDQkKEw0QBxEMDBEQDhINEQ8OCxAKBwYOEw0ODQ0PCAgLBQgLBh0ZFBcRCRgTDxAKCAYRDBELEQwRCxELEQwKEAoRChYQEQsRChALEQwRCwsJBR0ZFBEKCgsLCwoKDA0KCg0KCg0LBw0LDAsLCwsMBwYFBwgHCRASEAwOCwsPDQsICQkICAgLCAkJCAoIBwwLCwsQCwsKCQgICAkLCgsODAYLCQ4ICBIPEQsKDQoKBAYGCQgOCQMGBAQEBgYFBQYGBgYKCgoKCgoKBgYFBQYGBgcFCQUGCQcICAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFBgYLDQ8RDw4RDA8LFRQOCwgNCQoHEg0MCRAMDAsKBhAMEQsZEBgQHRUNCxEQEQsQDBALDgkVDw0KDQoVEAsJEA0PCw8LEg0RDRUPFA8RCw8KDgsQDBEMEQ0SDBANDwsNDA8LDwsHFA8OCxEMDwsAAAAAAAAAAAAAAAAAAQcABQAABAAMCwcKCwYFCwwHCgwLDAwFBgsKCwwKCwsKDAsLDA0DBgcOJAsGBwsHBxISBQUHBwYHBwcHBwQHBQUHBQYGBwYHBwcHBwQHBQUPDhEQFxIOCxUVFRUKCgQFBwgMCwkMCgkJCQkPCQgMDQgMCQ0NCQkKCgsLCAsMDwkICQsOCQwKDAwMDAwMDAwREREREREQEQkJCgkJCRISFRUVFAsLCwsLCwsLFBQXFxcXFxcGBgYHBgYGBwsLDQ4ODQ0NCwsLCwsLEhMWFhUVCgoKCgoKChMWFhYODw8ODg4ODhISFhYVFBQUDQwKCQsLCAYLCwoKDg8NDAwNDAwMDBAQERIRERERCwsLCwsLCwsVFBgXGBgXFw8PDw8ODw8PEhIWFRUUExQMDAwNDQwMEBERERAFBgQHBwsLCwsLFBMWFxEIBwcHBwgIBwcICAwNCAcHCgoKCgsLCgoQDxQVDwcHBQ8PDw4PFRMVExAHAxAKEQoWEA8KDQoNChQPCwkLCBEMEQwRCw4JDgkPCg8KDwoPCxUPDQsNDQoMCgoPDgoIDg0KCwwMDA4LDA4MCwsODwsNCwoLCw0NDA4GBgMJBggIDwoLCwoKCQoPDQoHDw0KCwoKCg0HCwgKCA8IDQsKDwoKCA4LCg0MBRIREhIWEBIREAsUEhUMDRETDRITDxENDBITEAsMDAsPEgwODBIQCw0LEBIJAAAABA8TCgoOEBEPDAwMDRMTExMPDw0ODQ0NDg8PDAwMDA0MDQwNDQ0NEA0ODg0JCQ8SEQwPDQ4MAAkFBgUAAAAAAAAAAAcHBQUAEgABAAAPDw0ODAwPDREPAQEEBwoJCQcJCQgMCQkIAAwKDw4PEA4PDg8JDQwNDAwMDAoGCgsGBgwGCgwKCwYLCwwLCwoMCwYKDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwQExcIDBATFwgMEBMXBwkNEhUKEAwTEQoMCgwMCg4LCQsKDgoODwkODhENDhMTDhIODhIWFA8SFBAQDxMRDhESDQoNCw4NCw0OCg4PCg4KCg0MDg4MDg0MDg0NDQ8NDQ0QChAKDgoPCggGCAYRCxELEAgQCRELEQsQCQ4LDgsOCw8JEAsRCxELEQsQCw4KDgkOCQ4JDgoNCBEKEQsRCxELEQsRCwgGCAcQDBALEAsOBQ4GDgYOBhQRExEUERALEAsQCxALEAsRCxELEAsNDAwLEAgPCBAIEAgLCAsICwkLCAsIDgcNBg0GDQcRCxELEQsRCxELEAsQChQOFA8QChAKEAoPCQ8JDwkLBw8KDAgQChEKEAwRDBEMEQoRChEKEQoRChEKEAoPCg4KDgoPDQ4LDwwOCg4KCAYIBhELEAsRDhANEQ0RCxELEg0SDRENEg0SDRELEAsTDRMNEw0TDRMNEAoPChAKDAoICgoAAAAACwsLCw0NDQsLCAsLCwsJBgYGBwgHCQgJCQcGCAUFAwUEBQUFBQYGDA0HBwwNBwcMDQ8OCwsPDgsGCw8OCwsICAgICAgICA4OFBQODhQUEhIYGBISChgKGBAJCQkJCQkODg4JCQkJCQkJCQkQEBALCAgICBAQEAgICxEREBAREQwJCQoMCQkKCQkPDgkJCwsKCwwMBgYLCgsKCQkGBgwLCwgJCAgIBwcLDAgJCwwIBgYLDAgICQoKCgoLCQoAAAAAAAAAAAUFBQUFBQUFBQ0NDQsLCwgICAgUFBgYEREKCg4LDAoJCwgIDAgLDAAFBQUFBwgIDA0NDQ0NDQ0NCwsLCwsLCwgICAgICAgICAgICAgICAgICBQUFBgYEQoODg4ODg4LCw0VDQwMDA0NDQ0NDQoKCgsLCwsLCAcGBggICAgICAgIDA0MDAwNDQYLBgYHCAcJCAkJBwUEDQwGBw0MBgcNDAYHDQwGBw0MBgcNDAYHDg8JCQ4PCQkLCw8OCwsPDgsLDw4LCw8OCAgICAgICAgICAgIDQ4KCw0OCgsNDgoLDQ4KCwsMCwwGBggJCAkLDgsMCwsNCg0KDAwKCwgICAgICAkICAgICAgMCwcHBwcFBQUFBQUFBQUFBQUFBQgFBQUFCAwQBQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATEREQERERCwsPEg8LCwsLCwgICAgICAgICAgICAgICAgICBIVDgsKCwsKCwoKCwoKCgoKCgoKCgsSCgsKCgoKCgoKCgoKCgwKCgoKCgoKCgoKDQwKChAQEBAQEBAQEBALCwsLCwsLCw0LDQkJCQkJDQkLCwsLDQwODgsLCwsLCwwLDxYRCwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgsKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoREgoKCAgNCgoKCgoKCgoKDQsLCwoKCwoKChEPCgoWEAoNCwsLCwwLCwsLDgsMCwsLFAcGBg4UBwcHCwAHEAoODw0PDxATEAwRDgoSDw4HBwgNDQcHDQcHDQwNDQ4MDQ4MEhIICA4ICAgODg4PDhENERQSEggJDggICA4ODg8ODg4OEBMWExYUFg8MDAwSEgwMEgwMEhESDg0PDw8PCQ8NEBMTDQ8PDQ8RDhIMDBMMDBISDAwSDAwSEhIUFBIQEBAQDg4ODhISEhIQEhAWEBAODg4ODA4KEBISEBAQEA4PDg4NDQ0NEhEPERAQDxENDQ0NERAQEBAPEBAKEBAQDhAPFBAPDhIQEA0RExMTExAQDw8ODg0QEBAVFRAVFRAQFhYVFRUaGhUaGhUVFRsbFRsaDg8ODg4NDg0NCgsQDg4MCQkJCQgNDgkKDgcKCgoQEAoKEAoKEA8QEBEQEBALEREKChAKCgoRDxARDQ8ODw4MDAYGDQYGBg0LDRIPERARBggMCAwJDBcLCwsSEgsLEgsLEhASEhEPDw4PCA0MDRISDQ0NDA0MCgwMDhYMDBERDAwRDAwRERETEhESEhISERERERISEBAODw4SEhIQEBAQDhAIDQ8PDQ0NDRAQEBAPDw4PEBAPDw4PDg8NDQ0NDw8ODg8PDw4KDxERDw8PEA8PDRMPDw0TEw4NDQ8RDxEPERAPDw8UFA8UFA8PFBQPDw8WFg8WFhAQEBYWEBYWEhISEhIQEBAQDg8UFBMICgoKCggNDBAFDRoaBgYPERASEBIKEBYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFgsWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLFhYWFhYWCAsMDg4MDA8JDQ8NDhIRDQ0MDxESDAwMDQsODg4MDA0NDQ0MCwwNDQoMDw4NDQ0MCgsACgoAAAAAAAAADwcMCQkICgkAAAAAAAAAAA8MDA8NDg4LEQ4PDh8WFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhMTFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYLBgYGBgYGBgYGBgYGBgYGBgYFBgUGBgYGBgYGBgsLCwsLCxARChILCwsLCwsLCw4LCwwLCwsKCgsLCwgICwsLCwgICAsLCAsLCwsLCwsLCwsLCwgICwsLCwsLCwsTFA4LCwsLCwsLCwsLCwsGBgYGBgYHBgYGBgYGBgYGBgYGBQUGBQYGBQUEBQUGBgUFBAYFBQYGBQUEBgUFBQUGBQULCwsLCwsLCwsOCwsMCwsLCxASEA4LBQUFBgYFBAYFBgYFDw8LCwsPDhIPDQsWEhIIBgYGBgYGBgYGBgYGBgYGERERERESEhISEhMGEQYGCAgHBgYGBgYGBgoMEQkGCxERERERERERERERERERERQRERYRERERERERFBEXFRERCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsOCwsLCwwLCwsLEBEPFBQPDgsLCwwTEAoKCgoKCgsLCwsLEhIPEhMRDw8SDw8PDw8PEg0NCQ0MCwkJDQkJCQkJCQkJDQ0JDQ4MEwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsNFQsKCgsLCxQLCAwICAgRCAgICAgIEwsPBwwHBwcHCgoOCg0KCgoQDQ4IDAgICgoKCgoKCgoMCgoKCwsLFBQGDAoKDQoGBgYGBgYGBgYGBgYGBgYGCwsLCwsODg0NDQ0NDQ0NDQ0NDQ0NBgcICAsLAAUFAAIFAAUABQUFAAUABQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAUADQwHBwsLDw4LCw8OCAgICAgICAgICAgICAgICBQUDg4KCQwJDAwKCwwMCgsNDgoLDQ4KCwoLBgYJCgsMBgYICAgIDAsHBwwLBwcNDQcHDQ0KCwoLCwwLBQgFAAgGDQwPCAkIBgUIBwkICQgICAgIBwYHBwUGBgUJBgYGBwQECAkJBQgFBwcFBAQEBAQGBgYFBQUFBQQJCQsJCQgICQoHBQUJCQgICAgHBwgICgoJCAgHCAcIBwcGBgYFBggKCwwHBwcHBwkHBwcJCAgHBwcGCQUGBQgFBQUFBQgHBwgICQcFBAQKDgQFBQgICAgIBwcHBwYHCgkKBwsMCggHCgoRDhQOEwwNDQ0PDQ8ODhQMDhMKDg4KDg4KDQwQDwwPDwwNDQ0NDw0NDA4NDQ0ODQ4NDwsQDQwPCxEQEwwOEggLCQwJCw4MDhAPDg8NEAwMERIMEAwMDAsQEAsQCwsREg0NDw8UFA8TDw8VFhAREw8TDg4OFA8LEBAMDwoMCg8PCg4OCgwTExMTExMTDwkLDwwPDg0NERAMEhARDREQDBIRDxEQDxEQEBEJDg4ODA0QEQsNDwwPDw4NDQ0QFRYRFA4PFBcWFhQZFBYWCw8QCg4NCg4LDw8KDg4KDgkOCwgLCQsNDg4NDw0NDg4ODhEOEBEUDhAQCwQICAUICgQLCgkJCAsKCgwJCAwNDAoNDREJCQ4QFxMUERQRDw8SDxEWExASHwwSDxQREhkTEBAWFB4eHhMTDw8QEgAAAAAAAAAAAAAAFRAVEAAVEBUOAAAADQ8JBwkCCgYHDA0KDwwMCQkIDAgMCAoKCgoODgoMDAwFDAgMBA0NDAgMDBEKCwQMDAkKCwgMCw8PEQUJCg0PDQ8UDRQRDhEEDAoRDhINDwwMDQ0MCAwHBgULDw4QChoaExEREBEREREREREREBEQERAREBEXERAQEBAQEREQEBAQEBEQEBERERERERARERMRERYLFhYWFhYWFhYWFhYWAQEODg4OEQ4ODg4RDxMVBQ8SDw8PDw8SDxISEg8SExEPDxIPDw8PDw8PDxISDxITER8ZCxAQEBATEBIQEBAQEBEQEBIWFxMfGB0bFhERDw8PEA8PDw8PDw8PDw8QDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8RDw8PDw8PDw8PFBYPDw8PCwsLDQ0RCwsLCxERERURERERERERExERERERERERERYXFxQSESAZGxcLCxERFRUREhERFxERFRERESEhGhoLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsLCwkKCQkJCQkJCQkJCwsLCwsLCQsQEBAQEBAQEBATEBAREBAQEBQWFhMXFxMTEBAQExMXFBEQIBsYGBgYCw4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4PDg8WDg4XCwsUFBQUFBQUFBQUFBQUFBQXFBQXFBQUFBQUFBcUGhgUFBQQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAUEhAQEBAQEBAQFhcUFxcUEBAQEBEdHQsODg4ODhERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETFBQYERERCxEREREREREREhISEhISEhISEhISDQ0NDQ0NDRANDQ0NDRIQEA0QEhURDw0UFA8LCxERERERERETERELEwsQEBAQEBAQEBAQEBAQEBAQERAQEREQEBAREBAQEBATFBcSEAsLDgsLCxQLCwsQEQsLCwsLCwsLDAsLCw4OCwsLCwsLCwsLCxARCwsUFA8LCxwXDw0SDg4ODg0ODg4OEQ4ODg4ODg4OExQREQ4RFRIQDx8ZFBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERgUERELCwsLCwsLEBAQEBAQEBAQEBAQEBAQEBAVEBAACxUVFRUVFRsaCwsLCxAQEBAQEBAQFBATEBAQFhQUFQsLCxAQEBAQEBAQEBAQEBAVFhAYEBARDw8PDw8PDw8PDxIPDw8PDw8TEQ8PIBkLCwsLCAgICAgICAgICAgIFxcXEBUQCwsRERIVDgsKCwsKCwoKCwoKCgoKCgoKCgsSCgsKCgoKCgoKCgoKCgwKCgoKCgoKCgoKDQwKCgsLEBAQEBAQEBAQEA8PCwsLCwsLCwsLCwsNCw8RCwkNCQkJCQkNCQ0NDQkNDAsJCQ0JCQkJCQkJCQ0NCQ0ODBMTCwsLDAsNDA4OCwsLCwsLDAsQEg8WERUWEQsLCwsKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoREgoKCgsLCwsICA0LCwsLCgoKEAoKCgoKCgoNDAsLCgoLCgoKEBIRDwoKFhAWEAoNCwsLDAsLCwsOCwsMCwsLFBQUCwYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYHBgYGBgYGBgYGBgYGCgUJBQUFCwUFBgUGBAUGBQYGBgYLCwsLCwsLCwsOCwsMCwsLCxASEA4SEg8PCwsLDw4SDw0LFhYSEhITCQgGBgYGBgYGBgYGBgYGBgYGBgYICAcGBgYGBgYGCgwRCQYLERERERERERERERERERERFBERFhEREREREREUERcVERERCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDgsLCwsMCwsLCxARDxQUDw4LCwsMExALCgoKCgoLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDhAQEwsLCwsLCwsLCwsLCxISEhISEhISEhISEgsLCwsLCwsOCwsLCwsSDw8LDxITDw0LEhIOCwsLCwsLCwsLDwsLDAgICAgICAgICAgICAgICAgICAgMCAgICAgICAgICA4PEg0ICAwICAgRCAgIDQ4ICAgICAgICAsICAgMDAgICAgICAgICAgNDggIEhIMCAgTEwcMBwcHBwcHCwcHCgcHBwgHBwcHDA4KCgcKEAwJChERDgwMDAwMDAsMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDAwMDBINDAsLCwsKCgoKCgoKCgoKCgoKCgoKCg8ODg4ODhQKCgoKCgoKCg4KDQoKChANDg8KCgoKCgoKCgoKCgoPEAoSCgkJCQkJCQkJCwkNCQkJCQkJDgsJCRQUDgsGBgYGBgYGBgYGBgYGBg8KDwoIBwsLCQsICAsKCgoKCgoKCgoMCgoKCgkJCgkNDQ0LCAkLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCxEREREREBEREhEREBEREBERCwsOEgsLDAwMEAwRCwsPCwsPDw8PDw8SFA8PDwsPERERCwsRCwsICAgICAsOCw0ICw4LBwgICAgICAgIEBAUFBAQEAsLDgsLERERExEREQsLEQsLDw0LCwsLCwsLCwsLCw0NDQsOCwsQEBAQExMXFhATEBMQEBALCwsRCxAQCxERERERCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMDAwMDAwMDAwMDAwMDAwMBQUFCw8FBQoKCg4KDgUFCwUFCgoKCgoKCgoKCgoFCQsLBQUFCwUFBgYGBgYGBgYGBgYHBwUFBgUFBgYHBQsKCwsKCgoFBQoFBQUFBQUFBQUFBQwFBQUFBQUJBQUFBQUFBQUMDAwFCAUFCwsLCwsLCwsLCwUFBQsLBQUFDQUKCgUODw8FDwwFBQUFDQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCwsLCwsLCwsLCxARCwsLDw8PCwsLCwsLERELCwsREQsLCw8PCwsLFRULCwsPDwsLCxcXCwsLEBALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwoLCwsKCgoLCwsLCwsMDAsLCwsLCwsLCQkLCwsPDwsLCwkJCwsLERELCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDA0LDQ0MCAwNBwYNBxQNDQ0NCQkIDQ0LEAsLCwsLCwsLCwsLCgkLCwsLDAsMCwgMCwsLCwkJCwsLCwsLCwsLCwwLCwgKCgwMCQ4LCwgKCwsHCAcFBQsLCwsLCwgLCAgICwsLCwsHBwcLCwsLCwsLCwcHBwULBQUFCwwHCAUICwsICAkHCwsLBwsLCwsLCwsLCwsLCwsLCwsGDAsLCwoLCwsLCwoNCwoLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLBwcLAAYHBwoLCwsLCwsLCxMQDg8QDw4OEA0SCgwPDhQRCg8LCwsLCwsLCwsLCwsLHBAaERcQFw8cExwQHBMcEBcPHBAaERcQFw8XDxwTHBAKCwsLBAULCwsLAAAAAAsLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLCwsLAAsLCwsLCwsLCwsLAAAAAAAACwsLCwsLCwsLCwAACwsLCwsLCwsLCwsLCwsAAAsLCwsLCwsLCwsLCwsLAAALCwsLCwsLCwsLCwsLCwAACwsLCwsLCwsLCwsLCwsAAAALCwsLCwsLCwsLCwsLAAAAAAAACwsLCwsLCwsLCwAAAAAAAAsLCwsLCwsLCwsAAAsLCwsLCwsLCwsLCwsLAAAAAAsLCwsLCwsLCwsLCwAAAAAAAAAADwsLCwsLCwsAAAAAAAAAAAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLAAsLCwsLCwsLCwsLCwsAAAALCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDQ0NDQ0NDQ0NDQ0NDQ0MDAwMCwsLCwsLCwsLCBELCBQPCQ8OCAYLEgkJDAwKCggMDQsLDBQKCwsLDAsKCwsPCwsLCwsLCxQLCwsLDQsLCwoLCwsKCAgRDhALDggICAgNCwsLCwgNEhERDhUVCQkQCwYPExMFFRQMDRgPDxEODg4NCQ8NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAsLCA4HCxELCwsPCwkLChEPCgsLEQsLERELEQsLEAsKEAkHCwwNCxERCgsLCgoKCgoKChAQEAsLCwsQEBAQEAwLCAgICAgICAgICAsRCw8PDw8PDwsPDw8PDhAODgoLCgwJCQkODg4ODg4ODg4OCQkJCQkJCQkJCQoKCw0XCggOCwgKCAYKCQAAAAAAAAAAAAALCgwLEg8KEQwQDw0MDwkIAAAACgsLCBQYCgUJBg8QDwkOCAgICgoODAgLBw4OCAkKCwgJCQkJBgcIBwcKCg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEBELCw4MAA8VCQ8QDg8SFRMODgoKBhAKCg0GCgkOEQwOCg8MEQwUEA4SEREODQkTEBUQDwoODQgLCwsPEAoKDAwKCgYGCwkNCwwKCwkLEgsLCwkLCwkMDA8NCw4KCAoPCAsLCQwKCw8KCgwKCgwMBQYLCQ0LCwwLCQsJDA4HBwgLCAgHBwcHBwQHDAgIBwgHCAUICAsGCggHCAkHBAUIBggHCAkHEhwQCxcXFxcREA8PDwgcExoQCwwQCwsKCAUQCwwIDAkVEA4LEAwOCg4KEQwFBA4LDwsRDA4KDAkRDA4KCwkOCxAMEQ0TDhEMFA8WEQ0KEQwLCBEMEQwWEQwJDgoVDwwJDQoOCg4KDwsLCAwJDw0YEQ4WBgQNChAQCxALDAwIDxUVDwgLCAsPDgoQCwsRERQRFAwSEBAUDxEJFBgPCw4KERMUEgwSEBEQEhAPEQ8QGhgcEg8MDA8MDwkOCwsPDxQLDQcPEgsICwgNDg8NCQ4MDQwNDAsMCwwTEhUNCxEMEw4TDxINEAwHBQ8LDgoNDQ0TDQ8JDRILCg8ODw8LChIQDgsKCwsPDw8LCg8SCgwLDhAAABcmDAUICAsSBQcFBgsLCwsLCwsLCwsGBhISEgsWEQ8QEg8OEhIIChAOFRESDRIRDA4SERYRERAHBgcWCwsLDAoMCwcLDAYGCwYSDAwMDAgIBwwKDwoKCgsLCxIHCAoNCgsLDgYLEg0KBxILDAsICwcLCxERERERERcQDw8PDwgICAgREhISEhISEhISEgwLCwsLCwsRCgsLCwsGBgYGDAwMDAwMEgwMDAwMCgYYExELCwsLCwsLCwsMCxYFBQUKCgoLCw0WHgcHBBIRCw4REA4SCxISEhILDA0FBxEHFQsEEgsHBwcRERESEhENDAoMEQsRCxELEAoQChAKEAoSDxIMDwsPCw8LDwsPCxILEgsSCxILEgwSDAgGCAYIBggGCBEMCgUOCwsPBg8GDwkPCQ8GEQwRDBEMDhEMEgwSDBIMEQgRCREIDAgMCAwIDAgPBw4JDgcSDBIMEgwSDBIMEgwWDxEKEAoQChAKBxILFxESDAsCBxEGERQLExQSBxEPDQ8PEBISCBERFREOEhENDg4RERESEQkRDQoMBwoNDAsMCwoMDAcMCgwKCwwMCQwJCw4LDw8HCwwLDw8SDRAMCAgKFRYTEBASEQ8PDRAPFAwSEg8QFRISEg0QDg8RERIQFxcSFg4QGBALDAsKDAsPCQwNCwwQDAwMDAoMChALDAwREQ0QCwkRCwsMCwkIBgYGEREMCwsMDgoWDxYPFg8KFgoFBwcOCAcVCxAQFgsXERERERERFgsWCxYLCxIRBRISEhITEg0NFhYWFhYWFhYWFhYQFhYWFhYWFhAVDw8VDQ0NDRERFhYSExISFhYWFgwQDAwMEw0RCg4JCxQOEQcRDAwSEQ8TDRIPDwwQCwcHDxQNDw0ODwgJDAUICwYfGhUYEgkZFBARCwgGEQwSDBIMEgwSDBIMCxELEQsXERILEgsRDBIMEgwMCgUfGhUSCwsMDAsLCwwOCwsNCwsNCwcODAwLCwwMDAgHBgcJBwoRExENDgsMEA0MCAkJCQkJCwkJCQkKCAcNDAsMEAsMCgoJCQkJDAoLDwwGCwoOCQkSEBILCw0KCgQHBwkJDwoDBgUFBQYGBgYHBwcHCwsLCwsLCwYGBgYHBwcIBQoFBwoICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYGDA0QERAPEgwPCxYVDgsIDgoKBxMODQoRDAwLCgYRDBIMGhEZER8WDgwSEBEMEQwQDA8JFhANCg4KFhEMCRENEAwQDBMNEg4WEBUQEgsQCg8LEQ0SDBINEg0QDRAMDg0PCxALBxUQDgsSDA8LAQEAAQEBAQEBAQEBAQEHAQUAAQQBDAsHCwwGBgsMBwsMCwwMBQYMCwsNCgsMCw0LDA0OAwYHDyYLBgcLCAcTEwUFBwcGBwcHBwcEBwUFBwUGBgcGBwcHBwcEBwUFEA8SERgTDgwWFhYWCgsEBQgIDQwJDQoKCgoJEAkIDA4JDAoODQkKCgsLDAgMDBAJCQkMDgkNCg0NDQ0NDQ0NERISEhEREREKCgoKCgoSEhYWFhULCwsLCwsLCxUVGBkYGBgYBwYHBwYGBwgLCw4ODw4NDQwMDAwMDBMUFxcWFgsLCwsLCwoUFxcXDw8PDw8PDw8TExcXFhUVFQ0NCgoLCwkHDAwLCw8PDQ0NDQ0NDQ0RERISEhISEgsLCwsLCwsLFhUZGBkZGBgPDw8PDw8PDxITFhYWFRQVDQ0NDQ0NDREREhERBgYECAcLDAsLCxUUFxgSCAgIBwcICAcICQgNDQgHBwsLCwsMDAsLEBAVFhAHCAYPDw8PDxYUFhQRBwMRCxIKFxEPCw4LDgoVEAsJDAgSDBIMEQwOCg4KDwsQCw8LEAwWEA0MDg4LDQsLEA8LCQ4OCgsNDQ0ODAwODAwMDg8MDgwLDAwNDg0OBgYDCQYJCBALDAwKCgoLDw0KBw8OCwsLCgsOBwsICwgQCA4LCw8LCggPDAsODQUTEhMTFxATERELFBIWDA4SEw4TExASDQ0TFBEMDQwLEBMNDw0TEQwOCxETCgEAAAQQFAsKDhESEA0NDQ0UFBQUEA8NDw4ODQ8QDwwMDQ0ODQ4NDg0NDRAODw8OCgoQEhINEA0PDQAJBQcFAAAAAAAAAAAHBwUFABMAAQEAEA8NDw0NDw4RDwEBBAcKCQkHCgoIDQkJCAENCxAPEBAPEA8QCQ0NDQ0MDAwLBwoLBgYMBwoMCwwGDAsMCwsLDQsGCwwMDAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQkNEBQYCQ0QFBgJDRAUGAcKDhMWChANFBELDAsMDAoPCwoLCw4KDxAJDw8RDg8UFA8TDw8TFxUQExQREA8UEg4REw4LDQsODgsODwoPDwoPCgoNDQ8PDQ8NDQ8ODg4QDg4NEQsRCw8LDwsIBggGEQwRDBAJEAkSDBEMEQoODA4MDwwQChELEQsRCxELEQsPCw8KDwoPCg8KDggSCxIMEgwSDBIMEgwIBggHEQwRDBEMDwYPBg4GDgYVEhQSFRIRDBEMEQwRDBEMEQwRDBEMDQwNDBAJEAgQCREJDAgMCAwJDAgMCA4HDgcOBw4HEQsRCxELEgsRCxALEAsVDxUPEQsRChAKDwoQCg8KDAcPCg0JEQsRCxENEQ0RDBELEQsRCxELEQsRCxEKDwoPCg8LEA4PDA8NDwsPCggGCAYRDBEMEQ4RDRENEQwSDBMNEw0SDRMNEw0RCxELFA0UDRQNFA0UDRALEAsRCg0LCAsLAAAAAAwLCwsNDQ0MDAkMDAwMCQYGBggJCAkICQkIBggFBQMFBQUFBQUGBg0NBwcNDQcHDQ0PDwsLDw8LBgsPDwsLCAkICQgJCAkODxUUDg8VFBMTGRkTEwsZCxkQCgoKCgoKDw8PCgoKCgoKCgoKEBAQDAgICAgQEBAICQwSEhAQEhIMCQkLDAkJCwkKEA8JCgwLCgsNDQYGCwsMCwkKBgYMDAwICQgJCQcHDAwICQwMCAcGDAwJCQoLCwsLCwoLAAAAAAAAAAAFBQYFBQUFBQUNDQ0LCwsICAgIFBQZGRISCwsPCw0LCgwICQwIDAwABQUFBQcJCQwNDQ0NDQ0NDQsLCwsLCwsICAgICAgICAgICAgICAgICAgUFBQZGRILDw8PDw8PCwsOFQ4NDQ0ODg4ODg4LCwsMDAwMDAgHBgYJCQkJCQkJCQwODAwMDQ0GCwYGCAkHCQkJCQgFBQ0NBgcNDQYHDQ0GBw0NBgcNDQYHDQ0GBw8QCQoPEAkKCwsPDwsLDw8LCw8PCwsPDwgJCAkICQgJCAkICQ4OCgsODgoLDg4KCw4OCgsMDAwMBgYICQgKCw4MDQwMDQoNCg0NCgsJCQkJCQkJCQkJCQkJDAwHBwcHBQUFBQUFBQUFBQUFBQUIBQUFBQkMEAUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBESEREREQwMEBMQDAwMDAwICAgICAgICAgICAgICAgICAgTFg8LCwsLCwwLCwsLCwsLCwsLCwsLEwsLCwsLCwsLCwsLCwsMCwsLCwsLCwsLCw0NCwsREBAQEBAQEBAQCwsLCwsMDAwNCw0KCgoKCg0KDAwMDA0NDw4MDAwMDAwNDA8XEgwLCwsLCwsLCwsLCwsLCwsLCgoKCgsKCwoKCgoKCgoKCgoKCgoKCgoKCgoLCgsKCgoKCgoKCgoLCgoKCgoKCgoKCgoKCgoKCgoKCgsKCgoKEhMKCwgIDQsLCwsLCwsLCw4MCwsLCwsLCwsSDwsLFxAKDgwMDAwNDAwMDA8MDQwMDBUHBgYPFQcHBwwABxEKDhAOEA8QFBENEg4KEw8PCAgIDQ0ICA0ICA0NDQ4ODQ4PDRMTCAgOCAgIDw4OEA4RDhEUExIJCg8JCQkPDg8QDg4PDhEUFxQXFRcPDQ0NExMNDRMNDRMSEw4OEBAQEAoQDhAUFA4QDw4QEg4TDAwUDA0TEwwMEwwNExITFRUTEREREQ8PDg8TExMTERMRFxAQDg8ODw0OCxETEhEREBEPEA8PDQ4NDhMSEBIREQ8SDg4NDhEQERAQDxERChAQEA8QEBUQEA8TERAOERQUFBQQEBAQDg8OERERFhYRFhYRERcXFRUVGxsVGxsVFRUcHBUcGw8QDw8PDg4NDQoMEQ4PDQkJCQoIDQ4KCg4HCwsLERELCxELCxEQERASEREQDBESCwsRCwsLERAREg4QDxAODA0GBg4GBgYODA0TEBIREgYJDQkNCg0YCwsLExMLCxMLCxMRExMSEA8PDwgODQ4TEw0ODQ0ODQsNDA8XDAwSEgwMEQwMEhISExMRExMTExESEhITExERDxAPExMTEREREQ8RCA0PDw0ODQ4RERERDxAPEBERDxAPEA8QDQ4ODg8QDw8QDxAPChASEhAQEBEQEA4UEBAOFBMPDQ4QEhASEBIRDw8PFRUPFRUPDxUVEBAQFxcQFxcREREXFxEXFxITEhISEREREQ8QFRUUCAoKCgoIDgwRBQ4bGwcHDxERExETCxEXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcLFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcXFxcXFwgMDQ4PDAwPCQ0PDg8TEg0NDBASEwwMDQ4MDw4ODAwODg0NDAsNDQ0KDBAPDg4NDAoLAAoKAAAAAAAAAA8HDQkJCQoJAAAAAAAAAAAQDAwQDQ4ODBIOEA4gFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcUFBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXDAYGBgYGBgYGBgYGBgYGBgYGBQYFBwcGBgYGBwYMDAwMDAwQEgoTDAsMDAwMDAwPDAwMDAwMCgoMDAwICAwMDAwICAgMDAgMDAwMDAwMDAwMDAwICAwMDAwMDAwMExUPDAwMDAwMDAwMDAwMBgYHBgcGBwYGBgcGBgYGBgYGBgUFBgUHBgUFBAUFBwYFBQQGBQUHBgUFBAYFBQUFBgUFDAsMDAwMDAwMDwwMDAwMDAwRExEODAUFBQYGBQQGBQcGBQ8PDAsMEA8TEA4MFxMTCQYGBgYGBgYGBgYGBgYGBhISEhISExMSExMTBhIGBgkJBwYGBgYGBgYLDBEKBgwSEhISEhISEhISEhISEhIVEhIXEhISEhISEhUSGRYSEgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDwwMDAwNDAwMDBASEBUVEA4MDAwMFBEKCwoKCgoLCwsLCxMTEBMUEhAQExAQEBAQEBIODQoNDAwKCg0KCgoKCgoKCg4NCg0ODBQMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhYMCgoMDAwVDAgMCAgIEggICAgICBQMEAcMBwcHBwoKDgoOCwoKEA4OCAwICAoKCgoKCgoKDAoKCgwMDBUVBw0LCw0KBgcHBwcHBwcHBwcHBwcHBwsLCwsMDw8ODg4ODg4ODg4ODg4ODgYHCAgLCwAFBQACBQAFAAUFBQAFAAUFAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAA0NBwcLCw8PCwsPDwgJCAkICAgJCAkICQgJCAkUFQ4PCwkMCQ0NCgsNDQoLDg4KCw4OCgsLCwYGCgsMDAYGCQkJCQwMBwcMDAcHDQ0HBw4OCgsLCwwMDAUIBQEJBg0MEAkJCQYGCQcKCAkICAgJCAcGBwgGBgYFCQcGBwcEBAkKCgUJBQcHBgQEBAQEBgYGBQUFBgUECQkMCQkJCQkKBwYFCQkICQgICAgICQoKCQgICAgHCAcHBgYGBQYJCwwNBwgICAcKCAcHCQkJCAcHBgoFBwUIBQUGBQYICAgJCQkHBQQECw4EBQYICQkJCQcHBwcGCAoJCgcLDAoJBwoKEg8UDhQNDg4OEA4QDg8UDQ4UCg8PCg4PCg4NEBANDxANDg4ODhAODg0PDg4ODg4PDg8MEA4NDwsSERQNDhMIDAoNCgwODQ8RDw4PDhEMDRETDRANDQ0MEREMEQwMEhIODhAQFRUQFBAQFhcREhQQEw8PDxUPDBEQDRALDQsQDwsPDgsNFBQUFBQUFBAKCxANDw8ODRIQDRIREQ0SEA0SERASEA8SERARCg8PDwwOERILDg8MEA8PDQ4OERYXERUPEBQYFxcVGhUXFwsPEAsODQsPCxAQCg4OCg8KDgwJCwoMDQ4ODhAODg8PDw8SDxASFQ8QEAwECAgGCAsEDAoJCgkLCgsNCgkNDQ0KDQ4RCQkOEBgUFRIVEhAPExASFxQREyAMExAVEhMbFBAQFxUgICAUFA8PERMAAAAAAAAAAAAAABYRFhEAFhEWDgAAAA0QCQcJAgoHBw0OChAMDAkJCAwIDQgKCwsLDg8LDA0NBg0IDAQNDg0IDQwSCwwEDQ0JCgsIDQsPDxIFCgsOEA4QFQ0VEg8SBA0KEg8SDhAMDA4ODQgNCAYGDA8PEQsbGxQREhERERERERIRERERERERERERGBEREREREREREREREREREREREREREREREREUEREXDBcXFxcXFxcXFxcXFwEBDw8PDxEODw8PEhAUFgUQExAQEBAQExASExMQExQSEBATEBAQEBAQEBATExATFBEgGwwRERERFBETERERERERERETFxgUIRkfHBcSEg8PDxEPDw8PDw8PDw8PEQ8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PEg8PDw8PDw8PDxUXEA8PEAwMDA4OEgwMDAwSEhIWEhISEhISEhQSEhISEhISEhIXGBgVExIhGhwYDAwSEhYWEhMSEhgSEhYSEhIjIxsbDAkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMDAwKCwoKCgoKCgoKCgwMDAwMDAoMERERERERERERExEREhEREREVFxcUGBgTExERERMUGBUSESEcGRkZGQwPDw8PDg8PDw8PDw8PDg4ODw8ODg4PDg4PDw4PDw8QFw8OGQwMFRUVFRUVFRUVFRUVFRUVGBUVGBUVFRUVFRUZFRwZFRUVERERERERERERERERERERERERERERERERFRMRERERERERERcZFRgYFRERERERHh4MDw8PDw8SEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISExUVGRISEgwSEhISEhISEhMTExMTExMTExMTEw0NDQ0NDQ0RDQ0NDQ0TERENERMWEg8NFRUPDAwSEhISEhISFBISDBQMERERERERERERERERERERERERERESERERERERERERFBUYExEMDA8LCwsVCwsLEBILCwsLCwsLCw0LCwsPDwwMDAwMDAwMDAwQEgwMFRUQDAweGBAOEw4ODg4ODg4ODhIODg4ODg4ODhMVEhIOEhYTERAgGhUSEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIZFRISDAwMDAwMDBERERERERERERERERERERERFRERAAwWFhYWFhYcHAwMDAwRERERERERERURFBERERcVFRYMDAwRERERERERERERERERFhcRGREREhAQEBAQEBAQEBATEBAQEBAQFBIQECEbDAwMDAgICAgICAgICAgICBgYGBEWEQwMEhITFg8LCwsLCwwLCwsLCwsLCwsLCwsLEwsLCwsLCwsLCwsLCwsMCwsLCwsLCwsLCw0NCwsMDBEQEBAQEBAQEBAQEAwMCwsLCwsMDAwMDQsPEQwKDQoKCgoKDQoODg0KDQwMCgoNCgoKCgoKCgoODQoNDgwUFAwMDAwMDQ0PDgwMDAwMDA0MERMPFxIWFxIMDAwMCwsLCwsLCwsLCwsLCwsLCwoKCgoLCgsKCgoKCgoKCgoKCgoKCgoKCgoKCgsKCwoKCgoKCgoKCgsKCgoKCgoKCgoKCgoKCgoKCgoKCgsKCgoKEhMKCwoMDAwMCAgNDAwMDAsLCxELCwsLCwsLDg0LCwsLCwsLCxETEg8LCxcQFxAKDgwMDA0MDAwMDwwMDQwMDBUVFQwHBgYGBgYGBgYGBgYGBgYHBgYGBgYHBgcGBwYGBgcGBgYGBgYGBgoFCgUFBQwFBQYFBgQFBgUHBgYGDAsMDAwMDAwMDwwMDAwMDAwRExEPExMPDwwLDBAPExAODBcXExMTEwkJBgYGBgYGBgYGBgYGBgYGBwYGCQkHBgYGBgYGBgsMEQoGDBISEhISEhISEhISEhISEhUSEhcSEhISEhISFRIZFhISEgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA8MDAwMDQwMDAwQEhAVFRAODAwMDBQRDAsKCgoKCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMCwsLCwsLCwwLDAsLDAsLCwsLCwsLDAsMCwsLCwsLCwsLDAwMDAwLCw8RERQLDAsMCwsLCwwMCwwTExMTExMTExMTExMLCwsLCwsLDwsMCwsMEw8PCw8TFBAOCxMTDwwMDAwMDAwMDA8MDAwICAgICAgICAgICAgICAgICAgIDAgICAgICAgICAgOEBINCAgMCAgIEggICA0PCAgJCAgICAgLCAgIDAwJCAgICAgICAgIDQ8ICBMSDQgIFBQHDAcHBwcHBwwHBwsHBwcIBwcHBw0OCwsHCxAMCgsSEg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwTDQwMDAwMCgoKCgoKCgoKCgoKCgoKCgoPDw8PDw8VCgoKCgoKCgoOCg4LCgoQDg4PCgoKCgoKCgoKCgoKDxEKEwoKCgoKCgoKCgsKDgoKCgoKCg8MCgoVFQ8MBwcHBwcHBwcHBwcHBgYQCxALCQcMDAoMCAgMCgoKCgoKCgoKDAoKCgoKCgoKDQ0NCwkJDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwREREREREREhISERESEREREQwMDxMMDA0NDRENEQwMDwwMDw8PDw8PEhUPDw8MEBISEgwMEgwMCAgICAgLDgsOCAsOCwgICAgICAgICBARFRUREREMDA4MDBISEhMSEhIMDBEMDBANDAwMDAwMDAwMDAwNDQ0MDgwMERERERQUGBcRFBEUERERDAwMEQwREQwSEREREQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQ0NDQ0NDQ0NDQ0NDQ0NDQUFBQwPBQULCwsPCw4FBQwFBQsLCwsLCwsLCwsLBQoMDAUFBQwFBQcHBwcHBwcHBwcHCAcFBQcFBQcHCAUMCgwMCgoKBQULBQUFBQUFBQUFBQUMBQUFBQUFCQUFBQUFBQUFDAwMBQkFBQsLCwsLCwsLCwsFBQULCwUFBQ4FCwsFDw8PBQ8NBQUFBQ0NBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQwMDAwMDAwMDAwREQwMDA8PDwwMDAwMDBISDAwMEhIMDAwPDwwMDBYWDAwMEBAMDAwYGAwMDBAQDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAsLDAwMCwsLDAwMDAwMDAwMDAwMDAwMDAoKDAwMEBAMDAwJCQwMDBERDAwMCwsMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNCw4ODAgMDgcHDQcVDg4ODgoKCA4OCxELCwsMDAwMDAwMDAsKDAwMDAwMDQwJDQwMDAwKCQwMDAwMDAwMDAwMCwsJCgoMDAoPCwsJCgwMCAgHBQUMDAwMDAwIDAgICAwMDAwMCAcHDAwMDAwMDAwICAcFDAUFBQwNCAgGCAwMCAgJBwwMDAcMDAwMDAwMDAwMDAwMDAwMBw0MDAwLDAwMDAwLDQwKDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAcHDAAGBwcKDAwMDAwMDAwUEQ4PEA8PDhEOEwoNEA8VEgoQDAwMDAwMDAwMDAwMDB0RGxIYERgQHRMdER0THREYEB0RGxIYERgQGBAdEx0RCgwMDAQFDAwMDAAAAAAMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAAMDAwMDAwMDAwMDAAAAAAAAAwMDAwMDAwMDAwAAAwMDAwMDAwMDAwMDAwMAAAMDAwMDAwMDAwMDAwMDAAADAwMDAwMDAwMDAwMDAwAAAwMDAwMDAwMDAwMDAwMAAAADAwMDAwMDAwMDAwMDAAAAAAAAAwMDAwMDAwMDAwAAAAAAAAMDAwMDAwMDAwMAAAMDAwMDAwMDAwMDAwMDAAAAAAMDAwMDAwMDAwMDAwAAAAAAAAAABAMDAwMDAwMAAAAAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAMDAwMDAwMDAwMDAwMAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4ODg4ODg4ODg4ODg4ODAwMDAwMDAwMDAwMDAgSDAgVEAoPDggGDBMKCgwMCwsJDA4MDAwVCgwMDA0MCgwMEAwMDAwMDAwVDAwMDA0MDAwLDAsMCggIEg8QDA8ICAgIDQwMDAwIDRMSEg8WFgkJEQsHEBQUBhYVDA4ZDw8SDw8PDQkQDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEMDAgOBwwSDAwMEAwKDAsRDwsMDBIMCxIRDBEMDBEMChEKBwwMDQsSEgsMDAsLCwsLCwsREREMDAwMERERERENDAkJCQgJCQkICAgMEgwQEBAQEBAMEBAQEA8RDw8KDAsNCgoKDw8PDw8PDw8PDwoKCgoKCgoKCgoKCgwOGAoIDwwJCggHCwoAAAAAAAAAAAAADAoNCxIPCxIMERANDBAJCAAAAAsMCwkUGQsFCQcQERAKDggICAoKDg0JDAcODgkJCgsJCgkKCQcICAcICgsOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRESCwsPDAAPFgkPEA4QExYTDw4LCwYQCwoOBgoJDxINDgsQDBIMFRAOExERDg0KFBAWERALDw4IDAsLEBEKCwwMCgsGBwsKDgsMCwwKDBMLDAsJCwsKDAwQDQsPCwgKDwkLDAkMCwsQCgoMCgoMDAYHCwoOCwsMCwkLCgwPBwcICwgIBwcHBwcECAwICAcICAgFCAgMBwoIBwgKBwQGCAcIBwgKBxIdEQwYGBgYEhEQEBAIHRMbEAwMEQwMCgkGEAwMCQwJFhAPCxAMDgoPCxINBQQPCxALEg0OCwwJEg0OCwwJDwsRDBINEw4SDRUPFxEOCxINDAkRDBEMFxEMCQ4LFhAMCQ4KDgoOCg8MDAkMCQ8OGREPFwYEDgoREAwQDAwMCBAWFhAIDAgMEA8LEAwLEhIVEhUNExAQFRASCRUZEAwPCxIUFRINExESERIQEBIQEBsZHRIQDQ0PDQ8KDgwMDw8VDA0HDxIMCQsIDg8QDgoODQ4NDgwMDQwNFBMVDgwSDRQPFA8TDREMBwUPCw4LDg4NEw0QCQ4TCwoQDxAQCwoTEQ8MCgsLEBAQCwsQEgsNCw4RAAAYKAwFCQkLEwYIBgYLCwsLCwsLCwsLBgYTExMLFxIQEBIQDhMTCQoRDxYSEw4TEg0PExIXEhIQBwYHFwsLCwwKDQsHCw0GBgwGEw0MDQwJCQcNCg8KCgoLCwsTBwgKDgoLCw4HDBMOCwgTCwwLCQsHDAsSEhISEhIYEBAQEBAJCQkJEhMTExMTExMTExMMCwsLCwsLEgoLCwsLBgYGBg0MDAwMDBMMDQ0NDQoGGRQSCwsLCwsLCwsLDQsXBgYGCwsLCwsNFx8HBwQTEgwPEhAPEwwTExMTCw0NBQcSCBULBBMLCAgIEhISEhMSDg0KDRILEgsSCxAKEAoQChAKEg8SDRALEAsQCxALEAsTCxMLEwsTCxMNEw0JBgkGCQYJBgkSDAoGDwwMDwYQBg8JDwkPBhINEg0SDQ8SDBMMEwwTDBIJEgkSCQ0JDQkNCQ0JDwgPCg8HEw0TDRMNEw0TDRMNFw8SChAKEAoQCgcSCxgSEwwLAwcSBhIVCxQVEgcSEA4QEBATEwkSEhYSDxMSDg8PEhISExIJEg0KDAcLDgwLDAsKDAwHDAsMCwsMDQoNCQwPCw8QBwsMCxAQEg4RDQkJChUXFBERExIPEA4REBUNExMQEBYTExMOEA8QEhITERgYExcPERkRCw0MCg0LEAoNDQsNEQ0MDQ0KDAoQCw0MEhINEAsKEgwLDQsKCQYGBhERDQwLDQ4LFw8XDxcPChcLBggIDwkIFgsRERcLGBESEhISEhcLFwsXCwsTEgYTExMTFBMODhcXFxcXFxcXFxcXERcXFxcXFxcRFg8PFg4ODg4SEhcXExQTExcXFxcMEAwNDBQOEgsOCgsUDxIIEg0NExIQFA4SEA8MEQsHBw8VDg8ODxAICQwGCAwGIBsWGRMKGhUQEgsIBhINEgwSDRINEwwTDQsSCxILGBESDBMLEgwTDRINDAoGIBsWEgsLDQ0MCwsNDgsLDgsLDgwHDgwNDAwNDQ0IBwYICQcKEhMSDQ8MDBEODAkKCgkJCQwJCQkJCwgIDQwMDBEMDAoKCQkJCgwLDA8NBgwKDwkJExETDAsOCwsEBwcJCQ8KBAYFBQUGBgYGBwcHBwsLCwsLCwsGBgYGBwcHCAUKBQcKCAkJCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYGBgwOEBIQEBINEAwXFg8MCQ8KCwcUDg0KEg0NDAsGEQ0SDBsSGhEgFw8MExESDBINEQwQCRcRDgoOChcSDQoSDhAMEAwUDhMOFxAWERMMEQsPDBINEw0TDhMOEQ4RDA8NEAwQDAcWEQ8MEw0QDAEBAAEBAQEBAQEBAQEBBwEFAAEEAQ0MBwsMBgYMDQcLDQwNDQUHDAsMDQsMDAsODAwNDgMGBxAoDAcIDAgHExMFBQcHBgcHBwcHBAcFBQcFBgcHBgcHBwcHBAcFBRAPExIZFA8NFxcXFwsLBQUICQ0MCg0KCgoKChEJCQ0OCQ0KDg4KCgsLDAwIDA0QCgkKDA8KDQsODQ4ODg0NDRISEhMSEhISCgoLCgoKExMWFhcWDAwMDAwMDAwWFhkaGhkZGQcGBwcGBgcIDAwODw8ODg4MDAwMDAwTFRgYFxcLCwsLCwsLFBgYGBAQEBAQEBAQFBQYGBYWFRYODgoKDAwJBwwMCwsQEA4ODg4ODQ0OEhITExMSExMMDAwMDAwMDBcWGhkaGhkZEBAQEBAQEBATFBcXFxYVFg4NDg4ODg4SEhISEgYGBAgHDAwMDAwWFRgZEwgICAgHCAkICAkJDQ4IBwcLCwsLDAwLCxERFhcRCAgGEBAQEBAXFRcUEgcDEgsSCxgSEAsOCw4LFhEMCQwIEw0TDRIMDwoPChALEAsQCxEMFxEODA8PCw0LCxEQCwkPDgsMDQ0NDwwNDw0NDA8QDA8MCwwMDg4NDwYGAwoGCQgRCwwMCwsKCxAOCwcQDgsMCwsLDgcMCAsJEQkOCwsQCwsJDwwLDg0FExMTExgRFBISDBUTFw0PExQPFBQQEg4NFBURDA0NDBETDRANFBEMDgwSFAoBAAAFEBQLCw8SExENDQ0OFRUVFREQDg8ODw4PEBANDQ0NDw4ODQ8ODg4RDg8PDwoKEBMTDhAOEA0ACgUHBQAAAAAAAAAABwcFBQATAAEBABAQDg8NDRAOEhABAQQICwkJCAoKCA0KCQgBDQsRDxAREBEQEAkODQ4NDQ0NCwcLDAYGDQcLDQsMBgwMDQwMCw0MBgsNDQ0BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEJDREVGQkNERUZCQ0RFRkHCg4UFwoRDRQSCw0LDQ0LEAwKDAsPCw8RChAPEg4QFRQPFBAQFBgWERQVEhEQFBMPEhQPCw4MDw8MDxALDxALEAsLDg0PEA4PDg0QDw8PEQ8PDhILEQsQCxALCAcIBxIMEgwRCREJEgwSDRIKDwwPDA8MEQoSDBIMEgwSDBIMEAsQChAKEAoQCw4IEwsTDBMMEwwTDBMMCQcIBxENEgwSDA8GDwcPBg8GFRIVExUTEgwSDBIMEgwSDBIMEgwSDA4NDgwRCREJEQkRCQwIDAgMCgwJDAgPBw4HDwcPCBIMEgwSDBIMEgwRCxELFhAWEBILEgsRCxAKEAoQCgwHEAsNCRILEgsSDRINEg0SCxILEgsSCxILEgsSCxALEAsQCxAPEAwQDRALEAsIBgkGEgwSDBIPEg4SDhIMEgwUDhQOEg4UDhQOEgwSDBUOFQ4VDhQOFA4RCxELEQsOCwkLCwAAAAAMDAwMDg4ODAwJDAwMDAkGBgYICQgKCQoKCAcIBgUEBQUFBQUFBwYNDgcHDQ4ICA0OEA8MDBAPDAcMEA8MDAkJCQkICQgJDw8VFQ8PFRUUFBsbFBQLGwsbEQoKCgoKChAQEAoKCgoKCgoKChEREQwICAgIERERCQkNEhIRERISDQoJCw0KCQsKChAQCgoMDAoMDQ0GBgwLDAsKCgcGDQwNCQkJCQkHBwwNCQkMDQgHBgwNCQkKCwsLCwwKCwAAAAAAAAAABgYGBgYFBQUFDg4ODAwMCQkICBUVGxsSEgsLEAwNCwoMCQkNCQwNAAUFBQUHCQkNDg4ODg4ODg4MDAwMDAwMCQkJCQkJCQkJCAgICAgICAgIFRUVGxsSCxAQEBAQEAwMDhYODQ0NDg4ODg4OCwsLDAwMDA0JBwYGCQkJCQkJCQkNDw0NDQ4OBwwGBggJBwoJCgoIBQUODQcHDg0HBw4NBwcODQcHDg0HBw4NBwcQEAoKEBAKCgwMEA8MDBAPDAwQDwwMEA8JCQkJCQkJCQgJCAkODwoMDg8KDA4PCgwODwoMDA0MDQcGCQkJCgwPDQ4NDQ4LDgsNDQoMCQkJCQkJCQkJCQkJCQ0MBwcHBwYGBgYGBgYGBgYGBgYGCAYGBgYJDREFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUSEhISEhIMDBAUEAwMDAwMCQkJCQkJCQkJCQkJCQkJCQkJFBcPDAsMDAsMCwsMCwsLCwsLCwsLDBQLDAsLCwsLCwsLCwsLDQsLCwsLCwsLCwsODgsLEREREREREREREQwMDAwMDAwMDgwOCgoKCgoOCgwMDQ0ODRAPDQ0NDQ0NDQ0QGBMMCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCxIUCwsJCQ4LCwsLCwsLCwsPDAsMCwsMCwsLExALCxgRCg4NDQ0NDg0NDQ0PDQ4NDQ0WBwYGEBYIBwgMAAcRCw8RDxAQERURDRMPCxMQDwgICA4OCAgOCAgODg4ODw0PEA0UFAkJDwkJCQ8PDxAPEg8SFRMTCQoPCQkJDw8PEA8PDw8SFRgVGBYYEA0NDRQUDQ0UDQ0UExQPDhEREBAKEQ4RFRUOERAOERMPFA0NFQ0NFBQNDRQNDRQTFBYWExEREREPDw8QFBQTFBEUERgREQ8QDw8NDwsRFBMREREREBEQEA4PDg4TExETEhIQEw8PDg8SERERERAREgsREREQEREWEREPFBERDhIUFBUVEREREQ8QDxERERcXERcXEhIYGBYWFh0dFh0dFhYWHR0WHR0PEQ8PDw4PDg4LDBIPEA0KCgoKCQ4PCgsPCAsLCxERCwsRCwsRERERExIREQwSEgsLEgsLCxIREhMOEBAQDw0NBgYOBwcGDgwOExESERMHCQ0JDQoNGQwMDBMTDAwTDAwTERMUExAQDxAIDw0PFBQODw4NDw0LDg0QGA0NEhINDRINDRMTEhQUEhMUExMSExISExMSEQ8RDxQTExISEhIQEgkOEBAODw4OEhISEhAQEBESEhAQEBAPEA4PDg4QEA8PEBAQDwsQExMRERESERAPFRERDhUUDw4PERMREhETEhAQEBYWEBYWEBAWFhERERgYERgYERERGBgRGBgTExMTExISEhIQEBYWFQkKCwsLCQ4NEgUOHBwHBxASEhQSFAsSGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYDBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYGBgYGBgJDA4PDw0NEAoOEA4PExMODg0QEhQNDQ4ODA8PDw0NDg4ODg0MDg4OCw0QDw4ODg0LDAALCwAAAAAAAAAQBw4KCQkLCQAAAAAAAAAAEA0NEQ4PDw0TDxEPIRgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYFRUYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGAwGBgYHBgcGBgcHBwcGBwYGBgYGBgcHBgcGBgcGDQ0NDQ0NERMLEwwMDAwMDAwMEAwMDQwMDAsLDAwMCQkMDAwMCQkJDAwJDAwMDAwMDAwMDAwMCQkMDAwMDAwMDBQWEAwMDAwMDAwMDAwMDAYHBwcHBggGBgYHBgYGBwYGBgcGBgYGBwYGBgQGBgcGBgYEBwYGBwYGBgQHBgYGBgYGBgwMDAwMDAwMDBAMDA0MDAwMEhQSDwwGBgYHBgYEBgYHBgYQEAwMDBAQFBEODBgTFAkGBgYGBwcGBgYGBgcGBgYTExMTExMUExMUFAYTBwcJCQcGBgYGBgYHCw0SCgYMExMTExMTExMTExMTExMTFRMTFxMTExMTExMWExoXExMNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDQ0NDQ0NDQ0RExEWFhAPDQ0MDRUSCwsLCwsLDAwMDAwUFBAUFRIQEBQQEBAQEBATDg4KDg0MCgoOCgoKCgoKCgoODgoODw0VDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4XDQsLDAwMFgwJDQgICBMICAkJCAkUDBEHDQcHBwcLCw8KDwsLCxEPDwkNCQkLCgsLCwoKCw0LCwsMDAwVFQcNCwsOCwYHBwcHBwcHBwcHBwcHBwcMDAwMDBAQDg4ODg4ODg4ODw4ODg4GBwkJDAwABgYAAgYABQAGBgYABgAGBgAGAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAODQcHDAwQDwwMEA8JCQkJCAkICQgJCAkICQgJFRUPDwsJDQoNDQoMDQ0KDA4PCgwODwoMCwwGBgoLDA0HBgkJCQkNDAcHDQwHBw4OCAgPDgsMCwwMDQwFCAUBCQcODREJCQkHBgkICgkJCQgICQgHBgcIBgcHBQkHBwcHBAQJCgoGCQUHBwYEBAUFBAYGBgYFBQYFBQoKDAkJCQkKCwcGBgoJCAkJCAgICAkKCgkJCAgJBwkHBwcHBwUGCQsMDgcICAgICggICAoJCQgIBwYKBgcFCAUFBgUGCQgICQkKCAYEBAsPBAYGCQkJCQkHCAcHBwgKCQoHDA0LCQgLCxMPFQ8VDQ8PDxEPEA8PFQ0PFQoQDwoPDwoODRERDRARDQ4PDw8QDw8OEA8PDw8PEA8QDBEPDRAMExIVDQ8TCAwKDQoMDw0QEhAPEA8SDQ4SEw0RDg0ODBISDBEMDBMTDg8RERYWERURERcYEhMVERQPDw8WEAwREQ0QCw4LERALDw8LDRUVFRUVFRURCgwQDRAQDw4SEQ0TEhIOEhENExIREhEQEhIREgoPDw8NDxITDA8QDRAQDw4PDxIXGBIWDxAVGhgYFRsWGBgLEBELDw4LEAsQEQsPDwsQCg8MCQsKDA4PDw8RDg8QDw8PEg8RExYQEREMBAgJBgkLBA0LCQoJDAoLDQoJDQ4NCg4OEgkKDxEZFRYSFRMQEBQQExgVERQhDRMRFhMTHBURERgWISEhFRUQEBEUAAAAAAAAAAAAAAAXEhcSABcSFw8AAAAOEAoICgILBwgNDgoQDQ0KCQkNCQ0ICwsLCw8PCw0NDQYNCQ0EDg8NCQ0NEwsMBA0NCgsMCQ0MEBATBgoLDhAOEBYOFRIPEwQNCxMPEw4QDQ0ODg0JDQgGBgwQDxILHBwVEhISEhISEhISEhISEhISEhISEhkSEhISEhISEhISEhISEhISEhISEhISEhISFRISGAwYGBgYGBgYGBgYGBgBARAQEBASDxAQDxMQFRcFEBQQEBAQEBQQExQUEBQVEhAQFBAQEBAQEBAQFBQQFBUSIhwMEhISEhUSFBISEhISEhISFBgZFSIaIB0YEhIQEBASEBAQEBAQEBAQEBIQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBIQEBAQEBAQEBAWGBAQEBAMDAwODhMMDAwMExMTFxMTExMTExMUExMTExMTExMTGBkZFhQTIxseGQwMExMXFxMTExMZExMXExMTJCQcHAwJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJDAwMCgsKCgoKCgoKCgoMDAwMDAwKDBISEhISEhISEhQSEhISEhISFhgYFRkZFBQSEhIUFRkWExIjHRoaGhoMDw8PDw8PDw8PDxAPDw8PDw8PDw8PDw8PDw8PDxAQERgPDxoMDBYWFhYWFhYWFhYWFhYWFhkWFhkWFhYWFhYWGhYdGhYWFhISEhISEhISEhISEhISEhISEhISEhISEhYUEhISEhISEhIYGhYZGRYSEhISEh8fDBAQEBAQExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExQWFhoTExMMExMTExMTExMTExMTExMTExMTExMODg4ODg4OEg4ODg4OFBISDhEUFxMQDhYWEAwMExMTExMTExUTEwwVDBISEhISEhISEhISEhISEhISEhISExISEhISEhISEhUWGRMSDQ0PDAwMFgwMDBETDAwMDAwMDAwNDAwMDw8NDQ0NDQ0NDQ0NERMNDRYWEQ0NHxkRDxQPDw8PDw8PDw8TDw8PDw8PDw8UFhMTDxMXFBERIhsWExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTGhYTEwwMDAwMDAwSEhISEhISEhISEhISEhISEhYSEgAMFxcXFxcXHR0MDAwMEhISEhISEhIWEhUSEhIYFhYXDAwMEhISEhISEhISEhISEhcZEhoSEhIQEBAQEBAQEBAQFBAQEBAQEBQTEBAjHAwMDAwJCQkJCQkJCQkJCQkZGRkRFxIMDBISFBcPDAsMDAsMCwsMCwsLCwsLCwsLDBQLDAsLCwsLCwsLCwsLDQsLCwsLCwsLCwsODgsLDAwREREREREREREREREMDAwMDAwMDAwMDA4MEBIMCg4KCgoKCg4KDg4OCg4NDAoKDgoKCgoKCgoKDg4KDg8NFRUMDAwNDQ4NEA8NDQ0NDQ0NDRIUEBgTFxgTDA0NDAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsMCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCxIUCwsLDAwMDAkJDgwMDAwLCwsSCwsLCwsLCw8NCwwLCwwLCwsSFBMQCwsYERgRCg4NDQ0ODQ0NDQ8NDA4NDQ0WFhYMBwYGBgYGBgcHBwYGBwcHBwYGBwYHBwcHBggGBgYHBgYGBwYGBgYKBgoGBgYMBgYGBgcEBgYGBwYGBgwMDAwMDAwMDBAMDA0MDAwMEhQSEBQUEBAMDAwQEBQRDgwYGBMTFBQKCQYGBgYHBwYGBgYGBwYGBgcGBwkJBwYGBgYGBgcLDRIKBgwTExMTExMTExMTExMTExMVExMXExMTExMTExYTGhcTExMNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PDQ0NDQ0NDQ0NERMRFhYQDw0NDA0VEgwLCwsLCwwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwPEhIVDAwMDAwMDAwMDAwMFBQUFBQUFBQUFBQUDAwMDAwMDBAMDAwMDBQQEAwQFBUQDgwUFBAMDAwMDAwMDAwQDAwNCQkJCQkJCQkJCQkJCQkJCQkJCQ0JCQkJCQkJCQkJDxETDgkJDQgICBMICAgOEAgICQgJCQkICwgJCQ0NCQkJCQkJCQkJCQ4QCAgTEw0ICRQUBw0HBwcHBwcMBwcLBwcHCAgIBwcNDwsLBwsRDQoLExMPDQ0NDQ0NDA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQwNDQ0NFA4NDQwMDQsLCwsLCwsLCwsLCwsLCwsLEBAPDxAQFgsKCwsLCwsLDwoPCwsLEQ8PEAoKCgoKCgoLCgoLCxASChMLCgoKCgoKCgoMCg8KCgoKCgoQDAoKFRUQDAcHBwcHBwcHBwcHBwYGEQsQCwkHDAwKDAkJDQsLCgsLCwoKCw0LCwsKCgoLCg4ODgwJCQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEhISEhISEhMTEhISExISEhIMDBAUDAwODg4SDhIMDBAMDBAQEBAQEBMWEBAQDBATExMMDBMMDAkJCQkJDA8MDgkMDwwICAgJCQkJCQkREhYWEhISDAwPDAwTExMUExMTDAwSDAwRDgwMDAwMDAwMDAwMDg4ODA8MDBISEhIVFBkYEhQSFRISEgwMDBIMEhIMExISEhIMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4ODg4ODg4ODg4ODg4ODg4FBQUMEAUFCwsLDwsPBQUMBQULCwsLCwsLCwsLCwUKDAwFBQUMBQUHBwcHBwcHBwcHBwgHBQUHBQUHBwgFDAsMDAsLCwUFCwUFBQUFBQUFBQUFDQUFBQUFBQoFBQUFBQUFBQ0NDQUJBQUMDAwMDAwMDAwMBQUFDAwFBQUPBQsLBQ8QEAUQDQUFBQUODgUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUMDAwMDAwMDAwMEhIMDAwQEBAMDAwMDAwTEwwMDBMTDAwMEBAMDAwXFwwMDBERDAwMGRkMDAwREQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLCwwMDAsLCwwMDAwMDA0NDAwMDAwMDAwKCgwMDBAQDAwMCgoMDAwSEgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDgwODg0JDQ4HBw4HFg4ODg4KCgkODgwSDAwLDAwMDAwMDAwLCgwMDAwNDA0MCQ0MDAwMCgoMDAwMDAwMDAwMDQwMCQsLDQ0KDwwMCQsMDAgIBwUFDAwMDAwMCAwJCQkMDAwMDAgICAwMDAwMDAwMCAgHBQwFBQUMDQgIBgkMDAkJCQgMDAwIDAwMDAwMDAwMDAwMDAwMDAcNDAwMCwwMDAwMCw4MCwwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwICAwABgcHCwwMDAwMDAwMFREPEBEQDw8RDxMLDREQFhMLEAwMDAwMDAwMDAwMDAweEhwTGRIZER8UHhIfFB4SGRAeEhwTGRIZERkQHxQeEgsMDAwFBQwMDAwAAAAADAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAwADAwMDAwMDAwMDAwAAAAAAAAMDAwMDAwMDAwMAAAMDAwMDAwMDAwMDAwMDAAADAwMDAwMDAwMDAwMDAwAAAwMDAwMDAwMDAwMDAwMAAAMDAwMDAwMDAwMDAwMDAAAAAwMDAwMDAwMDAwMDAwAAAAAAAAMDAwMDAwMDAwMAAAAAAAADAwMDAwMDAwMDAAADAwMDAwMDAwMDAwMDAwAAAAADAwMDAwMDAwMDAwMAAAAAAAAAAAQDAwMDAwMDAAAAAAAAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwADAwMDAwMDAwMDAwMDAAAAAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwODg4ODg4ODg4PDg4ODg0NDQ0MDAwMDAwMDAwJEw0JFhAKEA8JBg0UCgoNDQsLCQ0PDAwNFgoMDQwNDAsMDBEMDAwMDAwMFgwMDAwODAwMCwwMDAsJCRIQEQwQCQkJCQ4MDAwMCQ4UExMPFxcKChEMBxAVFQYXFg0PGhAQEg8PEA4KEA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASDQ0IDwcMEw0NDBAMCgwLEhALDAwTDAwTEgwSDAwSDAoSCgcMDQ4MExMLDAwLCwsLCwsLEhISDAwMDBISEhISDQwJCQkJCQkJCQkJDBMMEBAQEBAQDBAQEBAQEhAQCwwLDQoKChAQEBAQEBAQEBAKCgoKCgoKCgoKCwsMDxkLCRAMCQsJBwsKAAAAAAAAAAAAAAwLDQwTEAsTDREQDg0RCggAAAALDAwJFRsLBQoHEBIQCg8JCQkLCw8NCQ0IDw8JCgsMCQoKCgkHCAkICAoLDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYSEwwMEA0AEBcKEBEPEBMXFA8PCwsGEQsLDgYLCg8TDQ8LEA0TDRYRDxMSEg8OChQRFxIQCxAOCQwMDBASCwsNDQsLBgcMCg8MDQsMCgwUDAwMCQwMCg0NEQ4MDwsJCxAJDAwJDQsMEAsLDQsLDQ0GBwwKDwwMDQwJDAoNDwgICQwICQgIBwcIBAgNCAgICAgJBQkJDAcLCAgICggEBgkHCAgJCggTHhIMGRkZGRMSEREQCR8UHBENDRIMDAoJBhEMDQkNCRcRDwsRDQ8LDwsTDgUEEAwQDBINDwsNCRMODwsNCQ8LEQ0TDhQPEw4WEBgSDwsTDgwJEg0SDRgSDQkPCxcRDQkOCg8LDwsQDA0JDQkQDhoSDxgGBA8LEhEMEQwNDQkRFxcRCQwJDBEQCxEMDBISFRIWDhQRERYQEwoWGhAMDwsTFRYTDhQRExETERESEBEcGx8TEA4NEA4QCg8NDRAQFgwOBxATDAkMCQ4QEA4KDw0ODQ4NDQ4MDRQUFg4MEw0VDxUQEw4RDQgGEAwPCw8ODhQOEAkPFAwLEA8QEQwLFBIQDAsMCxEREQwLERMLDgwPEQAAAAEAAAAEAADB3uNdXw889QAZA+gAAAAAv24CMgAAAAC/bgIy/A790wZyBJsAAAAJAAEAAQAAAAAAAQAAArD/HgCS///8Tv0YBjIAAQAAAAAAAAAAAAAAAAAAJzwB9AAAANoAAAFtADsBbQAhAdwAVgMZAHYA7gApAToAKQDuAD0BA//3AdwAHAHcAEoB3AAdAdwAHAHcABgB3AATAdwAJgHcABoB3AAlAdwAIwEEAEcBBAA1AxkAewMZAHYDGQB7AdUAQQOrAEIC3P/8AooAFwKiACwDAQAXApcAFQJOABcDAwAuAwwAFwFrAB8BogAKAsEAGAJjABgDhQAfAtwAEwMDAC0CPwAYAwMALQLcACICCQAjAnMAKQMMABUC2gAOA6oACgLcAAsC2gANAqYAFQE3AEsBA//3ATcAHwO4AL8B3AAAAdwAhgHWACsB+QAAAaIAGwIJACUB1gAjATgAEgHQABMCCgAUAQUAGAD+/9EB7wANAQMAEwMNABMCCgAUAgcAHgIJAAoCAwAlAW0AFQFsACIBNgAUAgsADAGv/+wCg//pAaX/8gGo/+wBnwALAdwAUwHcAMwB3ABSAxkAUwE2AGIBUwAGAaUABgJBACUBngAGAdwANgHcAG4CTQAGARAABgHiACwDGQB2AkkABgHE//UBOQAXAxkAdgHcAIkB/QA6AdwAHgFsAOIB3ACEASIABgHiACwB1QA7Atz//ALc//wC3P/8Atz//ALc//wC3f/8A+cABgKiACwClwAVApcAFQKXABUClwAVAWsAHwFrAB8BawAfAWsAHwLcABMDAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DDAAVAwwAFQMMABUDDAAVAggACQHWACsB1gArAdYAKwHWACsB1gArAdYAKwLdACsBogAbAdYAIwHWACMB1gAjAdYAIwEF//sBBQAYAQX//AEFAAUCCgAUAgcAHgIHAB4CBwAeAgcAHgIHAB4DGQB2AgcAHgILAAwCCwAMAgsADAILAAwBqP/sAQUAGAQIABkDSAAeAtoADQHc//cB3ABnAdwAZwHcAGYB3AC0AdwAoAHcAKwB3ABpAdwAlAIXABAB3AAAA7gAAADuACgA7gAvAO4ALwG9ACgBvQAvAb0ALwHcACoB3AAqAjIAjwO4AGUFCwBFAScALAEnAC0An/9iAw4AbwLaAAwB7AAxAnQAGQL2ABkCqAAIAl8AHQMZAGcB8AAWAxkAUwMZAHYDGQB6AxkAegHWAAMCFgASAiAAEgDaAAABNgBiAtwAKQE/ACgDfwBFAdwAMQCkACgDDAAuAdwAzAE6ABMBOgASAToAMgL3AC8C9wAvAvcAEQMBAAADGQCIAtoADQI8ABoCCwAgAaj/7AIJAAoC3P/8AdYAKwLc//wB1gArAtz//AHWACsCogAsAaIAGwKiACwBogAbAqIALAGiABsCogAsAaIAGwMBABcCgwAlAwEAAAIJACUClwAVAdYAIwKXABUB1gAjApcAFQHWACMClwAVAdYAIwKXABUB1gAjAwMALgHQABMDAwAuAdAAEwMLAC4B1AATAwMALgHQABMDDAAXAgr/9gMMABMCCv/0AWsAHwEF//4BawAfAQUACgFrAB8BBf/7AWsAHwEFABgBawAfAt4AHwIDABgBogAKAOb/0QJcABgB6AANAe8ADQJ9ABgBAwATAogAGAEKABMCgwAYAYEAFQJ4ABgBfAATAnkAAAEDAAAC3AATAgoAFALkABMCGAAUAtwAEwIKABQCdAAOAuEADQIDABQDAwAtAgcAHgMDAC0CBwAeAwMALQIHAB4C3AAiAW0AFQL1ACIBfAAVAtwAIgFtABUCCQAjAWwAIgIJACMBbAAiAgkAIwFsACICCQAjAWwAIgJ5AC4BPwAUAnMAKQGcABQCcwAPATYADgMMABUCCwAMAwwAFQILAAwDDAAVAgsADAMMABUCCwAMAwwAFQILAAwDDAAVAgsADAOqAAoCg//pAtoADQGo/+wCpgAVAZ8ACwKmABUBnwALAqYAFQGfAAsBOAASAvz//AHTACsD5wAGAt0AKwMDAC0CBwAeAdwAdgBpACkBLAASAu///AEEAEcC+AADA2wADQHQABYDMwANA2IADQL+AAMBLwANAtz//AKKABcCNAAYApoAFgKXABUCpgAVAwwAFwMDAC0BawAfAuoAGALaAA4DhQAfAtwAEwJ2ADYDAwAtAvYAFwI/ABgCYgAJAnMADwLaAA0C7gAhAtwACwMQAAEC9gAyAYAALgLgAA0CLwAeAawANwIHAAcBIABBAbn//QI3AB4CAwA/AdcAAQH1ACMBygA3AaMAEAH9AAcB/wAtAR4AQQH4ABIBxgAOAgAAQQHIAAAB1AAPAgcAHgIMACUBnAAmAhIAHgF0/+4B6v/9AmIAHgHQAAkCff/9ApcAIAEmAAQBz//9Af8AHgHR//0ClAAgApcAFQL7AA8CRAAYArIALQIJACMBawAfAWsAHwGiAAoDfv/6A7sAFwMtAA8CugAfArQABwMMABcC9f/8AoQAFwKKABcCQAAYArIACgKXABUDbgAGAgoAKAMMABcDDAAXApUAHwKv//oDhQAfAwwAFwMDAC0DDAAXAj8AGAKiACwCcwATApwABwLuACEC3AALAw0AFwK4AAED2wAXA9wAFwMHABADvgAfAnAAHwKyABgEIwAXAsQABwHWACsCCwAaAeQAGAGsABQCEwAGAdYAIwKU//oBnAAeAhwAFAIjABQB1gAUAhL//gLGAA0CHAAUAgcAHgIcABQCCQAKAaIAGwH2AA8BqP/sAq0AIwHLAAUCFgAUAfoADALwABQC8AAUAjEACgKpABQB0wAUAZQAEQL4ABQB8P/+AdYAIwIKAA0ByQAUAZQAGwFsACIBBQAYAQX/+QD+/9EC0v/+AtcAFAINAA0B4gAUAc0AAgIcABQCTgAYAbsAGAOqAAoCg//pA6oACgKD/+kDqgAKAoP/6QGo/+wDuACfAcT/+QDuADYBOQBkATkAHgJtAGIBZQA6AUEAAQOBABcB3AAKArYAEgLBABgDqwBnAdwAHgPTABEC1gA4At3//AL3AC8C9wARAvcADAL3ABADuAA8AdwAQQO4ADwB3ABBA7gAPAHcAEsB3AA5AxkAdgLtAC0A7gA+AxkAaAMZAGUDGQB2AxkAUwM7ABwDGQB2AjgA6QI4ABgDuP/vA7gBwQO4AcEDuP/wA7gBwQO4/+8DuAHBA7j/7wO4/+8DuP/vA7j/7wLN//cDuP/vA7j/7wO4/+8DuAHcA7gAAAO4AAADuAAAAsoAGAODABgCgQBPAoEATwOFAKcCPQBOAj0AWQI9AE4CPQBZAusAIQLrACEDuAAAA7gAAAMZAQcDQwBPAw4ArgMOAH8DqwCJA6sAXAOrAIkDqwC0AfsAEQKrAEkB+wAAAhwAFQH7/+cDPAAUAjQAFALwAAABxgAgAk4ACQGS//4B1P+FA1AAHgJd/90C6AAKATsAKwL1ABwCFAAYAhAAFQMXABkC6AABAowABgM6AC0CRgAeAvkAIQKdAA4ChAALAfsADwLJAAsB1QAjATgAEwEbAA4CeAAtA2AAFQJJAAwCegAGAkT//wJeABMCnAAQAVsAAQF5AAoB+wAOAOkARQFeADIB3wAwAQgAbAUvABcEZwAXA44AJQQAABgDBAAYAZYAEwQ/ABMDcQATAqQAFALc//wB0wArAV4AHwEJ//0C+AAtAgsAHgL/ABUCBgAMAv8AFQIUAAwC/AAVAgkADAMMABUCAwAMAwMAFQIQAAwBzgAUAtr//AHXACsC7v/8AdAAKwPWAAYC0gArAwAALgHoAAYDBQAuAdQAEwLnABgB/QANAwUALQIWAB4C/QAtAgoAHgIIAAsBpwAMAOb/0QUvABcEYwAXA4oAJQMAAC4B1AATAdYAHAIJACUCCQAkAekAKAHWACIB0QAXAh8ADAJXABYB1gAiAdYAIgJE//0BygA3AcoANgI8ACIB6QATATj/1QJSAAkCAgAjAgwAHwHnABAB5wAQAgoAFAIKAA0CDwA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BAvsABgL9AAoDEQAUAvcABAL1AAMC3v/8AvgAAwGkADcBqAA3AboANwGrADYBrwA3AawANwMkAAoDIAAfA6kACQOnAAcDxgAGA5n//wHiAAcB4QAHAeUABwHlAAcB8wAHAeUABwHjAAcB4gAHA5kACgOSABoEJgAMBCoABwQoAAUEHwAKBBAAAQQJABQBHABBAQQAKAEiAAABKv/9AQ3/+QEO//0BHv/qAU0ACgHgAAoB4wALAlUABgJpAAcCfQANAlcACQJGAAcCPAAGAgcAHgIHAB4CBwAeAgcAHgIHAB4CBwAeAyUABQNbACQD9QAdA+cAHwO8AA4DrgAHAdH//QHU//0B1P/9AdT//QHN//0Byv/9Acb//QNV//oD9f//A+0ABwPcAAkCjAAgApQAIAKWACACjAAgApAAIAKQACACjAAgAowAIAM4ABgDQwAkA9UADgP5ACQDpwAOA4T//wN7//QDhf/vAjoAHgI3AB4BswApAaQANwHgAAcB4QAHAXUAEgEeADIB9AAeAfsAHgHN//0Bzf/9ApAAIAKWACACOgAeAjUAHgI1AB4COgAeAjUAHgIxAB4CMQAeAjUAHgLZ//cC5f/3AxQAEAMdAAsDAwAHAwEADAMOAAcDDAAOAeIABwHhAAcB5QAHAeUABwHkAAcB5QAHAeIABwHiAAcDqwAYA6MAGgQ+AA0EEAAMBEcACgQ5ABUEGwAUBBP/9AKTACACkwAgApcAIAKTACACjwAgAqAAIAKXACACkwAgAyEADgMtAA8D0QAKA74ADAOtAAcDjP//A2v/5QOGAAYCNwAeAjAAHgI1AB4COgAeAjoAHgIzAB4CNQAeAuz//ALw//cC+QAJAvUABQLs//wA8AByAQYAjQC1ADABRwAUATEABgHgAAcB+AAHAeEABwHhAAcB4QAHA4QAEgNy//8D7wASBAUADwMTABcBWQAmAU0AHQFLABQBQAAKATUADQFgAAEBbwAIAT4ACAFNAAsBcwApAWUAJAIuAAkCRAAGAV8ALQEpADwBNQAUAdj//QHN//0B1P/9AdH//QIDACUB/wAlAc3//QHR//0CxAANAsAADQOe//sDuAABArwAFQE8AAcBRgASAPgADwKTACACnAAgApcAIAKMACACnAAgA6oABANyAAYDsAANA1MACgLlADEBNgBSAIwAFALs//wBywArAvn//AHDACsD5wAGAt0AKwKeABUBygAjAk4ACQHOABQCTgAJAboAFAOiAAYCtf/6AekAKAGGAB4CBQAEAVsAAQMQABcCEAAUAxAAFwIXABQC8QAtAfQAHgJsAA8BngARAmwADwGlABECmQAHAdkAEQKkAAcB2wAVApYABwHXAA8CtQABAfUADAOzAB8CsgAUAkAAHwH9AB4CYAA5Al0AIAHRACsCJAAWAcoAHQHPACACuQAjApAAIwHRACIBfQAmAmsAJwJVABwBtwAqAecAFAIwABsCLwAgAi4AIgJ0ABsCAQAzAg4AFQJoACcCDwAiAgoADwIEAC8CagAZApYAJgH0AB4CYQAXAgQAIQHMAB4B+AAgAgEAIwJGACICSwAjAiQAKgJnACYBBwAvAQ0AKACKAA4BjP/8AQQAEAF1AEMBWwAGAsAAHQHM//wCBgAiAgUAIwHHACYBwgAiAaQAIwHJAAAClP/+AjsAJwHA//0BNv/+Ap7//gJLADIB1gAgAeAANgHWACYBuAAZAdgANwJOAC4BOAABAe8AGQFgAAEB1gAgAWYACAKyACABaAADAlcAIAHeADcBzgAyAp4AGwHVAAABuQAIAWsAKgJ9AB4B+wAFAdEAMwJLAB4CKgAZAOEARgMnAAkDDwAuAykALgMnABYD3gAuAsMAFQNBACQC9AArAucADQHiAB4DdwAZAx4AEAPBAB0CGQASAl0AYgMHACADSwAXAmQAMwMyAA8DSwATAq4ACQL5ADICQQAoAiwAGwMyAA8DbQAdAtUAJAIIABYCMgAWAhMAEQHoAA8CwAAkAysAIAIqADECiAAiAiwANQM9ABsC0wAeAfUAKwJX//8B3wAiAuYALgM/AB0BpgBXABb/SQAT/vsACf+GAMEAJgKp//MDVf/zAdoABwHG//MCcf/zAub/8wMM//MCuf/zAin/9QIv/5MCMP/1AkL/4QNg//MDXP/zA1z/8wNk//MCv//zApT/8wJF//MCf//3AlH/8wJi/+kCRv/zAn7/8wKk//MCmv/zAhf/8wIW//MCK//zAiv/8wJg//MCM//zAlj/8wIj//MCYv/3AkX/8wJF//ACRf/5AsX/5gJZ//4Cf//2An//9QJi//4Bpf/zAaX/8wKk//4DIv/zAwX/8wIz//4CpP/3AkX/9QKG//MCI//pAAD+oAGSAB4A1v/rASD/+wDg/pgAAP6BAAD+wgAA/uQAAP8RAAD+ywAA/bIAAP3bAAD94wEw/9MBMP66ANn+nQDV/pYAEv8qAyoAPAAAACIAHf9cABb/AwAQ/vMCpf/wApT/7QJF//MCfv/sAiv/8wIr//ICnv/zAlj/7gL0//4Cmf/zACL+vQA5/rQAqQBFAUUARQG4AD4BgwAiAYYAPQE+ADwBqQBAAa0AQQFaACsCIABAAZsAFgGIADIBYQAvABb+sAImAAkBygAKArUAEwKAAAoCpwAKAskACgKLAAoCvwAKAo0ACgKiAAoBgwAaAjgACgIqAAoCOQAKAikACgILAAoCCwAKAg4ACgHYAAoBIwAKAcQACgHpAAoA+wAJAQj/4QILAAoBIv/vAcYACgIOAAoB1QAKAgUACQEMAAoB9AAKAeUACgIWAAoB4QAKAesACQHSAAoCKgAKAegACgD7AAkB2wAKAhYACgIPAAoCGAAKABb+ZwAW/o4AFv6nABb+1wAW/pgAFv6vABb+sAAW/mwAFv3VABb/UgAW/qMAFv6uABb/rgAW/ooAFv5dABb/ZQAW/b4AFv6dABb+kgAW/rAAFv6vABb+rwAW/o4AFv2mABb+pAAW/oUAFv6KABb/SgAW/X8AFv6pAXj/+AIj//YCzP/2A3T/9gQe//cBeP/2AiP/9gLL//YDdP/2BB3/9gF3/9kCIP/aAsj/2ANz/9kEHP/ZATIAAAGhAAACTAAAAy3/9wPM//wBsf/zAsX/9gIr//YDU//2Avj/9gHUAAECHwAKAc7/+gIf//UCE//+AccABgKKAAUB4gAHAawABQHiAAUB2QADAm8ACgHHAAYCdwAFArAACgGZAAoCigAIAncABQLvAAMCVwAGAooABwNgAAcDVQAFAncABgNDAAECigAHAooABwM6AAID2AAHA4QABAK5AAADOv//A3oAYALdAAgCxgAHAp0ABwNVAAIDDAAFAm4ABgLvAAMDQwAGAmUACAHQAAMCSQAHAeMAAQJuAAICZQAHAeMAAQJcAAUCjgABAccABQJ3AAkCkwAEAb8AAQKKAAYBvwABAb8AAQJFAAQCLQABAncABAKKAAQCNgAIAoEACgI/AAYCLQADAoYACAJcAAgCXAAIAlwACAK4AAgCXAAIAlwACAJJAAYC3v/8AcwAKwLS//wB0wArAo0AFQHOACMClQAVAcsAIwFgAAwBF//bAWEAHwEQAAYC9QAtAgAAHgL1AC0CBAAeAsMAIgF8AA0CygAiAYMAFQL8ABUCBgAMAvUAFQIJAAwC4f/8AaMAKwJ0ABcB+wAAAnYAFwH7AAACfAAXAfsAAAKxACwBrgAbAu0AFwHxACUC9gAXAfEAJQL1ABcB8QAlAvgAFwHxACUC7AAXAfEAJQKNABUBzgAjAooAFQGtACMCkAAVAa0AIwKHABUBrQAjAokAFQHHACMCTQAXAVYAEgMDAC4B1AATAwwAFwH7ABQDFgAXAfsAFAMMABcB+wAUAxAAFwH7ABQDDQAXAfsAFAFlAB8BDwAAAWEAHwEx//YC0QAYAgsADQLrABgCAQANAuIAGAICAA0CgQAYAPUAEwJ+ABgBEgASAnYAGAD7AAYCcAAYAQv/+wN7AB8DAgATA3QAHwMJABMDfQAfAwYAEwLeABMB+wAUAt4AEwH7ABQC4gATAfsAFALfABMB+wAUAu0ALQIAAB4C9QAtAggAHgL4AC0B+QAeAu0ALQH9AB4COwAYAgwACgI0ABgB+wAKAsYAIgF0ABUCvAAiAW0AFQLNACIBegAVAtAAIgF3ABUB/gAjAVYAIgH0ACMBVgAiAfcAIwGPACIB9AAjAWoAHAH0ACMBVgAiAmcALgE2ABQCWwApARsAFAJcACkBGwAUAmQAKQFDABQC7wAVAfEADAL2ABUB8QAMAvEAFQHxAAwC/AAVAfEADALxABUB8QAMAsYADgHeAA8CyAAOAdD/7AOcAAoCiP/pA5kACgKb/+kC4QALAdH/8gLdAAsBwv/yAskADQHF/+wCnAAVAaYACwKuABUBpQALAqAAFQGkAAsB+wAUATYAFAKa/+kBvP/sAi8AKwF1ABIC3P/8AcwAKwLu//wBzAArAtz//AIqACsC8//8AiYAAgLu//wCEAArAvD//AHZACsC8P/8AdcAKwLw//wB1wArAu7//AHXACsC8f/8AdoAKwL2//wB1QArAtz//AG8ACsCkwAVAcgAIwKKABUBwwAjAo0AFQHOACMCqAAVAmQAIwKQABMCBv/sApUAFQIlACMCjQAVAcsAIwKPABUByAAjAV4AHwEKABgBYgAfAQoAGALvAC0CBwAeAu0ALQIEAB4C8QAxAnUAHgLtAC0COv/8AvUALQJCAB4C+AAtAgQAHgL7AC0B/gAeAzcALQJEAB4DNwAtAkgAHgL8AC0CSAAeAzsALQJIAB4DQwAtAkQAHgL1ABUB8QAMAu0AFQHxAAwDYQAVAkAADANbABUCRAAMA1sAFQJAAAwDVQAVAkAADANTABUCRAAMAssADQHK/+wCuwANAcr/7ALVAA0Btv/sAjMAIAHUACwBbP/uAdYALAHUACwAEgAAABL/3gASAAAAEv+tAff/7gHvAB4B7wAeAe8AHgJBAAACQQAAAkEAAAIA/+4CAP/uAXT/7gIAACECAAAmAgAAJgIAACYBiwApAQsALQEAADQA/QAqAUkAIgGAABgBTQA0AZIANAFqACIBkgAPAZIAFQFGABwBGAA3AV8AKADs/+4A0QBNAJYAMQDRAB8AxgAfANwAIADcACAA0QAfAM4AHwEX/+4BCv/uAjEAHAI+ABwBNP/uATT/7gIxABwCPgAcAUT/7gE9/+4CMQAcAj4AHAKT/+4Cff/uAeQAHgHvAB4Ck//uAn3/7gHkAB4BGABLAe8AHgKT/+4Cff/uAeQAHgHvAB4BYgAZAX4AGQFiABkBfgAZAWEAAAF0AAABYQAAAXQAAAJ0/+4Ce//uA3sALAN5ACwCdP/uAnv/7gN7ACwDeQAsAz3/7gM9/+4EUgAsBFIALAM9/+4DPf/uAdwADwRSACwB3AATBFIALALM/+4Bq//uAav/7gGr/+4Bq//uAav/7gGr/+4Cjv/uAo7/7gKO/+4Bq//uAav/7gGr/+4Bq//uAav/7gGr/+4Bq//uAav/7gGr/+4CyAAgAsgAIALIACACAAAtAV//7gFf/+4BX//uAV//7gLI/+4CyP/uAsj/7gFx/+4BdP/uAgkAJgMAABADAAAQAsz/7gLM/+4DAAAQAwAAEAIS/+4Blv/uAYYAJQHaACoCEv/uAZb/7gGGACUB2gAqAZX/7gGm/+4CqQAgApIAIAGV/+4Bpv/uAfcAIwHjAB4BtP/uAeP/7gIxABwCMQAcAQr/7gEK/+4B8QAYAdYAGAIA/+4B1P/uAZsALAGgACwBF//uAQr/7gIMACwB/AAsAgr/7gFw/+4BhQAgAWMAJQF0AAABdAAAATT/7gE0/+4B9wAhAhkALgFjAA4BhQAgAfcAIQIZAC4BVwAsAST/7gEK/+4B9wAfAhkAHwF0AAABdAAAAasAIgHTAA8B0QAfAdMADwHRABQB4AAUAasAHwHTAA8AAAAdAAAAIwAAACgAAAAdAAAACgAAABEAAAAdAAAAHQDoABEA6AARAPQAFADoABEA6AARANEATQDRAB8A3AAgANEAHwI+ABwCPgAcAj4AHAHvAB4B7wAeAe8AHgFiABkBYgAZAWEAAAFhAAADeQAsA3kALARSACwEUgAsAwAAEAMAABAB2gAqAdoAKgKSACAB4wAeAjEAHAHWABgBoAAsAfwALAFjACUBdAAAAhkALgFjACUB9wAhAhkALgAAAGMA0f/6ANEAHwDRAB8A0QAfATAATQF0AAABdP/VAhkALgI+ABwCPgAcAj4AHAI+ABwCPgAcAj4AHAI+ABwCPgAcAe8AHgHvAB4B7wAeAe8AHgHvAB4B7wAeAe8AHgFiABkBYgAZAWIAGQFiABkBYgAZAWIAGQFiABkBYv/iAWIAFQFhAAABYQAAAWEAAAFhAAABYQAAAWEAAAFhAAABYQAAAWEAAAN5ACwDeQAsA3kALARSACwEUgAsAwAAEAHaACoCkgAgApIAIAKSACACkgAgApIAIAKSACAB4wAeAeMAHgJOABQDpQAdAk4AFAIxABwCMQAcAjEAHAJOABQCTgAUAk4AFAJOABQCTgAUAk4AFAHWABgB1gAYAdYAGAH8ACwB/AAsAfwALAH8ACwCCgAHAWMAHwE0/+4BCv/uAQr/7gF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAhkALgJd//gCGQAuAhkALgIZAC4CRgAVAkYAFQEYAEsB6ABFAQAANAD9ACoBSQAiAYAAGAE1ABgBkgA0AXYAHQGSAA8BkgAVAUYAHADR//oAxv/6Aj4AHAIxABwBF//uATT/7gI+ABwCMQAcARf/5gE0/+4CPgAcAjEAHAEX/+4BNP/uAj4AHAIxABwBF//uATT/7gI+ABwCMQAcARf/7gE0/+4CPgAcAjEAHAEX/+4BNP/uApIAIAKpACABlf/uAab/7gKSACACqQAgAZX/7gGm/+4B7wAeAeQAHgKT/+4Cff/uAe8AHgHkAB4Ck//uAn3/7gHvAB4B5AAeApP/7gJ9/+4B7wAeAeQAHgKT/+4Cff/uAWIAGQF+ABkBYgAZAX4AGQFiABkBfgAZAWIAGQF+ABkBYQAAAXQAAAFhAAABdAAAAk4AFAJmABQBtP/uAeP/7gJOABQCZgAUAbT/7gHj/+4CTgAUAmYAFAG0/+4B4//uAk4AFAJmABQBtP/uAeP/7gH8ACwCDAAsAfwALAIMACwBF//uAQr/7gFjAB8BhQAgAWMAJQGsABUB6P/uAnX/7gIKAAcCNQAHAgr/7gIK/+4CRgAVAbwAIAJGABUBvAAgAjEAHAIxABwBtP/uAeP/7gF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAGLABEBdAAAAXQAAAF0AAABdAAAAXQAAAF0AAACGQAuAfcAIQE0/+4BNP/uATT/7gE0/+4A6AAdAOj/7gDoAAoA6AAdAOgAHQDo/+4A6AAjAOj/7gDoAB0A6P/uAOgAEQDo/+4A6AAoAOj/7gFXACwA6P/uAOj/7gDo/+4A6AARAXQAAAIZAB8CzP/uANEAHQDGAB0AAP6+AAD+sAAAADsAAABCAAAAOQAAADsAAAAjAAAAHwAA/q8AAP69AAD+pwAA/qgAAP6aAAD+pgAA/qQAAP6kAAD+qgAA/pQAAP6xAAD+qgAA/o4AAP6lAAD+oQAA/qUAAP6cAAD/WwAA/a8AAP7gAAD9LwAA/E4AAPxrAAD+6QAA/4sAAP7pAAD/iwAA/2sAAP+DAAD+lwAA/sMAAP1HAAAAfwAA/24AAP+2AAD+twAA/sIAAP7hAAD/CAAA/qAAAP8IAAAAGwAA/r0AAP6PAAD+6AAA/ucAAP9MAAD+sQAAAZ8AAP6hAAD+ugAA/sgAAP6hAAD+UwAA/iQDc//8AvT/+AL5//wC7f/8AvH//ALx//wC8P/8AfQAAAH0AAACogAsA0gALAKiACwB9AAAAfQAAAH0AAAB9AAAAfQAAAFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrABYBawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwNAACsDsgArAoIAKwHxACsB2gArAeQAKwHkACsB1gArAfoAKwHWACsB1gArAfEAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHxACsDQwArAdYAKwHxACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwIRACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAjgAKwI2ACsB1gArAdYAKwLQACsCzAArAscAKwLIACsCzAArAswAKwLMACsCxQArAswAKwLJACsB4//qAej/6gHkAAAB6AAAAeQAAAH5AAAB+QAAAfkAAAI7AAAB4AAAAkYAGwGiABsBogAbAaIAGwGiABsBogAbAkoAGwGiABsCBQAlAgQAJQIJACUCCQAlAjgAJQIoACUCiQAlAmoAJQIJACUCCQAlAgkAJQIJACUCCQAlAgkAJQIoACUCCQAAAp8AJQPgACUDFQAlAfYAIAHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMBwwAjAcUAIwHEACMBxwAjAc4AIwHCACMByQAjAcIAIwHAACMBwQAjAcYAIwHEACMBwgAjAcUAIwHDACMBxwAjAcMAIwHAACMBxQAjAccAIwHDACMBxwAjAccAIwHEACMBxQAjAcQAIwHLACMBxAAjAcwAIwHHACMBxAAjAccAIwHEACMBwwAjAcQAIwHFACMBxwAjAccAIwHhACMBxwAjAcMAIwHHACMBwQAjAccAIwHHACMBxwAjAccAIwHDACMBxwAjAcQAIwHBACMBxwAjAcMAIwHEACMBwwAjAcQAIwHEACMBwwAjAdYAIwHGACMBxwAjAcMAIwHHACMC/wAjAzsAIwHEACMB1gAjAWcAEgFkABICOQASAdAAEwHQABMB0AATAdAAEwHQABMB0AATAdAAEwHQABMB0AATAl4AEwIAABMB3gATAeAAEwHZABMB2QATAeAAEwHbABMB0AABAdAAEwMKABMCnAATAdsAEwHQABMD4AATAssAEwGw//MCTQAGAgoABAIKABQCCgAHAgoAFAI1ABQCCgAUAgoAFAIKABQCCgAUAnsAFAIKABQCMwAUAgoAFAIKABQCCv/0A5wAFAEq//UBDf/dAPsAEwKSACYDgf/KATwADwE4ADgBPAAAAfwBBgAA/lYBLAAeAtUB4AG6ALUCaQE2AroB0wJhAXcCqwHHApcAbALBAGwDWQDwAs4BkgIrATsDBP+MAmwBDQG+ACADJwHqApsBWQJ4AXQBSQAKAUkACgFZAAoCRgAKAjwACgFJAAoBUgAKAkMACgFSAAoBUgAKAkIACgI2AAoCQwAKAloACgJyAAoCMAAKAmIACgKOAAoCJAAKAzEACgNIAAoBbAAKAWwACgJzAAoBcQAKAWwACgFlAAoCewAKAmoACgJuAAoCqQAKAmoACgL4AAoCXwAKAvgACgN3AAoDLAAKAyIACgF7AAoBpAAKAn4ACgF9AAoBegAKAXoACgJ6AAoCaQAKAn4ACgKuAAoCaQAKAnMACgKFAAoCbQAKAtoACgNsAAoD1QAKA2cACgPVAAoDkwAKA9YACgKZAAoCJwAKAicACgIrAAoDNwAKAzMACgInAAoCJwAKAzsACgInAAoCKgAKAzsACgMPAAoDOwAKAm4ACgJZAAoCuAAKAr4ACgKqAAoCqgAKAasACgK9AAoCVwAKAsIACgN0AAoDcAAKAlcACgK8AAoCoAAKAloACgK5AAoDGAAKAnYACgM8AAoCGQAKAh0ACgNtAAoCHQAKAiIACgM7AAoDNgAKAh0ACgIZAAoDNgAKAhQACgImAAsDPQALAxwACgM2AAoDggAKA4cACgMnAAoC0gAKAtUACgLPAAoCzgAKAoIACgJ8AAoCaQAKAoYACgM2AAoDPgAKAyoACgM0AAoC2AAKAz4ACgLYADYD2wA2AsMACgLDAAoCdgAKAogACgJpAAoCfAAKAiQACgJ2AAoB0AAKAtIACgMuAAoDIAAKAtIACgLXAAoCwgAKAtAACgKRAAoCsgAKApEACgKRAAoCSQAKAmMACgI9AAoCTwAKAycACgMWAAoCuwAKAw8ACgLlAAoC5QAKApYACgMOAAoCYQAKAmMACgI6AAoCZAAKAvgACgLEAAoC1AAKAsgACgLIAAoCkwAKAs4ACgLjAAoBuAAKAsoACgLJAAoCywAKAo0ACgLMAAoCwAAKA4YACgLIAAoCwAAKAn0ACgNFAAoC0QAKAsYACgJaAAYC9wAGA1QABgNTAAoDdQAKA20ACgLGAAoCxgAKArQACgK0AAoCbwAKAo0ACgJkAAoC1gAKAtYACgLWAAoDzQAKA80ACgLWAAoDzQAKA80ACgLjAAoC4wAKA/IACgPuAAoDpgAKA6YACgOmAAoEpwAKBKcACgOmAAoEpwAKBKcACgOmAAoDpgAKA6YACgS7AAoEuwAKA6YACgS7AAoEqgAKAn0ACgK5AAoCgQAKAn0ACgJ9AAoCTQAKAnYACgJEAAoCRAAKAccACgIEACYC6AAmAnIACgKIAAoCLwArAZEAFgGRABYBkQAWAZ0AFgFoAAoCSAAKAnQACgGgAAoBwwCaAm0ACgFFAAoB1gArAdYAKwHWACsC0QArAtQAKwHWACsB1gArAtQAKwHWACsB1gArAtIAKwLAACsC1AArAssAAAMVABMC3gATAs8AEwLDABMCCAAlAvUAJQL7ACUB1gAjAdYAIwLrACMB1gAjAdYAIwHWACMC8AAjArgAIwLrACMDFv/sAkv/7AKnAAsCiAALAqgACwJrABQCHwAUAiYAFAEFABgBBQALAk4ACwEa//wBF//4AQUAGAJOABgCAAAYAkoAGAMsAA0CvAANAwAADQLXAA0DBQANAQ//+wF1ABMCJgATAXUAEwIpABMBpQATAisAEwQUABMB8gAeAe4AHgHuAB4DKgAeAyoAHgHxAB4B7gAeAyoAHgHuAB4B7gAeAyoAHgLQAB4DKgAeAzwACgMFAAoCrQALAp8ACwJ/AAsCmgALAVsAIgJkACICIgAiAmEAIgM/ACIDPwAiAj0AIgJiACICQQAiAiAAIgJiACICLgAUAdIAFAI2ABQCCwAMAor/6QPj/+kCCwAMAgsADAL7AAwC+wAMAgsADAILAAwC+AAMAgsADAILAAwDCgAMAwYADAL/AAwDTAAKAzwACgLxAAoDLAANAzgADQMsAA0DLAANAvMADQMEAA0DAAANAv8ADQMnAAEDKwABAtoAAQLTAAECegABArUAAQJ6AAsDNQALAyYAJQMmACUC5AAlAuQAJQLlACUC3wAlAocAJQLqACUBbAAiAkQAIgKcACICmQAiAkEAIgJiACICOgAiAlIAIgLjABsC3AAbAuMAGwLjABsCoQAbAqIAGwKGABsCsgAbAuMAGwLjABsCoQAbAqYAGwKGABsCrgAbAn0AGwKnABsCQgABAmMAAQJOAAECTgABAp8AGwKkABsChQAbAn4AGwKrABsCnwAbAqUAGwKFABsBuf/yAq7/8gMK//IDCv/yAr3/8gK9//ICtv/yAtn/8gK2//ICqv/yAmD/8gNn//ICvf/yArb/8gJWAAsDXQALA0kACwJ+AAECSgABAmMAAQK6ABQDCwAUArIAFAMAABQCtgAUAwQAFALtABQCk//RApP/0QKT/9EDgv/RA4P/0QKT/9EDh//RA4f/0QKT/9ECk//RA6L/0QOi/9ECwP/RAsD/0QLA/9ED5//RA+v/0QLA/9ED4v/RA+f/0QLT/9EC0//RAs7/0QPT/9ED0//RAs7/0QPT/9ED0//RAyEAJQMsACUDIQAlAyEAJQMhACUC5AAlAuYAJQLiACUC5gAlAocAJQKtACYDggAmA48AIANfACABbQASAbQAFAG4ABQBuAAUAb0AFAFiAAoCVQAKAhMACgLtABQA3gAIAlgAKgST//wEk//8AR4AAAEeAAACoQAAAvYAAALaACUDNAAlAuUAEwM0ABMB0AATAuUAEwPoAMID6ACCA+gAygPoAJQD6ADlA+gAuwPoAOUD6ACvA+gAqAPoAFwD6ABQA+gAUAPoAMID6AC3A+gBJgPoARYD6ABjA+gAWAPoALMD6ACgA+gArwPoAJgD6ADhA+gA4QPoAEwD6ABMA+gAXAPoAEwD6AB6A+gAZwPoAHoD6ACFA+gAoAPoAJQD6ACgA+gAXAPoAEwD6ABuA+gAbgPoAOgD6ADdA+gAhQPoAIID6ABqA+gAcgPoAFwD6ACJA+gAfgPoAH4D6ABuA+gAYwPoAGMD6ABYA+gASAPoAEgD6ABEA+gARAPoAEQD6ACFA+gAegPoAHoD6ADKA+gAagPoAH4D6AB2A+gA3QPoAJQD6ABYA+gArwPoAG4D6ADhA+gAvgPoANYD6AEHA+gArwPoAH4D6ACgA+gApAPoAFwD6AB6A+gAggPoAH4D6ACCA+gAuwPoAlcD6AKIA+gAHgPoACID6AEaA+gBGgPoAM4D6ACUA+gAygPoAHoD6ADlA+gArAPoALMD6ABuA+gA0gPoAIUD6ACkA+gApAPoAJED6ACJA+gA2QPoAM4D6ABuA+gAagPoAL4D6AC3A+gAVAPoAEgD6ACNA+gAjQPoAH4D6AByA+gAbgPoAG4D6ACzA+gAiQPoANID6ACzA+gAegPoAHoD6ADZA+gAhQPoAHID6ACJA+gAggPoAVsD6AFbA+gAbgPoAFAD6ACNA+gAegPoAHoD6ABQA+gAUAPoAFQD6ADoA+gA4QPoAOED6ACYA+gAYwPoAG4D6ABYA+gAWAPoAFgD6ACRA+gAkQPoAJED6AB2A+gA2QPoAJQD6ACYA+gAYwPoALcD6ABqA+gApAPoAFwD6AD4A+gArwPoAJQD6AESA+gAXwPoAOwD6AC3A+gA6APoAK8D6ABUA+gAXAPoAL4D6ACCA+gAdgPoANYD6ADCA+gAnAPoAFQD6ABcA+gAvgPoAYED6ADGA+gBNQPoATUD6ACoA+gAoAPoAK8D6ACNA+gAbgPoAFQD6ACoA+gAggPoAMoD6ABnA+gAYwPoAOgD6AEaA+gAegPoAGoD6ADKA+gAWAPoAOwD6AC7A+gASAPoAJgD6ACvA+gAcgPoAG4D6ABEA+gAbgPoAJQD6ADKA+gAfgPoAKwD6ACJA+gAXAPoAHID6ABEA+gBowPoAHID6AB6A+gAOgHrAC4D6AGrA+gB2QPoAOUD6ACoA+gAJgPoACYD6AAeA+gAHgPoACYD6AAmA+gAKgPoACoD6AAuA+gALgPoAC4D6AAqA+gAMgPoADID6AHoA+gADwPoAEQD6ABEA+gAAAPoAAAD6ABEA+gARAPoAAAD6AC3A+gAhQPoAacD6ACzA+gAtwPoACID6AC+A+gB6APoAQsD6AHoA+gBSAPoAegD6AExA+gAHgPoABoD6ABIA+gALgPoAC4D6AAuA+gALgPoAC4D6AEDA+gAMgPoABMD6AAaA+gBswPoACID6AC+A+gBEgPoAFgD6ACJA+gAIgPoAlsD6ABMA+gAwgPoAKAD6AAyA+gAlAPoADkD6AAPA+gA5QPoARYD6ADwA+gA/wPoANYD6AD8A+gBBwPoAOgD6ADlA+gA+APoAacD6AGgA+gAggPoAJQD6ADSA+gA8APoAEgD6ACYA+gAzgPoANID6ACoA+gA1gPoANYD6ACzA+gAjQPoAYUD6AExA+gAmAPoANYD6ABIA+gAmAPoAKwD6ADWA+gAswPoAKAD6ADwA+gAnAPoAKQD6ACRA+gAIgPoAKAD6ACJA+gA1gPoAoUD6AA9A+gATAPoAVcD6AAAA+gBbgPoAQcD6ADSA+gBHgPoAPgD6AEiA+gBSAPoAN0D6ADWA+gBcgPoAWYD6ADWA+gBeQPoAF8D6ADlA+gBAwPoAOgD6ADwA+gBLQPoAS0D6AFIA+gA7APoAN0D6ABYA+gA5QPoAN0D6AEaA+gCbQPoAdkD6ACFA+gAWAH0AFgB9ABYAfQAZwH0AGoB9ABMAfQAXAH0AEgB9ABAAfQAcgH0AFwB9AA5AfQAQAH0ADUB9AA9AfQAJgH0ADkB9ABAAfQAIgH0AFQB9AAuAfQATAH0AB4B9ABMAfQAPQH0AB4B9ABYAfQAXwH0AC4B9ABEAfQANQH0AKAB9AAiAfQAHgH0ADkB9AA5AfQARAH0ACYB9ABjAfQANQH0ACYB9AA1AfQAJgH0AGoB9AA1AfQATAH0ACYB9AAiAfQAHgH0AFQB9ABAAfQAXwH0ACYB9ABjAfQAPQH0AEAB9AA5A+gBFgPoAMID6ABuA+gAAAPoAdkD6ABQAWMAJQH0AIQCMwArAmcAKgJ4ADACHAAsAhwALAKaADABlQAtAjoALQKUAC0CWAAqAngAMAMqABsDGgAIAkkAGAJJAAcCHAAtAqkAMAL9ACwDOQAbAhwALAIcACwCMwAbAlgALQH+ADACggAvAmcALQJ2AC0CDQAtAg0ALQJYAC0CWAAtAkkAKQJJACkCHAAtAeAAJwIzABsCSQAwAkkAKQHCACwCHAAsAqMALQKBACsCVwAtAlgALQI6ADACHAAvAcIAKwHgADkAAP29AcIALAHC/oQAAP4yAAD9tgAA/bAAAP22AAD+5QAA/nkAAP7/ApMAGQE3ACwCNgArAYz/yAGD/94Bdv+PAcIALAGIADAAAP3KAAD+0gAA/d0AAP3FAAD+TwAA/lQAAP5FAAD/KQKmAHECDQAyAg0AMgKyADICPwAyAm0AMgJtADECCQAvAw4AMgJtADICtAA0Am8AKwVzAFcD6AGgA+gASAPoAEgD6ABcA+gAXAPoAWID6ADZA+gAiQPoAGMD6ACJA+gASAPoAD0D6ABEA+gAWAPoAJwD6AAuA+gAGgPoAXYD6ADsA+gArAPoAK8D6ADoA+gAlAPoAH4D6AB6A+gAjQPoAOUD6AA9A+gAQAPoAEQD6AA1A+gAGgPoAJQD6AAaA+gAIgPoACYD6AAWA+gAuwPoABYD6AC+A+gAggPoAJED6ACFA+gAoAPoAQMD6AEDA+gAPQPoAKAD6AHZA+gBZgPoAJwD6ACcA+gAIgPoARID6ACNA+gAjQPoAbMD6ADGA+gAWAPoAG4D6AC3A+gAoAPoAKAD6ACgA+gAKgPoACYD6AD4A+gA+APoAIUD6ACgA+gAhQPoAKAD6ACCA+gARAPoAK8D6ACUA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAiA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoARID6ADsA+gA/APoAOwD6AD/A+gA9APoAPQD6AEDA+gA/APoAHoD6AB6A+gAegPoAHoD6AB6A+gAegPoAHoD6AB6A+gAegPoAHoD6ABUA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAWA+gAFgPoABYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoACYD6AAmA+gAJgPoAa8D6AA9A+gAPQPoAcYD6AGvA+gAHgPoAB4D6AHGA+gBrwPoAcoD6AHCA+gBwgPoAa8D6AHCA+gBwgPoAa8D6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AAAA+gAAAPoAAAD6AHZA+gAAAPoAAAD6AHZA+gAAAPoAAAD6AAAA+j/7gPoAYAD6AHXA+gBgAPoAYAD6P/uA+j/7gPo/+4D6AHXA+gBgAPoAYAD6P/uA+j/7gPo/+4D6AHXA+gBgAPoAYAD6P/uA+j/7gPo/+4D6P/uA+j/7gPo/+4D6P/uA+j/7gPo/+4D6P/uA+j/7gPo/+4D6AAAA+gDWgPoAFwD6ABcA+gAYwPoAGMD6ABfA+gAXwPoAFwD6AAmA+gAggPoAIID6AAmA+gAagPoAGoD6AAmA+gAJgPoAB4D6ABEA+gARAPoAAAD6AAAA+gAAAPoAAAD6AAIA+gAJgPoACYD6ACCA+gAJgPoACYD6AAuA+gALgNtAFEDbQBRA+gAqAPoAV8D6AD8A+gANQPoADUD6ADWA+gADwPoAFAD6ABfA+gAXwPoAjgD6ABQA+gCLQPoAEAD6AIlA+gASAPoAjED6ABIA+gCLQPoAEAD6AB2A+gAWAPoAqcD6ABEA+gB6APoAIkD6ABqA+gCeQPoACYD6AAmA+gAIgPoAMYB9AAAAQUAGAEFABABBQAIARH/+wEF//gBE//4AQUACAEFAAwBE///ARcAAAEY//gBFwAAAQUACgEX//8BBQAYAQUAAQEFABgA5v/RAQH/0QDm/9EBHv/RAR4AAAEFAAsBGf/7AQUACwEM//sBHf/+AQX/+AIKABQCCgAUAgoAFAIKABQCCgAUAgoAFALNABQDGgAUAcIAEAMlAAoB/AAIAe//6gH8AAYB+P/7AgAADQH4AA0B+AAKAfgADQKHAA0CBAANAfkADQIdAA0B+AANAgIADQIBAA0Bt//sAbr/7AH0AAAB9AAAAfQAAAFrAB8BawAfAfQAAAH0AAAB9AAAAfQAAAFrAB8BawAfAWsAHwH0AAAB9AAAAWsAHwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAFrAB8BawAfAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAADTwAYA4UAHwKIAA0B9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAABBQABARf//AEbAAABEwAFAR8AAQEFABgBQQAYAQUAGAEFABgBDP/7AR3//gEF//gBBQALAQUACgEX//8BBQAYAQUAAQEFABgBD//RAOb/0QDm/9EBBQAYAOb/0QEe/9EA/v/RAOn/0QDm/9EAuf/RAOb/0QDm/9EBHv/RAP7/0QDp/9EA5v/RALn/0QEP/9EA5v/RAOb/0QEe/9EA/v/RAOn/0QDm/9EAuf/RAQ//0QDm/9EA5v/RAOb/0QDm/9EBAf/XAOb/1ADm/9EB/AAIAe//6gH8AAYB+P/7AgAADQH4AA0B+AAKAfgADQH4AA0ChwANAgQADQH5AA0CHQANAfgADQICAA0CAQANAf3/1wLmAA0DNAANAu0ABwJqAAIB/QANAOb/0QDm/9EA5v/RAQ//0QEB/9EA5v/RALn/0QEB/9EA5v/RAR7/0QD+/9EA5v/RApUADQKVAA0B/QANAe8ABAH4AA0CqgANApAADQNCAA0CvAANAlgADQH4AA0D4AANAyUACgM+//0BcwATAQP/+gED//oBAwATAQMAEwET//0BEv/9AQv/+wEO//sBAwAMAQcADAEDAAwBEf/7AQP/+wEDAAMBAwAMAw0AAAMNAAADDQAAAw0AAAMNAAADLAARAzAAEQMgAAoDJQAKAz7//QNN//0A/AATAw0AEwEX//kBE//4AYEAEwGBABMBKAATAQMAAwEDABMBAwATAQMAEwED//kBA//3ARP//QHPABMCFgATAu4AAAGeABMBAwATAf8AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwN8ABMDDQATAw0AEwPSABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATA4YAEwMNABMEKwATA8wAEwMNABMDDQATAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCeQAUAgoAFAIKABQCCgAUAgoAFAIhABQCCgAUAgoAFAIKABQCCgAUAs0AFAMaABQCsgAUA5EAFAORABQCqAAUAmoAFAIKABQCCgAUAgj/tQIM/7UDZQAUAukAFAHCABABygAQAcIAEAHAABABwAAQAcIAEAHyAB4B8QAeAe4AHgHxAB4B7QAeA0gALANIACwCogAsAz0ALANiACwC/QAsAqIALAKiACwDOQAsAqIALAKiACwCogAsAqIALAKiACwCogAsAyAADAJRABsCSgAbAaIAGwJGABsCHQAbAgcAGwGtABsBogAbAkoAGwGiABsBogAbAaIAGwGiABsBogAbAaIAGwGiABsBpwAbAlUAGwJGABsBogAbAkoAGwJsABsCCwAbA2gAGwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAACWAAXA6oAJQIJACUBxQAjAccAIwH0AAAB9AAAAfQAAAOcABQB+wAPAWwAIgIRACIBWwAiAVgAIgFZACIDCQAiAV0AIgFZACIBbAAiAWwAIgFZAAABbAAAA1EAAAH0AAACvwAAATYAAAINAAABNgAAATYAAAE2AAABNgAAAbb/8gG6//ICbf/yAbL/8gJg//IB1f/yAbn/8gG5//ICyP/yAmD/8gJt//IBbQAAAh4AAAFtAAABbQAAAcEADAG0AAABuAAAAbgAAAG4AAABtAAAAbQAAAG4AAACFAAAAbcAAAG2AAABtgAAAfQAAAH0AAAB9AAAA3wAAAN8AAABHwAfAi4AKAHcABQByQARAkgAEgHCAA8BDAAYAR0AGAEdABgBHQAYAR0AGAEdABgBHQAYAR0AGAEdABgBHQAYAR0AGAEdABgBHQAMAR0AAAEdAAwBHQAMAfEABAHxAAQB7QAEAfEABAH2AAQCjQACAo0AAgJOAAkCTgAJAk4ACQJOAAkCTgAJAk4ACQJOAAkCTgAJAk4ACQJlAAkCTgAJAk4ACQJOAAkCTgAJAQAANAE2AE0BbQA7AW0AIQHiACwB4gAsAAAAhADo/+4A6AARAAAAEQBK/+4A6AAIAAAACADR//oAAP/6AOb/7gDoABEA6P/oAAD/6ADoAAgAAAAxAOr/7gDo/+gAAAAMAOv/3wAAAB8AAAARAAAAEQAAABEAAAAIAAAAEQAAABEAAAAdAAAAIwAAACgAAAAdAAAACgAAABEAAAAdAAAAHQAAABEAAAARAAAAEQAAAAgAAAARAAAAIADoABEAAAARAj4AHAIxABwBNP/KATT/qQHvAB4B5AAeApP/7gJ9/+4B7wAeAeQAHgKT/+4Cff/uAWIAGQF+ABkBYgAZAX4AGQFhAAABYgAAAWEAAAF0AAABYQAAAXYAAAFhAAABdAAAAWEAAAF0AAABYQAAAXQAAAN5ACwDewAsAnT/7gJ7/+4B2gAqAYYAJQIS/+4Blv/uAjEAFAIxABQBtP/uAeP/7gIxABQCMQAUAbT/7gHj/+4CTgAUAmYAFAG0/+4B4//uAk4AFAJmABQBtP/uAeP/7gHWABgB8QAYAQr/7gEK/+4BqwAiAdMADwH8ACwCDAAsARf/7gEK/+4BdAAAAXQAAAF0AAABdAAAAhkALgH3ACEBNP/uATT/7gIZAC4B9wAhATT/0wE0/+4CPgAcAjwAHAFC/+4BP//uAl3/+AJN//gBvf/uAeD/+gHRAAAB4AAKAfwALAIMACwB9//uAOH/4wFY//UA5P/tABb/SQF2/4QBEP+EAkH/zwIM/9cCt/+gAXL/zQGE/4YBcv+DARf/fAD3/3wBfP+NAUX/gAGt/44BbP+GAYX/iAFl/4gBVv+JAVX/iQFy/4wBX/+KATj/hAEI/3wBNP+AAUz/iAD1/2gBFP+BART/fwDe/3kBhf+GASL/fwEa/34BIv+CASv/jACq/4EAqv+bAXT/hQGr/50BpP+cAOv/eQF0/4UA3P95AS3/gAEy/4QA8//xALP/twC5AAIAwQBPAL8AbgC3AFEA/v7FAP3/AgEE/yQA6P/CAM7/zQDX/9AA9f/FANT/8QC8ABYBjP+GAY3/hgIB/5ABhv+IAYb/iAF9/4gBff+IAZf/iQG5/4kBNP+AAPX/egDr/3oBlf+PAYX/jwFc/48Bc/+NAWL/jQFb/40BU/+NAUn/jQFc/48Bcv+EAbX/jgGz/4wBhv+JAW//fgFZ/4QBUv+FAWz/hwE2/4oBbP+OATj/jAE4/4sBGP99ARr/fwEP/3wA2v93AP7/egF0/4MB1/+KAfj/igI2/5MBNf+IAVT/gQFP/4kBUf+MAUP/hwGd/44BTv+JAT3/igE9/4oBl/+QAXL/ewF//4kBTP+HAT3/iQE3/4oA/f96Aa//iQDr/3kBI/9/ANz/egFf/4IA2v93ANz/dwDw/3kA4/97APD/egFw/4MBSf+AAUb/vwF+/+kBev+EAYz/hgFF/4AA7f/gAKz/0gCt/8gBzP+CAnb/lACn/8wA5/94APT/eQFr/4YBdf+HAXP/hQFz/4UBdf+HASr/hgE6/4cBKv+GATH/hQEZ/4YBSP+qAbP/iQGI/4UBsP+JATP/hgHt/3gCC/+KAb//hgGB/4sBOf+GAcH/kQHA/5ADEwAHAnsAAAN3AAYCagAJA2QABQIyAAICXAAIAlwACAJcAAgCuAAIAlwACAKo//0CdAAGAnv/+QN3//8CMgACAmoACQNkAAEBtQAFAooACQKAAAcBtQAEAnYAAgJ3AAUBtQAFAlYAAQIyAAoCxgABAr0ABAIyAAoCoAAIAr0AAQIyAAoCVv/UAlwAAwJcAAMCXAADAqUABwJcAAMCXAADAjcAAgKOAAQCXAAEAmUACAJcAAQCbgADAlwABAKKAAkCZQABApgABAH+AAUCwgAKAlwABwIlAAYCnAACAesAAwMMAAUC4v/MA2QACQIoAAkCcwABAywACgFZAAEB/gAIAaIABAIkAAgBnQAJAfUAAQJ2AAACJAAIAooAAgLmAAECkwAKAnYACAKdAAQCZQAEAt0ACQIWAAkCNwAJAu8AAgMoAAYCJAAEAsIABQI3AAkCLQACAjf/kwH1AAEC3QABAt0ABgH1AAEC1AAFAfUAAQH1AAEDEQAGAyMAAgJXAAoCYQAFArIABQK4AAoDnwAJA44ABQK4AAoDcgAJArgACgK4AAoDuwADA9YABQLiAAkDFQAEA2AABAK4AAgDTQAHAoAABAKAAAMCgAADA4QABwKcAAcB9QAHAtUACQLLAAUCLQACAq4ABAHQAAYCNgAGAdkAAgK4AAkCnQACAdAACQKAAAoCdgAFAdkAAgIyABEDaQAIA2kACANgAAEDaQAIA2kACANgAAEDaQAIAr0ABgGiAAYB6wAEAqUAAgItAAkCnQADAooAAgJcAAkCQAAFAvkABALCAAECLQAJAx4AAwLdAAkC9AACAkAABQL5AAQCwgABAi0ACQMeAAMC9AACArgACgMCAAMCywAFApMAAwL5AAcC3QACAssABwL0AAIBnQABAoUAAwJ8AAMChQAGAh8ABwJhAAYC4gAGAwYABQHnAAQCYQAHAqEAAgINAAQCqAAHAp0AAwKFAAYCQAAIAmEABgJcAAUC6wACA8oAAgPTAAIC9AAJA4kABAKFAAkCqgADA3cAAAQnAAgD0wAGA9MABAN/AAUEXQAKA4AAAwPcAAQD7wADAd4ABwKYAAMCxgADAdUAAQJzAAACRAAGAdYAAgKOAAAB3gAHAqoACAK0AAYBwgAEAnMABQJqAAcBwgAHAo4AAAGdAAUCaQADAgIAAwGCAAEB3gACAZ0ABQH6AAACRAAHAmkABAJzAAcCYQAAAr0AAAJOAAUCYQAAAo4ACAJ7AAECewABAoUACAL+AAUCewABAsYAEwMRAAQDmAADApAADALGAAcCyQAZAfQAAACtAAQBXQAGAWYAAQD2AAUBZgABAdcAXQCtAAQCCgALAcMABwGLAAUBpwADAYIABwHoAAcBsAAFAdUABAIoAAkBpwAEAYIAAQIyAAoCRQADAjIAAAGxAAkCOwAEAk4AAgL0AAkBigABAZQABQJqAAICwQATBAIAAAN1AAQDogAGAvkAFQN7AAIDFQAOAqQAEwKZABADPAABAqoAAAMKAAMD2wABA3AAAgLXAA4DPQADBW8AAAIdABoDLAAWArYABgOiAAUDCgADAywACASEAAUDcAACAsEAEwLBABMD2wABA6IABgVqAAAFZwAABWoAAANwAAIDcAACApkAEAKZABAC1wAOAzwAAQACAGcAAABOAAAAYQAAAIQAAACRAAAAcgAAAOoAAgB5AAAAywAAAJMAAADoA7IAHwLmABgDsgAfAuYAGAAA/gQDsgAfAuYAGAOvABICbgARAAD+BAAA/mMAAP6wAkgACwKiACwBlAAbAToAKQGSAAAAZgAAAb0ALwEnADQBOgAqAi0AJAJUAAUBsQAPAqoAFAIaAB8CGQAeAZAAIAGHABoBYgAcAhoAFgFvACICKgAXAVoAGgHDABgB1wAeAdkAHwHVABACcwAaAnoAHgHTACUCGwAgAiAAIgIqAB0A8wAmAiQAGwFiAB0CHwAYAKMAIQJHABsCXgAjAiYAHAFpACACJgAbAhMAHgMQAB0B0gAhAfgAIgCtACYCKwAfAikAHgGcABwBvwAcAeMAIQFtACECJgAhAecAGAKgACYClAAgAwoAGgDuACMBrgAlAdIAJAJTAB4CqgAeAksAHAKmAB0DiQAiAjkAJQN+ABoDAQAWAnoAHgMDABcArgAmAiIAGQHFAB4DEAAkAngAJgMdACQCUwAeAqkAEwIXAB0CEQAaAlUAGAJPABUCIAAZAXAAIwIgABkBRwBQAPsAKgD0ACYB9ACoApgAIgJ7ACcC2gANAdz/7QST//wEk//8A3P//AL0//gC+f/8Au3//ALx//wC8f/8AvD//ALx//wC8f/8Avn//ALx//wC8f/8Au3//ALu//wC7f/8AvL//ALt//wC9f/8Au3//AL0//wEHv/8Avb//ALc//wC7f/8Au3//ALt//wC7f/8AvH//ALu//wC3P/8Atz//ALc//wC3P/8Atz//ALx//wC7f/8Au3//AL3//wC9f/8Au8ABwLz//wC8f/8AvH//ALt//wC8f/8AvH//ANi//wC8f/8AvH//APoACoB9AAAA+cABgPnAAYD5wAGA+cABgPnAAYD5wAGA+cABgPnAAYD5wAGA+cABgPnAAYD5wAGABcAAAAXAAACigAXAooAFwKKABcCigAXAu4AFwJ2ABcCigAXAooAFwJ5ABcDGwAXAqQAFwNcABcDqgAXANoAAAKiACwDQQAsAqIALAKiACwCogAsAqIALAKiACwDSAAsAqIALAMgAAwDSAAsA0gALAKiACwDPQAsA2IALAL9ACwCogAsAqIALAM5ACwCogAsAqIALAKiACwCogAsAqIALAKiACwCogAsAq4ALANFACwDSAAsAqIALANAACwDXgAsAvYALAV5ACwEhgAsAfQAAALmABcC4wAXAuYAFwLjABcDYQAXAuYAFwM8ABcC5AAXAuIAFwLmABcC5AAXAucAFwLzABcC4QAXAuMAFwMvABcD4gAXBCYAFwNlABcFjwAXBDoAFwUyABcExAAXA+j/+QMBAAADAQAAApcAFQKXABUClwAVAtoAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUC2gAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKVABUClwAVApcAFQKXABUClwAVApcAFQKXABUCmQAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUC/gAVApcAFQKXABUClwAVApcAFQKXABUClwAVApcAFQKXABUClwAVA4QAFQPnABUCrQAVApcAFQKXABUCpAAYAfQAAAH0AAAB9AAAAk4AFwJOABcDGwAXAfQAAAH0AAAB9AAAAfQAAAMDAC4DAwAuAwMALgPQAC4DAwAuAwMALgMDAC4DAwAuAwMALgMDAC4DAwAuA1IALgMDAC4DAwAuAwMALgMDAC4DAwAuAwMALgMDAC4DA//vAwMALgPaAC4EJAAuBAwALgOHAC4DLwAuAwMALgWgAC4EYgAuBNEALgQRACcB9AAAAfQAAAMMABcDDAAXA6sAFwPOABcDDAAXAyYAFwMMABcDDAAXBBwAFwMMABcDDAAXA7YAFwMMABcDEAAXAwwAEwXjABcF4wAXBJkAFwSZABcB9AAAAXkAIgFrAB8BawAfAWsAHwFrAB8BawAMAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFkABgBawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAWAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwH0AAAB9AAAAgIAIAGiAAoBzQAKAaIACgGiAAoBogAKAaIACgGiAAoBogAKAaIACgGiAAoBogAKAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAaAADgH0AAYC5QAYAt0AGALdABgC3QAYAuEAGALdABgC4QAYAuEAGALhABgDSgAYAuAAGALmABgDAAAYAt8AGALeABgC5AAYAu0AEgOiABgD6AAYA+MAGANpABkEEwAuBBIALQNPABgDTwAYAusAGALnABgC4QAYA08AGANzABgECgAYA4oAGAMXABgC3QAYBaAAGAS9ABgEQAAOBEAADgRCABMEQgATAfQAAAKAABgCfAAYAnoAGAJ3ABgCdgAYAnwAGAJ8ABgCeAAYAnwAGAJ4ABgCiAAYAn8AGAJ3ABgCdgAYAnYAGAJ2ABgCfAAYAngAGAJ1ABgCdQAYAnYAGAJ3ABgCdgAYAnYAGAJ8ABgCfgAYAnYAGAJ6ABgCmAAZAoYAGAKxABgD4wAYAngAGAJ2ABgEKwAYAfQAAAH0AAADhQAfA4UAHwOFAB8DhQAfA4UAHwOFAB8DhQAfA4UAHwOFAB8DhQAfA4UAHwOFAB8DhQAfA4UAHwOFAB8EHgAfA4UAHwOFAB8EHwAfA4UAHwOFAB8DhQAfA4UAHwOFAB8DhQAfA4UAHwQpAB8DhQAfBLAAHwRFAB8DggAfA4UAHwOFAB8C3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMDlAATAzQAEwLcABMC3AATAtwAEwLcABMC3AATAtwAEwLcABMC3AATA9cAEwQpABMDhQAaBAwAEwQKAB8DjgATAtwAEwLcABMC3AATAugAAQLzABAFHgATBR4AEwH0AAACiAANAogADQKIAA0CiAANAogADQMDAC0DAwAtAwMALQMDAC0DAwAtAwgALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DTwAtA5cALQOiAC0ELgAtAwMALQMDAC0DAwAtAfQAEwMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DAwAtAygABgMoAAYDKAAGAygABgMoAAYDKAAGAygABgMoAAYDKAAGAygABgMoAAYDKAAGAj8AGAI/ABgCPwAYAj8AGAI/ABgCPwAYAj8AGALkABgCPwAYAj8AGAI/ABgCPwAYAj8AGAM0AAwC4wAYAuMAGAI/ABgC2AAYAzkAGAOvABgDGwAYAp8AGAI/ABgDnf/4A53/+AKhAB0B9AAAAfQAAAMDAC0DAwAtAwMALQMDAC0DAwAtAwMALQMDAC0DdQAtAwMALQMDAC0B9AAAA2MALQH0AAAC3AAiAtwAIgLcACIC3AAiAtwAIgLcACIC3AAiAtwAIgLcACIC3AAiAtwAIgLcACIC3AAiAtwAIgLcACIC3AAiAvgAIgLcACIC3AAiAvIAIgMHACIC3AAiAtwAIgLcACIC9AAiAtwAIgLcACIC3AAiAtwAIgLcACIDVwAiA6IAIgQAACIDJgAiAtwAGgIJACMCCQAjAn8AIwHtACMB7AAjAe0AIwONACMB6gAjAeoAIwHtACMCwQAjAw4AIwHqACMB6gAjAe4AIwHuACMB6gAjAe0AIwHqACMB6wAjAiEAIwHwACMB7QAjAeoAIwKCACMCggAjAgkAIwIJACMCCQAjAgkAIwIJACMCCQAjAgkAIwIJACMCCQAjAgkAIwLBACMDDgAjAgkAIwIJACMDjQAjA40AIwK3ACMCCQAjAgkAIwUKACMEBwAjArYAAgJeACkDRAApAnMAKQJzACkCcwApAnMAKQJeACkCcwApAnMAKQJzACkCcwApAwwAKQJzACkCcwApAnMAKQJzACkCcwArAnMAKQJzACkCcwApA0wAKQOiACkDBQApAwkAKQJzACkDCQApA7MAKQNEACkC0AApAsAABQV0ACkEaQApA4AADAMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDBwAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAVAwwAFQMMABUDDAAHAwwAFQMMABUDDAAVAwwAFQQ6ABUDhwAVAwwAFQMVABMB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAtoADgLaAA4C2gAOAtoADgLaAA4C2gAOAtoADgLaAA4C2gAOAtoADgLaAA4C2gAOAtoADgLaAA4C2gAOAtoADgLaAA4DpQAOAukAFQLaAA4AAAAAAfQAAAOqAAoDqgAKA6oACgOqAAoDqgAKA6oACgS6AAoEswAKAfQAAAH0AAAB9AAAAfQAAALcAAsC3AALAtwACwLcAAsC3AALAtwACwLcAAsC3AALA54ACwLcAAsDcAALAtwACwLcAAsC3AALA+oACwOKAAsDngALA68ACwH0AAAB9AAAAfQAAALkABcC5AAXAuYAGQLmABkC6AAbAuIAFQLkABcC5gAZAuQAFwLkABcC5AAXAugAGwLmABkDrAAXA/0AFwLiABUEMwAdAuYAGQLkABcC/AAdAqYAFQKmABUCpgAVAqYAFQKmABUCpgAVAqYAFQKmABUCpgAVAqYAFQNEABUCpgAVAqYAFQKmABUCpgAVAqYAFQKmABUDUgAVAxYAFQKmABUCpgAVBaIAFQSCABUB9AAAAfQAAAH0AAAB9AAAAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfAWsAHwFrAB8BawAfBBIACAQZAAIEBwAJAtEACQO4AAsC3wALAfQAAAH0AAAC+QADAvkAAwNAACsDsgArAoIAKwHxACsB2gArAeQAKwHkACsB1gArAfoAKwHWACsB1gArAfEAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHxACsDQwArAdYAKwHxACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwIRACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAdYAKwHWACsB1gArAjgAKwI2ACsB1gArAdYAKwH0AAAB9AAAAtAAKwLMACsCxwArAsgAKwLMACsCzAArAswAKwLFACsCzAArAskAKwK1ABACtQAQAfQAAAH0AAAB4//qAej/6gHkAAAB6AAAAeQAAAH5AAAB+QAAAfkAAAH7AAACOwAAAeAAAAKhAAAC9gAAAfQAAAGiABsCRgAbAaIAGwGiABsBogAbAaIAGwGiABsCSgAbAaIAGwJYABcCUQAbAkoAGwGiABsCRgAbAh0AGwIHABsBrQAbAaIAGwJKABsBogAbAaIAGwGiABsBogAbAaIAGwGiABsBogAbAacAGwJVABsCRgAbAaIAGwJKABsCbAAbAgsAGwNoABsDaAAbAfQAAAIFACUCBAAlAgwAJQIJACUCOAAlAigAJQKJACUCagAlAgkAJQIJACUCCQAlAgkAJQIJACUCCQAlAigAJQIJAAAC2gAlAzQAJQKfACUD4AAlAxUAJQOqACUD4AAlAxUAJQH2ACACCQAlAgkAJAH0AAAB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAdYAIwHWACMB1gAjAcMAIwHFACMBxAAjAccAIwHOACMBwgAjAckAIwHCACMBwAAjAcEAIwHGACMBxAAjAcIAIwHFACMBxQAjAcMAIwHHACMBwwAjAcAAIwHFACMBxwAjAcMAIwHHACMBxwAjAcQAIwHFACMBxAAjAcsAIwHEACMBzAAjAccAIwHEACMBxwAjAcQAIwHDACMBxAAjAcUAIwHHACMBxwAjAeEAIwHHACMBwwAjAccAIwHBACMBxwAjAccAIwHHACMBxwAjAccAIwHDACMBxwAjAcQAIwHBACMBxwAjAcMAIwHEACMBwwAjAcQAIwHEACMBwwAjAdYAIwHGACMBxwAjAcMAIwHHACMC/wAjAzsAIwHEACMB1gAjAcUAIwH0ABUB9AAAAfQAAAH0AAABZwASAWQAEgI5ABIB9AAAAfQAAAH0AAAB9AAAAdAAEwHQABMB0AATAuUAEwHQABMB0AATAdAAEwHQABMB0AATAdAAEwHQABMCXgATAiAAEwHeABMB4AATAdkAEwHZABMB4AATAdsAEwHQAAEB0AATAuUAEwM0ABMDCgATApwAEwHbABMB0AATA+AAEwLLABMD4AATAssAEwGw//MCTQAGAgoABAIKABQCCgAUAjUAFAIKABQCCgAUAgoAFAIKABQCewAUAgoAFAH0AAACMwAUAgoAFAIKABQCCv/0A5wAFAOcABQDnAAUAfsADwEfACIBDf/dAQ3/3QEFAAgBBQAYAQUAEAEF//gBE//4ARH/+wEY//gBBQAIAQUADAET//8BFwAAARcAAAEeAAABBQALAQUACwEZ//sBBQABARf//AEbAAABEwAFAR8AAQEFABgBQQAYAQUAGAEFABgBDP/7AR3//gEF//gBBQALAQUACgEX//8BBQAYAQUAAQEFABgBBQAYAbQAGgDm/9QBpwAZAOb/0QDm/9EA5v/RAfQAAADm/9EA5v/UAQH/1wDm/9EBD//RALn/0QDm/9EBAf/RAOb/0QEe/9EA/v/RAQX/+wD///kCBgASAe//6gH8AAYB+P/7AgAADQH4AA0CBgAYAfgADQH4AA0ChwANAggAEQH5AA0CHQANAgYAGwICAA0CBwATAf3/1wLmAA0DNAANAu0ABwKNACUDOAARAzAAEQKVAA0ClQANAf0ADQHvAAQB+AANAqoADQKQAA0DQgANArwADQJYAA0B+AANA+oAFwPoABUDKAAKAyUACgM+//0DTf/9AZwADwFzABMBA//6AQP/+gEDABMBAwATARP//QES//0BC//7AQ7/+wEDAAABBwAMAQMADAER//sBA//7AQMAAwEDAAwBHP/5APwAEwET//gBgQATAYEAEwEoABMBAwADAQMAEwEDABMBAwATAQP/+QED//cBE//9Ac8AEwIWABMC7gAAAZ4AEwEDABMB/wATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDDQATA3wAEwMNABMDDQATA9IAEwMNABMDDQATAw0AEwMNABMDDQATAw0AEwMNABMDhgATAw0AEwQrABMDzAATAw0AEwMNABMDDQATAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAgoAFAIKABQCCgAUAnkAFAIKABQCCgAUAgoAFAIKABQCIQAUAgoAFAIKABQCCgAUAgoAFALNABQDGgAUArIAFAORABQDkQAUAqgAFAJqABQCCgAUAgoAFAII/7UCDP+1A2UAFALpABQB9AAAAcoAEAHCABABwAAQAcAAEAHCABAB8QAeAfIAHgHxAB4B7gAeAfEAHgHtAB4B8QAeAfIAHgHxAB4B8QAeAfEAHgHuAB4B8QAeAfIAHgHxAB4B8gAeAfIAHgHuAB4B8QAeAe4AHgHyAB4B7gAeAfEAHgH2AB4B8gAeAe4AHgHuAB4B8wAeAfEAHgHxAB4B8gAeAfYAHgHxAB4B9gAeAe4AHgHxAB4B9gAeAfIAHgHyAB4B8QAeAfIAHgHyAB4B8QAeAfIAHgHyAB4B9QAeAfEAHgH2AB4B7gAeAfEAHgHyAB4B8wAeAfEAHgHzAB4B8wAeAe4AHgHzAB4B9AAeAfoAHgH2AB4B9gAeAfYAHgHuAB4B8gAeAoMAHgLrAB4C5QAeA24AHgHxAB4B9gAeAfIAHgH0ABIB7wAeAfMAHgHvAB4B8wAeAfUAHgH1AB4B8QAeAfUAHgM1AB4DOQAeAzUAHgM1AB4DNgAeAzUAHgM1AB4DOQAeAzUAHgM6AB4DOAAeAzYAHgHzAAoB8wAKAfMACgHzAAoB8wAKAfMACgHzAAoCkAAKAfMACgH0AAoB8v/4AfMACgH0AAcDRwARAp0ACgKYAAoB8wAKAqEACgMzAAoDaAAKAqYACgJXAAoB8wAKA0cACgNDAAoCkAAWAfQAAAH0AAACAwAlAgMAJQIDACUCAQAlAgMAJQICACUCAwAlApQAJQH/ACUCAwAlAgsAJQFtABUBbQAVAW0AFQFtABUBbQAVAW0AFQFtABUBbQAVAW0AFQFtABUBbQAVAW0AFQFtABUBbQAVAW8AFQFtABUBbQAVAW0AFQFtABUCHgAVAW0AFQFtABUBbQAVAW0AFQFtABUBbQAVAW0ADgFtAA0BbQAJAW0ADgJxABUCuQAVAyMAFQJGABUBbAAiAWwAIgIRACIBWwAiAVgAIgFZACIDCQAiAV0AIgFZACIBXwAiAjsAIgKLACIBWQAiAVkAIgF6ACIBWQANAWwAIgFsACIBbAAiAWAAIgHdACIBXwAiAWwAFAFsACICDwAiAhEAIgGAACIBbAAiAWwAIgFsACIBbAAiAWwADwFsACIBbAAiAWwAIgFsAAECQgAiAosAIgFZACIBWQAiAyUAIgMgACICJwAiAVkAIgFsACIDUQAiA1EAIgE2ABQCDQAUATYAFAE2ABQBNgAUATYAFAE2ABQBNgATAfQAAAE2ABQBNgAUAdIAFAE2ABQBNgAUATYAFAFcAAYBPgAUAUQAFAE2ABQBNgAUAiEAFAJzABQB0QAUAdgAFAE2ABQB1gAUAsYADAINABQBpgAUAdIABgMSABQDEgAUAmYAEQILAAwCCwAMAgsADAILAAwCCwAMAgsADAIIAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwCCwAMAgsADAILAAwB9AAAAgsADAILAAwCCwAMAgsADAM+AAgCPwAMAgsADAIKABMB9AAAAfQAAAIJAAoBt//sAbr/7AG6/+wBt//sAbf/7AG3/+wBuv/sAbr/7AG3/+wBt//sAbf/7AG2/+wBuf/sAbn/7AG6/+wBuv/sAbf/7AKe/+wCiv/pAoP/6QKD/+kCjf/pAo3/6QOH/+kBtv/yAbL/8gG2//IBtv/yAbr/8gG2//IBtv/yAbr/8gJt//IBsv/yAmD/8gHV//IBuf/yAbn/8gLI//ICYP/yAm3/8gKg//IBtf/sAbX/7AGw/+wBtf/sAbX/7AGw/+wBsP/sAbn/7AG1/+wBtf/sAbb/7QG9/+0Cmv/sAun/7AG1/+wDJf/sAbb/7QGfAAsBnwALAZ8ACwGfAAsBowALAZ8ACwGfAAsBoQANAekACwGfAAsCXAALAZ8ACwGfAAsBnwALAZ8ACwGfAAsBnwALAogACwIAAAsBnwALAZ8ACwN8AAsDfAALApAACgH0AAYBHQAYAR0ADgEdAA4BHQAVAR0AFAEdABUBHQAVAR0AEwEdABUBHQAJAR0ABwEdAAsBBQAYAQUAGAK5ABQBzwAUAqoAFAHKABQBdwAXATgAEgIG//8B9AASAa0AGQH0AAABbQAVAW0AFQIKABQBuAAUAbgAFAG0ABQBuAAUAbgAFAG4ABQBtAAUAbQAFAG4ABQCFAAUAbcAFAG2ABQBtgAUAbUAFAGoAAwBpgAKAbkAHQGvAA8CSAAQAkQAEAJEAA8B8QAfAXX/yQGFABcB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAALx//wC8P/8AvD//ALx//wC8f/8Au3//AL1//wDGAATAxwAEwL8//wC8f/8Au3//AMYABMC9f/8Au3//AL0//wC9//8AfQAAAH0AAACigAXAzsAFwH0AAAB9AAAAjQAGAI0ABgCNAAYAu0AGAI0ABgC9QAYAfQAAAH0AAACmgAWAfQAAAH0AAAClwAVApcAFQKXABUClwAVApcAFQKXABUDJAAKA6AADgKXABUClwAVApcAFQH0AAACpgAVAwwAFwMMABcDBwAXAfQAAAH0AAADAwAtAfQAAAH0AAABawAfAWsAHwFrAB8BawAfAWsAHwHgAAoCcv/pAeMAGgJX//ABawAfAeAACgJw/+kB4wAaAUYADQFYABsBWAAbAWQAIgFkABsBawAfAWsAHwFrAB8BawAfAsEAGALaAA4DhQAfA4UAHwLcABMC3AATAtwAEwH0AAAB9AAAAnYANgH0AAAB9AAAAwMALQMDAC0DAwAtA04AJAMDAC0DAwAtAwMALQH0AAAB9AAAAvYAFwH0AAAB9AAAAr8ADgI/ABgB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAJDAAkCQwAJAkUACQH0AAACcwAPAfQAAAH0AAAC2gANAtoADQLaAA0C2gANA3AAFwNS//oEDwAOA/EABwLaAA0DUv/6AtoADQNvABcC2gANAtoADQLaAA0B9AAAAfQAAAH0AAAC7gAhAfQAAALcAAsC3AALAfQAAAMQAAEC9gAxAvYAMQL2ADEC9gAxAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAACNwAeAjcAHgI3AB4CNwAeAjcAHgI3AB4CNwAeAjcAHgI3AB4CNwAeAjcAHgI3AB4CNwAeAjcAHgI3AB4CNwAeANoAAADaAAAA2gAAAgMAPwKfAD8A2gAAANoAAAHXAAEB1wABAdcAAQJ6AAEB1wABAmkAAQDaAAAA2gAAAfUAIwDaAAAA2gAAAcoANwHKADcBygA3AcoANwHKADcBygA3AcoANwHKADcBygA3AcoANwHKADcA2gAAAaMAEAH9AAcB/QAHANoAAADaAAAA2gAAAf8ALQDaAAAA2gAAAR4ADwEe//4BHv/+AR7/8wEe//MBHv/+AR7//QEe//4BHv/+AR4AAAEeAAABSQAAATAAEgDaAAAA2gAAARz/9gDaAAAA2gAAAR7/7QEeAEEBSQAhANoAAAH4ABIBxgAOAgAAQQIAAEEByAAAAcgAAAHIAAAA2gAAANoAAAHUAA8A2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAAIXABAA2gAAANoAAADaAAAA2gAAANoAAADaAAABnAAmANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAACEgAeAhIAHgISAB4A2gAAAXT/7gDaAAAA2gAAAer//QHq//0B6v/9Aer//QHq//0B6v/9Aer//QHq//0B6v/9Aer//QDaAAAA2gAAANoAAAHq//0B6v/9ANoAAADaAAAA2gAAAmIAHgDaAAAB0AAJAdAACQDaAAACff/9ApcAIAKXACAA2gAAApcAIAInAAwA2gAAANoAAADaAAAA2gAAAjgAIAI4ACAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAALt//wC8f/8AfQAAAH0AAAB9AAAApcAFQKXABUClwAVAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAwwAFwMMABcB9AAAAfQAAAH0AAADAwAtAwMALQH0AAAB9AAAAfQAAAKcAAcCnAAHAfQAAAH0AAAB9AAAA74AHwO+AB8B9AAAAfQAAAH0AAACsgAYArIAGAH0AAAB9AAAAfQAAAQLABcECwAXAfQAAAH0AAAB9AAAAsQABwLEAAcB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAd4AKwHaACsB9AAAAfQAAAH0AAAB1gAjAdYAIwHWACMB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAACHAAUAhwAFAH0AAAB9AAAAfQAAAIHAB4CBwAeAfQAAAH0AAAB9AAAAaj/7AGo/+wB9AAAAfQAAAH0AAACqQAUAqkAFAH0AAAB9AAAAfQAAAGUABEBlAARAfQAAAH0AAAB9AAAAvgAFAL4ABQB9AAAAfQAAAH0AAAB8P/+AfD//gH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAh0AMQJFAAAB4QAfAlcAKwJZACUCHQAoAWcAFQIWABYCWAAXASwAHAEk/8oCOQAPASoAFgOCABYCWAAXAlUAIwJXAAwCUAArAaQAGAGjACcBZQAXAlcADAJZAA4B8P/pAuP/5gHk//AB6P/pAd0ADQH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAdkAEgGjABAB9AAAAfQAAAH0AAAB9AAAAhwAIAH0AAACIwAgAfQAAAFyABkCIgAPAfQAAAIIAAgB9AAAAfQAAAGdAAYBlgASAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAIMAB8B8gANAfIAFwFyABkBvQAdAboAEAINABACDAAfAZ8AEAKAABYB8gANAfIAFwFyABkBvQAdAfQAAAH0AAABUgA6AV8ANgE3ACUA0wAyANYAKwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAFhACoB9AAAAWQAKgFkACoBZAAqAfQAAAH0AAAB9AAAAfQAAAH0AAABSwAmAUUAGwE+ACQB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAFSADoBUwA7ATcAJQDTADIB9AAAANMAHQDTADIAzQAhAfQAAAIjADsBVAAkAWEAKgD2ACwBZAAqAfQAAAH0AAABZAAqAWQAKgGIACABOQATAfQAAAH0AAAB9AAAAT4AJAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAABHwAfAi4AKAH0AAAB9AAAAfQAAAHcABQB9AAAAfQAAAH0AAAB9AAAAfQAAAHJABECSAASAfQAAAHCAA8B9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAATwADwE8AAAB/AEGAAD+VgD7ABMBLAAeATgAOAHDAJoB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAANZAPACzgGSAmwBDQKXAGwCwQBsApsBWQJ4AXQCaQE2AtUB4AJhAXcDJwHqAb4AIAIrATsCugHTApIAJgOB/8oDBP+MAboAtQKrAccB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAABOj//ALdACsEjP/8AxMAKwQZ//wC3gArBAX//AK6ACsE9wASA0sAEgTo//wC3QArBPcAEgNLABIE6P/8At0AKwQF//wCqgArBOj//ALdACsEjP/8AxIAKwQZ//wC6QArBAX//AK1ACsEBf/8AqwAKwT3ABIDSwASBOj//ALdACsBwAAUAfQAAAH0AAAB9AAAALwAWgDXAFcB9AAAAfQAAAH0AAAB9AAAAAD+2AAA/tgAAP6RAAD+iwH0AAAB9AAAAAD+vgAA/hgAAP6YAAD+ewAA/qEAAP6wAAD+ewAA/tkAAP6cAAD+hQAA/vMAAP55AAD+eQAA/uQAAP6QAAD+TgAA/l8AAP5oAAD+iAAA/nkAAP4qAAD+gQAA/oAAAP7wAAD+wgAA/hMAAP6FAAD+iQAA/p0B9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD+YwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD+rwAA/r0AAP6nAAD+qAAA/poAAP6mAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAAA/qQAAP6kAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAAAP6qAAD+lAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD+sQAA/qoB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAAA/o4AAP6lAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAAAP6hAAD+pQAA/pwB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD/WwAA/kgAAP7gAAD9LwAA/E4AAPxrAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAAA/ukAAP+LAAD+6QAA/4sAAP9rAAD/gwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAAAP6XAAD+wwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD/bgAA/7YAAP4zAAD+twH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAAA/sIAAP7hAAD/CAAA/qAAAP8IAAAAfwAA/lMAAP4kAqsAFgH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAAAP69AAD+jwAA/ugAAP7nAAD/TAAA/rEAAAGfAAAAGwH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAAD+oQH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAAAP66AAD+yAAA/qEB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAk4ACQJOAAkCTgAJAk4ACQJOAAkCTgAJAk4ACQJOAAkCTgAJAmUACQJOAAkCTgAJAk4ACgJOAAkCCwADAgsAAwILAAMCC//8AfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAWIAHAMbABwCCQAjAWwAIgOBAB0CogAsAZ8ACwKXABUCcwAfAWsAHwEDAA0CCgAUA0QAEgGeAA8BngAfAgsAAwILAB0B3AAdAdwAEwF4//sCHAAUAmIACQH7/+QB+//jAhwAEwOcABQBtf/sAfQAEgIJAAQB9AAAAiUAFgH0AAABt//sAfQAAAH0AAACvwAFAfQAAAH0AAAB9AAAAfQAAAH0AAAB9AAAAfQAAAOH/+kB9AAAAfQAAAH0AAAB9AACAjwAGgH0AAAB9AAAAggACgHTACcB9AAAAfMAFgH0AAAByAAXAWsAHwFrAB8C+gADAo0AAgLDABsB9AAAAocAmgFxAGoBcQBjAXEAXwFxAGcCOQBqAfUAagH1AGoB9QBDAfUAVQFx/84CQgAHAy4ALQMZAHYDEwAzAnsAIgO4ACMDuAAjAZcAOwGXAFEC0wBJAfAANgElADwCrgAkA2sAIgNrACIA8gAiA8EAEwOSAEUCFQAiAmEAHgQ3ACoClAAsApQALAL6ACICewAuAnsALQKH/4MCSAAkAZcARQKuABUCYgA1AAAAJAAAABAAAABEAAAAVwAAAFYAAABFAAAALQAAADgAAAAzAAAAMwAAAFYAAABOAAAAZQAAAC4AAAAzAAAAYwAA//kAAABjAAAAcQAAAFcAAAByAAAAQQAAAEcAAABQAAAALQAAADQAAAAtAtwAEwIKABQCCQAjAV8AIgJzAC4BNgAUAfQAAAMMABcCCv/0AgoABwH0AAACpgAVAfQAAAGfAAsB9AAAAdYAKwLx//wClwAVAcsAIwH0AAAB9AAAAwMALQIEAB4B8gAeAwMALQL1AC0CBAAeAvUALQIEAB4B9AAAAtoADQH0AAABsP/sAt0AEgGtABUBLwASAggAEwISAAgCSAAXAeEAUgMTABQDEwAUAc8AFAH0AAAB9AAAAcoAFAHMABQBygAUAcoAFAHKABQBygAUAcoAFALfAAsC3wALAt8ACwH0AAAB9AAAAfQAAAH0AAAC3wALAt8ACwLfAAsC3wALAt8ACwIrABkB9AASAXIABgFyAAYBdQAGAW4ABgFyAAYBcgAGAXIABgFuAAYBbgAGAW4ABgH0AAADAwAFAfQAEwKiACwCogAsAqIALAKiACwCogAsAqIALAH0AAACogAsAqIALAKiACwCogAsAo0AAgLcABMCjQACAo0AAgHCABECBv//AdwADAIuAB0BrQAZAa0AGQGtABkCjQACAo0AAgKNAAICjQACAo0AAgKNAAICjQACAo0AAgKNAAICjQACAa0AGQGtABkBrQAZAa0AGQGtABkBrQAZAa0AGQGtABkBrQAZAa0AGQG9ABoBvQAaAfQAAAJgABEEIwAXAcYAIAFrABoCiAAnAgYAHwF9AEEBugBJAWUASAEjACIB3AB2AaIALAAA/nwAAP5pAAD+rgAA/wgAAP6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mAADjbgAA5CYAAORcAADlPgAA5iwAAOa4AADnUAAA5/wAAOjaAADplAAA6iYAAOsGAADrdgAA664AAOxwAADsxgAA7aQAAO5mAADuygAA74wAAO/2AADwhgAA8PwAAPG0AADyMAAA8uAAAPN+AADz3AAA9GQAAPToAAD1vgAA9pQAAPd6AAD4LgAA+OYAAPm6AAD6eAAA+zYAAPviAAD8TgAA/VoAAP3wAAD+oAAA/x4AAP/aAAEAfAABATQAAQG8AAECTgABApQAAQNYAAED4AABBJgAAQUGAAEF/gABBnIAAQcaAAEHyAABCGAAAQkEAAEJogABCmQAAQsEAAELvgABDIYAAQ0cAAEOCAABDqIAAQ9gAAEQTAABEVoAARIqAAESxAABE0YAARQKAAEUbgABFSQAARWSAAEWZgABF3gAARhSAAEZXAABGiQAARrmAAEbdgABHCQAARz4AAEddAABHiIAAR7kAAEgZAABIP4AASG6AAEiygABI7AAASRQAAEk4AABJb4AASY+AAEmyAABJ2YAASfeAAEoXgABKPwAASnGAAEqnAABKzoAASvoAAEssgABLXIAAS4oAAEvFgABL6oAATAmAAExCgABMdAAATKGAAEzNAABM+4AATReAAE1BgABNZAAATbSAAE3XAABOAQAATjOAAE5hgABOiwAATrMAAE7fAABO/AAATx+AAE9KgABPaIAAT4UAAE+mAABP5QAAUAmAAFAugABQWAAAUIUAAFCzgABQ3AAAURMAAFE3gABRVwAAUYuAAFGygABR6AAAUhSAAFI3AABSWIAAUoCAAFKeAABSxoAAUugAAFMeAABTWgAAU4yAAFPAgABT8QAAVBoAAFQ4AABUUQAAVICAAFStAABU3AAAVQgAAFVDgABVhAAAVauAAFW0AABVwIAAVdIAAFXeAABV8AAAVhmAAFYiAABWSIAAVoyAAFbbAABXGoAAV0yAAFeNgABXtYAAV/4AAFgdAABYUIAAWI6AAFjZgABZHYAAWVQAAFljAABZcoAAWYEAAFmQgABZpIAAWbkAAFnRAABZ2gAAWgSAAFoSAABaHgAAWjOAAFpFAABaagAAWn0AAFqIgABao4AAWruAAFrEgABazoAAWtqAAFrmAABa8gAAWv4AAFsNAABbGwAAWykAAFs3gABbTIAAW1WAAFtegABbZ4AAW3CAAFt5gABbvAAAXGWAAFyhAABcqoAAXLqAAFzDgABc04AAXNyAAFzlgABc7oAAXPeAAF0AAABdIQAAXTOAAF1HgABdagAAXYWAAF27gABd54AAXg8AAF40gABeaoAAXouAAF6WAABet4AAXuqAAF8XgABfSQAAX32AAF+rAABf14AAYAUAAGAxAABgXgAAYIuAAGC8gABg8AAAYTcAAGFuAABhigAAYceAAGH6AABiLgAAYmSAAGKGAABiqAAAYteAAGMGgABjQAAAY34AAGOrAABj4YAAZBOAAGQ+AABkYgAAZIcAAGSpgABk24AAZROAAGU+gABlXQAAZYYAAGWkAABl1YAAZgsAAGZFAABmToAAZlyAAGZ6gABmkIAAZsyAAGcJAABnSwAAZ4IAAGe+gABn84AAaC+AAGhtAABotQAAaN0AAGkPgABpLwAAaUmAAGluAABpkYAAab4AAGnqAABqKIAAamgAAGqqAABq7QAAay2AAGtugABrsgAAa/SAAGwVAABsTwAAbJMAAGzBAABs+YAAbTsAAG19gABtr4AAbfiAAG4mAABuZgAAbp6AAG7QgABu/AAAbyWAAG9VAABvgwAAb7UAAG/kgABwBYAAcD0AAHB2gABwsoAAcOGAAHEigABxUAAAcX2AAHGpAABx1wAAcfYAAHIoAAByWQAAcogAAHKogAByyIAAcvoAAHMigABzSoAAc4IAAHOzgABz3AAAdBmAAHRQAAB0dwAAdKaAAHTWAAB0/oAAdS4AAHVmAAB1jgAAdZ+AAHW2AAB11wAAdgQAAHYfgAB2VYAAdowAAHa/gAB2/AAAdykAAHdWgAB3dgAAd5WAAHfNAAB4AIAAeDyAAHhcgAB4f4AAeJ6AAHjHgAB44AAAePiAAHkjgAB5U4AAeXeAAHm5AAB53AAAehIAAHopAAB6QAAAenkAAHqjgAB6ywAAeuKAAHsJAAB7KAAAe0mAAHt1gAB7rYAAe9oAAHwHAAB8M4AAfFCAAHx1AAB8poAAfNiAAH0JgAB9OwAAfWyAAH2XAAB9r4AAfeOAAH4VAAB+RYAAfnuAAH7JAAB/FwAAf0YAAH98gAB/wgAAf/kAAIAygACAVIAAgH8AAICrgACA3YAAgROAAIFAgACBaIAAgXsAAIGagACBrgAAgcCAAIHTAACB7YAAggkAAIIqgACCTQAAgl2AAIJrAACCe4AAgoqAAIKYgACCpIAAgrEAAIK/AACCxwAAgtOAAILfgACC6wAAgvOAAIMBgACDEAAAgx0AAIMqAACDPYAAg0WAAINcgACDjwAAg7cAAIPhgACEIgAAhE2AAIRYgACEZgAAhHQAAISBgACEjIAAhJkAAISlAACEsAAAhMOAAITMAACE1QAAhOKAAITwAACFCIAAhSiAAIU/gACFUYAAhVwAAIVqgACFggAAhZQAAIWogACFtYAAhckAAIXdgACF8gAAhgWAAIYRgACGHYAAhiqAAIY3gACGQoAAhloAAIZogACGdYAAhoKAAIaVgACGngAAhrQAAIbHgACG1IAAhuyAAIcCgACHFoAAhy2AAIc+gACHTAAAh2AAAIeHAACHkYAAh5wAAIepAACHtYAAh8oAAIfSgACH2wAAh+gAAIf8AACIBIAAiA2AAIgggACIKgAAiDgAAIhLAACIXAAAiHuAAIiKAACInAAAiKkAAIi1gACIwYAAiNWAAIjqAACJCwAAiRwAAIk5gACJTQAAiVsAAIlmgACJd4AAiZOAAInMgACKDIAAikwAAIqRgACK4oAAiw+AAItUAACLggAAi6QAAIvIAACL6QAAjDAAAIx4AACMm4AAjLyAAIz0AACNJgAAjVcAAI19gACNxIAAjgGAAI4sAACOVAAAjouAAI7EAACPAgAAjzkAAI9XAACPewAAj7iAAI/vgACQGwAAkEGAAJCBgACQwYAAkP4AAJE3AACRlQAAkeoAAJJNgACSsIAAkuaAAJMSgACTNoAAk1eAAJN3gACTlIAAk8MAAJPtAACUKIAAlGoAAJS7AACVCgAAlTOAAJVWAACVi4AAlbyAAJYegACWcwAAlqoAAJbeAACXHgAAl1OAAJeXAACXzwAAmBKAAJhGAACYk4AAmMUAAJj/gACZLYAAmW2AAJmdgACZ0QAAmhCAAJpQgACag4AAmuyAAJsagACbQoAAm2MAAJuEAACbtwAAm+YAAJwpAACcYYAAnIsAAJy8gACc7IAAnR4AAJ1MAACdggAAnbYAAJ3ygACeIIAAnmWAAJ6gAACe8wAAnziAAJ9YAACfwAAAoBkAAKBegACgmIAAoNcAAKENgAChPwAAoW6AAKF/gAChogAAobaAAKHegACh6QAAofmAAKIPgACiGAAAojMAAKI9gACiSIAAomCAAKJwAACieQAAooOAAKKMAACilYAAoqEAAKKsgACixAAAotGAAKMQgACjLgAAo1SAAKN4gACjqgAAo8sAAKPrAACkHIAApFEAAKRqAACkioAApK0AAKTWgACk+oAApTOAAKVeAACldwAApaKAAKXhgACmFYAApkuAAKaJgACmyAAApvmAAKcYAACnX4AAp5UAAKfRgACoBYAAqDKAAKhAAACoWAAAqGWAAKh9AACo+QAAqRGAAKkdgACpL4AAqUeAAKlSAACpeIAAqYqAAKmfgACpyAAAqe4AAKoIAACqHYAAqjoAAKpXgACqZYAAqowAAKqrAACqvoAAqscAAKrUAACq5QAAqvaAAKsQgACrJoAAq0CAAKtkgACregAAq5cAAKu0gACrwwAAq+kAAKwFAACsGQAArCEAAKwuAACsPwAArFCAAKx4gACsqwAArOcAAK0OgACtZIAArbuAAK3dgACuEoAArjOAAK4+AACuY4AArpmAAK65gACu9gAArwsAAK8igACvRoAAr36AAK+5gACv/gAAsCaAALBXgACwjAAAsMcAALDpAACxF4AAsUEAALGMgACxtoAAseSAALISgACyWIAAspeAALLSgACzAIAAsyyAALNigACzlgAAs8WAALP4gAC0LIAAtGUAALSfgAC00AAAtSkAALVpgAC1tgAAteCAALYUgAC2PYAAtnqAALa8AAC25QAAtyiAALdnAAC3nIAAt8+AALgNAAC4R4AAuIYAALjAAAC5BwAAuUsAALl+AAC5rwAAuekAALogAAC6WoAAupKAALrXgAC7GIAAu04AALuBgAC7v4AAu/sAALw6AAC8eYAAvLaAALzzAAC9OgAAvX2AAL3CAAC+BIAAvjYAAL5lAAC+noAAvtSAAL8OAAC/RIAAv4YAAL/HgADAD4AAwFSAAMClgADA8wAAwUQAAMGRgADB6wAAwkEAAMJjgADCggAAwquAAMLSAADC+wAAwyEAAMNUAADDhYAAw60AAMPTgADEBIAAxDEAAMRhgADEjoAAxMiAAMT+AADFKwAAxVYAAMWLgADFvgAAxfOAAMYmAADGU4AAxn2AAMazAADG5gAAxx6AAMdRAADHhoAAx7sAAMf6gADIOwAAyHYAAMi/gADJBgAAyTQAAMlogADJnYAAydwAAModAADKWgAAyqIAAMrogADLL4AAy3OAAMvEAADMEwAAzE+AAMyJgADMzgAAzQ+AAM1UAADNlQAAzeGAAM4tAADOWoAAzooAAM63AADO54AAzxCAAM86gADPUoAAz20AAM+TAADPugAAz+cAANAXgADQT4AA0ImAANDJAADRBwAA0VAAANGVAADR3gAA0iQAANJ0gADSxQAA0wMAANM/gADThYAA08gAANQNAADUT4AA1J2AANTpAADVJAAA1V2AANWfgADV3oAA1iCAANZfgADWqwAA1vSAANdIAADXmAAA1/MAANhJAADYpAAA2PwAANlfAADZwQAA2g4AANpYgADarQAA2v0AANtPgADboAAA2/6AANxZAADcoYAA3OcAAN01gADdgoAA3dIAAN4egADedoAA3syAAN77AADfJYAA316AAN+QAADfywAA4AOAAOBHAADgcwAA4JoAAODDgADg74AA4R6AAOEzgADhQwAA4VeAAOFuAADhl4AA4cqAAOH2AADiKYAA4lyAAOKaAADizwAA4waAAONEgADjhYAA48mAAOPlgADkAoAA5CgAAORBgADkV4AA5IMAAOSxgADk1QAA5Q0AAOUugADlTAAA5WuAAOWNAADlqAAA5cCAAOXmAADmFgAA5kEAAOaBgADmxYAA5v+AAOc3gADncYAA57+AAOfpAADoDgAA6DaAAOhhAADolQAA6LOAAOjUgADo4IAA6SQAAOlgAADppYAA6eqAAOo8AADqYQAA6oaAAOq7AADq8QAA6ymAAOs3gADrSgAA63YAAOusgADr5AAA7CWAAOxhAADsnwAA7NYAAO0AAADtLIAA7U0AAO2NgADtwgAA7jWAAO6agADu1QAA7wuAAO8zAADvV4AA74sAAO+4gADv+4AA8DiAAPBsAADwnQAA8MGAAPDmgADxHoAA8VcAAPGEgADxrgAA8eqAAPIjAADyV4AA8oUAAPLFAADzAgAA81EAAPOagADz0gAA8/EAAPQbAAD0PIAA9GkAAPSkAAD0zgAA9OwAAPUpgAD1WwAA9XWAAPWaAAD1w4AA9fqAAPYgAAD2PQAA9n8AAPaggAD214AA9wYAAPdCgAD3ZIAA95IAAPergAD33gAA9/0AAPhAAAD4ZwAA+I0AAPi4gAD45YAA+PyAAPk7gAD5XoAA+Y0AAPnKAAD564AA+iyAAPpJgAD6ZAAA+myAAPqKgAD6k4AA+rWAAPrBAAD64gAA+wKAAPsjAAD7PYAA+1oAAPt9AAD7mwAA+7sAAPvrgAD8DgAA/C0AAPw8AAD8YwAA/I6AAPymgAD8xQAA/PGAAP0IAAD9OIAA/WsAAP2JgAD9qYAA/cgAAP3cAAD9+QAA/iAAAP5IgAD+YQAA/neAAP6SgAD+uAAA/tMAAP8JAAD/FgAA/z0AAP9zAAD/kIAA/9EAAP/zAAEADAABAGUAAQCngAEA8wABATeAAQGFAAEBt4ABAfAAAQIkAAECYAABAoYAAQK9gAEC8wABAy+AAQNPgAEDe4ABA60AAQPwAAEEIIABBFGAAQR2AAEEtIABBOiAAQUHgAEFNwABBWgAAQWgAAEF2YABBfkAAQYrgAEGZgABBo0AAQazgAEG/gABBzuAAQdogAEHlQABB78AAQfxAAEIGgABCEOAAQhuAAEInQABCOqAAQkSgAEJLYABCUiAAQlYgAEJdAABCZcAAQm/AAEJ+QABCkgAAQpsgAEKmYABCuQAAQsoAAELZwABC6oAAQvOgAEMCoABDEiAAQyPgAEM0IABDS0AAQ1eAAENkYABDa2AAQ3ggAEOHIABDkEAAQ6ZAAEOuIABDvuAAQ8hAAEPSYABD3WAAQ+lAAEP1oABD/iAARAcgAEQUgABEIqAARDEgAEQ6AABERmAARE8AAERbAABEZwAARHBAAER44ABEgaAARIdAAESPQABEnEAARKsgAES+AABEyMAARNXgAETeIABE54AARPTAAET4YABFAyAARQagAEUQAABFGUAARR/gAEUoAABFL4AARTlAAEVBAABFSiAARVIgAEVgYABFakAARXVAAEV/gABFkAAARZQAAEWvAABFsWAARbOgAEW2oABFuyAARcpgAEXZoABF40AARe6gAEX9AABGDUAARhyAAEYogABGPSAARlFAAEZdgABGbCAARm6gAEZyYABGeqAARoegAEaUwABGpAAARrQAAEbCgABG02AARt+AAEbowABG84AARvqAAEb/4ABHC+AARx1gAEcsoABHNMAAR0LgAEdKwABHVsAAR2AgAEdowABHd0AAR3qgAEeNoABHoMAAR7ZAAEfLoABH3IAAR/IgAEgFQABID2AASBvAAEgnQABINmAASEFAAEhL4ABIW8AASGSgAEhwAABIe2AASIiAAEiZAABIokAASK+gAEi/YABIz4AASOHgAEjw4ABI+0AASRBAAEkgwABJKmAASTKgAElBAABJU8AASV1gAElhYABJaqAASXTAAEl6gABJgcAASYggAEmKgABJlWAASZrgAEmgIABJqCAASa2AAEmzAABJu+AASckAAEnQ4ABJ1eAASdlgAEnfIABJ5SAASe6AAEn1AABJ+mAASgLAAEoJoABKDmAAShIAAEoWIABKICAASiXgAEopYABKLiAASjQgAEo7YABKQ+AASkeAAEpMgABKUwAASlrgAEpkIABKaOAASm/gAEp5YABKhWAASpPAAEqZwABKpKAASrRAAErJIABK4qAASujAAEr1oABLA4AASw1AAEsqYABLLaAASzFAAEszYABLNwAAS0GgAEtIYABLUWAAS1sgAEth4ABLbaAAS3TAAEt+QABLhIAAS4yAAEuUAABLm0AAS6ZAAEuwQABLvIAAS8tgAEvXwABL5eAAS/NgAEv+gABMDoAATBuAAEwnQABMNOAATETAAExX4ABMZwAATHugAEyIgABMk0AATKcgAEywAABMuuAATMjAAEzUAABM4gAATOyAAEz14ABM/4AATQigAE0QYABNG6AATSfgAE0ygABNQaAATVAAAE1XAABNYCAATWjAAE1vYABNeaAATYHAAE2IoABNlIAATaIAAE2xgABNwIAATc6AAE3goABN7sAATfugAE4NgABOGiAATingAE44YABORuAATlbAAE5l4ABOdiAAToIAAE6QYABOm6AATqiAAE63wABOwyAATtCgAE7agABO48AATuwgAE70IABO+yAATwYgAE8QwABPGmAATyPgAE8zAABPPaAAT0tgAE9U4ABPYcAAT27gAE96gABPhiAAT5LgAE+ioABPskAAT71gAE/MgABP16AAT+WgAE/voABP/UAAUAqgAFAWIABQIwAAUC5gAFA7IABQRUAAUFEAAFBewABQbgAAUHkAAFCFQABQlAAAUJ6gAFCtYABQuEAAUMWgAFDPQABQ3sAAUOqAAFD9QABRDEAAURlAAFElgABRMKAAUUAgAFFQoABRXSAAUW2AAFF6AABRjWAAUZygAFGvgABRv6AAUdAAAFHcYABR5sAAUfJAAFH/YABSC0AAUhnAAFImYABSNSAAUkIgAFJPwABSXOAAUmZgAFJtwABSeGAAUoCgAFKJAABSj8AAUpigAFKfYABSq6AAUrtgAFLIAABS2AAAUuRgAFL0QABS/eAAUwpgAFMT4ABTIAAAUyhgAFM0wABTPaAAU0kgAFNWYABTY2AAU3OgAFODoABTjkAAU5iAAFOjIABTrWAAU7kAAFPFgABT0YAAU97AAFPs4ABT9sAAVATAAFQOgABUHaAAVCiAAFQ1gABUPqAAVEzgAFRYwABUZuAAVHLgAFSCwABUkIAAVKAAAFStYABUvaAAVMugAFTWAABU3gAAVOhgAFTwYABU+aAAVQCgAFUKYABVEeAAVSCAAFUuwABVPCAAVUlAAFVUoABVX4AAVW+AAFV+gABVjgAAVZ2AAFWoAABVsUAAVbpgAFXCQABVzuAAVdpAAFXnQABV8sAAVgFAAFYMIABWHYAAVisgAFY1gABWP8AAVkaAAFZNgABWVOAAVlxgAFZioABWaOAAVnWAAFaAQABWjiAAVprgAFaogABWs0AAVr2gAFbKwABW2oAAVu1AAFb4oABXBwAAVxKAAFcgwABXMOAAV0QAAFdRIABXYWAAV20gAFd8IABXiEAAV5dAAFejQABXskAAV8MAAFfXgABX4eAAV/KAAFf+wABYDgAAWBvAAFgmIABYOMAAWEjAAFhYIABYZCAAWHOAAFh+oABYjYAAWJigAFitQABYvWAAWM4AAFja4ABY6oAAWPaAAFkEIABZD+AAWRhAAFkh4ABZK6AAWTUgAFlEgABZU4AAWV6gAFlpYABZdGAAWX8gAFmPoABZoAAAWazAAFm5gABZxQAAWdAgAFneQABZ66AAWfngAFoHgABaG0AAWi3gAFo+QABaTYAAWlxAAFpqAABadaAAWoEgAFqRQABaoeAAWrEAAFrAwABaz+AAWt+gAFrzoABbCMAAWxxgAFstwABbPyAAW08AAFtZYABbY6AAW3NgAFuDoABbj6AAW5yAAFusYABbtIAAW71gAFvEAABby0AAW81gAFvRoABb1SAAW9iAAFvjIABb70AAW/qAAFwGoABcEGAAXBsAAFwlYABcMGAAXD2gAFxGYABcUiAAXFqAAFxjwABcbAAAXHBAAFx0AABcdkAAXHnAAFyAgABciQAAXI7gAFyXQABcniAAXKJgAFymYABcrkAAXLMAAFy7IABcvUAAXL/gAFzDAABcyOAAXM/AAFzWIABc3SAAXOMAAFzpoABc7kAAXPSgAFz8oABdA4AAXQkAAF0QAABdGMAAXSBgAF0mwABdLqAAXThAAF1AwABdSSAAXVKAAF1doABdZwAAXW5AAF124ABdgWAAXYUgAF2N4ABdliAAXZ9gAF2qwABdtGAAXbpgAF3AwABdx6AAXc7gAF3TYABd2WAAXd7AAF3lwABd78AAXflAAF4D4ABeDoAAXhsgAF4nQABeNIAAXkHAAF5JQABeUMAAXlpgAF5kIABebOAAXnWAAF6MoABel+AAXq8gAF66YABewgAAXswAAF7VYABe38AAXusAAF71IABfACAAXwpgAF8TgABfHYAAXyfgAF8woABfOwAAX0VAAF9OYABfWGAAX2OAAF9toABfeMAAX4RAAF+QgABfnkAAX6jAAF+vwABft6AAX76gAF/GoABf00AAX9/AAF/sgABf8UAAX/bgAGAFIABgDuAAYBfgAGAgQABgKKAAYDNAAGA9IABgQyAAYEsAAGBUAABgXEAAYGOAAGBroABgdaAAYH7gAGCH4ABgkCAAYJrgAGCmIABgsAAAYLkAAGDFoABg0WAAYNcAAGDegABg6MAAYPFgAGD1wABg+0AAYQPgAGEK4ABhFIAAYR1gAGElwABhLAAAYTCgAGE2wABhPgAAYUSgAGFMgABhVuAAYVzAAGFj4ABhbCAAYXQAAGF5oABhgOAAYYigAGGVQABhnaAAYaVgAGGrAABhtaAAYbqAAGHBYABhyeAAYdMgAGHhAABh7IAAYfdgAGH/IABiByAAYhHgAGIeYABiKaAAYjZAAGJBQABiTKAAYk7gAGJVwABiW0AAYl8AAGJnoABibaAAYm/gAGJzgABiekAAYoVAAGKSoABimWAAYqGgAGKkQABiqiAAYrCAAGK2gABivWAAYsUAAGLNoABi1uAAYt8AAGLoYABi7mAAYvVAAGL54ABi/2AAYwoAAGMXQABjIQAAYyxAAGM1QABjPyAAY0dgAGNQoABjW+AAY2egAGNwQABjd0AAY32AAGOEIABji0AAY5OAAGOgAABjqKAAY65AAGO44ABju4AAY8bAAGPMoABj0oAAY9cgAGPdQABj6MAAY/mgAGQHgABkE6AAZBtAAGQjAABkL6AAZDggAGRAwABkSiAAZFOgAGRfIABkaUAAZHMAAGR84ABkh+AAZJMAAGSeoABkquAAZLaAAGS9wABkywAAZNLgAGTa4ABk48AAZOygAGT2YABlAKAAZQhAAGURAABlFoAAZR8gAGUlgABlK8AAZTLgAGU64ABlR2AAZVVAAGVl4ABlcWAAZX4gAGWJwABllKAAZZ8AAGWqYABltqAAZcOgAGXQwABl3qAAZelAAGX1gABl/kAAZgtgAGYZIABmIqAAZi3gAGY5QABmQwAAZlFgAGZc4ABmaKAAZnRgAGaAwABmi2AAZpNAAGac4ABmomAAZq1gAGa4wABmwSAAZskAAGbS4ABm2CAAZuCgAGbnoABm9WAAZv1AAGcI4ABnFmAAZx/gAGcroABnNcAAZ0DAAGdLYABnV6AAZ2WgAGdyIABnf6AAZ4ngAGeXQABnmwAAZ56AAGegwABnpEAAZ6sAAGezgABnveAAZ8ugAGfYIABn3AAAZ+AAAGfn4ABn8sAAZ/4AAGgGAABoDuAAaBSAAGgbwABoJKAAaC5gAGg04ABoPQAAaEbAAGhRYABoWMAAaGHAAGhpgABockAAaHfAAGh+wABoiEAAaJLAAGiaAABoosAAaK6AAGi7YABoxOAAaNAAAGjdAABo6aAAaPRAAGj+QABpDCAAaRmAAGklIABpMAAAaTogAGlGoABpT8AAaVoAAGlkQABpcMAAaXngAGmEIABpjyAAaZyAAGmmgABpsaAAab2AAGnMAABp1wAAaeMgAGnrAABp80AAafsAAGoDQABqC+AAahUAAGoggABqLSAAajRAAGo9AABqR4AAalMgAGpcAABqZyAAamzAAGp0YABqfiAAaooAAGqQgABqmSAAaqTgAGqyAABquoAAasTgAGrQYABq3UAAauWAAGrvoABq9SAAavuAAGsGoABrE4AAax0gAGsoQABrMiAAazuAAGtCIABrSAAAa1OgAGtfIABrZwAAa3AgAGt3oABrgEAAa4qAAGuVoABrowAAa7GgAGu84ABryeAAa9IAAGvcQABr6cAAa/ZAAGwCAABsDUAAbBbAAGwfoABsMGAAbDtgAGxF4ABsTcAAbFdgAGxjIABsbSAAbHmgAGyBQABshuAAbI4gAGyR4ABslyAAbJrgAGyfgABsqCAAbKvAAGyuAABssSAAbLfAAGy/gABswcAAbMTgAGzK4ABs0cAAbNdAAGzdoABs4oAAbOogAGz2AABs/aAAbQTgAG0QYABtHkAAbSXAAG0qwABtMIAAbTpgAG1BoABtSGAAbU6AAG1VoABtXaAAbWLAAG1rYABtb0AAbXMAAG15IABtfYAAbYSAAG2LAABtkAAAbZUAAG2aIABtoOAAbafgAG2vwABttCAAbbhgAG29oABtwiAAbchAAG3NYABt0gAAbdbAAG3bwABt4GAAbeVAAG3pAABt7MAAbfDAAG30QABt+eAAbf1AAG4EAABuCyAAbg6gAG4aQABuHUAAbiDAAG4loABuKMAAbizgAG4y4ABuN2AAbj1gAG5DwABuSAAAbkugAG5OoABuUeAAblYgAG5eQABuYYAAbmrgAG5xQABud6AAboBgAG6JAABukaAAbp7AAG6tIABuu4AAbsegAG7WAABu5CAAbvSAAG70gABu9IAAbwCgAG8NYABvGEAAbxhAAG8YQABvGEAAbxhAAG8YQABvIyAAbywAAG804ABvP+AAb0kAAG9TAABvW6AAb2WAAG9vQABvfAAAb4kgAG+TgABvmwAAb6MAAG+rIABvsiAAb75gAG/IYABv28AAb+/AAG//QABwD2AAcB9gAHAt4ABwPwAAcE/gAHBiQABwcEAAcH4gAHCPIABwocAAcK9gAHC/YABw0WAAcN/gAHDwAABxAQAAcRGgAHEfQABxLqAAcUdgAHFWoABxZwAAcXjgAHGKYABxncAAcbAAAHHCIABx0yAAceSAAHH4IAByCOAAchwAAHIuYAByQAAAck7AAHJdYABybWAAcnqgAHKKIAByliAAcqegAHK5AAByyYAActigAHLmQABy9GAAcwcgAHMVQABzJqAAczpgAHNRIABzY6AAc3XgAHOLAABznkAAc7IgAHPEQABz10AAc+IAAHPtoABz+qAAdAjAAHQV4AB0I6AAdDGAAHQ8YAB0R4AAdFNAAHRegAB0ZwAAdHFAAHR9oAB0iKAAdJXAAHSigAB0rcAAdLpgAHTI4AB01KAAdOPgAHTxwAB0/mAAdQ0AAHUcAAB1K4AAdTqAAHVJIAB1V6AAdWOgAHVwYAB1fwAAdY3gAHWagAB1sOAAdcRgAHXQ4AB13SAAdepgAHX2wAB2A+AAdhBAAHYcYAB2KYAAdjXgAHZBQAB2TMAAdlcgAHZiIAB2bwAAdnsgAHaH4AB2k+AAdqGgAHayYAB2wKAAdtEAAHbgQAB27sAAdv3gAHcMQAB3GWAAdyeAAHc04AB3QuAAd1BAAHdeQAB3a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QAAlgRAAJYV4ACWKKAAljRgAJZBAACWTmAAlmFAAJZtIACWfqAAloxgAJafoACWr6AAlsUgAJbT4ACW4+AAlvQAAJb/wACXEYAAlx9gAJcqwACXPIAAl0gAAJdSwACXYQAAl2ugAJd7IACXkoAAl6VAAJexAACXv4AAl9WgAJfhQACX7MAAmAAAAJgP4ACYIUAAmDCAAJhAIACYUQAAmGAgAJhz4ACYiMAAmJhgAJioAACYuGAAmMmAAJjfwACY7MAAmP8AAJkL4ACZGUAAmSSgAJk1QACZQOAAmVGAAJliwACZeWAAmYqAAJmcAACZroAAmcbAAJnWgACZ7EAAmfnAAJoMAACaHKAAmjIAAJpCQACaVAAAmmXgAJp9oACai8AAmp8AAJqyYACaxeAAmtPgAJriYACa8aAAmwhgAJsU4ACbJqAAmzMAAJs/wACbTSAAm22AAJt24ACbhcAAm5agAJuoYACbteAAm8iAAJvXAACb5eAAm/VAAJwAoACcEYAAnCGgAJwyQACcQ2AAnE+AAJxhIACcbuAAnIIAAJyPwACcoyAAnLcAAJzQQACc3sAAnO3gAJz6gACdC0AAnR1gAJ0wQACdPGAAnU1gAJ1fIACdcUAAnYPgAJ2XIACdpgAAnbogAJ3JgACd3iAAne0gAJ38wACeDaAAniCgAJ40wACeTaAAnm8AAJ6LoACeo6AAnsPAAJ7fAACe74AAnwDgAJ8aIACfMgAAn0GgAJ9SQACfZ6AAn4TgAJ+dAACfsaAAn82gAJ/kwACf9kAAoAjAAKAgIACgP0AAoFmgAKBwIACgjiAAoKcgAKC1gACgyWAAoN5gAKDtgAChAaAAoRDAAKEhIAChMaAAoUegAKFVQAChYwAAoXbgAKGK4AChnsAAoargAKGzAAChvGAAocbgAKHRIACh3AAAoetgAKH7oACiCMAAog+AAKIZIACiLGAAokJgAKJCYACiQmAAolAgAKJfAACibiAAon5gAKKRAACipKAAorkAAKLMgACi4mAAovrAAKMHgACjFGAAox/gAKMq4ACjPOAAo1EAAKNm4ACjfWAAo4/gAKOmYACjvUAAo9ggAKPgQACj7CAAo/0gAKQTAACkHcAApCzgAKQ+YACkVEAApFwAAKRnoACke6AApJOgAKSpAACkwkAApNPAAKTpIACk/YAApRagAKUmwAClO6AApUJgAKVJgAClVKAApVzgAKVpAACldUAApYWgAKWbIAClruAApclAAKXkoACl8kAApgjgAKYi4ACmPmAApk9gAKZkgACmeyAApotgAKafgACmtSAAprxAAKbHQACm08AApvAgAKcQQACnMeAAp0jAAKdcYACndYAAp4iAAKebYACnqyAAp70AAKfTQACn6iAAp/egAKgFgACoFOAAqCAAAKgxIACoRsAAqFKgAKhk4ACoeCAAqI0gAKipwACowcAAqM0AAKjcwACo4iAAqOigAKjxYACo+CAAqP3gAKkHgACpEoAAqR6gAKkmAACpLgAAqTvAAKlNIACpWoAAqWjgAKl4IACphsAAqZkgAKmvYACpwCAAqdYAAKnggACp7qAAqftAAKoLoACqFmAAqiVgAKo5YACqUgAAqltAAKpogACqdSAAqoXgAKqYYACqrsAAqrcgAKrDYACq0mAAquTgAKry4ACrBMAAqw8AAKsY4ACrJoAAqzPAAKtEYACrTyAAq13gAKtrIACrdoAAq4PAAKuVYACrmoAAq6FAAKusAACruAAAq8NAAKvSoACr4yAAq+vAAKv4QACsBmAArA2gAKwYwACsJSAArDXgAKxKoACsYUAArG0AAKx1QACsgKAArInAAKyc4ACsqqAArLhgAKzG4ACs1AAArOMAAKzzYACtACAArQqgAK0XAACtIQAArTCgAK0+YACtSwAArWDAAK1zIACtf+AArYdAAK2cIACtreAArbnAAK3LAACt5SAArftAAK4L4ACuEAAArhXAAK4ZIACuIIAAri4AAK4+YACuSwAArlaAAK5rgACufMAAro6gAK6ioACur8AArsEgAK7KwACu2CAArt/AAK7rAACvBEAArxFgAK8e4ACvMqAAr0GAAK9WoACvYYAAr22gAK9+IACvjyAAr6UAAK++YACvyCAAr9gAAK/mYACv+aAAsAZgALAa4ACwJmAAsDUAALA8YACwR6AAsFVgALBygACwemAAsIIAALCEgACwhuAAsJOAALCYYACwnSAAsKagALCwIACws0AAsLZgALC6QACwveAAsMJAALDGoACwyYAAsMxgALDPYACw0kAAsNdgALDcYACw5GAAsO0AALD14ACw/sAAsQagALEOgACxHGAAsSGAALElIACxKYAAsTHAALE5YACxRiAAsU1AALFUIACxWsAAsWNAALFrwACxb0AAsXLAALF+QACxkcAAsZ+gALGkwACxpwAAsaoAALGtIACxsGAAsbMAALHFQACx1AAAsepAALHxwACx+4AAsgWAALIXAACyKEAAsj1AALJDAACySUAAsk/gALJdAACyYoAAsmdgALJpoACybaAAsnAgALJ5QACyfsAAsotgALKdAACypGAAsrAAALLAAACyxqAAstigALLoQACy7+AAsvegALL6oACy/eAAswEAALMMwACzIsAAsyxAALM8oACzR2AAs1FAALNc4ACzZ4AAs3MgALOA4ACzh2AAs4+gALOeIACzpYAAs7FAALO6gACzxQAAs9DgALPkwACz84AAtAFgALQJoAC0FOAAtBzAALQooAC0NyAAtEGgALRHIAC0SmAAtEzgALRQQAC0U0AAtFVgALRXwAC0ZsAAtHNAALR8QAC0hsAAtJEgALSbwAC0seAAtL8AALTHIAC00KAAtN1gALTjAAC09uAAtQQAALUOoAC1HKAAtSkgALUzYAC1QKAAtUlAALVS4AC1W4AAtWigALV3IAC1guAAtYhAALWRgAC1lAAAtZ2AALWkYAC1sOAAtbvAALXCoAC1z0AAtduAALXpwAC19qAAtgNAALYSAAC2HSAAtiJAALYtYAC2NQAAtkLAALZPYAC2XOAAtm3gALZ+oAC2iiAAtpYgALahgAC2swAAtrzAALbH4AC21kAAtt0gALbqYAC2+cAAtwKgALcPQAC3F8AAtyLAALctAAC3OeAAt0pAALdQgAC3V0AAt2MgALdsoAC3c+AAt4YAALeQoAC3mOAAt6MgALeqwAC3vKAAt8oAALfXwAC35wAAt/RAALf9YAC4COAAuBCgALgfwAC4LGAAuDNAALhAgAC4VCAAuFcgALhZYAC4XQAAuGxgALhzAAC4d+AAuH9gALiKYAC4liAAuKGgALiuwAC4vSAAuMNAALjNgAC42sAAuOmgALj5AAC5COAAuR1gALkwAAC5RYAAuWTAALlxYAC5hCAAuZUAALmgYAC5rSAAubdgALnAYAC5zkAAudkAALnhIAC56YAAufGAALn5gAC6AaAAugnAALoUoAC6H+AAuiwAALo2IAC6QKAAukvgALpWwAC6XkAAumxgALp7gAC6imAAupfgALqkoAC6r4AAurzAALrFAAC61+AAut9AALrjwAC67UAAuvRgALr9gAC7CQAAuxNAALsZIAC7ISAAuyTAALs1YAC7OqAAu0PgALtR4AC7XcAAu2agALtrIAC7dCAAu4GAALuDoAC7i+AAu5egALucgAC7pEAAu6vAALu0wAC7wAAAu8eAALvTgAC748AAu/DAALv+AAC8EMAAvBsgALwr4AC8OwAAvEkAALxS4AC8XmAAvGLAALxzgAC8hQAAvJjgALyzgAC8uSAAvMHgALzNwAC82QAAvOBgALzrQAC8+SAAvQmgAL0ZoAC9JkAAvTdgAL1M4AC9VMAAvWJgAL13YAC9hUAAvYwgAL2ZgAC9rYAAvcigAL3cAAC96MAAvexgAL3v4AC986AAvfdAAL38QAC+AUAAvgYgAL4K4AC+EQAAvhbgAL4dAAC+IuAAvijgAL4swAC+MGAAvjagAL49IAC+P6AAvkJAAL5JwAC+TQAAvk+AAL5TAAC+VgAAvljgAL504AC+iyAAvpaAAL6hwAC+pqAAvrBAAL63IAC+xSAAvtIgAL7bIAC+3+AAvuSgAL7pQAC+7iAAvvRAAL76YAC/AAAAvwWgAL8MQAC/EuAAvx8gAL8pgAC/LMAAvzBgAL88QAC/TuAAv2ZAAL9z4AC/hWAAv5wAAL+ogAC/wUAAv9eAAL/sgAC//AAAwBGAAMArgADAPGAAwFMAAMBuIADAfwAAwJdAAMCxQADAy+AAwNlgAMDtwADBB2AAwRagAMEpoADBQWAAwU+gAMFqAADBgcAAwZfAAMGpgADBv8AAwdsAAMHuIADCBeAAwiJgAMI04ADCTmAAwmnAAMKHoADCj2AAwpogAMKoQADCsMAAwrrAAMLIIADCzqAAwt9gAMLsYADC+uAAwwaAAMMWQADDKCAAwzSgAMNC4ADDVAAAw15gAMNzIADDg8AAw5VgAMOsoADDwQAAw9LgAMPmAADD+OAAxAvgAMQrIADEQCAAxFDgAMRi4ADEdqAAxIRgAMSg4ADEtmAAxMpgAMThIADE9mAAxQgAAMUdoADFLmAAxUDgAMVRoADFZyAAxX5AAMWSIADFoMAAxbYAAMXJIADF2OAAxeoAAMX64ADGC8AAxikAAMY8AADGSqAAxlpgAMZsgADGeEAAxpLAAMamQADGuCAAxs3AAMbhwADG8WAAxwUAAMcToADHI2AAxzIgAMdFwADHWwAAx2zgAMd4wADHe0AAx4BgAMeFgADHiiAAx47AAMeVIADHnIAAx6JAAMeowADHrGAAx7BgAMe0YADHuAAAx7wAAMfAAADHw6AAx8dgAMfLYADHz2AAx9MAAMfXAADH2wAAx97AAMfigADH5mAAx+oAAMftoADH8WAAx/VAAMf44ADH/MAAyACgAMgEQADIB+AAyAvAAMgPoADIE0AAyBggAMgdAADIImAAyCeAAMgsoADIMgAAyDagAMg7QADIP+AAyESAAMhJoADITsAAyFOgAMhYgADIXeAAyGHgAMhlwADIaaAAyG2gAMhwYADIcwAAyHgAAMh7QADIfsAAyILgAMiHIADIi8AAyI/AAMiT4ADImIAAyJygAMig4ADIpYAAyKmAAMitwADIsmAAyLdAAMi8AADIwiAAyMbAAMjLgADI0aAAyNZAAMjbIADI4WAAyOYAAMjq4ADI8OAAyPjgAMkBAADJCqAAyQzAAMkPQADJFCAAyRyAAMkloADJRGAAyUygAMlU4ADJZEAAyWeAAMlp4ADJbUAAyXBgAMlyoADJdiAAyXjAAMl8gADJgWAAyYegAMmOAADJkCAAyZJAAMmUgADJloAAyaEgAMmlAADJrEAAybZAAMnFoADJ62AAygYAAMoiwADKOMAAykpAAMpVwADKXaAAymhAAMprwADKcoAAynhgAMqIoADKlYAAyqGgAMqv4ADKswAAyrYgAMq6gADKvuAAysHgAMrE4ADKyWAAys4AAMrRwADK1YAAytogAMrdYADK4MAAyuQAAMrpIADK7kAAyvVAAMr6IADK/sAAywNAAMsrAADLOmAAyzpgAMtFoADLT6AAy1nAAMtloADLb0AAy3egAMt/gADLh0AAy5EgAMuZoADLpSAAy68gAMu6YADLw2AAy82gAMvXwADL30AAy+oAAMv0AADMAWAAzAzgAMwYYADMIaAAzClAAMwxgADMOkAAzEPgAMxNwADMXIAAzGhAAMx6gADMi+AAzJxAAMypgADMt4AAzMagAMzSoADM6eAAzPZgAM0CoADNESAAzR4gAM0rAADNOqAAzUdAAM1VgADNZAAAzXMAAM2BwADNj4AAzaOAAM2vwADNvcAAzcfAAM3QwADN0MAAzdDAAM3QwADN2aAAzeSgAM3koADN5KAAzeSgAM3koADN7UAAzfXgAM3+gADN/oAAzf6AAM4IQADOCEAAzghAAM4IQADOCEAAzghAAM4IQADOCEAAzghAAM4IQADOCEAAzghAAM4IQADOD8AAzhdAAM4XQADOF0AAzhdAAM4XQADOF0AAzhdAAM4XQADOF0AAziiAAM45AADOR4AAzkeAAM5HgADOR4AAzkeAAM5HgADOR4AAzkeAAM5HgADOR4AAzkeAAM5HgADOR4AAzlCgAM5ZwADOYsAAzm6gAM56gADOhEAAzo0AAM6V4ADOoYAAzqpAAM60IADOviAAzsbgAM7SIADO20AAzuWAAM7vwADO+WAAzwdAAM8R4ADPGoAAzyHAAM8vAADPOmAAz0ZAAM9TQADPXMAAz2PgAM9r4ADPeSAAz4SgAM+QgADPnYAAz6cAAM+uIADPvAAAz8agAM/T4ADP30AAz+sgAM/4IADQAaAA0AjAANAWoADQIUAA0CygANA54ADQQ+AA0FCgANBaQADQZ6AA0HRAANCAgADQjwAA0JwAANCo4ADQuIAA0MUgANDTgADQ4mAA0PEAANEAgADRD2AA0R1gANEx4ADRPiAA0UxgANFbQADRamAA0XqAANGgQADRrsAA0b1AANHKoADR1CAA0eGAANHvYADR+SAA0gaAANINoADSF2AA0iSgANIwAADSO+AA0kaAANJUwADSYyAA0nGgANJ/4ADSjQAA0ppgANKpwADSwUAA0s4gANLbQADS58AA0v5gANMVgADTLMAA0zegANNAwADTTEAA01VgANNgwADTZ4AA03NAANN8IADTigAA05BAANOaQADTpoAA07EAANO+AADTyaAA09RAANPUQADT1EAA09RAANPUQADT1EAA0+ZgANP8IADUEQAA1ChAANQ/gADUWSAA1GCAANRyQADUe6AA1ILAANSL4ADUmUAA1KOAANSuIADUt8AA1MDAANTIYADU0EAA1NhAANTg4ADU6mAA1PTgANUGoADVDcAA1RgAANUkwADVNIAA1UZAANVaYADVbSAA1XyAANWOQADVnSAA1bIgANXH4ADV2OAA1ewgANX8QADWDmAA1iFAANYw4ADWQmAA1lUgANZqIADWfOAA1o9AANagQADWsIAA1r/gANbR4ADW5AAA1vUAANcGQADXFqAA1zcgANdG4ADXWaAA12qgANd64ADXiyAA15tgANepQADXuYAA18egANfTQADX5MAA1/jgANgLYADYH2AA2CpgANg5IADYSkAA2FvgANhtgADYeoAA2IngANiWIADYpGAA2LTgANjDwADYz4AA2OHgANjzgADZA+AA2RFAANkgAADZMAAA2T6AANlMgADZWaAA2WYAANlzYADZgOAA2Y4AANmcIADZq4AA2bkAANnWAADZ7IAA2fhgANoFYADaE0AA2iIgANozgADaQsAA2lkAANpr4ADad+AA2oJAANqOgADanmAA2q0gANq6oADaxgAA2tKgANreAADa6mAA2vZAANsCYADbDqAA2xoAANslQADbL8AA2zsAANtIIADbUyAA216AANtn4ADbc6AA237gANuHoADbkMAA25ogANuogADbtQAA28HAANvNoADb2WAA2+RgANvvwADb/MAA3AgAANwTQADcHMAA3CigANwzYADcPCAA3EUgANxOoADcWCAA3GGAANxsYADcd4AA3IGAANyLoADclQAA3J7AANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3LGgANyxoADcsaAA3MBAANzR4ADc34AA3OxgANz6IADc+iAA3PogANz6IADdC8AA3R7gAN0sIADdO4AA3UlAAN1ZQADdZeAA3X1AAN2KwADdlYAA3aPAAN2wgADdsIAA3bCAAN2wgADdsIAA3bCAAN2wgADdsIAA3bCAAN2wgADdsIAA3bCAAN2+QADdyKAA3deAAN3iIADd7kAA3fvgAN4GwADeFAAA3iCgAN4roADeOMAA3jjAAN44wADeOMAA3jjAAN5AoADeQKAA3kCgAN5AoADeQKAA3kCgAN5AoADeQKAA3kCgAN5AoADeQKAA3kCgAN5AoADeQKAA3kCgAN5AoADeQKAA3kZgAN5OoADeViAA3luAAN5jwADeauAA3nIgAN55YADegKAA3ofgAN6PIADelmAA3p2gAN6k4ADerCAA3rNgAN66oADeweAA3scgAN7HIADezIAA3tHAAN7fAADe7eAA3v2gAN8OoADfGsAA3yegAN81gADfQwAA31CAAN9dwADfbSAA33nAAN+IIADflyAA36ngAN+4wADfyYAA39dAAN/ngADf/KAA4AqAAOAMwADgEGAA4BUAAOAZoADgISAA4CigAOAtgADgM0AA4DuAAOBDwADgRgAA4FagAOBnAADgcKAA4HpAAOB9wADghiAA4JbAAOCnYADgsyAA4L7gAODLoADg16AA4ONgAODwIADg9MAA4PwgAOEC4ADhDgAA4RtgAOEiIADhKmAA4SygAOEzQADhOMAA4TyAAOFFIADhSyAA4U1AAOFRAADhV8AA4WNAAOFrwADheSAA4X/gAOGEwADhjSAA4ZVgAOGeIADhp8AA4a4gAOG2IADhwWAA4c8AAOHZIADh5EAA4fAAAOH+AADiCKAA4hRAAOIfoADiK2AA4jJgAOI5wADiQoAA4k4gAOJWIADiX8AA4mhgAOJxQADieQAA4oKgAOKJAADikSAA4phgAOKgYADirOAA4rlgAOLFYADi0OAA4tvAAOLnwADi8MAA4vrAAOMGgADjFKAA4xpAAOMh4ADjLqAA4z5AAONE4ADjTWAA41sAAONq4ADjdUAA44HAAOOOIADjnSAA46ZAAOOxgADjvCAA48iAAOPQoADj2eAA4+TgAOPwgADj/EAA5AkAAOQTQADkHmAA5CegAOQwYADkOoAA5EQAAORSAADkW2AA5GSAAORvYADkfOAA5IUAAOSLgADkk6AA5J/AAOSt4ADkuMAA5MVAAOTRYADk2cAA5OigAOT5IADlAyAA5Q6AAOUW4ADlIAAA5SugAOUtwADlNgAA5TpgAOVBYADlR6AA5VOgAOVdYADlZyAA5XUgAOV9gADliMAA5ZWgAOWbQADlpeAA5bSgAOW74ADlzuAA5dYgAOXjoADl6uAA5fTAAOX/4ADmC0AA5hdgAOYewADmJOAA5i/AAOY4oADmRGAA5ktgAOZUoADmWyAA5mRAAOZtQADmdiAA5n4gAOaGIADmi2AA5pMAAOaeYADmrsAA5sIgAObKYADm1kAA5tzAAObkgADm8WAA5vXAAOb5IADm/uAA5weAAOcPIADnGOAA5x/AAOcpYADnMiAA5zpgAOc/YADnRUAA50tAAOdPoADnXkAA52hAAOd0QADnhAAA55TgAOeiQADntIAA58aAAOfPgADn2cAA5+BgAOfroADn+YAA6BCAAOgnwADoP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SABCd3gAQoHwAEKGOABCi0gAQo+wAEKUeABCmSAAQp2IAEKiIABCppgAQqrYAEKvQABCs4gAQrfgAEK8MABCwGAAQsTIAELIYABCzIAAQtEIAELVuABC2pgAQt5IAELiaABC5fAAQumYAELtYABC8VAAQvT4AEL4yABC/LAAQwB4AEMEaABDCPAAQwzgAEMRaABDFSAAQxlAAEMdiABDIXAAQyW4AEMpmABDLjgAQzM4AEM3mABDPIgAQ0CQAENE2ABDSJgAQ0xYAENQeABDVJAAQ1hQAENcWABDYJgAQ2RgAENn4ABDa6AAQ2+4AENzIABDdpAAQ3nIAEN+AABDgYgAQ4a4AEOK8ABDjugAQ5SwAEOaoABDnngAQ6MwAEOncABDqxgAQ6sYAEOrGABDqxgAQ66gAEOx0ABDtQAAQ7UAAEO1AABDtQAAQ7UAAEO4IABDu4gAQ764AEPCeABDxggAQ8lQAEPNWABD0EgAQ9OoAEPXiABD2tgAQ944AEPhsABD5KgAQ+g4AEPrqABD8GgAQ/NYAEP2CABD+QAAQ/woAEP/qABEA3AARAgIAEQLqABEDugARBMgAEQZEABEOXgAREpgAERZ4ABEWeAARFngAERd8ABEYfgARGaAAERrMABEb+AARHQIAER38ABEe+AARIDAAESEuABEiJAARIyYAESRYABElWgARJs4AESgYABEpcgARKqAAESvgABEr4AARLHwAES0oABEt8gARLp4AES8+ABEv2AARMKAAETFcABEx8gARMoYAETM0ABEzxAARNHAAETUyABE1zAARNmoAETb6ABE3mAARODQAETjQABE5nAAROm4AETskABE7wAARPGIAET0OABE9jAARPgoAET6MABE/AgARP9AAEUB0ABFA/AARQYoAEUGKABFBigARQgQAEUKYABFDHAARQ6wAEUQuABFE6AARRXIAEUYWABFGwAARR3oAEUf8ABFI3gARSN4AEUjeABFI3gARSN4AEUjeABFI3gARSYYAEUoqABFLFAARS/gAEU0mABFOJgARTxQAEVAwABFRLgARUjAAEVM2ABFUQAARVVoAEVZcABFXaAARWN4AEVm+ABFavAARW9oAEVzoABFeCgARX3IAEWCIABFhxgARYz4AEWRAABFlRAARZkQAEWdMABFoUAARaWYAEWp6ABFr+gARbOIAEW3SABFuugARcG4AEXHgABFzXAARdOgAEXZ2ABF4IgAReCIAEXj0ABF5qgAReoYAEXs8ABF8GAARfKgAEX1uABF+KgARfzAAEX+4ABGAfAARgWYAEYIkABGDBgARg94AEYSsABGFVgARhe4AEYZyABGHJAARiB4AEYi+ABGJhAARikIAEYr2ABGLkgARjCoAEYy2ABGNXAARjhgAEY7mABGQIAARkLQAEZF4ABGShAARkoQAEZKEABGTSAARlDIAEZU8ABGWDgARlsoAEZeqABGYXgARmXgAEZqUABGbcAARnGwAEZ0yABGeGAARnwwAEZ/QABGgrgARoYIAEaJ6ABGjaAARpFQAEaUiABGl7AARpqgAEadsABGoMgARqOYAEanCABGqjAARrFwAEa0gABGuEgARruQAEa+aABGwdgARsSwAEbIIABGyrAARszoAEbQKABG1HgARthYAEbcIABG3jgARuFQAEblAABG6LgARuxwAEbvEABG8kgARvSoAEb3iABG+wgARv4gAEcAeABHBGgARwggAEcLmABHDmgARxFIAEcUWABHF1AARxogAEccyABHHzgARyGQAEcj8ABHJngARylgAEcskABHL0gARzW4AEc6iABHPOAARz9gAEdCCABHRRgAR0hIAEdK2ABHT3AAR1Q4AEdUOABHV2AAR1sAAEdfgABHY9AAR2eYAEdquABHbagAR3DAAEdzqABHdsAAR3mwAEd8wABHgDgAR4PQAEeHiABHixgAR45IAEeRmABHlMAAR5gQAEebKABHnsgAR6JoAEemMABHqOAAR6wAAEevOABHspgAR7YIAEe5EABHu6AAR75gAEfBsABHxKgAR8eAAEfKYABHzUAAR9DQAEfUeABH13gAR9qgAEfeQABH4dAAR+XYAEfqkABH7ngAR/JwAEf2iABH+jgAR/3wAEgByABIBTgASAhIAEgLQABIDmAASBEoAEgTsABIFtgASBnoAEgcMABIHqAASCEYAEgjSABIJdAASCoAAEgtkABIMMAASDRAAEg3MABIOagASD5QAEhCwABIR7AASEpoAEhOKABIUegASFVYAEhYMABIW4AASF4gAEhhQABIZIAASGeQAEhqyABIbkAASHTYAEh7QABIgYgASIhgAEiP8ABIliAASJzAAEij6ABIqpgASLEQAEi3uABIvjAASMFoAEjEAABIxuAASMp4AEjNqABI0IAASNPIAEjXGABI2igASN0IAEjfwABI4lgASOUYAEjpOABI7IAASO+gAEjykABI9ZAASPrAAEkAKABJAwAASQXoAEkIwABJDXgASRJ4AEkVUABJFVAASRVQAEkYOABJGvAASR3wAEkheABJJTAASSloAEksuABJMBgASTMYAEk2oABJNqAASTnIAEk5yABJPSgASUEQAElFkABJSXgASU34AElROABJVZgASVlwAEleqABJYdAASWXwAElqsABJb0gASXN4AEl4QABJfIgASYBoAEmD0ABJiDgASYwIAEmP2ABJk/gASZf4AEmb2ABJn3gASaLwAEmmOABJqYAASazwAEmwkABJtIgASbjAAEm+wABJwiAAScU4AEnIyABJzLAASdEoAEnVIABJ2bAASd1gAEnjyABJ58AASesAAEnuyABJ8xgASffoAEn8QABKAIAASgRQAEoIGABKC+AASg/IAEoUYABKGIAAShxIAEogeABKJNAASihIAEosWABKMPAASjToAEo4oABKPNgASkD4AEpEuABKSLgASkwYAEpPmABKUtgASlaoAEpasABKXyAASmOwAEpo0ABKcLgASnawAEp6KABKfhAASoHgAEqIgABKjlgASpSQAEqXKABKmjAASpzAAEqf2ABKowAASqVYAEqn8ABKqvgASq5IAEqw2ABKs+AASrboAEq5cABKvKgASr94AErCiABKxQAASseQAErKKABKzVAAStCIAErUCABK1wAAStoIAErcsABK32AASuSIAErnIABK6eAASu6wAEr0WABK+XAASv0wAEsAmABLBAAASwgQAEsMyABLEPgASxUoAEsZgABLHKAASx+4AEsjUABLJogASyogAEst2ABLMZgASzTQAEs4CABLO2AASz7AAEtCGABLRZgAS0iIAEtLsABLT7AAS1Q4AEtYiABLXPAAS2EgAEtlUABLaYAAS23QAEtxuABLdbAAS3oYAEt+EABLgdAAS4TQAEuIKABLi7AAS46YAEuRQABLlKAAS5dAAEubQABLnugAS6KQAEun0ABLqtgAS63oAEuxAABLsQAAS7EAAEuxAABLsQAAS7EAAEuxAABLsQAAS7M4AEu1cABLt4gAS7n4AEu84ABLv2AAS8GoAEvEYABLxyAAS8oYAEvM8ABLz6AAS9KAAEvU6ABL2DAAS9soAEveIABL4FgAS+LwAEvlMABL5TAAS+UwAEvo8ABL7GgAS/AoAEvzMABL91gAS/tYAEwAqABMBbAATAWwAEwFsABMBbAATAWwAEwJQABMDMgATBEgAEwUgABMGCgATBw4AEwgcABMI+AATCh4AEwsAABMMBAATDQIAEw3oABMO9AATD/gAExDkABMR8gATEtQAExLUABMS1AATEtQAExOSABMUTgATFS4AExXwABMWpAATF3IAExg+ABMZEAATGgoAExriABMbpgATHFoAExz6ABMdzgATHrQAEx+sABMg/gATIdgAEyKiABMjYgATI9QAEyRmABMkygATJWwAEyX2ABMmfAATJxgAEyekABMoKgATKJgAEykwABMppgATKkgAEyrkABMrbAATK+QAEyx6ABMs7AATLXAAEy4SABMurgATL+gAEzD6ABMw+gATMPoAEzD6ABMw+gATMbQAEzJaABMzMAATM6wAEzRGABM03gATNZoAEzY4ABM25AATN3IAEzgaABM4wgATOeQAEzsYABM8EgATPVAAEz4mABM/TgATP04AEz9OABM/3gATQG4AE0GkABNC5AATQ9AAE0TMABNFzAATRrQAE0fGABNI0gATSfIAE0rSABNLsAATTMAAE03qABNOxAATT8AAE1DeABNRwAATUr4AE1POABNU2AATVbIAE1akABNYKgATWRgAE1ocABNbOgATXFIAE12EABNepAATX8YAE2DWABNh7AATYyQAE2QwABNlXgATZoIAE2ecABNoiAATaXIAE2pyABNrRgATbDoAE2z6ABNuEgATbygAE3AwABNxIgATcfwAE3LoABN0EAATdO4AE3TuABN07gATdfwAE3cuABN4jgATebIAE3rQABN8GAATfUIAE356ABN/kgATgLoAE4HoABODLgATgy4AE4MuABOD1gAThI4AE4VWABOGNgAThwQAE4fUABOIrAATiVYAE4oQABOKwgATi3oAE4xSABONOgATjToAE43yABOOpgATjy4AE4/SABOQmAATkUgAE5IaABOS5gATk5oAE5SEABOVTAATlhgAE5bMABOXhgATmDYAE5jsABOZvAATmnAAE5skABObvAATnHoAE50mABOdsgATnkIAE57WABOfbAAToAIAE6CwABOhYgATogAAE6KeABOjNAATo9AAE6T8ABOmKAATpigAE6byABOn3AATqJoAE6mOABOqbgATqzoAE6wkABOtDAATrggAE678ABOv6AATsNQAE7GYABOyZAATs0QAE7QuABO1IAATtiQAE7bwABO4WAATuaoAE7rGABO8LgATvYAAE75IABO/IgATv/QAE7/0ABPAuAATwX4AE8JEABPDDgATw9QAE8SWABPFXAATxiIAE8bYABPHkAATyDYAE8jmABPJpAATymYAE8soABPL6AATzLwAE828ABPOlgATz5QAE9B4ABPRVgAT0j4AE9MaABPT5AAT1LgAE9WIABPWYAAT1zYAE9gAABPY1AAT2XYAE9o8ABPbJAAT3AwAE90CABPdsgAT3noAE98eABPfygAT4HgAE+EwABPh3AAT4pQAE+NQABPkCAAT5MAAE+WaABPmVAAT5y4AE+fYABPomAAT6WIAE+ocABPq7gAT66gAE+yQABPtkgAT7mwAE+9iABPwKAAT8P4AE/G0ABPyagAT8zYAE/QCABP0sgAT9XAAE/Y6ABP27AAT95YAE/haABP5JAAT+cYAE/pkABP68AAT+7QAE/xWABP9YAAT/jAAE/7sABQAGgAUAVQAFAIAABQC9AAUA74AFARwABQEcAAUBHAAFARwABQFPAAUBf4AFAa+ABQGvgAUBr4AFAa+ABQGvgAUB84AFAjuABQKAAAUCzgAFAxqABQNjgAUDtQAFA/aABQRBAAUEkQAFBNsABQUjgAUFboAFBbAABQX7gAUGRQAFBqKABQbigAUHH4AFB2WABQetAAUH94AFCEYABQijgAUI74AFCTUABQmLAAUKAAAFCm2ABQriAAULT4AFC4iABQvZAAUMCQAFDDkABQxxgAUMroAFDOmABQ0eAAUNTQAFDXyABQ28gAUN8wAFDfMABQ4jgAUOYQAFDpGABQ7WAAUPEwAFD1mABQ+WgAUP4wAFEAKABRA9gAUQfYAFEKUABRDSAAUQ+YAFER+ABRFBAAURbwAFEZuABRG7AAUR2gAFEgEABRIhgAUSSQAFEnUABRKWAAUSugAFEtiABRL8gAUTIAAFE0OABRNzAAUTooAFE8mABRPsgAUUEAAFFD6ABRRhgAUUiAAFFK8ABRTSAAUU/wAFFSMABRVMAAUVdAAFFZEABRW3gAUV0IAFFfoABRYagAUWPQAFFl0ABRaKgAUWioAFFrKABRbZAAUXDAAFFzIABRdpgAUXhgAFF7CABRfXgAUYDIAFGDsABRhnAAUYkIAFGLcABRjpAAUZGgAFGVMABRmGgAUZugAFGfiABRoqgAUaZAAFGp+ABRraAAUbEgAFG02ABRuGgAUb1oAFHAeABRw/AAUceoAFHLcABRz3gAUdjYAFHcaABR4MgAUeYIAFHpmABR7TAAUfDQAFH0YABR96AAUfr4AFH+0ABSBJgAUgfQAFILGABSDjgAUhPoAFIZmABSHsAAUiSYAFIqSABSMJgAUjIwAFI06ABSNzAAUjoQAFI8WABSPzAAUkDgAFJD0ABSRfgAUklQAFJK2ABSTVgAUlBoAFJS+ABSViAAUlkIAFJbsABSXgAAUl/YAFJhoABSY+gAUmdAAFJpmABSbEAAUm6oAFJw6ABSctAAUnS4AFJ2sABSeLgAUnsYAFJ9uABSgggAUoPQAFKGYABSiYgAUo1wAFKR4ABSluAAUpuAAFKfSABSo6AAUqdIAFKsiABSseAAUrYQAFK62ABSvsgAUsM4AFLH4ABSy8gAUtAYAFLUoABS2bgAUt5wAFLjAABS5zAAUus4AFLvCABS83gAUvfwAFL8IABTAGgAUwRoAFMMeABTEGAAUxUAAFMZMABTHSAAUyEwAFMkqABTKLgAUyxAAFMvKABTM4gAUziIAFM9GABTQfAAU0SwAFNIYABTTKgAU1D4AFNVYABTWKAAU1x4AFNfcABTYugAU2cIAFNqwABTbbAAU3I4AFN2iABTeqAAU334AFOBaABThWgAU4kIAFOMiABTj+gAU5MAAFOV+ABTmUgAU5yQAFOgGABTo/AAU6dQAFOukABTtBAAU7cIAFO6MABTvaAAU8FYAFPFgABTyXAAU87QAFPTWABT01gAU9XgAFPY4ABT3MgAU+BoAFPjsABT5sgAU+mgAFPsuABT75AAU/KYAFP1kABT+HgAU/vIAFP/SABUAsAAVAY4AFQJSABUDIgAVA+YAFQS2ABUFegAVBloAFQdAABUIMgAVCOAAFQmiABUKagAVCz4AFQwWABUM1AAVDXAAFQ4YABUO5gAVD5gAFRBMABUQ/gAVEbAAFRKSABUTdgAVFDAAFRT2ABUV2AAVFrQAFRewABUY2gAVGc4AFRrEABUbxgAVHKwAFR2SABUehAAVH1gAFSAYABUg0AAVIZQAFSJGABUi4gAVI6YAFSRiABUk+AAVJYwAFSYkABUmqgAVJ0wAFShQABUpKAAVKfIAFSrYABUrjAAVLCQAFS1OABUuYgAVL5IAFTA0ABUxGgAVMgAAFTLMABUzfgAVNE4AFTTyABU1ugAVNpAAFTdYABU4FgAVOPgAFTnkABU60AAVO7QAFTzCABU9/gAVPtwAFT/YABVA9AAVQfYAFULmABVD8AAVROAAFUXEABVGhgAVR1QAFUhOABVJLgAVSfoAFUrcABVLwgAVTLIAFU18ABVOPAAVTv4AFU/UABVQ6gAVUcwAFVKuABVTfgAVVFAAFVWqABVXHAAVV+YAFVi2ABVZggAVWtAAFVw2ABVdEAAVXRAAFV0QABVd0AAVXoIAFV9GABVgLAAVYR4AFWIwABVjCgAVY+gAFWSuABVlkAAVZmYAFWb+ABVnuAAVaJYAFWlOABVqKgAVar4AFWuWABVsSgAVbUAAFW3KABVukAAVb3oAFXBgABVxLgAVciAAFXLwABVzqgAVdEQAFXUeABV10AAVdoQAFXdUABV4FAAVeMQAFXlwABV6EgAVeqIAFXsyABV71AAVfJIAFX1SABV+IgAVf1oAFX/yABWArAAVgYAAFYJ4ABWDVAAVhFQAFYUcABWGkAAVh2gAFYgWABWI5gAVidYAFYraABWL1AAVjMAAFY2SABWOaAAVj0IAFZAaABWRIAAVkhIAFZLmABWTzAAVlMIAFZV+ABWWXAAVl1oAFZhUABWZIAAVmgwAFZryABWbxAAVnKIAFZ1YABWeFgAVnsQAFZ/GABWgpgAVoZgAFaKQABWjuAAVpXwAFabYABWnkgAVqGYAFakyABWqjAAVq+YAFaxgABWs9gAVrXAAFa4MABWupgAVrxIAFa+QABWwKAAVsCgAFbCmABWxOAAVsdQAFbJQABWy9gAVs4AAFbQeABW0lAAVtRIAFbWWABW2NgAVttYAFbeGABW4HAAVuLIAFbk2ABW5uAAVutwAFbtWABW71gAVvNoAFb3wABW/BgAVv84AFcCkABXBhgAVwnIAFcOKABXEhAAVxXQAFcZsABXHNAAVyAAAFcjmABXJsgAVypgAFcuSABXMggAVzUwAFc4gABXO8AAVz8YAFdCgABXRhAAV0kAAFdMKABXUCAAV1SoAFdZAABXXWAAV2GIAFdloABXafAAV24QAFdx6ABXdggAV3qIAFd+sABXgpAAV4WAAFeI2ABXjFAAV484AFeR2ABXkdgAV5TIAFeYuABXnHgAV6BIAFeliABXqHgAV6uAAFeuqABXrqgAV66oAFeyCABXs+gAV7XIAFe3kABXugAAV7z4AFe/iABXwdAAV8SIAFfHYABXykgAV8zYAFfPOABX0cgAV9PwAFfXKABX2egAV9z4AFfe2ABX4fgAV+VwAFfoKABX7IAAV/CoAFf1qABX+FAAV/r4AFf+CABYAHgAWAMwAFgGUABYCcAAWAxgAFgQQABYEvAAWBX4AFgZCABYG8gAWB8YAFgiSABYJRAAWChgAFgrCABYLhgAWDEoAFg0wABYN/AAWDrQAFg+IABYQXAAWETQAFhI2ABYS7AAWE5QAFhQqABYU8AAWFcYAFhbCABYYBgAWGN4AFhlKABYZ2gAWGkAAFhreABYbYgAWG+oAFhyMABYdGAAWHaIAFh4UABYemgAWHwgAFh+qABYgQgAWIMoAFiE4ABYhvgAWIiwAFiKoABYjPgAWI9IAFiTgABYl7gAWJrwAFieYABYoNAAWKOgAFinMABYqWAAWKwIAFiuqABYscgAWLSAAFi3cABYuegAWLzIAFi/uABYwcAAWMRoAFjIEABYzMgAWNAAAFjUmABY1uAAWNmIAFjc2ABY39AAWOMwAFjjMABY5mAAWOkIAFjsGABY7pgAWPEYAFjzgABY9mAAWPioAFj7YABY/jAAWQHwAFkEyABZCBAAWQqwAFkN8ABZEkgAWRTYAFkX4ABZGwAAWR6IAFkiaABZJfAAWSoQAFkt0ABZL8AAWTJ4AFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk0yABZNMgAWTTIAFk30ABZO3AAWT+YAFlCuABZRkgAWUmwAFlM4ABZULgAWVT4AFlYyABZXBgAWV/gAFlkGABZZ6AAWWqgAFltiABZcOgAWXDoAFlw6ABZdMAAWXiQAFl4kABZeJAAWXrYAFl8+ABZf0AAWYIAAFmEUABZhsAAWYbAAFmGwABZiCgAWYgoAFmIKABZjBAAWZAAAFmTQABZlvgAWZqoAFme4ABZovgAWaegAFmr2ABZr1gAWbLIAFmyyABZtKAAWbiwAFm8uABZwWAAWcFgAFnBYABZxPAAWcTwAFnE8ABZx4gAWcngAFnMMABZzpgAWdFoAFnUQABZ13gAWdoQAFndKABZ38AAWeMAAFnmuABZ6aAAWez4AFnwSABZ87AAWfcwAFn7KABZ/SgAWf9AAFoBaABaBCgAWge4AFoJ6ABaDPgAWhBAAFoSYABaFMAAWhe4AFoXuABaF7gAWhsoAFobKABaGygAWh3gAFogkABaI8AAWiaYAFopYABaLFAAWi7QAFou0ABaLtAAWjJAAFoyQABaMkAAWjXIAFo42ABaONgAWjjYAFo42ABaONgAWjjYAFo42ABaONgAWjjYAFo42ABaONgAWjjYAFo60ABaPMAAWj7AAFo+wABaQWgAWkFoAFpBaABaRIgAWkdYAFpKQABaTZAAWlDYAFpUEABaV9AAWltoAFpegABaYgAAWmXQAFpqQABabrgAWnFIAFpz4ABac+AAWnPgAFpz4ABad9AAWnfQAFp7qABaf6AAWn+gAFqD4ABahwAAWopQAFqOSABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABakagAWpGoAFqRqABalMAAWphoAFqcqABan9gAWqNoAFqnCABaqkgAWq5QAFqy8ABatuAAWro4AFq+AABawkgAWsXoAFrIuABay6AAWsugAFrLoABay6AAWs7gAFrSKABa0igAWtIoAFrUmABa1tAAWtkoAFrcEABa3ugAWuGAAFrhgABa4YAAWuT4AFrk+ABa5PgAWuh4AFrr2ABa7ogAWvHAAFr04ABa+IgAWvwgAFsAKABbA9AAWwbAAFsJyABbCcgAWw34AFsQiABbEyAAWxMgAFsTIABbEyAAWxXwAFsV8ABbFfAAWxgIAFsZ2ABbG6AAWx2IAFsf0ABbIiAAWyTYAFsnKABbKcAAWyvQAFsuWABbMUgAWzPYAFsz2ABbM9gAWzbIAFs2yABbNsgAWzhYAFs5+ABbO6gAWzuoAFs/OABbQeAAW0UAAFtIYABbSmgAW0yoAFtPeABbT3gAW094AFtUoABbVKAAW1SgAFtUoABbVKAAW1SgAFtUoABbVKAAW1SgAFtUoABbVKAAW1SgAFtYmABbWJgAW1iYAFtYmABbWJgAW1iYAFtYmABbXDgAW1w4AFtcOABbXDgAW1w4AFtcOABbXDgAW1w4AFtcOABbXwgAW2HQAFtkuABbZLgAW2fgAFtn4ABbZ+AAW2toAFtuoABbceAAW3WIAFt5QABbfPAAW4EgAFuFIABbiJAAW4x4AFuMeABbjHgAW4x4AFuPaABbknAAW5JwAFuScABbknAAW5XwAFuV8ABbmOAAW5vQAFub0ABbn2AAW6KwAFumOABbpjgAW6nQAFus0ABbrNAAW6zQAFus0ABbrNAAW7FYAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu18ABbtfAAW7XwAFu4wABbu4gAW7uIAFu7iABbu4gAW78QAFvCkABbx0AAW8dAAFvHQABbx0AAW8dAAFvHQABbx0AAW8qwAFvOIABbziAAW84gAFvOIABb0JAAW9MAAFvTAABb0wAAW9MAAFvV0ABb2JAAW9iQAFvYkABb2JAAW9zoAFvhQABb4UAAW+FAAFvhQABb47AAW+YYAFvmGABb5hgAW+YYAFvqOABb7mAAW+5gAFvuYABb7mAAW/IAAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/WYAFv1mABb9ZgAW/jYAFv8GABb/BgAW/wYAFv8GABb/pgAXAEYAFwE8ABcBPAAXATwAFwE8ABcBPAAXATwAFwE8ABcCAAAXAsQAFwLEABcCxAAXAsQAFwNaABcD7gAXA+4AFwPuABcD7gAXBIwAFwUoABcFKAAXBSgAFwUoABcGIgAXBxoAFwcaABcHGgAXBxoAFwe2ABcIUgAXCFIAFwhSABcIUgAXCUYAFwo0ABcKNAAXCjQAFwo0ABcK7gAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXC6gAFwuoABcLqAAXDF4AFwzuABcNYgAXDhYAFw68ABcPQAAXD+IAFxDIABcReAAXEfoAFxKMABcTUAAXE6oAFxSgABcVTAAXFcAAFxZoABcXFgAXF5gAFxgyABcYkgAXGUgAFxnkABcaQAAXGwIAFxucABccPAAXHJAAFxyQABcckAAXHJAAFxyQABcckAAXHJAAFxyQABcckAAXHUwAFx3sABcd7AAXHewAFx3sABcd7AAXHmYAFx5mABce/AAXHvwAFx+2ABcgNAAXIDQAFyDUABcg1AAXINQAFyGMABciNgAXIjYAFyI2ABciNgAXIjYAFyI2ABciNgAXIjYAFyI2ABciNgAXIjYAFyL0ABcjkgAXJF4AFyU6ABcl2gAXJsIAFydwABcoLgAXKLIAFylsABcqCgAXKtgAFyu0ABcsUgAXLFIAFyxSABcs8gAXLdQAFy5GABcusAAXLwgAFy8IABcvCAAXLwgAFy8IABcvCAAXLwgAFy9sABcvbAAXL+YAFzB6ABcxGAAXMRgAFzEYABcxGAAXMRgAFzEYABcxogAXMh4AFzKSABcykgAXMpIAFzKSABcykgAXMpIAFzKSABcykgAXMpIAFzM2ABc0GgAXNI4AFzT8ABc0/AAXNYoAFzX4ABc2SAAXNkgAFzcYABc3ogAXOAQAFzhYABc41gAXONYAFzjWABc5cgAXOfAAFzquABc7AgAXOwIAFzsCABc7AgAXO3YAFzt2ABc7dgAXO3YAFzt2ABc7dgAXO3YAFzt2ABc7dgAXO3YAFzt2ABc7dgAXO3YAFzt2ABc7dgAXO3YAFzt2ABc70gAXPFYAFzxWABc8VgAXPFYAFzzOABc8zgAXPM4AFzzOABc8zgAXPM4AFz0kABc9qAAXPagAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPhoAFz4aABc+GgAXPnoAFz7YABc/MgAXP54AF0AUABdAlgAXQUAAF0GIABdBiAAXQYgAF0GIABdBiAAXQYgAF0GIABdBiAAXQYgAF0IwABdC5gAXQ6QAF0QkABdFAAAXRbQAF0ZiABdHIgAXSDwAF0kKABdJpgAXSkAAF0rsABdLngAXTEQAF0zUABdNcAAXTgAAF06SABdOkgAXTpIAF06SABdOkgAXTpIAF06SABdOkgAXTpIAF06SABdOkgAXTpIAF06SABdOkgAXT5IAF1D0ABdR5gAXUxQAF1PaABdVCgAXVfYAF1cGABdYHgAXWS4AF1pMABdbzgAXXQoAF142ABdfOgAXYKAAF2GqABdi5gAXY+wAF2VUABdmTAAXZ4QAF2hOABdpfAAXamwAF2uCABdsigAXbcYAF27iABdv+gAXcUAAF3LUABdzVAAXc1QAF3NUABdzVAAXc6gAF3QEABd0BAAXdAQAF3QEABd0BAAXdCYAF3RIABd0bAAXdJAAF3SQABd0kAAXdS4AF3YeABd2qgAXd2gAF3gCABd4dgAXePoAF3mUABd6bAAXewIAF3tuABd8HAAXfM4AF30kABd9hAAXfegAF36AABd/IgAXf5QAF4AKABeAhAAXgS4AF4HWABeCaAAXguAAF4M0ABeDrAAXhCwAF4R8ABeEfAAXhHwAF4R8ABeEfAAXhHwAF4R8ABeEfAAXhQgAF4UIABeFCAAXhQgAF4UIABeFCAAXhQgAF4UIABeFCAAXhQgAF4UIABeFCAAXhUYAF4WCABeF4gAXhiQAF4aUABeG/AAXhvwAF4b8ABeG/AAXhvwAF4b8ABeG/AAXhvwAF4b8ABeG/AAXhvwAF4dKABeHmAAXh5gAF4eYABeHmAAXh5gAF4eYABeHmAAXh5gAF4eYABeHmAAXh5gAF4eYABeHmAAXh5gAF4eYABeH6gAXiFQAF4hUABeIVAAXiFQAF4hUABeIVAAXiFQAF4hUABeIVAAXiFQAF4hUABeIVAAXiFQAF4hUABeIVAAXiMQAF4lCABeJQgAXiUIAF4lCABeJQgAXiUIAF4lCABeJQgAXiUIAF4lCABeJQgAXiUIAF4lCABeJQgAXiUIAF4mIABeJzAAXicwAF4nMABeJzAAXicwAF4nMABeJzAAXicwAF4nMABeJzAAXicwAF4nMABeJzAAXicwAF4nMABeKHgAXimQAF4rEABeKxAAXisQAF4rEABeKxAAXisQAF4rEABeKxAAXisQAF4rEABeKxAAXisQAF4rEABeKxAAXixYAF4tgABeLrAAXi/wAF4xGABeMlAAXjJQAF4yUABeMlAAXjJQAF4yUABeMlAAXjJQAF4yUABeMlAAXjJQAF4zMABeNBAAXjUQAF418ABeN1gAXjgwAF44MABeODAAXjgwAF44MABeODAAXjgwAF44MABeODAAXjgwAF44MABeOeAAXjuoAF47qABeO6gAXjuoAF47qABeO6gAXjuoAF47qABeO6gAXjuoAF47qABeO6gAXjuoAF47qABeO6gAXjxoAF49SABePigAXj9gAF4/YABeP2AAXj9gAF4/YABeP2AAXj9gAF4/YABeP2AAXj9gAF4/YABeP2AAXj9gAF5AKABeQTAAXkKwAF5D0ABeRVAAXkg4AF5KWABeTHAAXk2AAF5NgABeTYAAXk2AAF5NgABeTYAAXk2AAF5NgABeTogAXk9wAF5QMABeUQAAXlIIAF5UEABeVOAAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXlZ4AF5WeABeVngAXljIAF5YyABeWMgAXljIAF5YyABeWMgAXljIAF5YyABeWMgAXljIAF5YyABeWMgAXljIAF5YyABeWlgAXlvgAF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXl34AF5d+ABeXfgAXmFwAF5k8ABeaFAAXmwwAF5vcABecygAXnbwAF57sABef4AAXoPIAF6HaABei7AAXpD4AF6UkABel8gAXpsQAF6emABeongAXqJ4AF6ieABeongAXqJ4AF6ieABeongAXqJ4AF6ieABeongAXqOAAF6nMABeqjgAXqywAF6veABesUAAXrMIAF62GABeuLgAXrrAAF68uABevzgAXsIQAF7EqABex0AAXsoAAF7MwABezxgAXtGIAF7T6ABe1zgAXtiwAF7cMABe38AAXuL4AF7nYABe6mAAXu0oAF7xOABe8TgAXvSgAF70oABe9pAAXvaQAF72kABe/EAAXvxAAF78QABe/EAAXvxAAF78QABe/EAAXvxAAF8BAABfAQAAXwEAAF8BAABfBGgAXwfIAF8HyABfB8gAXwsIAF8NwABfDcAAXxAAAF8QAABfE6AAXxY4AF8YgABfG4AAXx+IAF8i6ABfIugAXyeQAF8pCABfKngAXy0IAF8vmABfMjAAXzTAAF83SABfOdgAXzxgAF8/8ABfQagAX0KQAF9IUABfS7gAX03wAF9ROABfVRgAX1eIAF9ZSABfXRAAX1+4AF9heABfZOAAX2hIAF9sWABfbgAAX3aYAF95YABfe+gAX38oAF+BSABfhIgAX4hAAF+KsABfjbAAX5CwAF+UKABfltAAX5lQAF+cyABfoPAAX6I4AF+jgABfphgAX6iYAF+rEABfrYgAX7AIAF+yyABftVAAX7fQAF+46ABfufgAX7toAF+9qABfwAgAX8GAAF/C+ABfxHAAX8XgAF/IgABfyxgAX87wAF/S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yAGUAbABlAGEAcwBlAFQASQBUAFUAUwBDAHkAYgBlAHIAYgBpAHQAQgBhAHMAaQBjAFQASQBUAFUAUwAgAEMAeQBiAGUAcgBiAGkAdAAgAEIAYQBzAGkAYwAgAGkAcwAgAGEAIAB0AHIAYQBkAGUAbQBhAHIAawAgAG8AZgAgAHQAaABlACAAQgBpAHQAcwB0AHIAZQBhAG0AIABJAG4AYwAgAC8AIABUAEkAVABVAFMAIABwAHIAbwBqAGUAYwB0AC4AAAACAAAAAAAA/4wANwAAAAAAAAAAAAAAAAAAAAAAAAAAJzwAAAECAAsADAANAA4ADwAQABEAEgATABQAFQAWABcAGAAZABoAGwAcAB0AHgAfACAAIQAiACMAJAAlACYAJwAoACkAKgArACwALQAuAC8AMAAxADIAMwA0ADUANgA3ADgAOQA6ADsAPAA9AD4APwBAAEEAQgBDAEQARQBGAEcASABJAEoASwBMAE0ATgBPAFAAUQBSAFMAVABVAFYAVwBYAFkAWgBbAFwAXQBeAF8AYABhAKMAhACFAL0AlgCGAI4AiwCdAKkApACKAQMAgwCTAI0AlwCIAQQA3gCeAKoAogCtAMkAxwCuAGIAYwCQAGQAywBlAMgAygDPAMwAzQDOAGYA0wDQANEArwBnAJEA1gDUANUAaACJAGoAaQBrAG0AbABuAKAAbwBxAHAAcgBzAHUAdAB2AHcAeAB6AHkAewB9AHwAuAChAH8AfgCAAIEAugDXALAAsQC7AKYA2ADhANsA3AEFAOAA2QDfAJsAsgCzALYAtwDEALQAtQDFAIIAwgCHAKsAxgC+AL8BBgCMAQcAmACoAJoAmQClAJIAnACnAI8AlACVALkAwADBAKwABAAGAAUACAAHAAoACQDoAPIA8wDxAPUA9AD2AOkA8ADrAO0A6gDsAO4BCAEJAQoBCwEMAQ0A/QD+AQ4BDwEQAREA/wEAARIBEwEUARUBFgEXARgBGQEaARsBHAEdAR4BHwEgASEA+AD5ASIBIwEkASUBJgEnASgBKQEqASsBLAEtAS4BLwEwATEBMgEzATQBNQE2ATcBOAE5AToBOwE8AT0BPgE/AUABQQDiAOMBQgFDAUQBRQFGAUcBSAFJAUoBSwFMAU0BTgFPAVABUQFSAVMBVAFVAVYBVwFYAVkBWgFbAVwA5ADlAV0BXgFfAWABYQFiAWMBZAFlAWYBZwFoAWkBagFrAWwBbQFuAW8BcAFxAXIBcwF0AXUBdgDmAOcBdwF4AXkBegF7AXwBfQF+AX8BgAGBAYIBgwGEAYUBhgGHAYgBiQGKAYsBjAGNAY4BjwGQAZEBkgGTAZQBlQGWAZcBmAGZAZoBmwGcAZ0BngGfAaAAnwGhAaIBowGkAaUBpgGnAagBqQGqAasBrAGtAa4BrwGwAbEBsgCXAbMBtAG1AbYBtwG4AbkBugG7AbwBvQG+Ab8BwAHBAcIBwwHEAcUBxgHHAcgByQHKAcsBzAHNAc4BzwHQAdEB0gHTAdQB1QHWAdcB2AHZAdoB2wHcAd0B3gHfAeAB4QHiAeMB5AHlAeYB5wHoAekB6gHrAewB7QHuAe8B8AHxAfIB8wH0AfUB9gH3AfgB+QH6AfsB/AH9Af4B/wIAAgECAgIDAgQCBQIGAgcCCAIJAgoCCwIMAg0CDgIPAhACEQISAhMCFAIVAhYCFwIYAhkCGgIbAhwCHQIeAh8CIAIhAiICIwIkAiUCJgInAigCKQIqAisCLAItAi4CLwIwAPcCMQIyAjMCNAI1AjYCNwI4AjkCOgI7AjwCPQI+Aj8CQAJBAkICQwAQAkQCRQJGAkcCSAJJAkoCSwJMAk0CTgJPAlACUQJSAlMCVAJVAlYCVwJYAlkCWgJbAlwCXQJeAl8CYAJhAmICYwJkAmUCZgJnAmgCaQJqAmsCbAJtAm4CbwJwAnECcgJzAnQCdQJ2AncCeAJ5AnoCewJ8An0CfgJ/AoACgQKCAoMChAKFAoYChwKIAokCigKLAowCjQKOAo8CkAKRApICkwKUApUClgKXApgCmQKaApsCnAKdAp4CnwKgAqECogKjAqQCpQKmAqcCqAKpAqoCqwKsAq0CrgKvArACsQKyArMCtAK1ArYCtwK4ArkCugK7ArwCvQK+Ar8CwALBAsICwwLEAsUCxgLHAsgCyQLKAssCzALNAs4CzwLQAtEC0gLTAtQC1QLWAtcC2ALZAtoC2wLcAt0C3gLfAuAC4QLiAuMC5ALlAuYC5wLoAukC6gLrAuwC7QLuAu8C8ALxAvIC8wL0AvUC9gL3AvgC+QL6AvsC/AL9Av4C/wMAAwEDAgMDAwQDBQMGAwcDCAMJAwoDCwMMAw0DDgMPAxADEQMSAxMDFAMVAxYDFwMYAxkDGgMbAxwDHQMeAx8DIAMhAyIDIwMkAyUDJgMnAygDKQMqAysDLAMtAy4DLwMwAzEDMgMzAzQDNQM2AzcDOAM5AzoDOwM8Az0DPgM/A0ADQQNCA0MDRANFA0YDRwNIA0kDSgNLA0wDTQNOA08DUANRA1IDUwNUA1UDVgNXA1gDWQNaA1sDXANdA14DXwNgA2EDYgNjA2QDZQNmA2cDaANpA2oDawNsA20DbgNvA3ADcQNyA3MDdAN1A3YDdwN4A3kDegN7A3wDfQN+A38DgAOBA4IDgwOEA4UDhgOHA4gDiQOKA4sDjAONA44DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQOiA6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgPPA9AD0QPSA9MD1APVA9YD1wPYA9kD2gPbA9wD3QPeA98D4APhA+ID4wPkA+UD5gPnA+gD6QPqA+sD7APtA+4D7wPwA/ED8gPzA/QD9QP2A/cD+AP5A/oD+wP8A/0D/gP/BAAEAQQCBAMEBAQFBAYEBwQIBAkECgQLBAwEDQQOBA8EEAQRBBIEEwQUBBUEFgQXBBgEGQQaBBsEHAQdBB4EHwQgBCEEIgQjBCQEJQQmBCcEKAQpBCoEKwQsBC0ELgQvBDAEMQQyBDMENAQ1BDYENwQ4BDkEOgQ7BDwEPQQ+BD8EQARBBEIEQwREBEUERgRHBEgESQRKBEsETARNBE4ETwRQBFEEUgRTBFQEVQRWBFcEWARZBFoEWwRcBF0EXgRfBGAEYQRiBGMEZARlBGYEZwRoBGkEagRrBGwEbQRuBG8EcARxBHIEcwR0BHUEdgR3BHgEeQR6BHsEfAR9BH4EfwSABIEEggSDBIQEhQSGBIcEiASJBIoEiwSMBI0EjgSPBJAEkQSSBJMElASVBJYElwSYBJkEmgSbBJwEnQSeBJ8EoAShBKIEowSkBKUEpgSnBKgEqQSqBKsErAStBK4ErwSwBLEEsgSzBLQEtQS2BLcEuAS5BLoEuwS8BL0EvgS/BMAEwQTCBMMExATFBMYExwTIBMkEygTLBMwEzQTOBM8E0ATRBNIE0wTUBNUE1gTXBNgE2QTaBNsE3ATdBN4E3wTgBOEE4gTjBOQE5QTmBOcE6ATpBOoE6wTsBO0E7gTvBPAE8QTyBPME9AT1BPYE9wT4BPkE+gT7BPwE/QT+BP8FAAUBBQIFAwUEBQUFBgUHBQgFCQUKBQsFDAUNBQ4FDwUQBREFEgUTBRQFFQUWBRcFGAUZBRoFGwUcBR0FHgUfBSAFIQUiBSMFJAUlBSYFJwUoBSkFKgUrBSwFLQUuBS8FMAUxBTIFMwU0BTUFNgU3BTgFOQU6BTsFPAU9BT4FPwVABUEFQgVDBUQFRQVGBUcFSAVJBUoFSwVMBU0FTgVPBVAFUQVSBVMFVAVVBVYFVwVYBVkFWgVbBVwFXQVeBV8FYAVhBWIFYwVkBWUFZgVnBWgFaQVqBWsFbAVtBW4FbwVwBXEFcgVzBXQFdQV2BXcFeAV5BXoFewV8BX0FfgV/BYAFgQWCBYMFhAWFBYYFhwWIBYkFigWLBYwFjQWOBY8FkAWRBZIFkwWUBZUFlgWXBZgFmQWaBZsFnAWdBZ4FnwWgBaEFogWjBaQFpQWmBacFqAWpBaoFqwWsBa0FrgWvBbAFsQWyBbMFtAW1BbYFtwW4BbkFugW7BbwFvQW+Bb8FwAXBBcIFwwXEBcUFxgXHBcgFyQXKBcsFzAXNBc4FzwXQBdEF0gXTBdQF1QXWBdcF2AXZBdoF2wXcBd0F3gXfBeAF4QXiBeMF5AXlBeYF5wXoBekF6gXrBewF7QXuBe8F8AXxBfIF8wX0BfUF9gX3BfgF+QX6BfsF/AX9Bf4F/wYABgEGAgYDBgQGBQYGBgcGCAYJBgoGCwYMBg0GDgYPBhAGEQYSBhMGFAYVBhYGFwYYBhkGGgYbBhwGHQYeBh8GIAYhBiIGIwYkBiUGJgYnBigGKQYqBisGLAYtBi4GLwYwBjEGMgYzBjQGNQY2BjcGOAY5BjoGOwY8Bj0GPgY/BkAGQQZCBkMGRAZFBkYGRwZIBkkGSgZLBkwGTQZOBk8GUAZRBlIGUwZUBlUGVgZXBlgGWQZaBlsGXAZdBl4GXwZgBmEGYgZjBmQGZQZmBmcGaAZpBmoGawZsBm0GbgZvBnAGcQZyBnMGdAZ1BnYGdwZ4BnkGegZ7BnwGfQZ+Bn8GgAaBBoIGgwaEBoUGhgaHBogGiQaKBosGjAaNBo4GjwaQBpEGkgaTBpQGlQaWBpcGmAaZBpoGmwacBp0GngafBqAGoQaiBqMGpAalBqYGpwaoBqkGqgarBqwGrQauBq8GsAaxBrIGswa0BrUGtga3BrgGuQa6BrsGvAa9Br4GvwbABsEGwgbDBsQGxQbGBscGyAbJBsoGywbMBs0GzgbPBtAG0QbSBtMG1AbVBtYG1wbYBtkG2gbbBtwG3QbeBt8G4AbhBuIG4wbkBuUG5gbnBugG6QbqBusG7AbtBu4G7wbwBvEG8gbzBvQG9Qb2BvcG+Ab5BvoG+wb8Bv0G/gb/BwAHAQcCBwMHBAcFBwYHBwcIBwkHCgcLBwwHDQcOBw8HEAcRBxIHEwcUBxUHFgcXBxgHGQcaBxsHHAcdBx4HHwcgByEHIgcjByQHJQcmBycHKAcpByoHKwcsBy0HLgcvBzAHMQcyBzMHNAc1BzYHNwc4BzkHOgc7BzwHPQc+Bz8HQAdBB0IHQwdEB0UHRgdHB0gHSQdKB0sHTAdNB04HTwdQB1EHUgdTB1QHVQdWB1cHWAdZB1oHWwdcB10HXgdfB2AHYQdiB2MHZAdlB2YHZwdoB2kHagdrB2wHbQduB28HcAdxB3IHcwd0B3UHdgd3B3gHeQd6B3sHfAd9B34HfweAB4EHggeDB4QHhQeGB4cHiAeJB4oHiweMB40HjgePB5AHkQeSB5MHlAeVB5YHlweYB5kHmgebB5wHnQeeB58HoAehB6IHowekB6UHpgenB6gHqQeqB6sHrAetB64HrwewB7EHsgezB7QHtQe2B7cHuAe5B7oHuwe8B70Hvge/B8AHwQfCB8MHxAfFB8YHxwfIB8kHygfLB8wHzQfOB88H0AfRB9IH0wfUB9UH1gfXB9gH2QfaB9sH3AfdB94H3wfgB+EH4gfjB+QH5QfmB+cH6AfpB+oH6wfsB+0H7gfvB/AH8QfyB/MH9Af1B/YH9wf4B/kH+gf7B/wH/Qf+B/8IAAgBCAIIAwgECAUIBggHCAgICQgKCAsIDAgNCA4IDwgQCBEIEggTCBQIFQgWCBcIGAgZCBoIGwgcCB0IHggfCCAIIQgiCCMIJAglCCYIJwgoCCkIKggrCCwILQguCC8IMAgxCDIIMwg0CDUINgg3CDgIOQg6CDsIPAg9CD4IPwhACEEIQghDCEQIRQhGCEcISAhJCEoISwhMCE0ITghPCFAIUQhSCFMIVAhVCFYIVwhYCFkIWghbCFwIXQheCF8IYAhhCGIIYwhkCGUIZghnCGgIaQhqCGsIbAhtCG4IbwhwCHEIcghzCHQIdQh2CHcIeAh5CHoIewh8CH0Ifgh/CIAIgQiCCIMIhAiFCIYIhwiICIkIigiLCIwIjQiOCI8IkAiRCJIIkwiUCJUIlgiXCJgImQiaCJsInAidCJ4InwigCKEIogijCKQIpQimCKcIqAipCKoIqwisCK0IrgivCLAIsQiyCLMItAi1CLYItwi4CLkIugi7CLwIvQi+CL8IwAjBCMIIwwjECMUIxgjHCMgIyQjKCMsIzAjNCM4IzwjQCNEI0gjTCNQI1QjWCNcI2AjZCNoI2wjcCN0I3gjfCOAI4QjiCOMI5AjlCOYI5wjoCOkI6gjrCOwI7QjuCO8I8AjxCPII8wj0CPUI9gj3CPgI+Qj6CPsI/Aj9CP4I/wkACQEJAgkDCQQJBQkGCQcJCAkJCQoJCwkMCQ0JDgkPCRAJEQkSCRMJFAkVCRYJFwkYCRkJGgkbCRwJHQkeCR8JIAkhCSIJIwkkCSUJJgknCSgJKQkqCSsJLAktCS4JLwkwCTEJMgkzCTQJNQk2CTcJOAk5CToJOwk8CT0JPgk/CUAJQQlCCUMJRAlFCUYJRwlICUkJSglLCUwJTQlOCU8JUAlRCVIJUwlUCVUJVglXCVgJWQlaCVsJXAldCV4JXwlgCWEJYgljCWQJZQlmCWcJaAlpCWoJawlsCW0JbglvCXAJcQlyCXMJdAl1CXYJdwl4CXkJegl7CXwJfQl+CX8JgAmBCYIJgwmECYUJhgmHCYgJiQmKCYsJjAmNCY4JjwmQCZEJkgmTCZQJlQmWCZcJmAmZCZoJmwmcCZ0JngmfCaAJoQmiCaMJpAmlCaYJpwmoCakJqgmrCawJrQmuCa8JsAmxCbIJswm0CbUJtgm3CbgJuQm6CbsJvAm9Cb4JvwnACcEJwgnDCcQJxQnGCccJyAnJCcoJywnMCc0JzgnPCdAJ0QnSCdMJ1AnVCdYJ1wnYCdkJ2gnbCdwJ3QneCd8J4AnhCeIJ4wnkCeUJ5gnnCegJ6QnqCesJ7AntCe4J7wnwCfEJ8gnzCfQJ9Qn2CfcJ+An5CfoJ+wn8Cf0J/gn/CgAKAQoCCgMKBAoFCgYKBwoICgkKCgoLCgwKDQoOCg8KEAoRChIKEwoUChUKFgoXChgKGQoaChsKHAodCh4KHwogCiEKIgojCiQKJQomCicKKAopCioKKwosCi0KLgovCjAKMQoyCjMKNAo1CjYKNwo4CjkKOgo7CjwKPQo+Cj8KQApBCkIKQwpECkUKRgpHCkgKSQpKCksKTApNCk4KTwpQClEKUgpTClQKVQpWClcKWApZCloKWwpcCl0KXgpfCmAKYQpiCmMKZAplCmYKZwpoCmkKagprCmwKbQpuCm8KcApxCnIKcwp0CnUKdgp3CngKeQp6CnsKfAp9Cn4KfwqACoEKggqDCoQKhQqGCocKiAqJCooKiwqMCo0KjgqPCpAKkQqSCpMKlAqVCpYKlwqYCpkKmgqbCpwKnQqeCp8KoAqhCqIKowqkCqUKpgqnCqgKqQqqCqsKrAqtCq4KrwqwCrEKsgqzCrQKtQq2CrcKuAq5CroKuwq8Cr0Kvgq/CsAKwQrCCsMKxArFCsYKxwrICskKygrLCswKzQrOCs8K0ArRCtIK0wrUCtUK1grXCtgK2QraCtsK3ArdCt4K3wrgCuEK4grjCuQK5QrmCucK6ArpCuoK6wrsCu0K7grvCvAK8QryCvMK9Ar1CvYK9wr4CvkK+gr7CvwK/Qr+Cv8LAAsBCwILAwsECwULBgsHCwgLCQsKCwsLDAsNCw4LDwsQCxELEgsTCxQLFQsWCxcLGAsZCxoLGwscCx0LHgsfCyALIQsiCyMLJAslCyYLJwsoCykLKgsrCywLLQsuCy8LMAsxCzILMws0CzULNgs3CzgLOQs6CzsLPAs9Cz4LPwtAC0ELQgtDC0QLRQtGC0cLSAtJC0oLSwtMC00LTgtPC1ALUQtSC1MLVAtVC1YLVwtYC1kLWgtbC1wLXQteC18LYAthC2ILYwtkC2ULZgtnC2gLaQtqC2sLbAttC24LbwtwC3ELcgtzC3QLdQt2C3cLeAt5C3oLewt8C30Lfgt/C4ALgQuCC4MLhAuFC4YLhwuIC4kLiguLC4wLjQuOC48LkAuRC5ILkwuUC5ULlguXC5gLmQuaC5sLnAudC54LnwugC6ELogujC6QLpQumC6cLqAupC6oLqwusC60LrguvC7ALsQuyC7MLtAu1C7YLtwu4C7kLugu7C7wLvQu+C78LwAvBC8ILwwvEC8ULxgvHC8gLyQvKC8sLzAvNC84LzwvQC9EL0gvTC9QL1QvWC9cL2AvZC9oL2wvcC90L3gvfC+AL4QviC+ML5AvlC+YL5wvoC+kL6gvrC+wL7QvuC+8L8AvxC/IL8wv0C/UL9gv3C/gL+Qv6C/sL/Av9C/4L/wwADAEMAgwDDAQMBQwGDAcMCAwJDAoMCwwMDA0MDgwPDBAMEQwSDBMMFAwVDBYMFwwYDBkMGgwbDBwMHQweDB8MIAwhDCIMIwwkDCUMJgwnDCgMKQwqDCsMLAwtDC4MLwwwDDEMMgwzDDQMNQw2DDcMOAw5DDoMOww8DD0MPgw/DEAMQQxCDEMMRAxFDEYMRwxIDEkMSgxLDEwMTQxODE8MUAxRDFIMUwxUDFUMVgxXDFgMWQxaDFsMXAxdDF4MXwxgDGEMYgxjDGQMZQxmDGcMaAxpDGoMawxsDG0MbgxvDHAMcQxyDHMMdAx1DHYMdwx4DHkMegx7DHwMfQx+DH8MgAyBDIIMgwyEDIUMhgyHDIgMiQyKDIsMjAyNDI4MjwyQDJEMkgyTDJQMlQyWDJcMmAyZDJoMmwycDJ0MngyfDKAMoQyiDKMMpAylDKYMpwyoDKkMqgyrDKwMrQyuDK8MsAyxDLIMswy0DLUMtgy3DLgMuQy6DLsMvAy9DL4MvwzADMEMwgzDDMQMxQzGDMcMyAzJDMoMywzMDM0MzgzPDNAM0QzSDNMM1AzVDNYM1wzYDNkM2gzbDNwM3QzeDN8M4AzhDOIM4wzkDOUM5gznDOgM6QzqDOsM7AztDO4M7wzwDPEM8gzzDPQM9Qz2DPcM+Az5DPoM+wz8DP0M/gz/DQANAQ0CDQMNBA0FDQYNBw0IDQkNCg0LDQwNDQ0ODQ8NEA0RDRINEw0UDRUNFg0XDRgNGQ0aDRsNHA0dDR4NHw0gDSENIg0jDSQNJQ0mDScNKA0pDSoNKw0sDS0NLg0vDTANMQ0yDTMNNA01DTYNNw04DTkNOg07DTwNPQ0+DT8NQA1BDUINQw1EDUUNRg1HDUgNSQ1KDUsNTA1NDU4NTw1QDVENUg1TDVQNVQ1WDVcNWA1ZDVoNWw1cDV0NXg1fDWANYQ1iDWMNZA1lDWYNZw1oDWkNag1rDWwNbQ1uDW8NcA1xDXINcw10DXUNdg13DXgNeQ16DXsNfA19DX4Nfw2ADYENgg2DDYQNhQ2GDYcNiA2JDYoNiw2MDY0Njg2PDZANkQ2SDZMNlA2VDZYNlw2YDZkNmg2bDZwNnQ2eDZ8NoA2hDaINow2kDaUNpg2nDagNqQ2qDasNrA2tDa4Nrw2wDbENsg2zDbQNtQ22DbcNuA25DboNuw28Db0Nvg2/DcANwQ3CDcMNxA3FDcYNxw3IDckNyg3LDcwNzQ3ODc8N0A3RDdIN0w3UDdUN1g3XDdgN2Q3aDdsN3A3dDd4N3w3gDeEN4g3jDeQN5Q3mDecN6A3pDeoN6w3sDe0N7g3vDfAN8Q3yDfMN9A31DfYN9w34DfkN+g37DfwN/Q3+Df8OAA4BDgIOAw4EDgUOBg4HDggOCQ4KDgsODA4NDg4ODw4QDhEOEg4TDhQOFQ4WDhcOGA4ZDhoOGw4cDh0OHg4fDiAOIQ4iDiMOJA4lDiYOJw4oDikOKg4rDiwOLQ4uDi8OMA4xDjIOMw40DjUONg43DjgOOQ46DjsOPA49Dj4OPw5ADkEOQg5DDkQORQ5GDkcOSA5JDkoOSw5MDk0OTg5PDlAOUQ5SDlMOVA5VDlYOVw5YDlkOWg5bDlwOXQ5eDl8OYA5hDmIOYw5kDmUOZg5nDmgOaQ5qDmsObA5tDm4Obw5wDnEOcg5zDnQOdQ52DncOeA55DnoOew58Dn0Ofg5/DoAOgQ6CDoMOhA6FDoYOhw6IDokOig6LDowOjQ6ODo8OkA6RDpIOkw6UDpUOlg6XDpgOmQ6aDpsOnA6dDp4Onw6gDqEOog6jDqQOpQ6mDqcOqA6pDqoOqw6sDq0Org6vDrAOsQ6yDrMOtA61DrYOtw64DrkOug67DrwOvQ6+Dr8OwA7BDsIOww7EDsUOxg7HDsgOyQ7KDssOzA7NDs4Ozw7QDtEO0g7TDtQO1Q7WDtcO2A7ZDtoO2w7cDt0O3g7fDuAO4Q7iDuMO5A7lDuYO5w7oDukO6g7rDuwO7Q7uDu8O8A7xDvIO8w70DvUO9g73DvgO+Q76DvsO/A79Dv4O/w8ADwEPAg8DDwQPBQ8GDwcPCA8JDwoPCw8MDw0PDg8PDxAPEQ8SDxMPFA8VDxYPFw8YDxkPGg8bDxwPHQ8eDx8PIA8hDyIPIw8kDyUPJg8nDygPKQ8qDysPLA8tDy4PLw8wDzEPMg8zDzQPNQ82DzcPOA85DzoPOw88Dz0PPg8/D0APQQ9CD0MPRA9FD0YPRw9ID0kPSg9LD0wPTQ9OD08PUA9RD1IPUw9UD1UPVg9XD1gPWQ9aD1sPXA9dD14PXw9gD2EPYg9jD2QPZQ9mD2cPaA9pD2oPaw9sD20Pbg9vD3APcQ9yD3MPdA91D3YPdw94D3kPeg97D3wPfQ9+D38PgA+BD4IPgw+ED4UPhg+HD4gPiQ+KD4sPjA+ND44Pjw+QD5EPkg+TD5QPlQ+WD5cPmA+ZD5oPmw+cD50Png+fD6APoQ+iD6MPpA+lD6YPpw+oD6kPqg+rD6wPrQ+uD68PsA+xD7IPsw+0D7UPtg+3D7gPuQ+6D7sPvA+9D74Pvw/AD8EPwg/DD8QPxQ/GD8cPyA/JD8oPyw/MD80Pzg/PD9AP0Q/SD9MP1A/VD9YP1w/YD9kP2g/bALwP3A/dD94P3w/gD+EP4g/jD+QP5Q/mD+cP6A/pD+oP6w/sD+0P7g/vD/AP8Q/yD/MP9A/1D/YP9w/4D/kP+g/7D/wP/Q/+D/8QABABEAIQAxAEEAUQBhAHEAgQCRAKEAsQDBANEA4QDxAQEBEQEhATEBQQFRAWEBcQGBAZEBoQGxAcEB0QHhAfECAQIRAiECMQJBAlECYQJxAoECkQKhArECwQLRAuEC8QMBAxEDIQMxA0EDUQNhA3EDgQORA6EDsQPBA9ED4QPxBAEEEQQhBDEEQQRRBGEEcQSBBJEEoQSxBMEE0QThBPEFAQURBSEFMQVBBVEFYQVxBYEFkQWhBbEFwQXRBeEF8QYBBhEGIQYxBkEGUQZhBnEGgQaRBqEGsQbBBtEG4QbxBwEHEQchBzEHQQdRB2EHcQeBB5EHoQexB8EH0QfhB/EIAQgRCCEIMQhBCFEIYQhxCIEIkQihCLEIwQjRCOEI8QkBCREJIQkxCUEJUQlhCXEJgQmRCaEJsQnBCdEJ4QnxCgEKEQohCjEKQQpRCmEKcQqBCpEKoQqxCsEK0QrhCvELAQsRCyELMQtBC1ELYQtxC4ELkQuhC7ELwQvRC+EL8QwBDBEMIQwxDEEMUQxhDHEMgQyRDKEMsQzBDNEM4QzxDQENEQ0hDTENQQ1RDWENcQ2BDZENoQ2xDcEN0Q3hDfEOAQ4RDiEOMQ5BDlEOYQ5xDoEOkQ6hDrEOwQ7RDuEO8Q8BDxEPIQ8xD0EPUQ9hD3EPgQ+RD6EPsQ/BD9EP4Q/xEAEQERAhEDEQQRBREGEQcRCBEJEQoRCxEMEQ0RDhEPERARERESERMRFBEVERYRFxEYERkRGhEbERwRHREeER8RIBEhESIRIxEkESURJhEnESgRKREqESsRLBEtES4RLxEwETERMhEzETQRNRE2ETcROBE5EToROxE8ET0RPhE/EUARQRFCEUMRRBFFEUYRRxFIEUkRShFLEUwRTRFOEU8RUBFREVIRUxFUEVURVhFXEVgRWRFaEVsRXBFdEV4RXxFgEWERYhFjEWQRZRFmEWcRaBFpEWoRaxFsEW0RbhFvEXARcRFyEXMRdBF1EXYRdxF4EXkRehF7EXwRfRF+EX8RgBGBEYIRgxGEEYURhhGHEYgRiRGKEYsRjBGNEY4RjxGQEZERkhGTEZQRldmlzaWJsZXNwYWNlBm1hY3Jvbg5wZXJpb2RjZW50ZXJlZAludW5kYWdlc2gJZnJhY3Rpb24xA09obQdBbWFjcm9uB2FtYWNyb24GQWJyZXZlBmFicmV2ZQdBb2dvbmVrB2FvZ29uZWsLQ2NpcmN1bWZsZXgLY2NpcmN1bWZsZXgKQ2RvdGFjY2VudApjZG90YWNjZW50BkRjYXJvbgZkY2Fyb24HRG1hY3JvbgdkbWFjcm9uB0VtYWNyb24HZW1hY3JvbgZFYnJldmUGZWJyZXZlCkVkb3RhY2NlbnQKZWRvdGFjY2VudAdFb2dvbmVrB2VvZ29uZWsGRWNhcm9uBmVjYXJvbgtHY2lyY3VtZmxleAtnY2lyY3VtZmxleApHZG90YWNjZW50Cmdkb3RhY2NlbnQMR2NvbW1hYWNjZW50DGdjb21tYWFjY2VudAtIY2lyY3VtZmxleAtoY2lyY3VtZmxleARIYmFyBGhiYXIGSXRpbGRlBml0aWxkZQdJbWFjcm9uB2ltYWNyb24GSWJyZXZlBmlicmV2ZQdJb2dvbmVrB2lvZ29uZWsKSWRvdGFjY2VudAJJSgJpagtKY2lyY3VtZmxleAtqY2lyY3VtZmxleAxLY29tbWFhY2NlbnQMa2NvbW1hYWNjZW50DGtncmVlbmxhbmRpYwZMYWN1dGUGbGFjdXRlDExjb21tYWFjY2VudAxsY29tbWFhY2NlbnQGTGNhcm9uBmxjYXJvbgRMZG90BGxkb3QGTmFjdXRlBm5hY3V0ZQxOY29tbWFhY2NlbnQMbmNvbW1hYWNjZW50Bk5jYXJvbgZuY2Fyb24LbmFwb3N0cm9waGUDRW5nA2VuZwdPbWFjcm9uB29tYWNyb24GT2JyZXZlBm9icmV2ZQ1PaHVuZ2FydW1sYXV0DW9odW5nYXJ1bWxhdXQGUmFjdXRlBnJhY3V0ZQxSY29tbWFhY2NlbnQMcmNvbW1hYWNjZW50BlJjYXJvbgZyY2Fyb24GU2FjdXRlBnNhY3V0ZQtTY2lyY3VtZmxleAtzY2lyY3VtZmxleAxTY29tbWFhY2NlbnQMc2NvbW1hYWNjZW50DFRjb21tYWFjY2VudAx0Y29tbWFhY2NlbnQGVGNhcm9uBnRjYXJvbgRUYmFyBHRiYXIGVXRpbGRlBnV0aWxkZQdVbWFjcm9uB3VtYWNyb24GVWJyZXZlBnVicmV2ZQVVcmluZwV1cmluZw1VaHVuZ2FydW1sYXV0DXVodW5nYXJ1bWxhdXQHVW9nb25lawd1b2dvbmVrC1djaXJjdW1mbGV4C3djaXJjdW1mbGV4C1ljaXJjdW1mbGV4C3ljaXJjdW1mbGV4BlphY3V0ZQZ6YWN1dGUKWmRvdGFjY2VudAp6ZG90YWNjZW50BWxvbmdzCkFyaW5nYWN1dGUKYXJpbmdhY3V0ZQdBRWFjdXRlB2FlYWN1dGULT3NsYXNoYWN1dGULb3NsYXNoYWN1dGUGbWFjcm9uBXRvbm9zDWRpZXJlc2lzdG9ub3MKQWxwaGF0b25vcwlhbm90ZWxlaWEMRXBzaWxvbnRvbm9zCEV0YXRvbm9zCUlvdGF0b25vcwxPbWljcm9udG9ub3MMVXBzaWxvbnRvbm9zCk9tZWdhdG9ub3MRaW90YWRpZXJlc2lzdG9ub3MFQWxwaGEEQmV0YQVHYW1tYQVEZWx0YQdFcHNpbG9uBFpldGEDRXRhBVRoZXRhBElvdGEFS2FwcGEGTGFtYmRhAk11Ak51AlhpB09taWNyb24CUGkDUmhvBVNpZ21hA1RhdQdVcHNpbG9uA1BoaQNDaGkDUHNpDElvdGFkaWVyZXNpcw9VcHNpbG9uZGllcmVzaXMKYWxwaGF0b25vcwxlcHNpbG9udG9ub3MIZXRhdG9ub3MJaW90YXRvbm9zFHVwc2lsb25kaWVyZXNpc3Rvbm9zBWFscGhhBGJldGEFZ2FtbWEFZGVsdGEHZXBzaWxvbgR6ZXRhA2V0YQV0aGV0YQRpb3RhBWthcHBhBmxhbWJkYQJudQJ4aQdvbWljcm9uA3JobwZzaWdtYTEFc2lnbWEDdGF1B3Vwc2lsb24DcGhpA2NoaQNwc2kFb21lZ2EMaW90YWRpZXJlc2lzD3Vwc2lsb25kaWVyZXNpcwxvbWljcm9udG9ub3MMdXBzaWxvbnRvbm9zCm9tZWdhdG9ub3MJYWZpaTEwMDIzCWFmaWkxMDA1MQlhZmlpMTAwNTIJYWZpaTEwMDUzCWFmaWkxMDA1NAZJY3lyaWwJYWZpaTEwMDU2CWFmaWkxMDA1NwlhZmlpMTAwNTgJYWZpaTEwMDU5CWFmaWkxMDA2MAlhZmlpMTAwNjEJYWZpaTEwMDYyCWFmaWkxMDE0NQlhZmlpMTAwMTcJYWZpaTEwMDE4CWFmaWkxMDAxOQlhZmlpMTAwMjAJYWZpaTEwMDIxCWFmaWkxMDAyMglhZmlpMTAwMjQJYWZpaTEwMDI1CWFmaWkxMDAyNglhZmlpMTAwMjcJYWZpaTEwMDI4CWFmaWkxMDAyOQlhZmlpMTAwMzAJYWZpaTEwMDMxCWFmaWkxMDAzMglhZmlpMTAwMzMJYWZpaTEwMDM0CWFmaWkxMDAzNQlhZmlpMTAwMzYJYWZpaTEwMDM3CWFmaWkxMDAzOAlhZmlpMTAwMzkJYWZpaTEwMDQwCWFmaWkxMDA0MQlhZmlpMTAwNDIJYWZpaTEwMDQzCWFmaWkxMDA0NAlhZmlpMTAwNDUJYWZpaTEwMDQ2CWFmaWkxMDA0NwlhZmlpMTAwNDgJYWZpaTEwMDQ5CWFmaWkxMDA2NQlhZmlpMTAwNjYJYWZpaTEwMDY3CWFmaWkxMDA2OAlhZmlpMTAwNjkJYWZpaTEwMDcwCWFmaWkxMDA3MglhZmlpMTAwNzMJYWZpaTEwMDc0CWFmaWkxMDA3NQlhZmlpMTAwNzYJYWZpaTEwMDc3CWFmaWkxMDA3OAlhZmlpMTAwNzkJYWZpaTEwMDgwCWFmaWkxMDA4MQlhZmlpMTAwODIJYWZpaTEwMDgzCWFmaWkxMDA4NAlhZmlpMTAwODUJYWZpaTEwMDg2CWFmaWkxMDA4NwlhZmlpMTAwODgJYWZpaTEwMDg5CWFmaWkxMDA5MAlhZmlpMTAwOTEJYWZpaTEwMDkyCWFmaWkxMDA5MwlhZmlpMTAwOTQJYWZpaTEwMDk1CWFmaWkxMDA5NglhZmlpMTAwOTcJYWZpaTEwMDcxCWFmaWkxMDA5OQlhZmlpMTAxMDAJYWZpaTEwMTAxCWFmaWkxMDEwMglhZmlpMTAxMDMJYWZpaTEwMTA0CWFmaWkxMDEwNQlhZmlpMTAxMDYJYWZpaTEwMTA3CWFmaWkxMDEwOAlhZmlpMTAxMDkJYWZpaTEwMTEwCWFmaWkxMDE5MwlhZmlpMTAwNTAJYWZpaTEwMDk4BldncmF2ZQZ3Z3JhdmUGV2FjdXRlBndhY3V0ZQlXZGllcmVzaXMJd2RpZXJlc2lzBnlncmF2ZQlhZmlpMDAyMDgNdW5kZXJzY29yZWRibA1xdW90ZXJldmVyc2VkBm1pbnV0ZQZzZWNvbmQJZXhjbGFtZGJsCXJhZGljYWxleAluc3VwZXJpb3IEbGlyYQNQdHMMZGVncmVla2VsdmluCWFmaWk2MTI0OAlhZmlpNjEyODkJYWZpaTYxMzUyCWVzdGltYXRlZAhhbmdzdHJvbQlvbmVlaWdodGgMdGhyZWVlaWdodGhzC2ZpdmVlaWdodGhzDHNldmVuZWlnaHRocwlhcnJvd2xlZnQHYXJyb3d1cAphcnJvd3JpZ2h0CWFycm93ZG93bglhcnJvd2JvdGgJYXJyb3d1cGRuDGFycm93dXBkbmJzZQZGTDMyNjcKYnVsbGV0bWF0aApvcnRob2dvbmFsDGludGVyc2VjdGlvbgtlcXVpdmFsZW5jZQpub3RzaW1pbGFyBWhvdXNlDXJldmxvZ2ljYWxub3QKaW50ZWdyYWx0cAppbnRlZ3JhbGJ0CFNGMTAwMDAwCFNGMTEwMDAwCFNGMDEwMDAwCFNGMDMwMDAwCFNGMDIwMDAwCFNGMDQwMDAwCFNGMDgwMDAwCFNGMDkwMDAwCFNGMDYwMDAwCFNGMDcwMDAwCFNGMDUwMDAwB3VwYmxvY2sHZG5ibG9jawVibG9jawdsZmJsb2NrB3J0YmxvY2sHbHRzaGFkZQVzaGFkZQdka3NoYWRlCWZpbGxlZGJveAZIMjIwNzMGSDE4NTQzBkgxODU1MQpmaWxsZWRyZWN0B3RyaWFndXAHdHJpYWdydAd0cmlhZ2RuB3RyaWFnbGYGY2lyY2xlBkgxODUzMwlpbnZidWxsZXQJaW52Y2lyY2xlBVUyNWU2A3N1bgZmZW1hbGUEbWFsZQVzcGFkZQRjbHViBWhlYXJ0B2RpYW1vbmQLbXVzaWNhbG5vdGUObXVzaWNhbG5vdGVkYmwEYmJhcgdUb25lc2l4B3RvbmVzaXgFQ2hvb2sFY2hvb2sFRGJhcjEJZGVsdGF0dXJuBVNjaHdhCEVwc2lsb24xBUZob29rBUdob29rBkdhbW1hMQJodgVJb3RhMQVLaG9vawVraG9vawlsYW1iZGFiYXIIbWNhcHR1cm4FTmhvb2sET2JhcgVPaG9ybgVvaG9ybgJPSQJvaQVQaG9vawVwaG9vawJZUgplc2hsb29wcmV2DHRwYWxhdGFsaG9vawV0aG9vawdUcnRob29rBVVob3JuBXVob3JuCFVwc2lsb24yCFZjdXJzaXZlBXlob29rBFpiYXIIeW9naHRhaWwRZ2xvdHRhbHN0b3BiYXJpbnYEd3lubgRwaXBlB3BpcGVkYmwKcGlwZWRibGJhcgdleGNsYW0xB0RaaGFjZWsHRHpoYWNlawdkemhhY2VrAkxKAkxqAmxqAk5KAk5qAm5qBkFoYWNlawZhaGFjZWsGSWhhY2VrBmloYWNlawZPaGFjZWsGb2hhY2VrBlVoYWNlawZ1aGFjZWsPVWRpZXJlc2lzbWFjcm9uD3VkaWVyZXNpc21hY3Jvbg5VZGllcmVzaXNhY3V0ZQ51ZGllcmVzaXNhY3V0ZQ5VZGllcmVzaXNoYWNlaw51ZGllcmVzaXNoYWNlaw5VZGllcmVzaXNncmF2ZQ51ZGllcmVzaXNncmF2ZQVldHVybg9BZGllcmVzaXNtYWNyb24PYWRpZXJlc2lzbWFjcm9uCkFkb3RtYWNyb24KYWRvdG1hY3JvbghBRW1hY3JvbghhZW1hY3JvbgRHYmFyBGdiYXIGR2Nhcm9uBmdjYXJvbgZLaGFjZWsGa2hhY2VrB09vZ29uZWsHb29nb25law1Pb2dvbmVrbWFjcm9uDW9vZ29uZWttYWNyb24JWW9naGhhY2VrCXlvZ2hoYWNlawZqaGFjZWsGRkwyODE4BkZMMzIzOAZGTDE1MTAGRkwzMjE4BkZMMjcwNAVhdHVybgdhc2NyaXB0C2FzY3JpcHR0dXJuBWJob29rBWN0dXJuBWNjdXJsB2RydGhvb2sFZGhvb2sEZXJldgVzY2h3YQlzY2h3YWhvb2sIZXBzaWxvbjELZXBzaWxvbjFyZXYPZXBzaWxvbjFyZXZob29rEWVwc2lsb24xcmV2Y2xvc2VkC2pkb3RsZXNzYmFyBWdob29rCGdjdXJzaXZlCUdzbWFsbGNhcAZnYW1tYTEJYmFieWdhbW1hBWh0dXJuBWhob29rCGhlbmdob29rBGliYXIFaW90YTEJSXNtYWxsY2FwCWxtaWR0aWxkZQVsYmVsdAdscnRob29rBWx5b2doBW10dXJuDG10dXJuZGVzY2VuZAVtaG9vawtubGZ0bGZ0aG9vawducnRob29rCU5zbWFsbGNhcARvYmFyCk9Fc21hbGxjYXALb21lZ2FjbG9zZWQIcGhpbGF0aW4FcnR1cm4LcnR1cm5ydGhvb2sIcmRlc2NlbmQHcnJ0aG9vawlyZmlzaGhvb2sMcmZpc2hob29rcmV2CVJzbWFsbGNhcAdzcnRob29rA2VzaAtqaG9va2RibGJhcgtlc2hzaG9ydHJldgdlc2hjdXJsBXR0dXJuB3RydGhvb2sEdWJhcgx1cHNpbG9ubGF0aW4HdnNjcmlwdAV2dHVybgV3dHVybglZc21hbGxjYXAHenJ0aG9vawV6Y3VybAh5b2doY3VybAtnbG90dGFsc3RvcBFnbG90dGFsc3RvcHJldmludg5nbG90dGFsc3RvcGludghjc3RyZXRjaAhidWxsc2V5ZQlCc21hbGxjYXANZXBzaWxvbmNsb3NlZA1Hc21hbGxjYXBob29rCUhzbWFsbGNhcApqY3Jvc3N0YWlsBWt0dXJuCUxzbWFsbGNhcAVxaG9vaw5nbG90dGFsc3RvcGJhchFnbG90dGFsc3RvcGJhcnJldgJkegVkeW9naAZkemN1cmwCdHMEdGVzaAZ0Y2N1cmwGaHN1cGVyCmhob29rc3VwZXIGanN1cGVyB2ZpbmFscGUKcnR1cm5zdXBlcgpmaW5hbHRzYWRpClJ0dXJuc3VwZXIGd3N1cGVyBnlzdXBlcghwcmltZW1vZAtwcmltZWRibG1vZAlkb3VibGV2YXYJYWZpaTU3OTI5CWFmaWk2NDkzNxJyaW5ncmlnaHRoYWxmc3VwZXIRcmluZ2xlZnRoYWxmc3VwZXIHZ2xvdHRhbApnbG90dGFscmV2DWZpbmFsa2Fmc2hldmEGYmFja2VkCmxhbWVkaG9sYW0QbGFtZWRob2xhbWRhZ2VzaAhsaW5ldmVydAZhY3V0ZTEJYWxlZnBhdGFoCmFsZWZxYW1hdHMJYWxlZm1hcGlxCWJldGRhZ2VzaAhhY3V0ZXN1YgtkYWxldGRhZ2VzaApoYWxmbGVuZ3RoE3JpbmdyaWdodGhhbGZjZW50ZXIPcmluZ2xlZnRoYWxmc3VwCXRhY2t1cG1pZAt0YWNrZG93bm1pZA5maW5hbGthZmRhZ2VzaAlrYWZkYWdlc2gKcmhvdGljaG9vawpnYW1tYXN1cGVyBmxzdXBlcgZzc3VwZXIIdmF2aG9sYW0HYmV0cmFmZQdrYWZyYWZlBnBlcmFmZQlhbGVmbGFtZWQHdG9uZWxvdwx0b25lZXh0cmFsb3cJZ3JhdmVjb21iCWFjdXRlY29tYg5jaXJjdW1mbGV4Y29tYgl0aWxkZWNvbWIKbWFjcm9uY29tYg1vdmVyc2NvcmVjb21iCWJyZXZlY29tYg1kb3RhY2NlbnRjb21iDGRpZXJlc2lzY29tYg1ob29rYWJvdmVjb21iCHJpbmdub3NwDGFjdXRlZGJsbm9zcAloYWNla25vc3AMbGluZXZlcnRub3NwD2xpbmV2ZXJ0ZGJsbm9zcAxncmF2ZWRibG5vc3APY2FuZHJhYmluZHVub3NwDGJyZXZlaW52bm9zcBBjb21tYXR1cm5zdXBub3NwEWFwb3N0cm9waGVzdXBub3NwD2NvbW1hc3VwcmV2bm9zcBFjb21tYXN1cHJpZ2h0bm9zcAxncmF2ZXN1Ym5vc3AMYWN1dGVzdWJub3NwD3RhY2tsZWZ0c3Vibm9zcBB0YWNrcmlnaHRzdWJub3NwDGFuZ2xlc3Vwbm9zcAhob3Jubm9zcBNyaW5nbGVmdGhhbGZzdWJub3NwDXRhY2t1cHN1Ym5vc3APdGFja2Rvd25zdWJub3NwC3BsdXNzdWJub3NwDG1pbnVzc3Vibm9zcBBob29rc3VicGFsYXRub3NwEGhvb2tzdWJyZXRyb25vc3AKZG90c3Vibm9zcA1kb3RkYmxzdWJub3NwC3JpbmdzdWJub3NwDGNvbW1hc3Vibm9zcAtjZWRpbGxhbm9zcApvZ29uZWtub3NwD2xpbmV2ZXJ0c3Vibm9zcA1icmlkZ2VzdWJub3NwDmFyY2hkYmxzdWJub3NwDGhhY2Vrc3Vibm9zcBFjaXJjdW1mbGV4c3Vibm9zcAxicmV2ZXN1Ym5vc3APYnJldmVpbnZzdWJub3NwDHRpbGRlc3Vibm9zcA1tYWNyb25zdWJub3NwDnVuZGVyc2NvcmVub3NwEXVuZGVyc2NvcmVkYmxub3NwDHRpbGRlbWlkbm9zcA9iYXJtaWRzaG9ydG5vc3AOYmFybWlkbG9uZ25vc3AOc2xhc2hzaG9ydG5vc3ANc2xhc2hsb25nbm9zcBRyaW5ncmlnaHRoYWxmc3Vibm9zcBBicmlkZ2VpbnZzdWJub3NwDXNxdWFyZXN1Ym5vc3AOc2VhZ3VsbHN1Ym5vc3AIeHN1cG5vc3AQdGlsZGV2ZXJ0c3Vwbm9zcBBvdmVyc2NvcmVkYmxub3NwDWdyYXZlbGVmdG5vc3AOYWN1dGVyaWdodG5vc3AFRkw3NTUDRkwyEmRpYWVyZXNpc3Rvbm9zbm9zcAtpb3Rhc3Vibm9zcANGTDkFRkw4NzEMbnVtZXJhbGdyZWVrD251bWVyYWxncmVla3N1Ygdpb3Rhc3ViDXF1ZXN0aW9uZ3JlZWsFYmV0YTEGdGhldGExCFVwc2lsb24xDVVwc2lsb24xdG9ub3MQVXBzaWxvbjFkaWVyZXNpcwRwaGkxA3BpMQZTdGlnbWEHRGlnYW1tYQVLb3BwYQVTYW1waQVGTDg3OARGTDQxBkZMMTUwMgZGTDQwMzAGRkwyNzEyBkZMMTQ5MgZGTDE1MDUGRkwxNTE1BkZMMjEwNAZGTDI5MzcGRkwxODUzBkZMMTg1OANEZWkDZGVpBmthcHBhMQRyaG8xC3NpZ21hbHVuYXRlBEZMMjMJYWZpaTEwMTQ2CWFmaWkxMDE5NAZGTDE4ODMERkwyNAZGTDI1NjYGRkwxMjUxBll1c2JpZwZ5dXNiaWcERkwxNAZGTDMyMjYERkwxMwRGTDE3BkZMMjkzOAZGTDMyMDEJYWZpaTEwMTQ3CWFmaWkxMDE5NQlhZmlpMTAxNDgJYWZpaTEwMTk2BkZMMjkyNQZGTDIzODYERkwyMgRGTDM2BkZMMjcwMwZGTDMyOTUFR2ViYXIFZ2ViYXIGR2Vob29rBmdlaG9vawhaaGVydGRlcwh6aGVydGRlcwlaZWNlZGlsbGEJemVjZWRpbGxhB0thcnRkZXMHa2FydGRlcwlLYXZlcnRiYXIJa2F2ZXJ0YmFyBUthYmFyBWthYmFyB0dlS2FyZXYHZ2VrYXJldgdFbnJ0ZGVzB2VucnRkZXMERW5HZQRlbmdlBlBlaG9vawZwZWhvb2sFT2hvb2sFb2hvb2sJRXNjZWRpbGxhCWVzY2VkaWxsYQdUZXJ0ZGVzB3RlcnRkZXMFVXN0cnQFdXN0cnQIVXN0cnRiYXIIdXN0cnRiYXIIS2hhcnRkZXMIa2hhcnRkZXMFVGVUc2UFdGV0c2UIQ2hlcnRkZXMIY2hlcnRkZXMKQ2hldmVydGJhcgpjaGV2ZXJ0YmFyBkhjeXJpbAZoY3lyaWwGSWVob29rBmllaG9vawxJZWhvb2tvZ29uZWsMaWVob29rb2dvbmVrB0ljeXJpbDEIWmhlYnJldmUIemhlYnJldmUGS2Fob29rBmthaG9vawZFbmhvb2sGZW5ob29rCkNoZWxlZnRkZXMKY2hlbGVmdGRlcwlhZmlpNTc3OTkJYWZpaTU3ODAxCWFmaWk1NzgwMAlhZmlpNTc4MDIJYWZpaTU3NzkzCWFmaWk1Nzc5NAlhZmlpNTc3OTUJYWZpaTU3Nzk4CWFmaWk1Nzc5NwlhZmlpNTc4MDcGRkwzMzA1CWFmaWk1Nzc5NgZjMjQyMTAJYWZpaTU3ODM5CWFmaWk1NzY0NQlhZmlpNTc4NDEJYWZpaTY3ODQyCWFmaWk1NzgwNAlhZmlpNTc4MDMJYWZpaTU3NjU4BkZMMzMwOAlhZmlpNTc2NjQJYWZpaTU3NjY1CWFmaWk1NzY2NglhZmlpNTc2NjcJYWZpaTU3NjY4CWFmaWk1NzY2OQlhZmlpNTc2NzAJYWZpaTU3NjcxCWFmaWk1NzY3MglhZmlpNTc2NzMJYWZpaTU3Njc0CWFmaWk1NzY3NQlhZmlpNTc2NzYJYWZpaTU3Njc3CWFmaWk1NzY3OAlhZmlpNTc2NzkJYWZpaTU3NjgwCWFmaWk1NzY4MQlhZmlpNTc2ODIJYWZpaTU3NjgzCWFmaWk1NzY4NAlhZmlpNTc2ODUJYWZpaTU3Njg2CWFmaWk1NzY4NwlhZmlpNTc2ODgJYWZpaTU3Njg5CWFmaWk1NzY5MAlhZmlpNTc3MTYJYWZpaTU3NzE3CWFmaWk1NzcxOAZnZXJlc2gJZ2Vyc2hheWltDm9uZWRvdGVubGVhZGVyDnR3b2RvdGVubGVhZGVyDnBlcnRlbnRob3VzYW5kC3ByaW1ldHJpcGwxCXByaW1lcmV2MQxwcmltZWRibHJldjEPcHJpbWV0cmlwbGVyZXYxBWNhcmV0C2ludGVycm9iYW5nBkZMMzMxMgR0aWUxBkZMMzMxMwZGTDMzMTQMemVyb3N1cGVyaW9yDGZvdXJzdXBlcmlvcgxmaXZlc3VwZXJpb3ILc2l4c3VwZXJpb3INc2V2ZW5zdXBlcmlvcg1laWdodHN1cGVyaW9yDG5pbmVzdXBlcmlvcgxwbHVzc3VwZXJpb3INbWludXNzdXBlcmlvcg1lcXVhbHN1cGVyaW9yEXBhcmVubGVmdHN1cGVyaW9yEnBhcmVucmlnaHRzdXBlcmlvcgx6ZXJvaW5mZXJpb3ILb25laW5mZXJpb3ILdHdvaW5mZXJpb3INdGhyZWVpbmZlcmlvcgxmb3VyaW5mZXJpb3IMZml2ZWluZmVyaW9yC3NpeGluZmVyaW9yDXNldmVuaW5mZXJpb3INZWlnaHRpbmZlcmlvcgxuaW5laW5mZXJpb3IHcGx1c3N1YghtaW51c3N1YghlcXVhbHN1YhFwYXJlbmxlZnRpbmZlcmlvchJwYXJlbnJpZ2h0aW5mZXJpb3INY29sb25tb25ldGFyeQhjcnV6ZWlybwRtaWxsBW5haXJhBXJ1cGVlA3dvbgluZXdzaGVxZWwEZG9uZwZGTDMyMjEERkwxMAZGTDI3MDIGRkwzMjUzBkZMMjc4NQZGTDM5MTUERkwyNwZGTDI4NTcERkw1NQZGTDQzODgGRkw0Mzg5BkZMNDM5MAZGTDQzOTEGRkw0MzkyBkZMNDM5MwZGTDQzOTQGRkw0Mzk1BkZMNDM5NgZGTDQzOTcGRkw0Mzk4BkZMNDM5OQZGTDQ0MDAGRkw0NDAxBkZMNDQwMgZGTDQ0MDMGRkw0NDA0BkZMNDQwNQZGTDQ0MDYGRkw0NDA3BkZMNDQwOAZGTDQ0MDkGRkw0NDEwBkZMNDQxMQZGTDQ0MTIGRkw0NDEzBkZMNDQxNAZGTDQ0MTUGRkw0NDE2BkZMNDQxNwZGTDQ0MTgGRkw0NDE5BkZMNDQyMAZGTDQ0MjEGRkw0NDIyBkZMNDQyMwZGTDQ0MjQGRkw0NDI1BkZMNDQyNgZGTDQ0MjcGRkw0NDI4BkZMNDQyOQZGTDQ0MzAGRkw0NDMxBkZMNDQzMgZGTDQ0MzMGRkw0NDM0BkZMNDQzNQZGTDQ0MzYGRkw0NDM3BkZMNDQzOAZGTDQ0MzkGRkw0NDQwBkZMNDQ0MQZGTDQ0NDIGRkw0NDQzBkZMNDQ0NAZGTDQ0NDUGRkw0NDQ2BkZMNDQ0NwZGTDQ0NDgGRkw0NDQ5BkZMNDQ1MAZGTDQ0NTEGRkw0NDUyBkZMNDQ1MwZGTDQ0NTQGRkw0NDU1BkZMNDQ1NgZGTDQ0NTcGRkw0NDU4BkZMNDQ1OQZGTDQ0NjAGRkw0NDYxBkZMNDQ2MgZGTDQ0NjMGRkw0NDY0BkZMNDQ2NQZGTDQ0NjYGRkw0NDY3BkZMNDQ2OAZGTDQ0NjkGRkw0NDcwBkZMNDQ3MQZGTDQ0NzIGRkw0NDczBkZMNDQ3NAZGTDQ0NzUGRkw0NDc2BkZMNDQ3NwZGTDQ0NzgGRkw0NDc5BkZMNDQ4MAZGTDQ0ODEGRkw0NDgyBkZMNDQ4MwZGTDQ0ODQGRkw0NDg1BkZMNDQ4NgZGTDQ0ODcGRkw0NDg4BkZMNDQ4OQZGTDQ0OTAGRkw0NDkxBkZMNDQ5MgZGTDQ0OTMGRkw0NDk0BkZMNDQ5NQZGTDQ0OTYGRkw0NDk3BkZMNDQ5OAZGTDQ0OTkGRkw0NTAwBkZMNDUwMQZGTDQ1MDIGRkw0NTAzBkZMNDUwNAZGTDQ1MDUGRkw0NTA2BkZMNDUwNwZGTDQ1MDgGRkw0NTA5BkZMNDUxMAZGTDQ1MTEGRkw0NTEyBkZMNDUxMwZGTDQ1MTQGRkw0NTE1BkZMNDUxNgZGTDQ1MTcGRkw0NTE4BkZMNDUxOQZGTDQ1MjAGRkw0NTIxBkZMNDUyMgZGTDQ1MjMGRkw0NTI0BkZMNDUyNQZGTDQ1MjYGRkw0NTI3BkZMNDUyOAZGTDQ1MjkGRkw0NTMwBkZMNDUzMQZGTDQ1MzIGRkw0NTMzBkZMNDUzNAZGTDQ1MzUGRkw0NTM2BkZMNDUzNwZGTDQ1MzgGRkw0NTM5BkZMNDU0MAZGTDQ1NDEGRkw0NTQyBkZMNDU0MwZGTDQ1NDQGRkw0NTQ1BkZMNDU0NgZGTDQ1NDcGRkw0NTQ4BkZMNDU0OQZGTDQ1NTAGRkw0NTUxBkZMNDU1MgZGTDQ1NTMGRkw0NTU0BkZMNDU1NQZGTDQ1NTYGRkw0NTU3BkZMNDU1OAZGTDQ1NTkGRkw0NTYwBkZMNDU2MQZGTDQ1NjIGRkw0NTYzBkZMNDU2NAZGTDQ1NjUGRkw0NTY2BkZMNDU2NwZGTDQ1NjgGRkw0NTY5BkZMNDU3MAZGTDQ1NzEGRkw0NTcyBkZMNDU3MwZGTDQ1NzQGRkw0NTc1BkZMNDU3NgZGTDQ1NzcGRkw0NTc4BkZMNDU3OQZGTDQ1ODAGRkw0NTgxBkZMNDU4MgZGTDQ1ODMGRkw0NTg0BkZMNDU4NQZGTDQ1ODYGRkw0NTg3BkZMNDU4OAZGTDQ1ODkGRkw0NTkwBkZMNDU5MQZGTDQ1OTIGRkw0NTkzBkZMNDU5NAZGTDQ1OTUGRkw0NTk2BkZMNDU5NwZGTDQ1OTgGRkw0NTk5BkZMNDYwMAZGTDQ2MDEGRkw0NjAyBkZMNDYwMwZGTDQ2MDQGRkw0NjA1BkZMNDYwNgZGTDQ2MDcGRkw0NjA4BkZMNDYwOQZGTDQ2MTAGRkw0NjExBkZMNDYxMgZGTDQ2MTMGRkw0NjE0BkZMNDYxNQZGTDQ2MTYGRkw0NjE3BkZMNDYxOAZGTDQ2MTkGRkw0NjIwBkZMNDYyMwZGTDQ2MjQGRkw0NjI1BkZMNDYyNgZGTDQ2MjcGRkw0NjI4BkZMNDYyOQZGTDQ2MzAGRkw0NjMxBkZMNDYzMgZGTDQ2MzMGRkw0NjM0BkZMNDYzNQZGTDQ2MzYGRkw0NjM3BkZMNDYzOAZGTDQ2MzkGRkw0NjQwBkZMNDY0MQZGTDQ2NDIGRkw0NjQzBkZMNDY0NAZGTDQ2NDUGRkw0NjQ2BkZMNDY0NwZGTDQ2NDgGRkw0NjQ5BkZMNDY1MAZGTDQ2NTEGRkw0NjUyBkZMNDY1MwZGTDQ2NTQGRkw0NjU1BkZMNDY1NgZGTDQ2NTcGRkw0NjU4BkZMNDY1OQZGTDQ2NjAGRkw0NjYxBkZMNDY2MgZGTDQ2NjMGRkw0NjY0BkZMNDY2NQZGTDQ2NjYGRkw0NjY3BkZMNDY2OAlhZmlpMTA4NDYGRkw0NjY5BkZMNDY3MAZGTDQ2NzEGRkw0NjcyBkZMNDY3MwZGTDQ2NzQGRkw0Njc1BkZMNDY3NgZGTDQ2NzcGRkw0Njc4BkZMNDY3OQZGTDQ2ODAGRkw0NjgxBkZMNDY4MgZGTDQ2ODMGRkw0Njg0BkZMNDY4NQZGTDQ2ODYGRkw0Njg3BkZMNDY4OAZGTDQ2ODkGRkw0NjkwBkZMNDY5MQZGTDQ2OTIGRkw0NjkzBkZMNDY5NAZGTDQ2OTUGRkw0Njk2BkZMNDY5NwZGTDQ2OTgGRkw0Njk5BkZMNDcwMAZGTDQ3MDEGRkw0NzAyBkZMNDcwMwZGTDQ3MDQGRkw0NzA1BkZMNDcwNgZGTDQ3MDcGRkw0NzA4BkZMNDcwOQZGTDQ3MTAGRkw0NzExBkZMNDcxMgZGTDQ3MTMGRkw0NzE0BkZMNDcxNQZGTDQ3MTYGRkw0NzE3BkZMNDcxOAZGTDQ3MTkGRkw0NzIwBkZMNDcyMQZGTDQ3MjIGRkw0NzIzBkZMNDcyNAZGTDQ3MjUGRkw0NzI2BkZMNDcyNwZGTDQ3MjgGRkw0NzI5BkZMNDczMAZGTDQ3MzEGRkw0NzMyBkZMNDczMwZGTDQ3MzQGRkw0NzM1BkZMNDczNgZGTDQ3MzcGRkw0NzM4BkZMNDczOQZGTDQ3NDAGRkw0NzQxBkZMNDc0MgZGTDQ3NDMGRkw0NzQ0BkZMNDc0NQZGTDQ3NDYGRkw0NzQ3BkZMNDc0OAZGTDQ3NDkGRkw0NzUwBkZMNDc1MQZGTDQ3NTIGRkw0NzUzBkZMNDc1NAZGTDQ3NTUGRkw0NzU2BkZMNDc1NwZGTDQ3NTgGRkw0NzU5BkZMNDc2MAZGTDQ3NjEGRkw0NzYyBkZMNDc2MwZGTDQ3NjQGRkw0NzY1BkZMNDc2NgZGTDQ3NjcGRkw0NzY4BkZMNDc2OQZGTDQ3NzAGRkw0NzcxBkZMNDc3MgZGTDQ3NzMGRkw0Nzc0BkZMNDc3NQZGTDQ3NzYGRkw0Nzc3BkZMNDc3OAZGTDQ3NzkGRkw0NzgwBkZMNDc4MQZGTDQ3ODIGRkw0NzgzBkZMNDc4NAZGTDQ3ODUGRkw0Nzg2BkZMNDc4NwZGTDQ3ODgGRkw0Nzg5BkZMNDc5MAZGTDQ3OTEGRkw0NzkyBkZMNDc5MwZGTDQ3OTQGRkw0Nzk1BkZMNDc5NgZGTDQ3OTcGRkw0Nzk4BkZMNDc5OQZGTDQ4MDAGRkw0ODAxBkZMNDgwMgZGTDQ4MDMGRkw0ODA0BkZMNDgwNQZGTDQ4MDYGRkw0ODA3BkZMNDgwOAZGTDQ4MDkGRkw0ODEwBkZMNDgxMQZGTDQ4MTIGRkw0ODEzBkZMNDgxNAZGTDQ4MTUGRkw0ODE2BkZMNDgxNwZGTDQ4MTgGRkw0ODE5BkZMNDgyMAZGTDQ4MjEGRkw0ODIyBkZMNDgyMwZGTDQ4MjQGRkw0ODI1BkZMNDgyNgZGTDQ4MjcGRkw0ODI4BkZMNDgyOQZGTDQ4MzAGRkw0ODMxBkZMNDgzMgZGTDQ4MzMGRkw0ODM0BkZMNDgzNQZGTDQ4MzYGRkw0ODM3BkZMNDgzOAZGTDQ4MzkGRkw0ODQwBkZMNDg0MQZGTDQ4NDIGRkw0ODQzBkZMNDg0NAZGTDQ4NDUGRkw0ODQ2BkZMNDg0NwZGTDQ4NDgGRkw0ODQ5BkZMNDg1MAZGTDQ4NTEGRkw0ODUyBkZMNDg1MwZGTDQ4NTQGRkw0ODU1BkZMNDg1NgZGTDQ4NTcGRkw0ODU4BkZMNDg1OQZGTDQ4NjAGRkw0ODYxBkZMNDg2MgZGTDQ4NjMGRkw0ODY0BkZMNDg2NQZGTDQ4NjYGRkw0ODY3BkZMNDg2OAZGTDQ4NjkGRkw0ODcwBkZMNDg3MQZGTDQ4NzIGRkw0ODczBkZMNDg3NAZGTDQ4NzUGRkw0ODc2BkZMNDg3NwZGTDQ4NzgGRkw0ODc5BkZMNDg4MAZGTDQ4ODEGRkw0ODgyBkZMNDg4MwZGTDQ4ODQGRkw0ODg1BkZMNDg4NgZGTDQ4ODcGRkw0ODg4BkZMNDg4OQZGTDQ4OTAGRkw0ODkxBkZMNDg5MgZGTDQ4OTMGRkw0ODk0BkZMNDg5NQZGTDQ4OTYGRkw0ODk3BkZMNDg5OAZGTDQ4OTkGRkw0OTAwBkZMNDkwMQZGTDQ5MDIGRkw0OTAzBkZMNDkwNAZGTDQ5MDUGRkw0OTA2BkZMNDkwNwZGTDQ5MDgGRkw0OTA5BkZMNDkxMAZGTDQ5MTEGRkw0OTEyBkZMNDkxMwZGTDQ5MTQGRkw0OTE1BkZMNDkxNgZGTDQ5MTcGRkw0OTE4BkZMNDkxOQZGTDQ5MjAGRkw0OTIxBkZMNDkyMgZGTDQ5MjMGRkw0OTI0BkZMNDkyNQZGTDQ5MjYGRkw0OTI3BkZMNDkyOAZGTDQ5MjkGRkw0OTMwBnZhcmlrYQlhZmlpNTc3MDUGRkw0OTMxBkZMNDkzMgZGTDQ5MzMGRkw0OTM0BkZMNDkzNQZGTDQ5MzYGRkw0OTM3BkZMNDkzOAZGTDQ5MzkGRkw0OTQwCWFmaWk1NzY5NAlhZmlpNTc2OTUJYWZpaTU3Njk2CWFmaWk1NzY5NwZGTDQ5NDEGRkw0OTQyBkZMNDk0MwlhZmlpNTc2OTEJYWZpaTU3NzIwCWFmaWk1NzcyMQlhZmlpNTc3MjIJYWZpaTU3NzIzCWFmaWk1NzcyNAlhZmlpNTc3MjUJYWZpaTU3NzI2CWFmaWk1Nzc2MQVjODU2NAlhZmlpNTc3NjIJYWZpaTU3NzYzCWFmaWk1Nzc2NAlhZmlpNTc3NjUGRkw0OTQ0CWFmaWk1Nzc2NglhZmlpNTc3NjcJYWZpaTU3NzY4BkZMNDk0NQlhZmlpNTc3NzAJYWZpaTU3NzcxCWFmaWk1NzcwMAZGTDQ5NDYGRkw0OTQ3BkZMNDk0OAZGTDQ5NDkGRkw0OTUwBkZMNDk1MQZGTDQ5NTIGRkw0OTUzBkZMNDk1NAZGTDQ5NTUGRkw0OTU2BkZMNDk1NwZGTDQ5NTgGRkw0OTU5BkZMNDk2MAZGTDQ5NjEGRkw0OTYyBkZMNDk2MwZGTDQ5NjQGRkw0OTY1BkZMNDk2NgZGTDQ5NjcGRkw0OTY4BkZMNDk2OQZGTDQ5NzAGRkw0OTcxBkZMNDk3MgZGTDQ5NzMGRkw0OTc0BkZMNDk3NQZGTDQ5NzYGRkw0OTc3BkZMNDk3OAZGTDQ5NzkGRkw0OTgwBkZMNDk4MQZGTDQ5ODIGRkw0OTgzBkZMNDk4NAZGTDQ5ODUGRkw0OTg2BkZMNDk4NwZGTDQ5ODgGRkw0OTg5BkZMNDk5MAZGTDQ5OTEGRkw0OTkyBkZMNDk5MwZGTDQ5OTQGRkw0OTk1BkZMNDk5NgZGTDQ5OTcGRkw0OTk4BkZMNDk5OQZGTDUwMDAGRkw1MDAxBkZMNTAwMgZGTDUwMDMGRkw1MDA0BkZMNTAwNQZGTDUwMDYGRkw1MDA3BkZMNTAwOAZGTDUwMDkGRkw1MDEwBkZMNTAxMQZGTDUwMTIGRkw1MDEzBkZMNTAxNAZGTDUwMTUGRkw1MDE2BkZMNTAxNwZGTDUwMTgGRkw1MDE5BkZMNTAyMAZGTDUwMjEGRkw1MDIyBkZMNTAyMwZGTDUwMjQGRkw1MDI1BkZMNTAyNgZGTDUwMjcGRkw1MDI4BkZMNTAyOQZGTDUwMzAGRkw1MDMxBkZMNTAzMgZGTDUwMzMGRkw1MDM0BkZMNTAzNQZGTDUwMzYGRkw1MDM3BkZMNTAzOAZGTDUwMzkGRkw1MDQwBkZMNTA0MQZGTDUwNDIGRkw1MDQzBkZMNTA0NAZGTDUwNDUGRkw1MDQ2BkZMNTA0NwZGTDUwNDgGRkw1MDQ5BkZMNTA1MAZGTDUwNTEGRkw1MDUyBkZMNTA1MwZGTDUwNTQGRkw1MDU1BkZMNTA1NgZGTDUwNTcGRkw1MDU4BkZMNTA1OQZGTDUwNjAGRkw1MDYxBkZMNTA2MgZGTDUwNjMGRkw1MDY0BkZMNTA2NQZGTDUwNjYGRkw1MDY3BkZMNTA2OAZGTDUwNjkGRkw1MDcwBkZMNTA3MQZGTDUwNzIGRkw1MDczBkZMNTA3NAZGTDUwNzUGRkw1MDc2BkZMNTA3NwZGTDUwNzgGRkw1MDc5BkZMNTA4MAZGTDUwODEGRkw1MDgyBkZMNTA4MwZGTDUwODQGRkw1MDg1BkZMNTA4NgZGTDUwODcGRkw1MDg4BkZMNTA4OQZGTDUwOTAGRkw1MDkxBkZMNTA5MgZGTDUwOTMGRkw1MDk0BkZMNTA5NQZGTDUwOTYGRkw1MDk3BkZMNTA5OAZGTDUwOTkGRkw1MTAwBkZMNTEwMQZGTDUxMDIGRkw1MTAzBkZMNTEwNAZGTDUxMDUGRkw1MTA2BkZMNTEwNwZGTDUxMDgGRkw1MTA5BkZMNTExMAZGTDUxMTEGRkw1MTEyBkZMNTExMwZGTDUxMTQGRkw1MTE1BkZMNTExNgZGTDUxMTcGRkw1MTE4BkZMNTExOQZGTDUxMjAGRkw1MTIxBkZMNTEyMgZGTDUxMjMGRkw1MTI0BkZMNTEyNQZGTDUxMjYGRkw1MTI3BkZMNTEyOAZGTDUxMjkGRkw1MTMwBkZMNTEzMQZGTDUxMzIGRkw1MTMzBkZMNTEzNAZGTDUxMzUGRkw1MTM2BkZMNTEzNwZGTDUxMzgGRkw1MTM5BkZMNTE0MAZGTDUxNDEGRkw1MTQyBkZMNTE0MwZGTDUxNDQGRkw1MTQ1BkZMNTE0NgZGTDUxNDcGRkw1MTQ4BkZMNTE0OQZGTDUxNTAGRkw1MTUxBkZMNTE1MgZGTDUxNTMGRkw1MTU0BkZMNTE1NQZGTDUxNTYGRkw1MTU3BkZMNTE1OAZGTDUxNTkGRkw1MTYwBkZMNTE2MQZGTDUxNjIGRkw1MTYzBkZMNTE2NAZGTDUxNjUGRkw1MTY2BkZMNTE2NwZGTDUxNjgGRkw1MTY5BkZMNTE3MAZGTDUxNzEGRkw1MTcyBkZMNTE3MwZGTDUxNzQGRkw1MTc1BkZMNTE3NgZGTDUxNzcGRkw1MTc4BkZMNTE3OQZGTDUxODAGRkw1MTgxBkZMNTE4MgZGTDUxODMGRkw1MTg0BkZMNTE4NQZGTDUxODYGRkw1MTg3BkZMNTE4OAZGTDUxODkGRkw1MTkwBkZMNTE5MQZGTDUxOTIGRkw1MTkzBkZMNTE5NAZGTDUxOTUGRkw1MTk2BkZMNTE5NwZGTDUxOTgGRkw1MTk5BkZMNTIwMAZGTDUyMDEGRkw1MjAyBkZMNTIwMwZGTDUyMDQGRkw1MjA1BkZMNTIwNgZGTDUyMDcGRkw1MjA4BkZMNTIwOQZGTDUyMTAGRkw1MjExBkZMNTIxMgZGTDUyMTMGRkw1MjE0BkZMNTIxNQZGTDUyMTYGRkw1MjE3BkZMNTIxOAZGTDUyMTkGRkw1MjIwBkZMNTIyMQZGTDUyMjIGRkw1MjIzBkZMNTIyNAZGTDUyMjUGRkw1MjI2BkZMNTIyNwZGTDUyMjgGRkw1MjI5BkZMNTIzMAZGTDUyMzEGRkw1MjMyBkZMNTIzMwZGTDUyMzQGRkw1MjM1BkZMNTIzNgZGTDUyMzcGRkw1MjM4BkZMNTIzOQZGTDUyNDAGRkw1MjQxBkZMNTI0MgZGTDUyNDMGRkw1MjQ0BkZMNTI0NQZGTDUyNDYGRkw1MjQ3BkZMNTI0OAZGTDUyNDkGRkw1MjUwBkZMNTI1MQZGTDUyNTIGRkw1MjUzBkZMNTI1NAZGTDUyNTUGRkw1MjU2BkZMNTI1NwZGTDUyNTgGRkw1MjU5BkZMNTI2MAZGTDUyNjEGRkw1MjYyBkZMNTI2MwZGTDUyNjQGRkw1MjY1BkZMNTI2NgZGTDUyNjcGRkw1MjY4BkZMNTI2OQZGTDUyNzAGRkw1MjcxBkZMNTI3MgZGTDUyNzMGRkw1Mjc0BkZMNTI3NQZGTDUyNzYGRkw1Mjc3BkZMNTI3OAZGTDUyNzkGRkw1MjgwBkZMNTI4MQZGTDUyODIGRkw1MjgzBkZMNTI4NAZGTDUyODUGRkw1Mjg2BkZMNTI4NwZGTDUyODgGRkw1Mjg5BkZMNTI5MAZGTDUyOTEGRkw1MjkyBkZMNTI5MwZGTDUyOTQGRkw1Mjk1BkZMNTI5NgZGTDUyOTcGRkw1Mjk4BkZMNTI5OQZGTDUzMDAGRkw1MzAxBkZMNTMwMgZGTDUzMDMGRkw1MzA0BkZMNTMwNQZGTDUzMDYGRkw1MzA3BkZMNTMwOAZGTDUzMDkGRkw1MzEwBkZMNTMxMQZGTDUzMTIGRkw1MzEzBkZMNTMxNAZGTDUzMTUGRkw1MzE2BkZMNTMxNwZGTDUzMTgGRkw1MzE5BkZMNTMyMAZGTDUzMjEGRkw1MzIyBkZMNTMyMwZGTDUzMjQGRkw1MzI1BkZMNTMyNgZGTDUzMjcGRkw1MzI4BkZMNTMyOQZGTDUzMzAGRkw1MzMxBkZMNTMzMgZGTDUzMzMGRkw1MzM0BkZMNTMzNQZGTDUzMzYGRkw1MzM3BkZMNTMzOAZGTDUzMzkGYzIwMTgyBmMyNDA2NgZjMjQwNjcGYzIwNjMxBmMyNDA2OAlhZmlpNjE2NjQHYWZpaTMwMQdhZmlpMjk5B2FmaWkzMDAGYzI0MDkxBmMyNDA2OQZjMjQwNzAGYzI0MDcxBmMyMDYyMgZjMjA2NTAGYzIwMjU0BmMyNDA3MgZjMjQwNzMGYzIwNjMwBmMyMDIyMgZjMjQwNzQGYzIwNjUyBmMyMDY0MQlhZmlpNTczODEJYWZpaTU3Mzg4CWFmaWk1NzM5MglhZmlpNTczOTMJYWZpaTU3Mzk0CWFmaWk1NzM5NQlhZmlpNTczOTYJYWZpaTU3Mzk3CWFmaWk1NzM5OAlhZmlpNTczOTkJYWZpaTU3NDAwCWFmaWk1NzQwMQlhZmlpNTc0MDMJYWZpaTU3NDA3CWFmaWk1NzQ0MAlhZmlpNTc0MTUGYzIwMDUyBmMyNDE5OAZjMjQxOTkGYzIwMTc0BmMyMDE3NQZjMjQyMDAGYzI0MjAxBmMyMDA1NAZjMjAwNTUGYzIwMDU2CWFmaWk1NzQxNgZjMjAwNTgGYzIwMDU5BmMyMDA2MAlhZmlpNTc0MTgGYzIwMDYyBmMyMDA2MwZjMjAwNjQJYWZpaTU3NDE5BmMyMDA2NgZjMjAwNjcGYzIwMDY4CWFmaWk1NzQyMAZjMjAwNzAGYzIwMDcxBmMyMDA3MgZjMjExMjEJYWZpaTU3NDIxBmMyMDA3NAZjMjAwNzUGYzIwMDc2CWFmaWk1NzQyMglhZmlpNTc0MjMGYzIwMDc4CWFmaWk1NzQyNAZjMjAwODAJYWZpaTU3NDI1BmMyMDA4MglhZmlpNTc0MjYGYzIwMDg0BmMyMDA4NgZjMjAwODcGYzIwMDg4CWFmaWk1NzQyNwZjMjAwOTAGYzIwMDkxBmMyMDA5MglhZmlpNTc0MjgGYzIwMDk0BmMyMDA5NQZjMjAwOTYJYWZpaTU3NDI5BmMyMDA5OAZjMjAwOTkGYzIxMTI4BmMyMDEwMAZjMjExMjkJYWZpaTU3NDMwBmMyMDEwMgZjMjQwNzUGYzI0MDc2BmMyNDA3NwZjMjA2NDYGYzIwNjQ0BmMyMDY0NwZjMjAyNTEGYzIwMjUyBmMyMDI1MwZjMjA2MzMGYzIwNjMyBmMyMDYzNAZjMjQwNzgGYzI0MDc5BmMyNDA4MAZjMjA2NTYGYzIwNjU0BmMyMDY1NwZjMjQwODEGYzI0MDgyBmMyMDI1NQZjMjAyMjQGYzIwNjIxBmMyMDY0OAZjMjA2MzkGYzIwNjU4BmMyMDYyNgZjMjA2MjQGYzIwNjI3BmMyMDI1MAZjMjA2MzUGYzIwMjIwBmMyMDEwNAlhZmlpNTc0MzEGYzIwMTA2BmMyMDEwNwZjMjAxMDgJYWZpaTU3NDMyBmMyMDExMAZjMjAxMTEGYzIwMTEyCWFmaWk1NzQzMwZjMjAxMTQGYzIwMTE1BmMyMDExNglhZmlpNTc0MzQGYzIwMTE4BmMyMDExOQZjMjAxMjAJYWZpaTU3NDQxBmMyMDEyMgZjMjAxMjMGYzIwMTI0CWFmaWk1NzQ0MgZjMjAxMjYGYzIwMTI3BmMyMDEyOAlhZmlpNTc0NDMGYzIwMTMwBmMyMDEzMQZjMjAxMzIJYWZpaTU3NDQ0BmMyMDEzNAZjMjAxMzUGYzIwMTM2CWFmaWk1NzQ0NQZjMjAxMzgGYzIwMTM5BmMyMDE0MAlhZmlpNTc0NDYGYzIwMTQyBmMyMDE0MwZjMjAxNDQJYWZpaTU3NDcwCWFmaWk1NzQ0OAZjMjAxNDcGYzIwMTQ5BmMyMDE1MAZjMjAxNTEJYWZpaTU3NDUwCWFmaWk1NzQxNwZjMjAxNTQGYzIwMjU3CWFmaWk1NzQ0OQZGTDUzNDAGYzI0MTkxBmMyNDE5MgZjMjQxOTMJYWZpaTU3NDE0CWFmaWk1NzQxMgZjMjQxOTUGYzIwMjA4BmMyMDIwOQZjMjQyMDIGYzI0MjAzBmMyMDIxNAZjMjAyMTUGYzI0MjA2BmMyNDIwNwlhZmlpNTc0NTQJYWZpaTU3NDU1CWFmaWk1NzQ1OAlhZmlpNTc0NTEJYWZpaTU3NDUyCWFmaWk1NzQ1NwlhZmlpNTc0NTYJYWZpaTU3NDUzBmMxOTQ5MwZjMTk0OTUGYzE5NDk4BmMxOTQ5NAZjMTk0OTcGYzIwMDUxCWFmaWk1NzQxMQlhZmlpNTc0MTAJYWZpaTU3NDEzBmMyMDA1MwZjMjAwNTcGYzIwMDYxBmMyMDA2NQZjMjAwNjkGYzIwMDczBmMyMDA3NwZjMjAwNzkGYzIwMDgxBmMyMDA4MwZjMjAwODUGYzIwMDg5BmMyMDA5MwZjMjAwOTcGYzIwMTAxBmMyMDEwNQZjMjAxMDkGYzIwMTEzBmMyMDExNwZjMjAxMjEGYzIwMTI1BmMyMDEyOQZjMjAxMzMGYzIwMTM3BmMyMDE0MQZjMjAxNDUGYzIwMTQ4BmMyMDE1MwZjMTk0NDAGYzIwMjU2BkZMNTM0MQZGTDUzNDIGRkw1MzQzBkZMNTM0NAZGTDUzNDUGRkw1MzQ2BkZMNTM0NwZGTDUzNDgGRkw1MzQ5CWFmaWk1NzUxMQZGTDUzNTAGRkw1MzUxBkZMNTM1MgZGTDUzNTMJYWZpaTU3NTA2BkZMNTM1NAZGTDUzNTUGRkw1MzU2BkZMNTM1NwZGTDUzNTgGRkw1MzU5BkZMNTM2MAlhZmlpNTc1MDcGRkw1MzYxCWFmaWk1NzUxMgZGTDUzNjIGRkw1MzYzBkZMNTM2NAZGTDUzNjUGRkw1MzY2BkZMNTM2NwZGTDUzNjgGRkw1MzY5CWFmaWk1NzUxMwZGTDUzNzAGRkw1MzcxBkZMNTM3MgZGTDUzNzMGRkw1Mzc0BkZMNTM3NQlhZmlpNTc1MDgGRkw1Mzc2BkZMNTM3NwZGTDUzNzgGRkw1Mzc5BkZMNTM4MAZGTDUzODEGRkw1MzgyBkZMNTM4MwZGTDUzODQGRkw1Mzg1BkZMNTM4NglhZmlpNTc1MDUGRkw1Mzg3BkZMNTM4OAZGTDUzODkGRkw1MzkwBkZMNTM5MQZGTDUzOTIGRkw1MzkzBkZMNTM5NAZGTDUzOTUGRkw1Mzk2CWFmaWk1NzUwOQZGTDUzOTcGRkw1Mzk4BkZMNTM5OQZGTDU0MDAGRkw1NDAxBkZMNTQwMgZGTDU0MDMGRkw1NDA0CWFmaWk1NzUxNAZGTDU0MDUGRkw1NDA2BkZMNTQwNwZGTDU0MDgGRkw1NDA5BkZMNTQxMAZGTDU0MTEGRkw1NDEyBkZMNTQxMwZGTDU0MTQGRkw1NDE1BkZMNTQxNgZGTDU0MTcGRkw1NDE4BkZMNTQxOQZGTDU0MjAGRkw1NDIxBkZMNTQyMgZGTDU0MjMGRkw1NDI0BkZMNTQyNQlhZmlpNTc1MTkGRkw1NDI2BkZMNTQyNwlhZmlpNjMxNjcGRkw1NDI4BkZMNTQyOQZGTDU0MzAGRkw1NDMxBkZMNTQzMgZGTDU0MzMGRkw1NDM0BkZMNTQzNQZGTDU0MzYGRkw1NDM3BkZMNTQzOAZGTDU0MzkGRkw1NDQwBkZMNTQ0MQZGTDU0NDIGRkw1NDQzBkZMNTQ0NAZGTDU0NDUGRkw1NDQ2BkZMNTQ0NwZGTDU0NDgGRkw1NDQ5BkZMNTQ1MAZGTDU0NTEGRkw1NDUyBkZMNTQ1MwZGTDU0NTQGRkw1NDU1BkZMNTQ1NgZGTDU0NTcGRkw1NDU4BkZMNTQ1OQZGTDU0NjAGRkw1NDYxBkZMNTQ2MgZGTDU0NjMGRkw1NDY0BkZMNTQ2NQZGTDU0NjYGRkw1NDY3BkZMNTQ2OAZGTDU0NjkGRkw1NDcwBkZMNTQ3MQZGTDU0NzIGRkw1NDczBkZMNTQ3NAZGTDU0NzUGRkw1NDc2BkZMNTQ3NwZGTDU0NzgGRkw1NDc5BkZMNTQ4MAZGTDU0ODEGRkw1NDgyBkZMNTQ4MwZGTDU0ODQGRkw1NDg1BkZMNTQ4NgZGTDU0ODcGRkw1NDg4BkZMNTQ4OQZGTDU0OTAGRkw1NDkxBkZMNTQ5MgZGTDU0OTMGRkw1NDk0BkZMNTQ5NQZGTDU0OTYGRkw1NDk3BkZMNTQ5OAZGTDU0OTkGRkw1NTAwBkZMNTUwMQZjMTk0MjQGRkw1NTAyBkZMNTUwMwZGTDU1MDQGRkw1NTA1BkZMNTUwNgZGTDU1MDcGRkw1NTA4BkZMNTUwOQZGTDU1MTAGRkw1NTExBkZMNTUxMgZGTDU1MTMGRkw1NTE0BkZMNTUxNQZGTDU1MTYGRkw1NTE3BkZMNTUxOAZGTDU1MTkGRkw1NTIwBkZMNTUyMQZGTDU1MjIGRkw1NTIzBkZMNTUyNAZGTDU1MjUGRkw1NTI2BkZMNTUyNwZGTDU1MjgGRkw1NTI5BkZMNTUzMAZGTDU1MzEGRkw1NTMyBkZMNTUzMwZGTDU1MzQGRkw1NTM1BkZMNTUzNgZGTDU1MzcGRkw1NTM4BkZMNTUzOQZGTDU1NDAGRkw1NTQxBkZMNTU0MgZGTDU1NDMGRkw1NTQ0BkZMNTU0NQZGTDU1NDYGRkw1NTQ3BkZMNTU0OAZGTDU1NDkGRkw1NTUwBkZMNTU1MQZGTDU1NTIGRkw1NTUzBkZMNTU1NAZGTDU1NTUGRkw1NTU2BkZMNTU1NwZjMTk0ODIGRkw1NTU4BmMxOTQ4NAZjMjQwNTQGYzE5NDc5BkZMNTU1OQZjMTk0ODEGRkw1NTYwBmMxOTk5OQZGTDU1NjEGYzE5NDkyBkZMNTU2MgZjMTk0OTEGRkw1NTYzBmMyNDE4OQZGTDU1NjQGRkw1NTY1BkZMNTU2NgZGTDU1NjcGYzI0MTk0BmMyNDE5MAZjMjAxMDMGRkw1NTY4BkZMNTU2OQZGTDU1NzAGRkw1NTcxBkZMNTU3MgZGTDU1NzMGRkw1NTc0BkZMNTU3NQZGTDU1NzYGRkw1NTc3BkZMNTU3OAZGTDU1NzkGRkw1NTgwBkZMNTU4MQZGTDU1ODIGRkw1NTgzBkZMNTU4NAZGTDU1ODUGRkw1NTg2BkZMNTU4NwZGTDU1ODgGRkw1NTg5BkZMNTU5MAZGTDU1OTEGRkw1NTkyBkZMNTU5MwZGTDU1OTQGRkw1NTk1BkZMNTU5NgZGTDU1OTcGRkw1NTk4BkZMNTU5OQZGTDU2MDAGRkw1NjAxBkZMNTYwMgZGTDU2MDMGRkw1NjA0BkZMNTYwNQZGTDU2MDYGRkw1NjA3BkZMNTYwOAZGTDU2MDkGRkw1NjEwBkZMNTYxMQZGTDU2MTIGRkw1NjEzBkZMNTYxNAZGTDU2MTUGRkw1NjE2BkZMNTYxNwZGTDU2MTgGRkw1NjE5BkZMNTYyMAZGTDU2MjEGRkw1NjIyBkZMNTYyMwZGTDU2MjQGRkw1NjI1BkZMNTYyNgZGTDU2MjcGRkw1NjI4BkZMNTYyOQZGTDU2MzAGRkw1NjMxBkZMNTYzMgZGTDU2MzMGRkw1NjM0BkZMNTYzNQZGTDU2MzYGRkw1NjM3BkZMNTYzOAZGTDU2MzkGRkw1NjQwBkZMNTY0MQZGTDU2NDIGRkw1NjQzBkZMNTY0NAZGTDU2NDUGRkw1NjQ2BkZMNTY0NwZGTDU2NDgGRkw1NjQ5BkZMNTY1MAZGTDU2NTEGRkw1NjUyBkZMNTY1MwZGTDU2NTQGRkw1NjU1BkZMNTY1NgZGTDU2NTcGRkw1NjU4BkZMNTY1OQZGTDU2NjAGRkw1NjYxBkZMNTY2MgZGTDU2NjMGRkw1NjY0BkZMNTY2NQZGTDU2NjYGRkw1NjY3BkZMNTY2OAZGTDU2NjkGRkw1NjcwBkZMNTY3MQZGTDU2NzIGRkw1NjczBkZMNTY3NAZGTDU2NzUGRkw1Njc2BkZMNTY3NwZGTDU2NzgGRkw1Njc5BkZMNTY4MAZGTDU2ODEGRkw1NjgyBkZMNTY4MwZGTDU2ODQGRkw1Njg1BkZMNTY4NgZGTDU2ODcGRkw1Njg4BkZMNTY4OQZGTDU2OTAGRkw1NjkxBkZMNTY5MgZGTDU2OTMGRkw1Njk0BkZMNTY5NQZGTDU2OTYGRkw1Njk3BkZMNTY5OAZGTDU2OTkGRkw1NzAwBkZMNTcwMQZGTDU3MDIGRkw1NzAzBkZMNTcwNAZGTDU3MDUGRkw1NzA2BkZMNTcwNwZGTDU3MDgGRkw1NzA5BkZMNTcxMAZGTDU3MTEGRkw1NzEyBkZMNTcxMwZGTDU3MTQGRkw1NzE1BkZMNTcxNgZGTDU3MTcGRkw1NzE4BkZMNTcxOQZGTDU3MjAGRkw1NzIxBkZMNTcyMgZGTDU3MjMGRkw1NzI0BkZMNTcyNQZGTDU3MjYGRkw1NzI3BkZMNTcyOAZGTDU3MjkGRkw1NzMwBkZMNTczMQZGTDU3MzIGRkw1NzMzBkZMNTczNAZGTDU3MzUGRkw1NzM2BkZMNTczNwZGTDU3MzgGRkw1NzM5BkZMNTc0MAZGTDU3NDEGRkw1NzQyBkZMNTc0MwZGTDU3NDQGRkw1NzQ1BkZMNTc0NgZGTDU3NDcGRkw1NzQ4BkZMNTc0OQZGTDU3NTAGRkw1NzUxBkZMNTc1MgZGTDU3NTMGRkw1NzU0BkZMNTc1NQZGTDU3NTYGRkw1NzU3BkZMNTc1OAZGTDU3NTkGRkw1NzYwBkZMNTc2MQZGTDU3NjIGRkw1NzYzBkZMNTc2NAZGTDU3NjUGRkw1NzY2BkZMNTc2NwZGTDU3NjgGRkw1NzY5BkZMNTc3MAZGTDU3NzEGRkw1NzcyBkZMNTc3MwZGTDU3NzQGRkw1Nzc1BkZMNTc3NgZGTDU3NzcGRkw1Nzc4BkZMNTc3OQZGTDU3ODAGRkw1NzgxBkZMNTc4MgZGTDU3ODMGRkw1Nzg0BkZMNTc4NQZGTDU3ODYGRkw1Nzg3BkZMNTc4OAZGTDU3ODkGRkw1NzkwBkZMNTc5MQZGTDU3OTIGRkw1NzkzBkZMNTc5NAZGTDU3OTUGRkw1Nzk2BkZMNTc5NwZGTDU3OTgGRkw1Nzk5BkZMNTgwMAZGTDU4MDEGRkw1ODAyBkZMNTgwMwZGTDU4MDQGRkw1ODA1BkZMNTgwNgZGTDU4MDcGRkw1ODA4BkZMNTgwOQZGTDU4MTAGRkw1ODExBkZMNTgxMgZGTDU4MTMGRkw1ODE0BkZMNTgxNQZGTDU4MTYGRkw1ODE3BkZMNTgxOAZGTDU4MTkGRkw1ODIwBkZMNTgyMQZGTDU4MjIGRkw1ODIzBkZMNTgyNAZGTDU4MjUGRkw1ODI2BkZMNTgyNwZGTDU4MjgGRkw1ODI5BkZMNTgzMAZGTDU4MzEGRkw1ODMyBkZMNTgzMwZGTDU4MzQGRkw1ODM1BkZMNTgzNgZGTDU4MzcGRkw1ODM4BkZMNTgzOQZGTDU4NDAGRkw1ODQxBkZMNTg0MgZGTDU4NDMGRkw1ODQ0BkZMNTg0NQZGTDU4NDYGRkw1ODQ3BkZMNTg0OAZGTDU4NDkGRkw1ODUwBkZMNTg1MQZGTDU4NTIGRkw1ODUzBkZMNTg1NAZGTDU4NTUGRkw1ODU2BkZMNTg1NwZGTDU4NTgGRkw1ODU5BkZMNTg2MAZGTDU4NjEGRkw1ODYyBkZMNTg2MwZGTDU4NjQGRkw1ODY1BkZMNTg2NgZGTDU4NjcGRkw1ODY4BkZMNTg2OQZGTDU4NzAGRkw1ODcxBkZMNTg3MgZGTDU4NzMGRkw1ODc0BkZMNTg3NQZGTDU4NzYGRkw1ODc3BkZMNTg3OAZGTDU4NzkGRkw1ODgwBkZMNTg4MQZGTDU4ODIGRkw1ODgzBkZMNTg4NAZGTDU4ODUGRkw1ODg2BkZMNTg4NwZGTDU4ODgGRkw1ODg5BkZMNTg5MAZGTDU4OTEGRkw1ODkyBkZMNTg5MwZGTDU4OTQGRkw1ODk1BkZMNTg5NgZGTDU4OTcGRkw1ODk4BkZMNTg5OQZGTDU5MDAGRkw1OTAxBkZMNTkwMgZGTDU5MDMGRkw1OTA0BkZMNTkwNQZGTDU5MDYGRkw1OTA3BkZMNTkwOAZGTDU5MDkGRkw1OTEwBkZMNTkxMQZGTDU5MTIGRkw1OTEzBkZMNTkxNAZGTDU5MTUGRkw1OTE2BkZMNTkxNwZGTDU5MTgGRkw1OTE5BkZMNTkyMAZGTDU5MjEGRkw1OTIyBkZMNTkyMwZGTDU5MjQGRkw1OTI1BkZMNTkyNgZGTDU5MjcGRkw1OTI4BkZMNTkyOQZGTDU5MzAGRkw1OTMxBkZMNTkzMgZGTDU5MzMGRkw1OTM0BkZMNTkzNQZGTDU5MzYGRkw1OTM3BkZMNTkzOAZGTDU5MzkGRkw1OTQwBkZMNTk0MQZGTDU5NDIGRkw1OTQzBkZMNTk0NAZGTDU5NDUGRkw1OTQ2BkZMNTk0NwZGTDU5NDgGRkw1OTQ5BkZMNTk1MAZGTDU5NTEGRkw1OTUyBkZMNTk1MwZGTDU5NTQGRkw1OTU1BkZMNTk1NgZGTDU5NTcGRkw1OTU4BkZMNTk1OQZGTDU5NjAGRkw1OTYxBkZMNTk2MgZGTDU5NjMGRkw1OTY0BkZMNTk2NQZGTDU5NjYGRkw1OTY3BkZMNTk2OAZGTDU5NjkGRkw1OTcwBkZMNTk3MQZGTDU5NzIGRkw1OTczBkZMNTk3NAZGTDU5NzUGRkw1OTc2BkZMNTk3NwZGTDU5NzgGRkw1OTc5BkZMNTk4MAZGTDU5ODEGRkw1OTgyBkZMNTk4MwZGTDU5ODQGRkw1OTg1BkZMNTk4NgZGTDU5ODcGRkw1OTg4BkZMNTk4OQZGTDU5OTAGRkw1OTkxBkZMNTk5MgZGTDU5OTMGRkw1OTk0BkZMNTk5NQZGTDU5OTYGRkw1OTk3BkZMNTk5OAZGTDU5OTkGRkw2MDAwBkZMNjAwMQZGTDYwMDIGRkw2MDAzBkZMNjAwNAZGTDYwMDUGRkw2MDA2BkZMNjAwNwZGTDYwMDgGRkw2MDA5BkZMNjAxMAZGTDYwMTEGRkw2MDEyBkZMNjAxMwZGTDYwMTQGRkw2MDE1BkZMNjAxNgZGTDYwMTcGRkw2MDE4BkZMNjAxOQZGTDYwMjAGRkw2MDIxBkZMNjAyMgZGTDYwMjMGRkw2MDI0BkZMNjAyNQZGTDYwMjYGRkw2MDI3BkZMNjAyOAZGTDYwMjkGRkw2MDMwBkZMNjAzMQZGTDYwMzIGRkw2MDMzBkZMNjAzNAZGTDYwMzUGRkw2MDM2BkZMNjAzNwZGTDYwMzgGRkw2MDM5BkZMNjA0MAZGTDYwNDEGRkw2MDQyBkZMNjA0MwZGTDYwNDQGRkw2MDQ1BkZMNjA0NgZGTDYwNDcGRkw2MDQ4BkZMNjA0OQZGTDYwNTAGRkw2MDUxBkZMNjA1MgZGTDYwNTMGRkw2MDU0BkZMNjA1NQZGTDYwNTYGRkw2MDU3BkZMNjA1OAZGTDYwNTkGRkw2MDYwBkZMNjA2MQZGTDYwNjIGRkw2MDYzBkZMNjA2NAZGTDYwNjUGRkw2MDY2BkZMNjA2NwZGTDYwNjgGRkw2MDY5BkZMNjA3MAZGTDYwNzEGRkw2MDcyBkZMNjA3MwZGTDYwNzQGRkw2MDc1BkZMNjA3NgZGTDYwNzcGRkw2MDc4BkZMNjA3OQZGTDYwODAGRkw2MDgxBkZMNjA4MgZGTDYwODMGRkw2MDg0BkZMNjA4NQZGTDYwODYGRkw2MDg3BkZMNjA4OAZGTDYwODkGRkw2MDkwBkZMNjA5MQZGTDYwOTIGRkw2MDkzBkZMNjA5NAZGTDYwOTUGRkw2MDk2BkZMNjA5NwZGTDYwOTgGRkw2MDk5BkZMNjEwMAZGTDYxMDEGRkw2MTAyBkZMNjEwMwZGTDYxMDQGRkw2MTA1BkZMNjEwNgZGTDYxMDcGRkw2MTA4BkZMNjEwOQZGTDYxMTAGRkw2MTExBkZMNjExMgZGTDYxMTMGRkw2MTE0BkZMNjExNQZGTDYxMTYGRkw2MTE3BkZMNjExOAZGTDYxMTkGRkw2MTIwBkZMNjEyMQZGTDYxMjIGRkw2MTIzBkZMNjEyNAZGTDYxMjUGRkw2MTI2BkZMNjEyNwZGTDYxMjgGRkw2MTI5BkZMNjEzMAZGTDYxMzEGRkw2MTMyBkZMNjEzMwZGTDYxMzQGRkw2MTM1BkZMNjEzNgZGTDYxMzcGRkw2MTM4BkZMNjEzOQZGTDYxNDAGRkw2MTQxBkZMNjE0MgZGTDYxNDMGRkw2MTQ0BkZMNjE0NQZGTDYxNDYGRkw2MTQ3BkZMNjE0OAZGTDYxNDkGRkw2MTUwBkZMNjE1MQZGTDYxNTIGRkw2MTUzBkZMNjE1NAZGTDYxNTUGRkw2MTU2BkZMNjE1NwZGTDYxNTgGRkw2MTU5BkZMNjE2MAZGTDYxNjEGRkw2MTYyBkZMNjE2MwZGTDYxNjQGRkw2MTY1BkZMNjE2NgZGTDYxNjcGRkw2MTY4BkZMNjE2OQZGTDYxNzAGRkw2MTcxBkZMNjE3MgZGTDYxNzMGRkw2MTc0BkZMNjE3NQZGTDYxNzYGRkw2MTc3BkZMNjE3OAZGTDYxNzkGRkw2MTgwBkZMNjE4MQZGTDYxODIGRkw2MTgzBkZMNjE4NAZGTDYxODUGRkw2MTg2BkZMNjE4NwZGTDYxODgGRkw2MTg5BkZMNjE5MAZGTDYxOTEGRkw2MTkyBkZMNjE5MwZGTDYxOTQGRkw2MTk1BkZMNjE5NgZGTDYxOTcGRkw2MTk4BkZMNjE5OQZGTDYyMDAGRkw2MjAxBkZMNjIwMgZGTDYyMDMGRkw2MjA0BkZMNjIwNQZGTDYyMDYGRkw2MjA3BkZMNjIwOAZGTDYyMDkGRkw2MjEwBkZMNjIxMQZGTDYyMTIGRkw2MjEzBkZMNjIxNAZGTDYyMTUGRkw2MjE2BkZMNjIxNwZGTDYyMTgGRkw2MjE5BkZMNjIyMAZGTDYyMjEGRkw2MjIyBkZMNjIyMwZGTDYyMjQGRkw2MjI1BkZMNjIyNgZGTDYyMjcGRkw2MjI4BkZMNjIyOQZGTDYyMzAGRkw2MjMxBkZMNjIzMgZGTDYyMzMGRkw2MjM0BkZMNjIzNQZGTDYyMzYGRkw2MjM3BkZMNjIzOAZGTDYyMzkGRkw2MjQwBkZMNjI0MQZGTDYyNDIGRkw2MjQzBkZMNjI0NAZGTDYyNDUGRkw2MjQ2BkZMNjI0NwZGTDYyNDgGRkw2MjQ5BkZMNjI1MAZGTDYyNTEGRkw2MjUyBkZMNjI1MwZGTDYyNTQGRkw2MjU1BkZMNjI1NgZGTDYyNTcGRkw2MjU4BkZMNjI1OQZGTDYyNjAGRkw2MjYxBkZMNjI2MgZGTDYyNjMGRkw2MjY0BkZMNjI2NQZGTDYyNjYGRkw2MjY3BkZMNjI2OAZGTDYyNjkGRkw2MjcwBkZMNjI3MQZGTDYyNzIGRkw2MjczBkZMNjI3NAZGTDYyNzUGRkw2Mjc2BkZMNjI3NwZGTDYyNzgGRkw2Mjc5BkZMNjI4MAZGTDYyODEGRkw2MjgyBkZMNjI4MwZGTDYyODQGRkw2Mjg1BkZMNjI4NgZGTDYyODcGRkw2Mjg4BkZMNjI4OQZGTDYyOTAGRkw2MjkxBkZMNjI5MgZGTDYyOTMGRkw2Mjk0BkZMNjI5NQZGTDYyOTYGRkw2Mjk3BkZMNjI5OAZGTDYyOTkGRkw2MzAwBkZMNjMwMQZGTDYzMDIGRkw2MzAzBkZMNjMwNAZGTDYzMDUGRkw2MzA2BkZMNjMwNwZGTDYzMDgGRkw2MzA5BkZMNjMxMAZGTDYzMTEGRkw2MzEyBkZMNjMxMwZGTDYzMTQGRkw2MzE1BkZMNjMxNgZGTDYzMTcGRkw2MzE4BkZMNjMxOQZGTDYzMjAGRkw2MzIxBkZMNjMyMgZGTDYzMjMGRkw2MzI0BkZMNjMyNQZGTDYzMjYGRkw2MzI3BkZMNjMyOAZGTDYzMjkGRkw2MzMwBkZMNjMzMQZGTDYzMzIGRkw2MzMzBkZMNjMzNAZGTDYzMzUGRkw2MzM2BkZMNjMzNwZGTDYzMzgGRkw2MzM5BkZMNjM0MAZGTDYzNDEGRkw2MzQyBkZMNjM0MwZGTDYzNDQGRkw2MzQ1BkZMNjM0NgZGTDYzNDcGRkw2MzQ4BkZMNjM0OQZGTDYzNTAGRkw2MzUxBkZMNjM1MgZGTDYzNTMGRkw2MzU0BkZMNjM1NQZGTDYzNTYGRkw2MzU3BkZMNjM1OAZGTDYzNTkGRkw2MzYwBkZMNjM2MQZGTDYzNjIGRkw2MzYzBkZMNjM2NAZGTDYzNjUGRkw2MzY2BkZMNjM2NwZGTDYzNjgGRkw2MzY5BkZMNjM3MAZGTDYzNzEGRkw2MzcyBkZMNjM3MwZGTDYzNzQGRkw2Mzc1BkZMNjM3NgZGTDYzNzcGRkw2Mzc4BkZMNjM3OQZGTDYzODAGRkw2MzgxBkZMNjM4MgZGTDYzODMGRkw2Mzg0BkZMNjM4NQZGTDYzODYGRkw2Mzg3BkZMNjM4OAZGTDYzODkGRkw2MzkwBkZMNjM5MQZGTDYzOTIGRkw2MzkzBkZMNjM5NAZGTDYzOTUGRkw2Mzk2BkZMNjM5NwZGTDYzOTgGRkw2Mzk5BkZMNjQwMAZGTDY0MDEGRkw2NDAyBkZMNjQwMwZGTDY0MDQGRkw2NDA1BkZMNjQwNgZGTDY0MDcGRkw2NDA4BkZMNjQwOQZGTDY0MTAGRkw2NDExBkZMNjQxMgZGTDY0MTMGRkw2NDE0BkZMNjQxNQZGTDY0MTYGRkw2NDE3BkZMNjQxOAZGTDY0MTkGRkw2NDIwBkZMNjQyMQZGTDY0MjIGRkw2NDIzBkZMNjQyNAZGTDY0MjUGRkw2NDI2BkZMNjQyNwZGTDY0MjgGRkw2NDI5BkZMNjQzMAZGTDY0MzEGRkw2NDMyBkZMNjQzMwZGTDY0MzQGRkw2NDM1BkZMNjQzNgZGTDY0MzcGRkw2NDM4BkZMNjQzOQZGTDY0NDAGRkw2NDQxBkZMNjQ0MgZGTDY0NDMGRkw2NDQ0BkZMNjQ0NQZGTDY0NDYGRkw2NDQ3BkZMNjQ0OAZGTDY0NDkGRkw2NDUwBkZMNjQ1MQZGTDY0NTIGRkw2NDUzBkZMNjQ1NAZGTDY0NTUGRkw2NDU2BkZMNjQ1NwZGTDY0NTgGRkw2NDU5BkZMNjQ2MAZGTDY0NjEGRkw2NDYyBkZMNjQ2MwZGTDY0NjQGRkw2NDY1BkZMNjQ2NgZGTDY0NjcGRkw2NDY4BkZMNjQ2OQZGTDY0NzAGRkw2NDcxBkZMNjQ3MgZGTDY0NzMGRkw2NDc0BkZMNjQ3NQZGTDY0NzYGRkw2NDc3BkZMNjQ3OAZGTDY0NzkGRkw2NDgwBkZMNjQ4MQZGTDY0ODIGRkw2NDgzBkZMNjQ4NAZGTDY0ODUGRkw2NDg2BkZMNjQ4NwZGTDY0ODgGRkw2NDg5BkZMNjQ5MAZGTDY0OTEGRkw2NDkyBkZMNjQ5MwZGTDY0OTQGRkw2NDk1BkZMNjQ5NgZGTDY0OTcGRkw2NDk4BkZMNjQ5OQZGTDY1MDAGRkw2NTAxBkZMNjUwMgZGTDY1MDMGRkw2NTA0BkZMNjUwNQZGTDY1MDYGRkw2NTA3BkZMNjUwOAZGTDY1MDkGRkw2NTEwBkZMNjUxMQZGTDY1MTIGRkw2NTEzBkZMNjUxNAZGTDY1MTUGRkw2NTE2BkZMNjUxNwZGTDY1MTgGRkw2NTE5BkZMNjUyMAZGTDY1MjEGRkw2NTIyBkZMNjUyMwZGTDY1MjQGRkw2NTI1BkZMNjUyNgZGTDY1MjcGRkw2NTI4BkZMNjUyOQZGTDY1MzAGRkw2NTMxBkZMNjUzMgZGTDY1MzMGRkw2NTM0BkZMNjUzNQZGTDY1MzYGRkw2NTM3BkZMNjUzOAZGTDY1MzkGRkw2NTQwBkZMNjU0MQZGTDY1NDIGRkw2NTQzBkZMNjU0NAZGTDY1NDUGRkw2NTQ2BkZMNjU0NwZGTDY1NDgGRkw2NTQ5BkZMNjU1MAZGTDY1NTEGRkw2NTUyBkZMNjU1MwZGTDY1NTQGRkw2NTU1BkZMNjU1NgZGTDY1NTcGRkw2NTU4BkZMNjU1OQZGTDY1NjAGRkw2NTYxBkZMNjU2MgZGTDY1NjMGRkw2NTY0BkZMNjU2NQZGTDY1NjYGRkw2NTY3BkZMNjU2OAZGTDY1NjkGRkw2NTcwBkZMNjU3MQZGTDY1NzIGRkw2NTczBkZMNjU3NAZGTDY1NzUGRkw2NTc2BkZMNjU3NwZGTDY1NzgGRkw2NTc5BkZMNjU4MAZGTDY1ODEGRkw2NTgyBkZMNjU4MwZGTDY1ODQGRkw2NTg1BkZMNjU4NgZGTDY1ODcGRkw2NTg4BkZMNjU4OQZGTDY1OTAGRkw2NTkxBkZMNjU5MgZGTDY1OTMGRkw2NTk0BkZMNjU5NQZGTDY1OTYGRkw2NTk3BkZMNjU5OAZGTDY1OTkGRkw2NjAwBkZMNjYwMQZGTDY2MDIGRkw2NjAzBkZMNjYwNAZGTDY2MDUGRkw2NjA2BkZMNjYwNwZGTDY2MDgGRkw2NjA5BkZMNjYxMAZGTDY2MTEGRkw2NjEyBkZMNjYxMwZGTDY2MTQGRkw2NjE1BkZMNjYxNgZGTDY2MTcGRkw2NjE4BkZMNjYxOQZGTDY2MjAGRkw2NjIxBkZMNjYyMgZGTDY2MjMGRkw2NjI0BkZMNjYyNQZGTDY2MjYGRkw2NjI3BkZMNjYyOAZGTDY2MjkGRkw2NjMwBkZMNjYzMQZGTDY2MzIGRkw2NjMzBkZMNjYzNAZGTDY2MzUGRkw2NjM2BkZMNjYzNwZGTDY2MzgGRkw2NjM5BkZMNjY0MAZGTDY2NDEGRkw2NjQyBkZMNjY0MwZGTDY2NDQGRkw2NjQ1BkZMNjY0NgZGTDY2NDcGRkw2NjQ4BkZMNjY0OQZGTDY2NTAGRkw2NjUxBkZMNjY1MgZGTDY2NTMGRkw2NjU0BkZMNjY1NQZGTDY2NTYGRkw2NjU3BkZMNjY1OAZGTDY2NTkGRkw2NjYwBmMyNDA2NQZGTDY2NjEGRkw2NjYyBkZMNjY2MwZGTDY2NjQGRkw2NjY1BkZMNjY2NgZGTDY2NjcGRkw2NjY4BkZMNjY2OQZGTDY2NzAGRkw2NjcxBkZMNjY3MgZGTDY2NzMGRkw2Njc0BkZMNjY3NQZGTDY2NzYGRkw2Njc3BkZMNjY3OAZGTDY2NzkGRkw2NjgwBkZMNjY4MQZGTDY2ODIGRkw2NjgzBkZMNjY4NAZGTDY2ODUGRkw2Njg2BkZMNjY4NwZGTDY2ODgGRkw2Njg5BkZMNjY5MAZGTDY2OTEGRkw2NjkyBkZMNjY5MwZGTDY2OTQGRkw2Njk1BkZMNjY5NgZGTDY2OTcGRkw2Njk4BkZMNjY5OQZGTDY3MDAGRkw2NzAxBkZMNjcwMgZGTDY3MDMGRkw2NzA0BkZMNjcwNQZGTDY3MDYGRkw2NzA3BkZMNjcwOAZGTDY3MDkGRkw2NzEwBkZMNjcxMQZGTDY3MTIGRkw2NzEzBkZMNjcxNAZGTDY3MTUGRkw2NzE2BkZMNjcxNwZGTDY3MTgGRkw2NzE5BkZMNjcyMAZGTDY3MjEGRkw2NzIyBkZMNjcyMwZGTDY3MjQGRkw2NzI1BkZMNjcyNgZGTDY3MjcGRkw2NzI4BkZMNjcyOQZGTDY3MzAGRkw2NzMxBkZMNjczMgZGTDY3MzMGRkw2NzM0BkZMNjczNQZGTDY3MzYGRkw2NzM3BkZMNjczOAZGTDY3MzkGRkw2NzQwBkZMNjc0MQZGTDY3NDIGRkw2NzQzBkZMNjc0NAZGTDY3NDUGRkw2NzQ2BkZMNjc0NwZGTDY3NDgGRkw2NzQ5BkZMNjc1MAZGTDY3NTEGRkw2NzUyBkZMNjc1MwZGTDY3NTQGRkw2NzU1BkZMNjc1NgZGTDY3NTcGRkw2NzU4BkZMNjc1OQZGTDY3NjAGRkw2NzYxBkZMNjc2MgZGTDY3NjMGRkw2NzY0BkZMNjc2NQZGTDY3NjYGRkw2NzY3BkZMNjc2OAZGTDY3NjkGRkw2NzcwBkZMNjc3MQZGTDY3NzIGRkw2NzczBkZMNjc3NAZGTDY3NzUGRkw2Nzc2BkZMNjc3NwZGTDY3NzgGRkw2Nzc5BkZMNjc4MAZGTDY3ODEGRkw2NzgyBkZMNjc4MwZGTDY3ODQGRkw2Nzg1BkZMNjc4NgZGTDY3ODcGRkw2Nzg4BkZMNjc4OQZGTDY3OTAGRkw2NzkxBkZMNjc5MgZGTDY3OTMGRkw2Nzk0BkZMNjc5NQZGTDY3OTYGRkw2Nzk3BkZMNjc5OAZGTDY3OTkGRkw2ODAwBkZMNjgwMQZGTDY4MDIGRkw2ODAzBkZMNjgwNAZGTDY4MDUGRkw2ODA2BkZMNjgwNwZGTDY4MDgGRkw2ODA5BkZMNjgxMAZGTDY4MTEGRkw2ODEyBkZMNjgxMwZGTDY4MTQGRkw2ODE1BkZMNjgxNgZGTDY4MTcGRkw2ODE4BkZMNjgxOQZGTDY4MjAGRkw2ODIxBkZMNjgyMgZGTDY4MjMGRkw2ODI0BkZMNjgyNQZGTDY4MjYGRkw2ODI3BkZMNjgyOAZGTDY4MjkGRkw2ODMwBkZMNjgzMQZGTDY4MzIGRkw2ODMzBkZMNjgzNAZGTDY4MzUGRkw2ODM2BkZMNjgzNwZGTDY4MzgGRkw2ODM5BkZMNjg0MAZGTDY4NDEGRkw2ODQyBkZMNjg0MwZGTDY4NDQGRkw2ODQ1BkZMNjg0NgZGTDY4NDcGRkw2ODQ4BkZMNjg0OQZGTDY4NTAGRkw2ODUxBkZMNjg1MgZGTDY4NTMGRkw2ODU0BkZMNjg1NQZGTDY4NTYGRkw2ODU3BkZMNjg1OAZGTDY4NTkGRkw2ODYwBkZMNjg2MQZGTDY4NjIGRkw2ODYzBkZMNjg2NAZGTDY4NjUGRkw2ODY2BkZMNjg2NwZGTDY4NjgJYWZpaTU3NTM0BkZMNjg2OQlhZmlpNTk2ODEJYWZpaTU5NjgyCWFmaWk1OTY4MwlhZmlpNTk2ODQJYWZpaTU5Njg1CWFmaWk1OTY4NglhZmlpNTk2ODcJYWZpaTU5Njg4CWFmaWk1OTY4OQlhZmlpNTk2OTAJYWZpaTU5NjkxCWFmaWk1OTY5MglhZmlpNTk2OTMJYWZpaTU5Njk0CWFmaWk1OTY5NQlhZmlpNTk2OTYJYWZpaTU5Njk3CWFmaWk1OTY5OAlhZmlpNTk2OTkJYWZpaTU5NzAwCWFmaWk1OTcwMQlhZmlpNTk3MDIJYWZpaTU5NzAzCWFmaWk1OTcwNAlhZmlpNTk3MDUJYWZpaTU5NzA2CWFmaWk1OTcwNwlhZmlpNTk3MDgJYWZpaTU5NzA5CWFmaWk1OTcxMAlhZmlpNTk3MTEJYWZpaTU5NzEyCWFmaWk1OTcxMwlhZmlpNTk3MTQJYWZpaTU5NzE1CWFmaWk1OTcxNglhZmlpNTk3MTcJYWZpaTU5NzE4CWFmaWk1OTcxOQlhZmlpNTk3MjAJYWZpaTU5NzIxCWFmaWk1OTcyMglhZmlpNTk3MjMJYWZpaTU5NzI0CWFmaWk1OTcyNQlhZmlpNTk3MjYJYWZpaTU5NzI3CWFmaWk1OTcyOAlhZmlpNTk3MjkJYWZpaTU5NzMwCWFmaWk1OTczMQlhZmlpNTk3MzIJYWZpaTU5NzMzCWFmaWk1OTczNAlhZmlpNTk3MzUJYWZpaTU5NzM2CWFmaWk1OTczNwlhZmlpNTk3MzgJYWZpaTU5NzQzCWFmaWk1OTc0NAlhZmlpNTk3NDUJYWZpaTU5NzQ2CWFmaWk1OTc0NwlhZmlpNTk3NDgJYWZpaTU5NzQ5CWFmaWk1OTc1MAlhZmlpNTk3NTEJYWZpaTU5NzUyCWFmaWk1OTc1MwlhZmlpNTk3NTQJYWZpaTU5NzU1CWFmaWk1OTc1NglhZmlpNTk3NTcJYWZpaTU5NzU4CWFmaWk1OTc1OQlhZmlpNTk3NjAJYWZpaTU5NzYxCWFmaWk1OTc2MglhZmlpNTk3NjMJYWZpaTU5NzY0CWFmaWk1OTc2NQlhZmlpNTk3NjYJYWZpaTU5NzY3CWFmaWk1OTc2OAlhZmlpNTk3NjkJYWZpaTU5NzcwCWFmaWk1OTc3MQloeXBoZW5kb3QQZGVncmVlY2VudGlncmFkZQ9kZWdyZWVmYXJlbmhlaXQIb25ldGhpcmQJdHdvdGhpcmRzBkZMNjg3MAZGTDY4NzEGRkw2ODcyBkZMNjg3MwZGTDY4NzQGRkw2ODc1BkZMNjg3NgZGTDY4NzcGRkw2ODc4BkZMNjg3OQZGTDY4ODAGRkw2ODgxBkZMNjg4MgZGTDY4ODMGRkw2ODg0BkZMNjg4NQZGTDY4ODYGRkw2ODg3BkZMNjg4OAZGTDY4ODkGRkw2ODkwBkZMNjg5MQ5hcnJvd25vcnRod2VzdA5hcnJvd25vcnRoZWFzdA5hcnJvd3NvdXRoZWFzdA5hcnJvd3NvdXRod2VzdBJhcnJvd3BhcnJyaWdodGxlZnQOZGJsYXJyb3d1cGRvd24SYXJyb3dwYXJybGVmdHJpZ2h0DWFycm93ZGJscmlnaHQMYXJyb3dkYmxib3RoDWFycm93b3BlbmxlZnQLYXJyb3dvcGVudXAOYXJyb3dvcGVucmlnaHQNYXJyb3dvcGVuZG93bgl1bml2ZXJzYWwIZ3JhZGllbnQHZWxlbWVudAhzdWNodGhhdA1iYWNrc2xhc2htYXRoBkZMNjg5MgVhbmdsZQRiYXIxB2JhcmRibDIKbG9naWNhbGFuZAlsb2dpY2Fsb3ILaW50ZWdyYWxkYmwMY29udGludGVncmFsCXRoZXJlZm9yZQdiZWNhdXNlBXJhdGlvCnByb3BvcnRpb24Hc2ltaWxhcgpyZXZzaW1pbGFyCGFsbGVxdWFsEmFwcHJveGVxdWFsb3JpbWFnZQxsZXNzZGJsZXF1YWwPZ3JlYXRlcmRibGVxdWFsCGxlc3NtdWNoC2dyZWF0ZXJtdWNoB25vdGxlc3MKbm90Z3JlYXRlcgxwcm9wZXJzdWJzZXQOcHJvcGVyc3VwZXJzZXQMcmVmbGV4c3Vic2V0DnJlZmxleHN1cGVyc2V0CmNpcmNsZXBsdXMJY2lyY2xlZG90DXJpZ2h0dHJpYW5nbGUNcGVycGVuZGljdWxhcgZGTDY4OTMGRkw2ODk0BkZMNjg5NQZGTDY4OTYGRkw2ODk3BkZMNjg5OAZGTDY4OTkGRkw2OTAwBkZMNjkwMQZGTDY5MDIGRkw2OTAzBkZMNjkwNAZGTDY5MDUGRkw2OTA2BkZMNjkwNwZGTDY5MDgGRkw2OTA5BkZMNjkxMAZGTDY5MTEGRkw2OTEyBkZMNjkxMwZGTDY5MTQGRkw2OTE1BkZMNjkxNgZGTDY5MTcGRkw2OTE4BkZMNjkxOQZGTDY5MjAGRkw2OTIxBkZMNjkyMgZGTDY5MjMGRkw2OTI0BkZMNjkyNQZGTDY5MjYGRkw2OTI3BkZMNjkyOAZGTDY5MjkGRkw2OTMwBkZMNjkzMQZGTDY5MzIGRkw2OTMzBkZMNjkzNAZGTDY5MzUGRkw2OTM2BkZMNjkzNwZGTDY5MzgGRkw2OTM5BkZMNjk0MAZGTDY5NDEGRkw2OTQyBkZMNjk0MwZGTDY5NDQGRkw2OTQ1BkZMNjk0NgZGTDY5NDcGRkw2OTQ4BkZMNjk0OQZGTDY5NTAGRkw2OTUxBkZMNjk1MgZGTDY5NTMGRkw2OTU0BkZMNjk1NQZGTDY5NTYGRkw2OTU3BkZMNjk1OAZGTDY5NTkGRkw2OTYwBkZMNjk2MQZGTDY5NjIGRkw2OTYzBkZMNjk2NAZGTDY5NjUGRkw2OTY2BkZMNjk2NwZGTDY5NjgGRkw2OTY5BkZMNjk3MAZGTDY5NzEGRkw2OTcyBkZMNjk3MwZGTDY5NzQGRkw2OTc1BkZMNjk3NgZGTDY5NzcGRkw2OTc4BkZMNjk3OQZGTDY5ODAGRkw2OTgxBkZMNjk4MgZGTDY5ODMGRkw2OTg0BkZMNjk4NQZGTDY5ODYGRkw2OTg3BkZMNjk4OAZGTDY5ODkGRkw2OTkwBkZMNjk5MQZGTDY5OTIGRkw2OTkzBkZMNjk5NAZGTDY5OTUGRkw2OTk2BkZMNjk5NwZGTDY5OTgGRkw2OTk5BkZMNzAwMAZGTDcwMDEGRkw3MDAyBkZMNzAwMwZGTDcwMDQEMjUwMwQyNTA0BDI1MDUEMjUwNgQyNTA3BDI1MDgEMjUwOQQyNTBhBDI1MGIEMjUxZAQyNTFlBDI1MWYEMjUyMAQyNTIxBDI1MjIEMjUyMwQyNTI1BDI1MjYEMjUyNwQyNTI4BDI1MjkEMjUyYQQyNTJiBDI1MmQEMjUyZQQyNTJmBDI1MzAEMjUzMQQyNTMyBDI1MzMEMjUzNQQyNTM2BDI1MzcEMjUzOAQyNTM5BDI1M2EEMjUzYgQyNTNkBDI1M2UEMjUzZgQyNTQwBDI1NDEEMjU0MgQyNTQzBDI1NDQEMjU0NQQyNTQ2BDI1NDcEMjU0OAQyNTQ5BDI1NGEEMjU0YgQyNTZkBDI1NmUEMjU2ZgQyNTcwBDI1NzEEMjU3MgQyNTczCFNGNDMwMDAwCFNGMjQwMDAwCFNGNTEwMDAwCFNGNTIwMDAwCFNGMzkwMDAwCFNGMjIwMDAwCFNGMjEwMDAwCFNGMjUwMDAwCFNGNTAwMDAwCFNGNDkwMDAwCFNGMzgwMDAwCFNGMjgwMDAwCFNGMjcwMDAwCFNGMjYwMDAwCFNGMzYwMDAwCFNGMzcwMDAwCFNGNDIwMDAwCFNGMTkwMDAwCFNGMjAwMDAwCFNGMjMwMDAwCFNGNDcwMDAwCFNGNDgwMDAwCFNGNDEwMDAwCFNGNDUwMDAwCFNGNDYwMDAwCFNGNDAwMDAwCFNGNTQwMDAwCFNGNTMwMDAwCFNGNDQwMDAwDXVwZWlnaHRoYmxvY2sNcnRlaWdodGhibG9jawlib3huZXN0ZWQNYm94aG9yaXpoYXRjaAxib3h2ZXJ0aGF0Y2gNYm94Y3Jvc3NoYXRjaBBib3hsZWZ0ZGlhZ2hhdGNoDmJveHJ0ZGlhZ2hhdGNoEWJveGNyb3NzZGlhZ2hhdGNoCHRyaWFuZ2xlEXRyaWFuZ2xlcmlnaHRzbGQxDnRyaWFuZ2xlcmlnaHQxC3RyaWFuZ2xlaW52EHRyaWFuZ2xlbGVmdHNsZDENdHJpYW5nbGVsZWZ0MRFkaWFtb25kcmhvbWJzb2xpZAxkaWFtb25kcmhvbWISZGlhbW9uZHJob21ibmVzdGVkDWNpcmNsZWxlZnRzbGQOY2lyY2xlcmlnaHRzbGQNdHJpYW5nbGVzZXNsZA10cmlhbmdsZXN3c2xkDHRyYW5nbGVud3NsZA10cmlhbmdsZW5lc2xkBkZMNzAwNQZGTDcwMDYGRkw3MDA3BkZMNzAwOAZGTDcwMDkGRkw3MDEwBkZMNzAxMQZGTDcwMTIJc21pbGVmYWNlDGludnNtaWxlZmFjZQZGTDcwMTMEZmxhdAVzaGFycAZGTDcwMTQGRkw3MDE1BkZMNzAxNgZGTDcwMTcGRkw3MDE4BkZMNzAxOQZGTDcwMjAGRkw3MDIxBkZMNzAyMgZGTDcwMjMGRkw3MDI0BkZMNzAyNQZGTDcwMjYGRkw3MDI3BkZMNzAyOAZGTDcwMjkGRkw3MDMwBkZMNzAzMQZGTDcwMzIGRkw3MDMzBkZMNzAzNAZGTDcwMzUGRkw3MDM2BkZMNzAzNwZGTDcwMzgGRkw3MDM5BkZMNzA0MAZGTDcwNDEGRkw3MDQyBkZMNzA0MwZGTDcwNDQGRkw3MDQ1BkZMNzA0NgZGTDcwNDcGRkw3MDQ4BkZMNzA0OQZGTDcwNTAGRkw3MDUxBkZMNzA1MgZGTDcwNTMGRkw3MDU0BkZMNzA1NQZGTDcwNTYGRkw3MDU3BkZMNzA1OAZGTDcwNTkGRkw3MDYwBkZMNzA2MQZGTDcwNjIGRkw3MDYzBkZMNzA2NAZGTDcwNjUGRkw3MDY2BkZMNzA2NwZGTDcwNjgGRkw3MDY5BkZMNzA3MAZGTDcwNzEGRkw3MDcyBkZMNzA3MwZGTDcwNzQGRkw3MDc1BkZMNzA3NgZGTDcwNzcGRkw3MDc4BkZMNzA3OQZGTDcwODAGRkw3MDgxBkZMNzA4MgZGTDcwODMGRkw3MDg0BkZMNzA4NQZGTDcwODYGRkw3MDg3BkZMNzA4OAZGTDcwODkGRkw3MDkwBkZMNzA5MQZGTDcwOTIGRkw3MDkzBkZMNzA5NAZGTDcwOTUGRkw3MDk2BkZMNzA5NwZGTDcwOTgGRkw3MDk5BkZMNzEwMAZGTDcxMDEGRkw3MTAyBkZMNzEwMwZGTDcxMDQGRkw3MTA1BkZMNzEwNgZGTDcxMDcGRkw3MTA4BkZMNzEwOQZGTDcxMTAGRkw3MTExBkZMNzExMgZGTDcxMTMGRkw3MTE0BkZMNzExNQZGTDcxMTYGRkw3MTE3BkZMNzExOAZGTDcxMTkGRkw3MTIwBkZMNzEyMQZGTDcxMjIGRkw3MTIzBkZMNzEyNAZGTDcxMjUGRkw3MTI2BkZMNzEyNwZGTDcxMjgGRkw3MTI5BkZMNzEzMAZGTDcxMzEGRkw3MTMyBkZMNzEzMwZGTDcxMzQGRkw3MTM1BkZMNzEzNgZGTDcxMzcGRkw3MTM4BkZMNzEzOQZGTDcxNDAGRkw3MTQxBkZMNzE0MgZGTDcxNDMGRkw3MTQ0BkZMNzE0NQZGTDcxNDYGRkw3MTQ3BkZMNzE0OAZGTDcxNDkGRkw3MTUwBkZMNzE1MQZGTDcxNTIGRkw3MTUzBkZMNzE1NAZGTDcxNTUGRkw3MTU2BkZMNzE1NwZGTDcxNTgGRkw3MTU5BkZMNzE2MAZGTDcxNjEGRkw3MTYyBkZMNzE2MwZGTDcxNjQGRkw3MTY1BkZMNzE2NgZGTDcxNjcGRkw3MTY4BkZMNzE2OQZGTDcxNzAGRkw3MTcxBkZMNzE3MgZGTDcxNzMGRkw3MTc0BkZMNzE3NQZGTDcxNzYGRkw3MTc3BkZMNzE3OAZGTDcxNzkGRkw3MTgwBkZMNzE4MQZGTDcxODIGRkw3MTgzBkZMNzE4NAZGTDcxODUGRkw3MTg2BkZMNzE4N7gAACu6AAAABAAHKw==");
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
format_gif_Tools.LN2 = Math.log(2);
format_mp3_MPEG.V1 = 3;
format_mp3_MPEG.V2 = 2;
format_mp3_MPEG.V25 = 0;
format_mp3_MPEG.Reserved = 1;
format_mp3_MPEG.V1_Bitrates = [[format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_40,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_192,format_mp3_Bitrate.BR_224,format_mp3_Bitrate.BR_256,format_mp3_Bitrate.BR_320,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_192,format_mp3_Bitrate.BR_224,format_mp3_Bitrate.BR_256,format_mp3_Bitrate.BR_320,format_mp3_Bitrate.BR_384,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_192,format_mp3_Bitrate.BR_224,format_mp3_Bitrate.BR_256,format_mp3_Bitrate.BR_288,format_mp3_Bitrate.BR_320,format_mp3_Bitrate.BR_352,format_mp3_Bitrate.BR_384,format_mp3_Bitrate.BR_416,format_mp3_Bitrate.BR_448,format_mp3_Bitrate.BR_Bad]];
format_mp3_MPEG.V2_Bitrates = [[format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_8,format_mp3_Bitrate.BR_16,format_mp3_Bitrate.BR_24,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_40,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_144,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_8,format_mp3_Bitrate.BR_16,format_mp3_Bitrate.BR_24,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_40,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_144,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_Bad],[format_mp3_Bitrate.BR_Free,format_mp3_Bitrate.BR_32,format_mp3_Bitrate.BR_48,format_mp3_Bitrate.BR_56,format_mp3_Bitrate.BR_64,format_mp3_Bitrate.BR_80,format_mp3_Bitrate.BR_96,format_mp3_Bitrate.BR_112,format_mp3_Bitrate.BR_128,format_mp3_Bitrate.BR_144,format_mp3_Bitrate.BR_160,format_mp3_Bitrate.BR_176,format_mp3_Bitrate.BR_192,format_mp3_Bitrate.BR_224,format_mp3_Bitrate.BR_256,format_mp3_Bitrate.BR_Bad]];
format_mp3_MPEG.SamplingRates = [[format_mp3_SamplingRate.SR_11025,format_mp3_SamplingRate.SR_12000,format_mp3_SamplingRate.SR_8000,format_mp3_SamplingRate.SR_Bad],[format_mp3_SamplingRate.SR_Bad,format_mp3_SamplingRate.SR_Bad,format_mp3_SamplingRate.SR_Bad,format_mp3_SamplingRate.SR_Bad],[format_mp3_SamplingRate.SR_22050,format_mp3_SamplingRate.SR_24000,format_mp3_SamplingRate.SR_12000,format_mp3_SamplingRate.SR_Bad],[format_mp3_SamplingRate.SR_44100,format_mp3_SamplingRate.SR_48000,format_mp3_SamplingRate.SR_32000,format_mp3_SamplingRate.SR_Bad]];
format_mp3_CLayer.LReserved = 0;
format_mp3_CLayer.LLayer3 = 1;
format_mp3_CLayer.LLayer2 = 2;
format_mp3_CLayer.LLayer1 = 3;
format_mp3_CChannelMode.CStereo = 0;
format_mp3_CChannelMode.CJointStereo = 1;
format_mp3_CChannelMode.CDualChannel = 2;
format_mp3_CChannelMode.CMono = 3;
format_mp3_CEmphasis.ENone = 0;
format_mp3_CEmphasis.EMs50_15 = 1;
format_mp3_CEmphasis.EReserved = 2;
format_mp3_CEmphasis.ECCIT_J17 = 3;
format_neko_Builtins.CINVALID = -1000;
format_tools__$InflateImpl_Window.SIZE = 32768;
format_tools__$InflateImpl_Window.BUFSIZE = 65536;
format_tools_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
format_tools_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
format_tools_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
format_tools_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
format_tools_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
h2d_Flow.tmpBounds = new h2d_col_Bounds();
h2d_RenderContext.BUFFERING = false;
h3d_Buffer.GUID = 0;
h3d_BufferOffset.UID = 0;
h3d_Matrix.tmp = new h3d_Matrix();
h3d_Matrix.lumR = 0.212671;
h3d_Matrix.lumG = 0.71516;
h3d_Matrix.lumB = 0.072169;
h3d_Matrix.SQ13 = 0.57735026918962576450914878050196;
h3d_anim_Animation.EPSILON = 0.000001;
h3d_impl_GlDriver.TFILTERS = [[[9728,9728],[9729,9729]],[[9728,9984],[9729,9985]],[[9728,9986],[9729,9987]]];
h3d_impl_GlDriver.TWRAP = [33071,10497];
h3d_impl_GlDriver.FACES = [0,1028,1029,1032];
h3d_impl_GlDriver.BLEND = [1,0,770,768,772,774,771,769,773,775,32769,32771,32770,32772,776];
h3d_impl_GlDriver.COMPARE = [519,512,514,517,516,518,513,515];
h3d_impl_GlDriver.OP = [32774,32778,32779];
h3d_impl_MemoryManager.MAX_MEMORY = 262144000;
h3d_impl_MemoryManager.MAX_BUFFERS = 4096;
h3d_impl_MemoryManager.SIZE = 65533;
h3d_impl_MemoryManager.ALL_FLAGS = h3d_BufferFlag.__empty_constructs__;
h3d_mat_Defaults.defaultKillAlphaThreshold = 0.5;
h3d_mat_Defaults.loadingTextureColor = -65281;
h3d_mat_Pass.culling_bits = 2;
h3d_mat_Pass.culling_offset = 0;
h3d_mat_Pass.culling_mask = 3;
h3d_mat_Pass.depthWrite_bits = 1;
h3d_mat_Pass.depthWrite_offset = 2;
h3d_mat_Pass.depthWrite_mask = 4;
h3d_mat_Pass.depthTest_bits = 3;
h3d_mat_Pass.depthTest_offset = 3;
h3d_mat_Pass.depthTest_mask = 56;
h3d_mat_Pass.blendSrc_bits = 4;
h3d_mat_Pass.blendSrc_offset = 6;
h3d_mat_Pass.blendSrc_mask = 960;
h3d_mat_Pass.blendDst_bits = 4;
h3d_mat_Pass.blendDst_offset = 10;
h3d_mat_Pass.blendDst_mask = 15360;
h3d_mat_Pass.blendAlphaSrc_bits = 4;
h3d_mat_Pass.blendAlphaSrc_offset = 14;
h3d_mat_Pass.blendAlphaSrc_mask = 245760;
h3d_mat_Pass.blendAlphaDst_bits = 4;
h3d_mat_Pass.blendAlphaDst_offset = 18;
h3d_mat_Pass.blendAlphaDst_mask = 3932160;
h3d_mat_Pass.blendOp_bits = 2;
h3d_mat_Pass.blendOp_offset = 22;
h3d_mat_Pass.blendOp_mask = 12582912;
h3d_mat_Pass.blendAlphaOp_bits = 2;
h3d_mat_Pass.blendAlphaOp_offset = 24;
h3d_mat_Pass.blendAlphaOp_mask = 50331648;
h3d_mat_Pass.colorMask_bits = 4;
h3d_mat_Pass.colorMask_offset = 26;
h3d_mat_Pass.colorMask_mask = 1006632960;
h3d_mat_Texture.UID = 0;
h3d_mat_Texture.nativeFormat = hxd_PixelFormat.RGBA;
h3d_mat_Texture.nativeFlip = false;
h3d_mat_Texture.COLOR_CACHE = new haxe_ds_IntMap();
h3d_mat_Texture.noiseTextures = new haxe_ds_IntMap();
h3d_pass_Blur.__meta__ = { obj : { ignore : ["shader"]}, fields : { quality : { range : [1,4,1], inspect : null}, sigma : { range : [0,2], inspect : null}, passes : { range : [0,5,1], inspect : null}}};
h3d_pass__$Border_BorderShader.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:5:0y4:namey8:positiony4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y6:parentoR6r10R8y6:outputR10jR11:12:1ar9oR6r10R8y5:colorR10jR11:5:2i4r11R13r13y2:idi-239ghR16i-237gR16i-238gy1:poy4:filey70:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fpass%2FBorder.hxy3:maxi295y3:mini280gy1:tr12goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:40:0R17oR18R19R20i302R21i298gR22jR11:13:1ahgaoR3jR4:1:1oR6jR7:1:0R8R9R10jR11:5:2i2r11R13oR6r30R8y5:inputR10jR11:12:1ar29hR16i-235gR16i-236gR17oR18R19R20i317R21i303gR22r31goR3jR4:0:1jy10:hxsl.Const:3:1zR17oR18R19R20i320R21i319gR22jR11:3:0goR3jR4:0:1jR25:3:1i1R17oR18R19R20i323R21i322gR22r41ghR17oR18R19R20i324R21i298gR22jR11:5:2i4r11gR17oR18R19R20i324R21i280gR22r12ghR17oR18R19R20i330R21i274gR22jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr53ghR16i-240gR29r53goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1r15R17oR18R19R20i374R21i362gR22r16goR3jR4:1:1oR6jR7:2:0R8R15R10jR11:5:2i4r11R16i-234gR17oR18R19R20i382R21i377gR22r72gR17oR18R19R20i382R21i362gR22r16ghR17oR18R19R20i388R21i356gR22r53gR6jR26:1:0R27oR6r56R8y8:fragmentR10jR11:13:1aoR1ahR29r53ghR16i-241gR29r53ghR8y29:h3d.pass._Border.BorderShadery4:varsar55r80r13r32r70hg";
h3d_pass_Default.__meta__ = { fields : { cameraView : { global : ["camera.view"]}, cameraNear : { global : ["camera.zNear"]}, cameraFar : { global : ["camera.zFar"]}, cameraProj : { global : ["camera.proj"]}, cameraPos : { global : ["camera.position"]}, cameraProjDiag : { global : ["camera.projDiag"]}, cameraViewProj : { global : ["camera.viewProj"]}, cameraInverseViewProj : { global : ["camera.inverseViewProj"]}, globalTime : { global : ["global.time"]}, pixelSize : { global : ["global.pixelSize"]}, globalModelView : { global : ["global.modelView"]}, globalModelViewInverse : { global : ["global.modelViewInverse"]}}};
h3d_pass_ShadowMap.__meta__ = { fields : { border : { ignore : null}}};
h3d_prim_BigPrimitive.TOTAL = 0;
h3d_scene_Object.ROT2RAD = -0.017453292519943295769236907684886;
h3d_scene__$Object_ObjectFlags_$Impl_$.FPosChanged = 1;
h3d_scene__$Object_ObjectFlags_$Impl_$.FVisible = 2;
h3d_scene__$Object_ObjectFlags_$Impl_$.FCulled = 4;
h3d_scene__$Object_ObjectFlags_$Impl_$.FFollowPositionOnly = 8;
h3d_scene__$Object_ObjectFlags_$Impl_$.FLightCameraCenter = 16;
h3d_scene__$Object_ObjectFlags_$Impl_$.FAllocated = 32;
h3d_scene__$Object_ObjectFlags_$Impl_$.FAlwaysSync = 64;
h3d_scene__$Object_ObjectFlags_$Impl_$.FInheritCulled = 128;
h3d_shader_AmbientLight.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey10:lightColory4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-219gy1:poy4:filey78:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FAmbientLight.hxy3:maxi349y3:mini339gy1:tr12goR3jR4:10:3oR3jR4:1:1oR6jR7:2:0R8y8:additiveR10jR11:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR13i-220gR14oR15R16R17i360R18i352gR19r19goR3jR4:1:1oR6jR7:0:0R8y12:ambientLightR10jR11:5:2i3r11y6:parentoR6r26R8y6:globalR10jR11:12:1ar25oR6r26R8y16:perPixelLightingR10r19R24r28R21ajR22:0:1nhR13i-216ghR13i-214gR13i-215gR14oR15R16R17i382R18i363gR19r27goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:39:0R14oR15R16R17i389R18i385gR19jR11:13:1ahgaoR3jR4:0:1jy10:hxsl.Const:3:1d0R14oR15R16R17i392R18i390gR19jR11:3:0ghR14oR15R16R17i393R18i385gR19jR11:5:2i3r11gR14oR15R16R17i393R18i352gR19r27gR14oR15R16R17i393R18i339gR19r12ghR14oR15R16R17i399R18i333gR19jR11:0:0gR6jy17:hxsl.FunctionKind:2:0y3:refoR6jR7:6:0R8y8:__init__R10jR11:13:1aoR1ahy3:retr58ghR13i-221gR32r58goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1oR6r10R8y15:lightPixelColorR10jR11:5:2i3r11R13i-218gR14oR15R16R17i454R18i439gR19r73goR3jR4:10:3oR3jR4:1:1r17R14oR15R16R17i465R18i457gR19r19goR3jR4:1:1r25R14oR15R16R17i487R18i468gR19r27goR3jR4:8:2oR3jR4:2:1r38R14oR15R16R17i494R18i490gR19r42gaoR3jR4:0:1jR28:3:1d0R14oR15R16R17i497R18i495gR19r48ghR14oR15R16R17i498R18i490gR19jR11:5:2i3r11gR14oR15R16R17i498R18i457gR19r27gR14oR15R16R17i498R18i439gR19r73ghR14oR15R16R17i504R18i433gR19r58gR6r59R30oR6r61R8y16:__init__fragmentR10jR11:13:1aoR1ahR32r58ghR13i-222gR32r58goR1aoR6r10R8R9R10jR11:5:2i3r11R13i-223ghR2oR3jR4:4:1aoR3jR4:12:1oR3jR4:10:3oR3jR4:1:1r17R14oR15R16R17i578R18i570gR19r19goR3jR4:1:1r108R14oR15R16R17i591R18i581gR19r109goR3jR4:3:1oR3jR4:5:3jR5:0:0oR3jR4:1:1r25R14oR15R16R17i614R18i595gR19r27goR3jR4:5:3jR5:1:0oR3jR4:8:2oR3jR4:2:1jR27:22:0R14oR15R16R17i642R18i617gR19jR11:13:1aoR1aoR8y1:_R10r27goR8y1:bR10r48ghR32jR11:5:2i3r11ghgaoR3jR4:3:1oR3jR4:5:3jR5:3:0oR3jR4:0:1jR28:3:1i1R14oR15R16R17i619R18i618gR19r48goR3jR4:1:1r25R14oR15R16R17i641R18i622gR19r27gR14oR15R16R17i641R18i618gR19r27gR14oR15R16R17i642R18i617gR19r27goR3jR4:0:1jR28:3:1d0R14oR15R16R17i649R18i647gR19r48ghR14oR15R16R17i650R18i617gR19r138goR3jR4:1:1r108R14oR15R16R17i663R18i653gR19r109gR14oR15R16R17i663R18i617gR19jR11:5:2i3r11gR14oR15R16R17i663R18i595gR19jR11:5:2i3r11gR14oR15R16R17i664R18i594gR19r169gR14oR15R16R17i664R18i570gR19r109gR14oR15R16R17i664R18i563gR19r58ghR14oR15R16R17i670R18i557gR19r58gR6jR29:3:0R30oR6r61R8y9:calcLightR10jR11:13:1aoR1aoR8R9R10r109ghR32jR11:5:2i3r11ghR13i-224gR32r184goR1ahR2oR3jR4:4:1aoR3jR4:10:3oR3jR4:6:2jy15:haxe.macro.Unop:2:0oR3jR4:1:1r30R14oR15R16R17i728R18i705gR19r19gR14oR15R16R17i728R18i704gR19r19goR3jR4:5:3jR5:20:1r127oR3jR4:9:2oR3jR4:1:1oR6r10R8y10:pixelColorR10jR11:5:2i4r11R13i-217gR14oR15R16R17i741R18i731gR19r203gajy14:hxsl.Component:0:0jR40:1:0jR40:2:0hR14oR15R16R17i745R18i731gR19jR11:5:2i3r11goR3jR4:8:2oR3jR4:1:1r179R14oR15R16R17i758R18i749gR19r185gaoR3jR4:1:1r9R14oR15R16R17i769R18i759gR19r12ghR14oR15R16R17i770R18i749gR19r184gR14oR15R16R17i770R18i731gR19r212gnR14oR15R16R17i770R18i700gR19r58ghR14oR15R16R17i776R18i694gR19r58gR6jR29:0:0R30oR6r61R8y6:vertexR10jR11:13:1aoR1ahR32r58ghR13i-225gR32r58goR1ahR2oR3jR4:4:1aoR3jR4:10:3oR3jR4:1:1r30R14oR15R16R17i835R18i812gR19r19goR3jR4:5:3jR5:20:1r127oR3jR4:9:2oR3jR4:1:1r202R14oR15R16R17i848R18i838gR19r203gar207r208r209hR14oR15R16R17i852R18i838gR19jR11:5:2i3r11goR3jR4:8:2oR3jR4:1:1r179R14oR15R16R17i865R18i856gR19r185gaoR3jR4:1:1r72R14oR15R16R17i881R18i866gR19r73ghR14oR15R16R17i882R18i856gR19r184gR14oR15R16R17i882R18i838gR19r252gnR14oR15R16R17i882R18i808gR19r58ghR14oR15R16R17i888R18i802gR19r58gR6jR29:1:0R30oR6r61R8y8:fragmentR10jR11:13:1aoR1ahR32r58ghR13i-226gR32r58ghR8y23:h3d.shader.AmbientLighty4:varsar230r9r60r270r17r101r179r28r202r72hg";
h3d_shader_Base2d.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey14:spritePositiony4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y2:idi-11gy1:poy4:filey72:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FBase2d.hxy3:maxi919y3:mini905gy1:tr12goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:40:0R14oR15R16R17i926R18i922gR19jR11:13:1ahgaoR3jR4:1:1oR6jR7:1:0R8y8:positionR10jR11:5:2i2r11y6:parentoR6r25R8y5:inputR10jR11:12:1ar24oR6r25R8y2:uvR10jR11:5:2i2r11R22r27R13i-3goR6r25R8y5:colorR10jR11:5:2i4r11R22r27R13i-4ghR13i-1gR13i-2gR14oR15R16R17i941R18i927gR19r26goR3jR4:1:1oR6jR7:2:0R8y6:zValueR10jR11:3:0R13i-9gR14oR15R16R17i949R18i943gR19r39goR3jR4:0:1jy10:hxsl.Const:3:1i1R14oR15R16R17i952R18i951gR19r39ghR14oR15R16R17i953R18i922gR19jR11:5:2i4r11gR14oR15R16R17i953R18i905gR19r12goR3jR4:10:3oR3jR4:1:1oR6r38R8y10:isRelativeR10jR11:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR13i-16gR14oR15R16R17i973R18i963gR19r54goR3jR4:4:1aoR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1oR6r10R8y16:absolutePositionR10jR11:5:2i4r11R13i-12gR14oR15R16R17i999R18i983gR19r65gajy14:hxsl.Component:0:0hR14oR15R16R17i1001R18i983gR19r39goR3jR4:8:2oR3jR4:2:1jR20:29:0R14oR15R16R17i1029R18i1004gR19jR11:13:1aoR1aoR8y1:_R10jR11:5:2i3r11goR8y1:bR10jR11:5:2i3r11ghy3:retr39ghgaoR3jR4:8:2oR3jR4:2:1jR20:39:0R14oR15R16R17i1008R18i1004gR19jR11:13:1ahgaoR3jR4:9:2oR3jR4:1:1r9R14oR15R16R17i1023R18i1009gR19r12gar69jR32:1:0hR14oR15R16R17i1026R18i1009gR19jR11:5:2i2r11goR3jR4:0:1jR27:3:1i1R14oR15R16R17i1028R18i1027gR19r39ghR14oR15R16R17i1029R18i1004gR19r81goR3jR4:1:1oR6r38R8y15:absoluteMatrixAR10jR11:5:2i3r11R13i-18gR14oR15R16R17i1049R18i1034gR19r111ghR14oR15R16R17i1050R18i1004gR19r39gR14oR15R16R17i1050R18i983gR19r39goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1073R18i1057gR19r65gar99hR14oR15R16R17i1075R18i1057gR19r39goR3jR4:8:2oR3jR4:2:1r74R14oR15R16R17i1103R18i1078gR19jR11:13:1aoR1aoR8R33R10jR11:5:2i3r11gr82hR35r39ghgaoR3jR4:8:2oR3jR4:2:1r88R14oR15R16R17i1082R18i1078gR19r92gaoR3jR4:9:2oR3jR4:1:1r9R14oR15R16R17i1097R18i1083gR19r12gar69r99hR14oR15R16R17i1100R18i1083gR19jR11:5:2i2r11goR3jR4:0:1jR27:3:1i1R14oR15R16R17i1102R18i1101gR19r39ghR14oR15R16R17i1103R18i1078gR19r134goR3jR4:1:1oR6r38R8y15:absoluteMatrixBR10jR11:5:2i3r11R13i-19gR14oR15R16R17i1123R18i1108gR19r158ghR14oR15R16R17i1124R18i1078gR19r39gR14oR15R16R17i1124R18i1057gR19r39goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1147R18i1131gR19r65gajR32:2:0jR32:3:0hR14oR15R16R17i1150R18i1131gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1r9R14oR15R16R17i1167R18i1153gR19r12gar171r172hR14oR15R16R17i1170R18i1153gR19jR11:5:2i2r11gR14oR15R16R17i1170R18i1131gR19r175ghR14oR15R16R17i1177R18i976gR19jR11:0:0goR3jR4:5:3r7oR3jR4:1:1r64R14oR15R16R17i1204R18i1188gR19r65goR3jR4:1:1r9R14oR15R16R17i1221R18i1207gR19r12gR14oR15R16R17i1221R18i1188gR19r65gR14oR15R16R17i1221R18i959gR19r188goR3jR4:5:3r7oR3jR4:1:1oR6jR7:3:0R8y12:calculatedUVR10jR11:5:2i2r11R13i-15gR14oR15R16R17i1239R18i1227gR19r204goR3jR4:10:3oR3jR4:1:1oR6r38R8y8:hasUVPosR10r54R29ajR30:0:1nhR13i-22gR14oR15R16R17i1250R18i1242gR19r54goR3jR4:5:3jR5:0:0oR3jR4:5:3jR5:1:0oR3jR4:1:1r29R14oR15R16R17i1261R18i1253gR19r30goR3jR4:9:2oR3jR4:1:1oR6r38R8y5:uvPosR10jR11:5:2i4r11R13i-23gR14oR15R16R17i1269R18i1264gR19r224gar171r172hR14oR15R16R17i1272R18i1264gR19jR11:5:2i2r11gR14oR15R16R17i1272R18i1253gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1r223R14oR15R16R17i1280R18i1275gR19r224gar69r99hR14oR15R16R17i1283R18i1275gR19jR11:5:2i2r11gR14oR15R16R17i1283R18i1253gR19jR11:5:2i2r11goR3jR4:1:1r29R14oR15R16R17i1294R18i1286gR19r30gR14oR15R16R17i1294R18i1242gR19r244gR14oR15R16R17i1294R18i1227gR19r204goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y10:pixelColorR10jR11:5:2i4r11R13i-13gR14oR15R16R17i1310R18i1300gR19r255goR3jR4:10:3oR3jR4:1:1r53R14oR15R16R17i1323R18i1313gR19r54goR3jR4:5:3r217oR3jR4:1:1oR6r38R8R25R10jR11:5:2i4r11R13i-17gR14oR15R16R17i1331R18i1326gR19r265goR3jR4:1:1r31R14oR15R16R17i1345R18i1334gR19r32gR14oR15R16R17i1345R18i1326gR19jR11:5:2i4r11goR3jR4:1:1r31R14oR15R16R17i1359R18i1348gR19r32gR14oR15R16R17i1359R18i1313gR19r273gR14oR15R16R17i1359R18i1300gR19r255goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y12:textureColorR10jR11:5:2i4r11R13i-14gR14oR15R16R17i1377R18i1365gR19r284goR3jR4:8:2oR3jR4:2:1jR20:33:0R14oR15R16R17i1387R18i1380gR19jR11:13:1aoR1aoR8R33R10jR11:10:0goR8R34R10jR11:5:2i2r11ghR35jR11:5:2i4r11ghgaoR3jR4:1:1oR6r38R8y7:textureR10r296R13i-10gR14oR15R16R17i1387R18i1380gR19r296goR3jR4:1:1r202R14oR15R16R17i1404R18i1392gR19r204ghR14oR15R16R17i1405R18i1380gR19r299gR14oR15R16R17i1405R18i1365gR19r284goR3jR4:5:3jR5:20:1r217oR3jR4:1:1r254R14oR15R16R17i1421R18i1411gR19r255goR3jR4:1:1r283R14oR15R16R17i1437R18i1425gR19r284gR14oR15R16R17i1437R18i1411gR19r255ghR14oR15R16R17i1443R18i899gR19r188gR6jy17:hxsl.FunctionKind:2:0y3:refoR6jR7:6:0R8y8:__init__R10jR11:13:1aoR1ahR35r188ghR13i-27gR35r188goR1ahR2oR3jR4:4:1aoR3jR4:7:2oR6r10R8y3:tmpR10jR11:5:2i3r11R13i-30goR3jR4:8:2oR3jR4:2:1r88R14oR15R16R17i1546R18i1542gR19r92gaoR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1563R18i1547gR19r65gar69r99hR14oR15R16R17i1566R18i1547gR19jR11:5:2i2r11goR3jR4:0:1jR27:3:1i1R14oR15R16R17i1569R18i1568gR19r39ghR14oR15R16R17i1570R18i1542gR19r338gR14oR15R16R17i1571R18i1532gR19r188goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1592R18i1576gR19r65gar69hR14oR15R16R17i1594R18i1576gR19r39goR3jR4:8:2oR3jR4:2:1r74R14oR15R16R17i1600R18i1597gR19jR11:13:1aoR1aoR8R33R10r338gr82hR35r39ghgaoR3jR4:1:1r337R14oR15R16R17i1600R18i1597gR19r338goR3jR4:1:1oR6r38R8y13:filterMatrixAR10jR11:5:2i3r11R13i-20gR14oR15R16R17i1618R18i1605gR19r383ghR14oR15R16R17i1619R18i1597gR19r39gR14oR15R16R17i1619R18i1576gR19r39goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1641R18i1625gR19r65gar99hR14oR15R16R17i1643R18i1625gR19r39goR3jR4:8:2oR3jR4:2:1r74R14oR15R16R17i1649R18i1646gR19jR11:13:1aoR1aoR8R33R10r338gr82hR35r39ghgaoR3jR4:1:1r337R14oR15R16R17i1649R18i1646gR19r338goR3jR4:1:1oR6r38R8y13:filterMatrixBR10jR11:5:2i3r11R13i-21gR14oR15R16R17i1667R18i1654gR19r413ghR14oR15R16R17i1668R18i1646gR19r39gR14oR15R16R17i1668R18i1625gR19r39goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1719R18i1703gR19r65gar69r99hR14oR15R16R17i1722R18i1703gR19jR11:5:2i2r11goR3jR4:5:3r217oR3jR4:3:1oR3jR4:5:3r215oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1742R18i1726gR19r65gar69r99hR14oR15R16R17i1745R18i1726gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1oR6r38R8y8:viewportR10jR11:5:2i4r11R13i-26gR14oR15R16R17i1756R18i1748gR19r443gar69r99hR14oR15R16R17i1759R18i1748gR19jR11:5:2i2r11gR14oR15R16R17i1759R18i1726gR19jR11:5:2i2r11gR14oR15R16R17i1760R18i1725gR19r452goR3jR4:9:2oR3jR4:1:1r442R14oR15R16R17i1771R18i1763gR19r443gar171r172hR14oR15R16R17i1774R18i1763gR19jR11:5:2i2r11gR14oR15R16R17i1774R18i1725gR19jR11:5:2i2r11gR14oR15R16R17i1774R18i1703gR19r428goR3jR4:10:3oR3jR4:1:1oR6r38R8y10:pixelAlignR10r54R29ajR30:0:1nhR13i-24gR14oR15R16R17i1880R18i1870gR19r54goR3jR4:5:3jR5:20:1jR5:3:0oR3jR4:9:2oR3jR4:1:1r64R14oR15R16R17i1899R18i1883gR19r65gar69r99hR14oR15R16R17i1902R18i1883gR19jR11:5:2i2r11goR3jR4:1:1oR6r38R8y16:halfPixelInverseR10jR11:5:2i2r11R13i-25gR14oR15R16R17i1922R18i1906gR19r488gR14oR15R16R17i1922R18i1883gR19r485gnR14oR15R16R17i1922R18i1866gR19r188goR3jR4:5:3r7oR3jR4:1:1oR6jR7:5:0R8R21R10jR11:5:2i4r11R22oR6r498R8y6:outputR10jR11:12:1ar497oR6r498R8R25R10jR11:5:2i4r11R22r500R13i-7ghR13i-5gR13i-6gR14oR15R16R17i1943R18i1928gR19r499goR3jR4:1:1r64R14oR15R16R17i1962R18i1946gR19r65gR14oR15R16R17i1962R18i1928gR19r499ghR14oR15R16R17i1968R18i1467gR19r188gR6jR44:0:0R45oR6r327R8y6:vertexR10jR11:13:1aoR1ahR35r188ghR13i-28gR35r188goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1r502R14oR15R16R17i2012R18i2000gR19r503goR3jR4:1:1r254R14oR15R16R17i2025R18i2015gR19r255gR14oR15R16R17i2025R18i2000gR19r503ghR14oR15R16R17i2031R18i1994gR19r188gR6jR44:1:0R45oR6r327R8y8:fragmentR10jR11:13:1aoR1ahR35r188ghR13i-29gR35r188ghR8y17:h3d.shader.Base2dy4:varsar202r515r37r110r209r326r64r536r303r470r487r283r223r9r500r53r157r27r264oR6jR7:0:0R8y4:timeR10r39R13i-8gr382r254r412r442hg";
h3d_shader_BaseMesh.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey16:relativePositiony4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-88gy1:poy4:filey74:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FBaseMesh.hxy3:maxi1268y3:mini1252gy1:tr12goR3jR4:1:1oR6jR7:1:0R8y8:positionR10jR11:5:2i3r11y6:parentoR6r17R8y5:inputR10jR11:12:1ar16oR6r17R8y6:normalR10jR11:5:2i3r11R21r19R13i-82ghR13i-80gR13i-81gR14oR15R16R17i1285R18i1271gR19r18gR14oR15R16R17i1285R18i1252gR19r12goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y19:transformedPositionR10jR11:5:2i3r11R13i-89gR14oR15R16R17i1310R18i1291gR19r31goR3jR4:5:3jR5:1:0oR3jR4:1:1r9R14oR15R16R17i1329R18i1313gR19r12goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:50:0R14oR15R16R17i1348R18i1332gR19jR11:13:1ahgaoR3jR4:1:1oR6jR7:0:0R8y9:modelViewR10jR11:7:0R21oR6r49R8y6:globalR10jR11:12:1aoR6r49R8y4:timeR10jR11:3:0R21r51R13i-76goR6r49R8y9:pixelSizeR10jR11:5:2i2r11R21r51R13i-77gr48oR6r49R8y16:modelViewInverseR10r50R21r51y10:qualifiersajy17:hxsl.VarQualifier:3:0hR13i-79ghR13i-75gR31ar59hR13i-78gR14oR15R16R17i1348R18i1332gR19r50ghR14oR15R16R17i1357R18i1332gR19jR11:8:0gR14oR15R16R17i1357R18i1313gR19jR11:5:2i3r11gR14oR15R16R17i1357R18i1291gR19r31goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y17:projectedPositionR10jR11:5:2i4r11R13i-92gR14oR15R16R17i1380R18i1363gR19r75goR3jR4:5:3r35oR3jR4:8:2oR3jR4:2:1jR25:40:0R14oR15R16R17i1387R18i1383gR19jR11:13:1ahgaoR3jR4:1:1r30R14oR15R16R17i1407R18i1388gR19r31goR3jR4:0:1jy10:hxsl.Const:3:1i1R14oR15R16R17i1410R18i1409gR19r54ghR14oR15R16R17i1411R18i1383gR19jR11:5:2i4r11goR3jR4:1:1oR6r49R8y8:viewProjR10r50R21oR6r49R8y6:cameraR10jR11:12:1aoR6r49R8y4:viewR10r50R21r99R13i-66goR6r49R8y4:projR10r50R21r99R13i-67goR6r49R8R20R10jR11:5:2i3r11R21r99R13i-68goR6r49R8y8:projDiagR10jR11:5:2i3r11R21r99R13i-69gr98oR6r49R8y15:inverseViewProjR10r50R21r99R13i-71goR6r49R8y5:zNearR10r54R21r99R13i-72goR6r49R8y4:zFarR10r54R21r99R13i-73goR6jR7:3:0R8y3:dirR10jR11:5:2i3r11R21r99R13i-74ghR13i-65gR13i-70gR14oR15R16R17i1429R18i1414gR19r50gR14oR15R16R17i1429R18i1383gR19jR11:5:2i4r11gR14oR15R16R17i1429R18i1363gR19r75goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y17:transformedNormalR10jR11:5:2i3r11R13i-91gR14oR15R16R17i1452R18i1435gR19r124goR3jR4:8:2oR3jR4:2:1jR25:31:0R14oR15R16R17i1495R18i1455gR19jR11:13:1aoR1aoR8y1:_R10r69ghy3:retr69ghgaoR3jR4:3:1oR3jR4:5:3r35oR3jR4:1:1r21R14oR15R16R17i1468R18i1456gR19r22goR3jR4:8:2oR3jR4:2:1jR25:48:0R14oR15R16R17i1487R18i1471gR19jR11:13:1ahgaoR3jR4:1:1r48R14oR15R16R17i1487R18i1471gR19r50ghR14oR15R16R17i1494R18i1471gR19jR11:6:0gR14oR15R16R17i1494R18i1456gR19r69gR14oR15R16R17i1495R18i1455gR19r69ghR14oR15R16R17i1507R18i1455gR19r69gR14oR15R16R17i1507R18i1435gR19r124goR3jR4:5:3r7oR3jR4:1:1r110R14oR15R16R17i1523R18i1513gR19r112goR3jR4:8:2oR3jR4:2:1r129R14oR15R16R17i1565R18i1526gR19jR11:13:1aoR1aoR8R45R10jR11:5:2i3r11ghR46r69ghgaoR3jR4:3:1oR3jR4:5:3jR5:3:0oR3jR4:1:1r103R14oR15R16R17i1542R18i1527gR19r104goR3jR4:1:1r30R14oR15R16R17i1564R18i1545gR19r31gR14oR15R16R17i1564R18i1527gR19r177gR14oR15R16R17i1565R18i1526gR19r177ghR14oR15R16R17i1577R18i1526gR19r69gR14oR15R16R17i1577R18i1513gR19r112goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y10:pixelColorR10jR11:5:2i4r11R13i-93gR14oR15R16R17i1593R18i1583gR19r200goR3jR4:1:1oR6jR7:2:0R8y5:colorR10jR11:5:2i4r11R13i-98gR14oR15R16R17i1601R18i1596gR19r206gR14oR15R16R17i1601R18i1583gR19r200goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y9:specPowerR10r54R13i-96gR14oR15R16R17i1616R18i1607gR19r54goR3jR4:1:1oR6r205R8y13:specularPowerR10r54R31ajR32:7:2d0d100hR13i-99gR14oR15R16R17i1632R18i1619gR19r54gR14oR15R16R17i1632R18i1607gR19r54goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y9:specColorR10jR11:5:2i3r11R13i-97gR14oR15R16R17i1647R18i1638gR19r227goR3jR4:5:3r35oR3jR4:1:1oR6r205R8y13:specularColorR10jR11:5:2i3r11R13i-101gR14oR15R16R17i1663R18i1650gR19r233goR3jR4:1:1oR6r205R8y14:specularAmountR10r54R31ajR32:7:2d0d10hR13i-100gR14oR15R16R17i1680R18i1666gR19r54gR14oR15R16R17i1680R18i1650gR19r233gR14oR15R16R17i1680R18i1638gR19r227goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y8:screenUVR10jR11:5:2i2r11R13i-95gR14oR15R16R17i1694R18i1686gR19r249goR3jR4:5:3jR5:0:0oR3jR4:5:3r35oR3jR4:3:1oR3jR4:5:3jR5:2:0oR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i1715R18i1698gR19r75gajy14:hxsl.Component:0:0jR55:1:0hR14oR15R16R17i1718R18i1698gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i1738R18i1721gR19r75gajR55:3:0hR14oR15R16R17i1740R18i1721gR19r54gR14oR15R16R17i1740R18i1698gR19r267gR14oR15R16R17i1741R18i1697gR19r267goR3jR4:8:2oR3jR4:2:1jR25:38:0R14oR15R16R17i1748R18i1744gR19jR11:13:1ahgaoR3jR4:0:1jR34:3:1d0.5R14oR15R16R17i1752R18i1749gR19r54goR3jR4:0:1jR34:3:1d-0.5R14oR15R16R17i1758R18i1754gR19r54ghR14oR15R16R17i1759R18i1744gR19jR11:5:2i2r11gR14oR15R16R17i1759R18i1697gR19jR11:5:2i2r11goR3jR4:0:1jR34:3:1d0.5R14oR15R16R17i1765R18i1762gR19r54gR14oR15R16R17i1765R18i1697gR19r301gR14oR15R16R17i1765R18i1686gR19r249goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y5:depthR10r54R13i-94gR14oR15R16R17i1776R18i1771gR19r54goR3jR4:5:3r257oR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i1796R18i1779gR19r75gajR55:2:0hR14oR15R16R17i1798R18i1779gR19r54goR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i1818R18i1801gR19r75gar273hR14oR15R16R17i1820R18i1801gR19r54gR14oR15R16R17i1820R18i1779gR19r54gR14oR15R16R17i1820R18i1771gR19r54ghR14oR15R16R17i1826R18i1246gR19jR11:0:0gR6jy17:hxsl.FunctionKind:2:0y3:refoR6jR7:6:0R8y8:__init__R10jR11:13:1aoR1ahR46r337ghR13i-102gR46r337goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1r123R14oR15R16R17i1883R18i1866gR19r124goR3jR4:8:2oR3jR4:2:1r129R14oR15R16R17i1903R18i1886gR19jR11:13:1aoR1aoR8R45R10r124ghR46r69ghgaoR3jR4:1:1r123R14oR15R16R17i1903R18i1886gR19r124ghR14oR15R16R17i1915R18i1886gR19r69gR14oR15R16R17i1915R18i1866gR19r124goR3jR4:5:3r7oR3jR4:1:1r248R14oR15R16R17i2024R18i2016gR19r249goR3jR4:5:3r253oR3jR4:5:3r35oR3jR4:3:1oR3jR4:5:3r257oR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i2045R18i2028gR19r75gar263r264hR14oR15R16R17i2048R18i2028gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i2068R18i2051gR19r75gar273hR14oR15R16R17i2070R18i2051gR19r54gR14oR15R16R17i2070R18i2028gR19r385gR14oR15R16R17i2071R18i2027gR19r385goR3jR4:8:2oR3jR4:2:1r282R14oR15R16R17i2078R18i2074gR19r286gaoR3jR4:0:1jR34:3:1d0.5R14oR15R16R17i2082R18i2079gR19r54goR3jR4:0:1jR34:3:1d-0.5R14oR15R16R17i2088R18i2084gR19r54ghR14oR15R16R17i2089R18i2074gR19jR11:5:2i2r11gR14oR15R16R17i2089R18i2027gR19jR11:5:2i2r11goR3jR4:0:1jR34:3:1d0.5R14oR15R16R17i2095R18i2092gR19r54gR14oR15R16R17i2095R18i2027gR19r415gR14oR15R16R17i2095R18i2016gR19r249goR3jR4:5:3r7oR3jR4:1:1r312R14oR15R16R17i2106R18i2101gR19r54goR3jR4:5:3r257oR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i2126R18i2109gR19r75gar321hR14oR15R16R17i2128R18i2109gR19r54goR3jR4:9:2oR3jR4:1:1r74R14oR15R16R17i2148R18i2131gR19r75gar273hR14oR15R16R17i2150R18i2131gR19r54gR14oR15R16R17i2150R18i2109gR19r54gR14oR15R16R17i2150R18i2101gR19r54goR3jR4:5:3r7oR3jR4:1:1r213R14oR15R16R17i2243R18i2234gR19r54goR3jR4:1:1r217R14oR15R16R17i2259R18i2246gR19r54gR14oR15R16R17i2259R18i2234gR19r54goR3jR4:5:3r7oR3jR4:1:1r226R14oR15R16R17i2274R18i2265gR19r227goR3jR4:5:3r35oR3jR4:1:1r232R14oR15R16R17i2290R18i2277gR19r233goR3jR4:1:1r237R14oR15R16R17i2307R18i2293gR19r54gR14oR15R16R17i2307R18i2277gR19r233gR14oR15R16R17i2307R18i2265gR19r227ghR14oR15R16R17i2313R18i1860gR19r337gR6r338R58oR6r340R8y16:__init__fragmentR10jR11:13:1aoR1ahR46r337ghR13i-103gR46r337goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1oR6jR7:5:0R8R20R10jR11:5:2i4r11R21oR6r485R8y6:outputR10jR11:12:1ar484oR6r485R8R48R10jR11:5:2i4r11R21r487R13i-85goR6r485R8R56R10jR11:5:2i4r11R21r487R13i-86goR6r485R8R23R10jR11:5:2i4r11R21r487R13i-87ghR13i-83gR13i-84gR14oR15R16R17i2358R18i2343gR19r486goR3jR4:1:1r74R14oR15R16R17i2378R18i2361gR19r75gR14oR15R16R17i2378R18i2343gR19r486goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y24:pixelTransformedPositionR10jR11:5:2i3r11R13i-90gR14oR15R16R17i2408R18i2384gR19r506goR3jR4:1:1r30R14oR15R16R17i2430R18i2411gR19r31gR14oR15R16R17i2430R18i2384gR19r506ghR14oR15R16R17i2436R18i2337gR19r337gR6jR57:0:0R58oR6r340R8y6:vertexR10jR11:13:1aoR1ahR46r337ghR13i-104gR46r337goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1r489R14oR15R16R17i2480R18i2468gR19r490goR3jR4:1:1r199R14oR15R16R17i2493R18i2483gR19r200gR14oR15R16R17i2493R18i2468gR19r490goR3jR4:5:3r7oR3jR4:1:1r491R14oR15R16R17i2511R18i2499gR19r492goR3jR4:8:2oR3jR4:2:1jR25:52:0R14oR15R16R17i2518R18i2514gR19jR11:13:1aoR1aoR8y5:valueR10r54ghR46jR11:5:2i4r11ghgaoR3jR4:1:1r312R14oR15R16R17i2524R18i2519gR19r54ghR14oR15R16R17i2525R18i2514gR19r548gR14oR15R16R17i2525R18i2499gR19r492goR3jR4:5:3r7oR3jR4:1:1r493R14oR15R16R17i2544R18i2531gR19r494goR3jR4:8:2oR3jR4:2:1jR25:54:0R14oR15R16R17i2557R18i2547gR19jR11:13:1aoR1aoR8R64R10jR11:5:2i3r11ghR46jR11:5:2i4r11ghgaoR3jR4:1:1r123R14oR15R16R17i2575R18i2558gR19r124ghR14oR15R16R17i2576R18i2547gR19r572gR14oR15R16R17i2576R18i2531gR19r494ghR14oR15R16R17i2582R18i2462gR19r337gR6jR57:1:0R58oR6r340R8y8:fragmentR10jR11:13:1aoR1ahR46r337ghR13i-105gR46r337ghR8y19:h3d.shader.BaseMeshy4:varsar74r312r517r123r237r226r232r339r585r217r473r9r99r487r248r51r19r30r204r213r505r199hg";
h3d_shader_ScreenShader.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:5:0y4:namey8:positiony4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y6:parentoR6r10R8y6:outputR10jR11:12:1ar9oR6r10R8y5:colorR10jR11:5:2i4r11R13r13y2:idi-232ghR16i-230gR16i-231gy1:poy4:filey78:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FScreenShader.hxy3:maxi262y3:mini247gy1:tr12goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:40:0R17oR18R19R20i269R21i265gR22jR11:13:1ahgaoR3jR4:1:1oR6jR7:1:0R8R9R10jR11:5:2i2r11R13oR6r30R8y5:inputR10jR11:12:1ar29oR6r30R8y2:uvR10jR11:5:2i2r11R13r32R16i-229ghR16i-227gR16i-228gR17oR18R19R20i284R21i270gR22r31goR3jR4:0:1jy10:hxsl.Const:3:1zR17oR18R19R20i287R21i286gR22jR11:3:0goR3jR4:0:1jR26:3:1i1R17oR18R19R20i290R21i289gR22r43ghR17oR18R19R20i291R21i265gR22jR11:5:2i4r11gR17oR18R19R20i291R21i247gR22r12ghR17oR18R19R20i297R21i241gR22jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr55ghR16i-233gR30r55ghR8y23:h3d.shader.ScreenShadery4:varsar57r13r32hg";
h3d_shader_Blur.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:5:0y4:namey8:positiony4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y6:parentoR6r10R8y6:outputR10jR11:12:1ar9oR6r10R8y5:colorR10jR11:5:2i4r11R13r13y2:idi-247ghR16i-245gR16i-246gy1:poy4:filey78:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FScreenShader.hxy3:maxi262y3:mini247gy1:tr12goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:40:0R17oR18R19R20i269R21i265gR22jR11:13:1ahgaoR3jR4:1:1oR6jR7:1:0R8R9R10jR11:5:2i2r11R13oR6r30R8y5:inputR10jR11:12:1ar29oR6r30R8y2:uvR10jR11:5:2i2r11R13r32R16i-244ghR16i-242gR16i-243gR17oR18R19R20i284R21i270gR22r31goR3jR4:0:1jy10:hxsl.Const:3:1zR17oR18R19R20i287R21i286gR22jR11:3:0goR3jR4:0:1jR26:3:1i1R17oR18R19R20i290R21i289gR22r43ghR17oR18R19R20i291R21i265gR22jR11:5:2i4r11gR17oR18R19R20i291R21i247gR22r12ghR17oR18R19R20i297R21i241gR22jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr55ghR16i-261gR30r55goR1ahR2oR3jR4:4:1aoR3jR4:10:3oR3jR4:1:1oR6jR7:2:0R8y16:isDepthDependantR10jR11:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR16i-258gR17oR18y70:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FBlur.hxR20i638R21i622gR22r71goR3jR4:4:1aoR3jR4:7:2oR6jR7:4:0R8y4:pcurR10jR11:5:2i3r11R16i-265goR3jR4:8:2oR3jR4:1:1oR6r58R8y11:getPositionR10jR11:13:1aoR1aoR8R25R10jR11:5:2i2r11ghR30r81ghR16i-264gR17oR18R34R20i670R21i659gR22r90gaoR3jR4:1:1r34R17oR18R34R20i679R21i671gR22r35ghR17oR18R34R20i680R21i659gR22r81gR17oR18R34R20i681R21i648gR22r55goR3jR4:7:2oR6r80R8y4:ccurR10jR11:5:2i4r11R16i-266goR3jR4:8:2oR3jR4:2:1jR23:33:0R17oR18R34R20i705R21i698gR22jR11:13:1aoR1aoR8y1:_R10jR11:10:0goR8y1:bR10jR11:5:2i2r11ghR30r103ghgaoR3jR4:1:1oR6r70R8y7:textureR10r113R16i-249gR17oR18R34R20i705R21i698gR22r113goR3jR4:1:1r34R17oR18R34R20i718R21i710gR22r35ghR17oR18R34R20i719R21i698gR22r103gR17oR18R34R20i720R21i687gR22r55goR3jR4:7:2oR6r80R8R15R10jR11:5:2i4r11R16i-267goR3jR4:8:2oR3jR4:2:1r22R17oR18R34R20i742R21i738gR22r26gaoR3jR4:0:1jR26:3:1zR17oR18R34R20i744R21i743gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i747R21i746gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i750R21i749gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i753R21i752gR22r43ghR17oR18R34R20i754R21i738gR22r131gR17oR18R34R20i755R21i726gR22r55goR3jR4:7:2oR6r80R8y4:ncurR10jR11:5:2i3r11R16i-268goR3jR4:8:2oR3jR4:2:1jR23:55:0R17oR18R34R20i784R21i772gR22jR11:13:1aoR1aoR8y5:valueR10jR11:5:2i4r11ghR30r159ghgaoR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i798R21i785gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1oR6r70R8y13:normalTextureR10r113R16i-260gR17oR18R34R20i798R21i785gR22r113goR3jR4:1:1r34R17oR18R34R20i811R21i803gR22r35ghR17oR18R34R20i812R21i785gR22r103ghR17oR18R34R20i813R21i772gR22r159gR17oR18R34R20i814R21i761gR22r55goR3jR4:13:3oR6r80R8y1:iR10jR11:1:0R16i-269goR3jR4:5:3jR5:21:0oR3jR4:5:3jR5:0:0oR3jR4:6:2jy15:haxe.macro.Unop:3:0oR3jR4:1:1oR6r70R8y7:QualityR10r197R32ajR33:0:1nhR16i-251gR17oR18R34R20i838R21i831gR22r197gR17oR18R34R20i838R21i830gR22r197goR3jR4:0:1jR26:2:1i1R17oR18R34R20i845R21i841gR22r197gR17oR18R34R20i845R21i830gR22r197goR3jR4:1:1r205R17oR18R34R20i852R21i845gR22r197gR17oR18R34R20i852R21i830gR22jR11:14:2r197jy13:hxsl.SizeDecl:0:1zgoR3jR4:4:1aoR3jR4:7:2oR6r80R8R25R10jR11:5:2i2r11R16i-270goR3jR4:5:3r201oR3jR4:1:1r34R17oR18R34R20i880R21i872gR22r35goR3jR4:5:3jR5:1:0oR3jR4:1:1oR6r70R8y5:pixelR10jR11:5:2i2r11R16i-254gR17oR18R34R20i888R21i883gR22r238goR3jR4:8:2oR3jR4:2:1jR23:36:0R17oR18R34R20i896R21i891gR22jR11:13:1aoR1aoR8R42R10r197ghR30r43ghgaoR3jR4:1:1r196R17oR18R34R20i898R21i897gR22r197ghR17oR18R34R20i899R21i891gR22r43gR17oR18R34R20i899R21i883gR22r238gR17oR18R34R20i899R21i872gR22r229gR17oR18R34R20i900R21i863gR22r55goR3jR4:7:2oR6r80R8y1:cR10r103R16i-271goR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i922R21i915gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1r119R17oR18R34R20i922R21i915gR22r113goR3jR4:1:1r228R17oR18R34R20i929R21i927gR22r229ghR17oR18R34R20i930R21i915gR22r103gR17oR18R34R20i931R21i907gR22r55goR3jR4:7:2oR6r80R8R17R10r81R16i-272goR3jR4:8:2oR3jR4:1:1r84R17oR18R34R20i957R21i946gR22r90gaoR3jR4:1:1r228R17oR18R34R20i960R21i958gR22r229ghR17oR18R34R20i961R21i946gR22r81gR17oR18R34R20i962R21i938gR22r55goR3jR4:7:2oR6r80R8y1:dR10r43R16i-273goR3jR4:8:2oR3jR4:2:1jR23:29:0R17oR18R34R20i987R21i977gR22jR11:13:1aoR1aoR8R38R10jR11:5:2i3r11goR8R39R10jR11:5:2i3r11ghR30r43ghgaoR3jR4:3:1oR3jR4:5:3jR5:3:0oR3jR4:1:1r286R17oR18R34R20i979R21i978gR22r81goR3jR4:1:1r79R17oR18R34R20i986R21i982gR22r81gR17oR18R34R20i986R21i978gR22r310gR17oR18R34R20i987R21i977gR22r310goR3jR4:5:3r317oR3jR4:1:1r286R17oR18R34R20i993R21i992gR22r81goR3jR4:1:1r79R17oR18R34R20i1000R21i996gR22r81gR17oR18R34R20i1000R21i992gR22jR11:5:2i3r11ghR17oR18R34R20i1001R21i977gR22r43gR17oR18R34R20i1002R21i969gR22r55goR3jR4:7:2oR6r80R8y1:nR10r159R16i-274goR3jR4:8:2oR3jR4:2:1r162R17oR18R34R20i1029R21i1017gR22r170gaoR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i1043R21i1030gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1r183R17oR18R34R20i1043R21i1030gR22r113goR3jR4:1:1r228R17oR18R34R20i1050R21i1048gR22r229ghR17oR18R34R20i1051R21i1030gR22r103ghR17oR18R34R20i1052R21i1017gR22r159gR17oR18R34R20i1053R21i1009gR22r55goR3jR4:5:3r7oR3jR4:1:1r264R17oR18R34R20i1063R21i1062gR22r103goR3jR4:8:2oR3jR4:2:1jR23:24:0R17oR18R34R20i1069R21i1066gR22jR11:13:1aoR1aoR8y1:xR10r103goR8y1:yR10r103goR8y1:aR10r43ghR30r103ghgaoR3jR4:1:1r102R17oR18R34R20i1074R21i1070gR22r103goR3jR4:1:1r264R17oR18R34R20i1077R21i1076gR22r103goR3jR4:8:2oR3jR4:2:1r303R17oR18R34R20i1083R21i1079gR22jR11:13:1aoR1aoR8R38R10r159gr311hR30r43ghgaoR3jR4:1:1r158R17oR18R34R20i1083R21i1079gR22r159goR3jR4:1:1r343R17oR18R34R20i1089R21i1088gR22r159ghR17oR18R34R20i1090R21i1079gR22r43ghR17oR18R34R20i1091R21i1066gR22r103gR17oR18R34R20i1091R21i1062gR22r103goR3jR4:5:3r7oR3jR4:1:1r264R17oR18R34R20i1100R21i1099gR22r103goR3jR4:8:2oR3jR4:2:1r377R17oR18R34R20i1106R21i1103gR22jR11:13:1ar381hgaoR3jR4:1:1r264R17oR18R34R20i1108R21i1107gR22r103goR3jR4:1:1r102R17oR18R34R20i1114R21i1110gR22r103goR3jR4:8:2oR3jR4:2:1jR23:21:0R17oR18R34R20i1146R21i1116gR22jR11:13:1aoR1aoR8R38R10r43goR8R39R10r43ghR30r43ghgaoR3jR4:3:1oR3jR4:5:3r235oR3jR4:8:2oR3jR4:2:1jR23:22:0R17oR18R34R20i1128R21i1117gR22jR11:13:1aoR1aoR8R38R10r43gr442hR30r43ghgaoR3jR4:3:1oR3jR4:5:3r317oR3jR4:1:1r300R17oR18R34R20i1119R21i1118gR22r43goR3jR4:0:1jR26:3:1d0.001R17oR18R34R20i1127R21i1122gR22r43gR17oR18R34R20i1127R21i1118gR22r43gR17oR18R34R20i1128R21i1117gR22r43goR3jR4:0:1jR26:3:1d0R17oR18R34R20i1135R21i1133gR22r43ghR17oR18R34R20i1136R21i1117gR22r43goR3jR4:0:1jR26:3:1i100000R17oR18R34R20i1145R21i1139gR22r43gR17oR18R34R20i1145R21i1117gR22r43gR17oR18R34R20i1146R21i1116gR22r43goR3jR4:0:1jR26:3:1d1R17oR18R34R20i1153R21i1151gR22r43ghR17oR18R34R20i1154R21i1116gR22r43ghR17oR18R34R20i1155R21i1103gR22r103gR17oR18R34R20i1155R21i1099gR22r103goR3jR4:5:3jR5:20:1r201oR3jR4:1:1r130R17oR18R34R20i1168R21i1163gR22r131goR3jR4:5:3r235oR3jR4:1:1r264R17oR18R34R20i1173R21i1172gR22r103goR3jR4:16:2oR3jR4:1:1oR6r70R8y6:valuesR10jR11:14:2r43jR47:1:1r205R16i-253gR17oR18R34R20i1182R21i1176gR22r508goR3jR4:10:3oR3jR4:5:3jR5:9:0oR3jR4:1:1r196R17oR18R34R20i1184R21i1183gR22r197goR3jR4:0:1jR26:2:1zR17oR18R34R20i1188R21i1187gR22r197gR17oR18R34R20i1188R21i1183gR22r71goR3jR4:6:2r203oR3jR4:1:1r196R17oR18R34R20i1193R21i1192gR22r197gR17oR18R34R20i1193R21i1191gR22r197goR3jR4:1:1r196R17oR18R34R20i1197R21i1196gR22r197gR17oR18R34R20i1197R21i1183gR22r197gR17oR18R34R20i1198R21i1176gR22r43gR17oR18R34R20i1198R21i1172gR22r103gR17oR18R34R20i1198R21i1163gR22r131ghR17oR18R34R20i1206R21i855gR22r55gR17oR18R34R20i1206R21i820gR22r55goR3jR4:5:3r7oR3jR4:1:1r15R17oR18R34R20i1224R21i1212gR22r16goR3jR4:1:1r130R17oR18R34R20i1232R21i1227gR22r131gR17oR18R34R20i1232R21i1212gR22r16ghR17oR18R34R20i1239R21i641gR22r55goR3jR4:10:3oR3jR4:1:1oR6r70R8y7:isDepthR10r71R32ajR33:0:1nhR16i-252gR17oR18R34R20i1260R21i1253gR22r71goR3jR4:4:1aoR3jR4:7:2oR6r80R8y3:valR10r43R16i-275goR3jR4:0:1jR26:3:1d0R17oR18R34R20i1282R21i1280gR22r43gR17oR18R34R20i1283R21i1270gR22r55goR3jR4:13:3oR6r80R8R44R10r197R16i-276goR3jR4:5:3r199oR3jR4:5:3r201oR3jR4:6:2r203oR3jR4:1:1r205R17oR18R34R20i1307R21i1300gR22r197gR17oR18R34R20i1307R21i1299gR22r197goR3jR4:0:1jR26:2:1i1R17oR18R34R20i1314R21i1310gR22r197gR17oR18R34R20i1314R21i1299gR22r197goR3jR4:1:1r205R17oR18R34R20i1321R21i1314gR22r197gR17oR18R34R20i1321R21i1299gR22jR11:14:2r197jR47:0:1zgoR3jR4:5:3jR5:20:1r201oR3jR4:1:1r565R17oR18R34R20i1333R21i1330gR22r43goR3jR4:5:3r235oR3jR4:8:2oR3jR4:2:1jR23:53:0R17oR18R34R20i1343R21i1337gR22jR11:13:1aoR1aoR8R42R10jR11:5:2i4r11ghR30r43ghgaoR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i1351R21i1344gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1r119R17oR18R34R20i1351R21i1344gR22r113goR3jR4:5:3r201oR3jR4:1:1r34R17oR18R34R20i1364R21i1356gR22r35goR3jR4:5:3r235oR3jR4:1:1r237R17oR18R34R20i1372R21i1367gR22r238goR3jR4:8:2oR3jR4:2:1r243R17oR18R34R20i1380R21i1375gR22jR11:13:1ar247hgaoR3jR4:1:1r573R17oR18R34R20i1382R21i1381gR22r197ghR17oR18R34R20i1383R21i1375gR22r43gR17oR18R34R20i1383R21i1367gR22r238gR17oR18R34R20i1383R21i1356gR22jR11:5:2i2r11ghR17oR18R34R20i1384R21i1344gR22r103ghR17oR18R34R20i1385R21i1337gR22r43goR3jR4:16:2oR3jR4:1:1r506R17oR18R34R20i1394R21i1388gR22r508goR3jR4:10:3oR3jR4:5:3r513oR3jR4:1:1r573R17oR18R34R20i1396R21i1395gR22r197goR3jR4:0:1jR26:2:1zR17oR18R34R20i1400R21i1399gR22r197gR17oR18R34R20i1400R21i1395gR22r71goR3jR4:6:2r203oR3jR4:1:1r573R17oR18R34R20i1405R21i1404gR22r197gR17oR18R34R20i1405R21i1403gR22r197goR3jR4:1:1r573R17oR18R34R20i1409R21i1408gR22r197gR17oR18R34R20i1409R21i1395gR22r197gR17oR18R34R20i1410R21i1388gR22r43gR17oR18R34R20i1410R21i1337gR22r43gR17oR18R34R20i1410R21i1330gR22r43gR17oR18R34R20i1410R21i1289gR22r55goR3jR4:5:3r7oR3jR4:1:1r15R17oR18R34R20i1429R21i1417gR22r16goR3jR4:8:2oR3jR4:2:1jR23:52:0R17oR18R34R20i1436R21i1432gR22jR11:13:1aoR1aoR8R42R10r43ghR30jR11:5:2i4r11ghgaoR3jR4:8:2oR3jR4:2:1r435R17oR18R34R20i1440R21i1437gR22jR11:13:1aoR1aoR8R38R10r43gr442hR30r43ghgaoR3jR4:1:1r565R17oR18R34R20i1440R21i1437gR22r43goR3jR4:0:1jR26:3:1d0.9999999R17oR18R34R20i1454R21i1445gR22r43ghR17oR18R34R20i1455R21i1437gR22r43ghR17oR18R34R20i1456R21i1432gR22r702gR17oR18R34R20i1456R21i1417gR22r16ghR17oR18R34R20i1463R21i1263gR22r55goR3jR4:4:1aoR3jR4:7:2oR6r80R8R15R10jR11:5:2i4r11R16i-277goR3jR4:8:2oR3jR4:2:1r22R17oR18R34R20i1492R21i1488gR22r26gaoR3jR4:0:1jR26:3:1zR17oR18R34R20i1494R21i1493gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i1497R21i1496gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i1500R21i1499gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i1503R21i1502gR22r43ghR17oR18R34R20i1504R21i1488gR22r734gR17oR18R34R20i1505R21i1476gR22r55goR3jR4:13:3oR6r80R8R44R10r197R16i-278goR3jR4:5:3r199oR3jR4:5:3r201oR3jR4:6:2r203oR3jR4:1:1r205R17oR18R34R20i1529R21i1522gR22r197gR17oR18R34R20i1529R21i1521gR22r197goR3jR4:0:1jR26:2:1i1R17oR18R34R20i1536R21i1532gR22r197gR17oR18R34R20i1536R21i1521gR22r197goR3jR4:1:1r205R17oR18R34R20i1543R21i1536gR22r197gR17oR18R34R20i1543R21i1521gR22jR11:14:2r197jR47:0:1zgoR3jR4:5:3jR5:20:1r201oR3jR4:1:1r733R17oR18R34R20i1557R21i1552gR22r734goR3jR4:5:3r235oR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i1568R21i1561gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1r119R17oR18R34R20i1568R21i1561gR22r113goR3jR4:5:3r201oR3jR4:1:1r34R17oR18R34R20i1581R21i1573gR22r35goR3jR4:5:3r235oR3jR4:1:1r237R17oR18R34R20i1589R21i1584gR22r238goR3jR4:8:2oR3jR4:2:1r243R17oR18R34R20i1597R21i1592gR22jR11:13:1ar247hgaoR3jR4:1:1r761R17oR18R34R20i1599R21i1598gR22r197ghR17oR18R34R20i1600R21i1592gR22r43gR17oR18R34R20i1600R21i1584gR22r238gR17oR18R34R20i1600R21i1573gR22jR11:5:2i2r11ghR17oR18R34R20i1601R21i1561gR22r103goR3jR4:16:2oR3jR4:1:1r506R17oR18R34R20i1610R21i1604gR22r508goR3jR4:10:3oR3jR4:5:3r513oR3jR4:1:1r761R17oR18R34R20i1612R21i1611gR22r197goR3jR4:0:1jR26:2:1zR17oR18R34R20i1616R21i1615gR22r197gR17oR18R34R20i1616R21i1611gR22r71goR3jR4:6:2r203oR3jR4:1:1r761R17oR18R34R20i1621R21i1620gR22r197gR17oR18R34R20i1621R21i1619gR22r197goR3jR4:1:1r761R17oR18R34R20i1625R21i1624gR22r197gR17oR18R34R20i1625R21i1611gR22r197gR17oR18R34R20i1626R21i1604gR22r43gR17oR18R34R20i1626R21i1561gR22r103gR17oR18R34R20i1626R21i1552gR22r734gR17oR18R34R20i1626R21i1511gR22r55goR3jR4:5:3r7oR3jR4:1:1r15R17oR18R34R20i1645R21i1633gR22r16goR3jR4:1:1r733R17oR18R34R20i1653R21i1648gR22r734gR17oR18R34R20i1653R21i1633gR22r16ghR17oR18R34R20i1660R21i1469gR22r55gR17oR18R34R20i1660R21i1249gR22r55gR17oR18R34R20i1660R21i618gR22r55goR3jR4:10:3oR3jR4:1:1oR6r70R8y13:hasFixedColorR10r71R32ajR33:0:1nhR16i-255gR17oR18R34R20i1682R21i1669gR22r71goR3jR4:4:1aoR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r15R17oR18R34R20i1704R21i1692gR22r16gajy14:hxsl.Component:0:0jR59:1:0jR59:2:0hR17oR18R34R20i1708R21i1692gR22jR11:5:2i3r11goR3jR4:9:2oR3jR4:1:1oR6r70R8y10:fixedColorR10jR11:5:2i4r11R16i-257gR17oR18R34R20i1721R21i1711gR22r902gar893r894r895hR17oR18R34R20i1725R21i1711gR22jR11:5:2i3r11gR17oR18R34R20i1725R21i1692gR22r898goR3jR4:10:3oR3jR4:1:1oR6r70R8y16:smoothFixedColorR10r71R32ajR33:0:1nhR16i-256gR17oR18R34R20i1752R21i1736gR22r71goR3jR4:5:3jR5:20:1r235oR3jR4:9:2oR3jR4:1:1r15R17oR18R34R20i1773R21i1761gR22r16gajR59:3:0hR17oR18R34R20i1775R21i1761gR22r43goR3jR4:9:2oR3jR4:1:1r901R17oR18R34R20i1789R21i1779gR22r902gar925hR17oR18R34R20i1791R21i1779gR22r43gR17oR18R34R20i1791R21i1761gR22r43goR3jR4:5:3r7oR3jR4:9:2oR3jR4:1:1r15R17oR18R34R20i1821R21i1809gR22r16gar925hR17oR18R34R20i1823R21i1809gR22r43goR3jR4:5:3r235oR3jR4:9:2oR3jR4:1:1r901R17oR18R34R20i1836R21i1826gR22r902gar925hR17oR18R34R20i1838R21i1826gR22r43goR3jR4:8:2oR3jR4:2:1r243R17oR18R34R20i1846R21i1841gR22jR11:13:1aoR1aoR8R42R10r71ghR30r43ghgaoR3jR4:5:3jR5:7:0oR3jR4:9:2oR3jR4:1:1r15R17oR18R34R20i1859R21i1847gR22r16gar925hR17oR18R34R20i1861R21i1847gR22r43goR3jR4:0:1jR26:3:1zR17oR18R34R20i1865R21i1864gR22r43gR17oR18R34R20i1865R21i1847gR22r71ghR17oR18R34R20i1866R21i1841gR22r43gR17oR18R34R20i1866R21i1826gR22r43gR17oR18R34R20i1866R21i1809gR22r43gR17oR18R34R20i1866R21i1732gR22r55ghR17oR18R34R20i1873R21i1685gR22r55gnR17oR18R34R20i1873R21i1665gR22r55ghR17oR18R34R20i1878R21i612gR22r55gR6jR27:1:0R28oR6r58R8y8:fragmentR10jR11:13:1aoR1ahR30r55ghR16i-262gR30r55goR1aoR6r80R8R25R10r89R16i-263ghR2oR3jR4:4:1aoR3jR4:7:2oR6r80R8y5:depthR10r43R16i-279goR3jR4:8:2oR3jR4:2:1r603R17oR18R34R20i1949R21i1943gR22r611gaoR3jR4:8:2oR3jR4:2:1r106R17oR18R34R20i1962R21i1950gR22jR11:13:1aoR1aoR8R38R10r113gr114hR30r103ghgaoR3jR4:1:1oR6r70R8y12:depthTextureR10r113R16i-250gR17oR18R34R20i1962R21i1950gR22r113goR3jR4:1:1r1000R17oR18R34R20i1969R21i1967gR22r89ghR17oR18R34R20i1970R21i1950gR22r103ghR17oR18R34R20i1971R21i1943gR22r43gR17oR18R34R20i1972R21i1931gR22r55goR3jR4:7:2oR6r80R8y3:uv2R10jR11:5:2i2r11R16i-280goR3jR4:5:3r235oR3jR4:3:1oR3jR4:5:3r317oR3jR4:1:1r1000R17oR18R34R20i1990R21i1988gR22r89goR3jR4:0:1jR26:3:1d0.5R17oR18R34R20i1996R21i1993gR22r43gR17oR18R34R20i1996R21i1988gR22r89gR17oR18R34R20i1997R21i1987gR22r89goR3jR4:8:2oR3jR4:2:1jR23:38:0R17oR18R34R20i2004R21i2000gR22jR11:13:1ahgaoR3jR4:0:1jR26:3:1i2R17oR18R34R20i2006R21i2005gR22r43goR3jR4:0:1jR26:3:1i-2R17oR18R34R20i2010R21i2008gR22r43ghR17oR18R34R20i2011R21i2000gR22jR11:5:2i2r11gR17oR18R34R20i2011R21i1987gR22r1035gR17oR18R34R20i2012R21i1977gR22r55goR3jR4:7:2oR6r80R8y4:tempR10r103R16i-281goR3jR4:5:3r235oR3jR4:8:2oR3jR4:2:1r22R17oR18R34R20i2032R21i2028gR22r26gaoR3jR4:1:1r1034R17oR18R34R20i2036R21i2033gR22r1035goR3jR4:1:1r1004R17oR18R34R20i2043R21i2038gR22r43goR3jR4:0:1jR26:3:1i1R17oR18R34R20i2046R21i2045gR22r43ghR17oR18R34R20i2047R21i2028gR22jR11:5:2i4r11goR3jR4:1:1oR6r70R8y21:cameraInverseViewProjR10jR11:7:0R16i-248gR17oR18R34R20i2071R21i2050gR22r1096gR17oR18R34R20i2071R21i2028gR22r103gR17oR18R34R20i2072R21i2017gR22r55goR3jR4:7:2oR6r80R8y8:originWSR10jR11:5:2i3r11R16i-282goR3jR4:5:3jR5:2:0oR3jR4:9:2oR3jR4:1:1r1074R17oR18R34R20i2096R21i2092gR22r103gar893r894r895hR17oR18R34R20i2100R21i2092gR22r1105goR3jR4:9:2oR3jR4:1:1r1074R17oR18R34R20i2107R21i2103gR22r103gar925hR17oR18R34R20i2109R21i2103gR22r43gR17oR18R34R20i2109R21i2092gR22r1105gR17oR18R34R20i2110R21i2077gR22r55goR3jR4:12:1oR3jR4:1:1r1104R17oR18R34R20i2130R21i2122gR22r1105gR17oR18R34R20i2130R21i2115gR22r55ghR17oR18R34R20i2136R21i1925gR22r55gR6jR27:3:0R28r84R30r81ghR8y15:h3d.shader.Blury4:varsar57r205r237r880r901r506r993r84r119r557r183r69r13r32oR6r70R8y9:hasNormalR10r71R32ajR33:0:1nhR16i-259gr1095r1021r913hg";
h3d_shader_ColorAdd.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:20:1jR5:0:0oR3jR4:9:2oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey10:pixelColory4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y2:idi-291gy1:poy4:filey74:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FColorAdd.hxy3:maxi180y3:mini170gy1:tr14gajy14:hxsl.Component:0:0jR20:1:0jR20:2:0hR14oR15R16R17i184R18i170gR19jR11:5:2i3r13goR3jR4:1:1oR6jR7:2:0R8y5:colorR10jR11:5:2i3r13R13i-292gR14oR15R16R17i193R18i188gR19r27gR14oR15R16R17i193R18i170gR19r23ghR14oR15R16R17i199R18i164gR19jR11:0:0gR6jy17:hxsl.FunctionKind:1:0y3:refoR6jR7:6:0R8y8:fragmentR10jR11:13:1aoR1ahy3:retr34ghR13i-293gR25r34ghR8y19:h3d.shader.ColorAddy4:varsar36r25r11hg";
h3d_shader_ColorKey.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:7:2oy4:kindjy12:hxsl.VarKind:4:0y4:namey5:cdiffy4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y2:idi-297goR3jR4:5:3jy16:haxe.macro.Binop:3:0oR3jR4:1:1oR5r8R7y12:textureColorR9jR10:5:2i4r9R12i-295gy1:poy4:filey74:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FColorKey.hxy3:maxi197y3:mini185gy1:tr15goR3jR4:1:1oR5jR6:2:0R7y8:colorKeyR9jR10:5:2i4r9R12i-294gR15oR16R17R18i208R19i200gR20r21gR15oR16R17R18i208R19i185gR20r10gR15oR16R17R18i209R19i173gR20jR10:0:0goR3jR4:10:3oR3jR4:5:3jR13:9:0oR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:29:0R15oR16R17R18i223R19i218gR20jR10:13:1aoR1aoR7y1:_R9r10goR7y1:bR9jR10:5:2i4r9ghy3:retjR10:3:0ghgaoR3jR4:1:1r7R15oR16R17R18i223R19i218gR20r10goR3jR4:1:1r7R15oR16R17R18i233R19i228gR20r10ghR15oR16R17R18i234R19i218gR20r43goR3jR4:0:1jy10:hxsl.Const:3:1d1e-005R15oR16R17R18i244R19i237gR20r43gR15oR16R17R18i244R19i218gR20jR10:2:0goR3jR4:11:0R15oR16R17R18i254R19i247gR20r28gnR15oR16R17R18i254R19i214gR20r28ghR15oR16R17R18i260R19i167gR20r28gR5jy17:hxsl.FunctionKind:1:0y3:refoR5jR6:6:0R7y8:fragmentR9jR10:13:1aoR1ahR25r28ghR12i-296gR25r28ghR7y19:h3d.shader.ColorKeyy4:varsar69r19r14hg";
h3d_shader_ColorMatrix.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:7:2oy4:kindjy12:hxsl.VarKind:4:0y4:namey3:rgby4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-301goR3jR4:5:3jy16:haxe.macro.Binop:1:0oR3jR4:9:2oR3jR4:1:1oR5r8R7y10:pixelColorR9jR10:5:2i4r9R12i-298gy1:poy4:filey77:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FColorMatrix.hxy3:maxi194y3:mini184gy1:tr16gajy14:hxsl.Component:0:0jR21:1:0jR21:2:0hR15oR16R17R18i198R19i184gR20jR10:5:2i3r9goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:50:0R15oR16R17R18i207R19i201gR20jR10:13:1ahgaoR3jR4:1:1oR5jR6:2:0R7y6:matrixR9jR10:7:0R12i-299gR15oR16R17R18i207R19i201gR20r37ghR15oR16R17R18i216R19i201gR20jR10:8:0gR15oR16R17R18i216R19i184gR20r10gR15oR16R17R18i217R19i174gR20jR10:0:0goR3jR4:5:3jR13:4:0oR3jR4:9:2oR3jR4:1:1r15R15oR16R17R18i232R19i222gR20r16gajR21:3:0hR15oR16R17R18i234R19i222gR20jR10:3:0goR3jR4:9:2oR3jR4:3:1oR3jR4:5:3r12oR3jR4:1:1r15R15oR16R17R18i248R19i238gR20r16goR3jR4:1:1r35R15oR16R17R18i257R19i251gR20r37gR15oR16R17R18i257R19i238gR20jR10:5:2i4r9gR15oR16R17R18i258R19i237gR20r70gar55hR15oR16R17R18i260R19i237gR20r58gR15oR16R17R18i260R19i222gR20r58goR3jR4:5:3r49oR3jR4:9:2oR3jR4:1:1r15R15oR16R17R18i276R19i266gR20r16gar20r21r22hR15oR16R17R18i280R19i266gR20jR10:5:2i3r9goR3jR4:1:1r7R15oR16R17R18i286R19i283gR20r10gR15oR16R17R18i286R19i266gR20r86ghR15oR16R17R18i292R19i168gR20r47gR5jy17:hxsl.FunctionKind:1:0y3:refoR5jR6:6:0R7y8:fragmentR9jR10:13:1aoR1ahy3:retr47ghR12i-300gR27r47ghR7y22:h3d.shader.ColorMatrixy4:varsar95r35r15hg";
h3d_shader_DirLight.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:7:2oy4:kindjy12:hxsl.VarKind:4:0y4:namey4:diffy4:typejy9:hxsl.Type:3:0y2:idi-45goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:22:0y1:poy4:filey74:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FDirLight.hxy3:maxi501y3:mini468gy1:tjR10:13:1aoR1aoR7y1:_R9r9goR7y1:bR9r9ghy3:retr9ghgaoR3jR4:8:2oR3jR4:2:1jR12:29:0R13oR14R15R16i485R17i468gR18jR10:13:1aoR1aoR7R19R9jR10:5:2i3jy12:hxsl.VecType:1:0goR7R20R9jR10:5:2i3r31ghR21r9ghgaoR3jR4:1:1oR5r8R7y17:transformedNormalR9r32R11i-38gR13oR14R15R16i485R17i468gR18r32goR3jR4:6:2jy15:haxe.macro.Unop:3:0oR3jR4:1:1oR5jR6:2:0R7y9:directionR9jR10:5:2i3r31R11i-32gR13oR14R15R16i500R17i491gR18r46gR13oR14R15R16i500R17i490gR18r46ghR13oR14R15R16i501R17i468gR18r9goR3jR4:0:1jy10:hxsl.Const:3:1d0R13oR14R15R16i508R17i506gR18r9ghR13oR14R15R16i509R17i468gR18r9gR13oR14R15R16i510R17i457gR18jR10:0:0goR3jR4:10:3oR3jR4:6:2jR24:2:0oR3jR4:1:1oR5r45R7y14:enableSpecularR9jR10:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR11i-33gR13oR14R15R16i534R17i520gR18r67gR13oR14R15R16i534R17i519gR18r67goR3jR4:12:1oR3jR4:5:3jy16:haxe.macro.Binop:1:0oR3jR4:1:1oR5r45R7y5:colorR9jR10:5:2i3r31R11i-31gR13oR14R15R16i554R17i549gR18r79goR3jR4:1:1r7R13oR14R15R16i561R17i557gR18r9gR13oR14R15R16i561R17i549gR18r79gR13oR14R15R16i561R17i542gR18r61gnR13oR14R15R16i561R17i515gR18r61goR3jR4:7:2oR5r8R7y1:rR9r34R11i-46goR3jR4:8:2oR3jR4:2:1jR12:31:0R13oR14R15R16i612R17i575gR18jR10:13:1aoR1aoR7R19R9r34ghR21r34ghgaoR3jR4:8:2oR3jR4:2:1jR12:32:0R13oR14R15R16i582R17i575gR18jR10:13:1aoR1aoR7y1:aR9r34goR7R20R9r34ghR21r34ghgaoR3jR4:1:1r44R13oR14R15R16i592R17i583gR18r46goR3jR4:1:1r38R13oR14R15R16i611R17i594gR18r32ghR13oR14R15R16i612R17i575gR18r34ghR13oR14R15R16i624R17i575gR18r34gR13oR14R15R16i625R17i567gR18r61goR3jR4:7:2oR5r8R7y9:specValueR9r9R11i-47goR3jR4:8:2oR3jR4:2:1r12R13oR14R15R16i704R17i646gR18jR10:13:1aoR1aoR7R19R9r9gr19hR21r9ghgaoR3jR4:8:2oR3jR4:2:1r24R13oR14R15R16i647R17i646gR18jR10:13:1aoR1aoR7R19R9r34gr33hR21r9ghgaoR3jR4:1:1r92R13oR14R15R16i647R17i646gR18r34goR3jR4:8:2oR3jR4:2:1r95R13oR14R15R16i691R17i652gR18jR10:13:1aoR1aoR7R19R9jR10:5:2i3r31ghR21r34ghgaoR3jR4:3:1oR3jR4:5:3jR30:3:0oR3jR4:1:1oR5jR6:0:0R7y8:positionR9jR10:5:2i3r31y6:parentoR5r169R7y6:cameraR9jR10:12:1ar168hR11i-34gR11i-35gR13oR14R15R16i668R17i653gR18r170goR3jR4:1:1oR5r8R7y19:transformedPositionR9jR10:5:2i3r31R11i-39gR13oR14R15R16i690R17i671gR18r178gR13oR14R15R16i690R17i653gR18r161gR13oR14R15R16i691R17i652gR18r161ghR13oR14R15R16i703R17i652gR18r34ghR13oR14R15R16i704R17i646gR18r9goR3jR4:0:1jR26:3:1d0R13oR14R15R16i711R17i709gR18r9ghR13oR14R15R16i712R17i646gR18r9gR13oR14R15R16i713R17i630gR18r61goR3jR4:12:1oR3jR4:5:3r76oR3jR4:1:1r78R13oR14R15R16i730R17i725gR18r79goR3jR4:3:1oR3jR4:5:3jR30:0:0oR3jR4:1:1r7R13oR14R15R16i738R17i734gR18r9goR3jR4:5:3r76oR3jR4:1:1oR5r8R7y9:specColorR9jR10:5:2i3r31R11i-41gR13oR14R15R16i750R17i741gR18r211goR3jR4:8:2oR3jR4:2:1jR12:8:0R13oR14R15R16i756R17i753gR18jR10:13:1aoR1aoR7R33R9r9gr19hR21r9ghgaoR3jR4:1:1r129R13oR14R15R16i766R17i757gR18r9goR3jR4:1:1oR5r8R7y9:specPowerR9r9R11i-40gR13oR14R15R16i777R17i768gR18r9ghR13oR14R15R16i778R17i753gR18r9gR13oR14R15R16i778R17i741gR18r211gR13oR14R15R16i778R17i734gR18r211gR13oR14R15R16i779R17i733gR18r211gR13oR14R15R16i779R17i725gR18jR10:5:2i3r31gR13oR14R15R16i779R17i718gR18r61ghR13oR14R15R16i785R17i451gR18r61gR5jy17:hxsl.FunctionKind:3:0y3:refoR5jR6:6:0R7y12:calcLightingR9jR10:13:1aoR1ahR21jR10:5:2i3r31ghR11i-42gR21r253goR1ahR2oR3jR4:4:1aoR3jR4:5:3jR30:20:1r204oR3jR4:9:2oR3jR4:1:1oR5r8R7y10:lightColorR9jR10:5:2i3r31R11i-36gR13oR14R15R16i825R17i815gR18r264gajy14:hxsl.Component:0:0jR45:1:0jR45:2:0hR13oR14R15R16i829R17i815gR18jR10:5:2i3r31goR3jR4:8:2oR3jR4:1:1r248R13oR14R15R16i845R17i833gR18r254gahR13oR14R15R16i847R17i833gR18r253gR13oR14R15R16i847R17i815gR18r273ghR13oR14R15R16i853R17i809gR18r61gR5jR41:0:0R42oR5r249R7y6:vertexR9jR10:13:1aoR1ahR21r61ghR11i-43gR21r61goR1ahR2oR3jR4:4:1aoR3jR4:5:3jR30:20:1r204oR3jR4:9:2oR3jR4:1:1oR5r8R7y15:lightPixelColorR9jR10:5:2i3r31R11i-37gR13oR14R15R16i900R17i885gR18r300gar268r269r270hR13oR14R15R16i904R17i885gR18jR10:5:2i3r31goR3jR4:8:2oR3jR4:1:1r248R13oR14R15R16i920R17i908gR18r254gahR13oR14R15R16i922R17i908gR18r253gR13oR14R15R16i922R17i885gR18r306ghR13oR14R15R16i928R17i879gR18r61gR5jR41:1:0R42oR5r249R7y8:fragmentR9jR10:13:1aoR1ahR21r61ghR11i-44gR21r61ghR7y19:h3d.shader.DirLighty4:varsar286r66r38r263r210r319r248r171r78r177r44r229r299hg";
h3d_shader_FixedColor.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:5:0y4:namey12:pickPositiony4:typejy9:hxsl.Type:5:2i4jy12:hxsl.VecType:1:0y6:parentoR6r10R8y6:outputR10jR11:12:1aoR6r10R8y8:positionR10jR11:5:2i4r11R13r13y2:idi-286gr9oR6r10R8y7:colorIDR10jR11:5:2i4r11R13r13R16i-288ghR16i-285gR16i-287gy1:poy4:filey76:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FFixedColor.hxy3:maxi281y3:mini262gy1:tr12goR3jR4:5:3jR5:1:0oR3jR4:3:1oR3jR4:5:3jR5:0:0oR3jR4:1:1r15R18oR19R20R21i300R22i285gR23r16goR3jR4:5:3r23oR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:40:0R18oR19R20R21i307R22i303gR23jR11:13:1ahgaoR3jR4:9:2oR3jR4:1:1oR6jR7:2:0R8y8:viewportR10jR11:5:2i4r11R16i-284gR18oR19R20R21i316R22i308gR23r43gajy14:hxsl.Component:0:0jR26:1:0hR18oR19R20R21i319R22i308gR23jR11:5:2i2r11goR3jR4:0:1jy10:hxsl.Const:3:1d0R18oR19R20R21i323R22i321gR23jR11:3:0goR3jR4:0:1jR27:3:1d0R18oR19R20R21i327R22i325gR23r56ghR18oR19R20R21i328R22i303gR23jR11:5:2i4r11goR3jR4:9:2oR3jR4:1:1r15R18oR19R20R21i346R22i331gR23r16gajR26:3:0hR18oR19R20R21i348R22i331gR23r56gR18oR19R20R21i348R22i303gR23r63gR18oR19R20R21i348R22i285gR23jR11:5:2i4r11gR18oR19R20R21i349R22i284gR23r76goR3jR4:8:2oR3jR4:2:1r33R18oR19R20R21i356R22i352gR23r37gaoR3jR4:9:2oR3jR4:1:1r41R18oR19R20R21i365R22i357gR23r43gajR26:2:0r69hR18oR19R20R21i368R22i357gR23jR11:5:2i2r11goR3jR4:0:1jR27:3:1d1R18oR19R20R21i372R22i370gR23r56goR3jR4:0:1jR27:3:1d1R18oR19R20R21i376R22i374gR23r56ghR18oR19R20R21i377R22i352gR23jR11:5:2i4r11gR18oR19R20R21i377R22i284gR23jR11:5:2i4r11gR18oR19R20R21i377R22i262gR23r12ghR18oR19R20R21i383R22i256gR23jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr111ghR16i-289gR31r111goR1ahR2oR3jR4:4:1aoR3jR4:5:3r7oR3jR4:1:1r17R18oR19R20R21i427R22i413gR23r18goR3jR4:1:1oR6r42R8R17R10jR11:5:2i4r11R16i-283gR18oR19R20R21i437R22i430gR23r129gR18oR19R20R21i437R22i413gR23r18ghR18oR19R20R21i443R22i407gR23r111gR6jR28:1:0R29oR6r114R8y8:fragmentR10jR11:13:1aoR1ahR31r111ghR16i-290gR31r111ghR8y21:h3d.shader.FixedColory4:varsar113r137r128r13r41hg";
h3d_shader_LineShader.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:4:1aoR3jR4:7:2oy4:kindjy12:hxsl.VarKind:4:0y4:namey3:diry4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-127goR3jR4:5:3jy16:haxe.macro.Binop:1:0oR3jR4:1:1oR5jR6:1:0R7y6:normalR9jR10:5:2i3r11y6:parentoR5r17R7y5:inputR9jR10:12:1aoR5r17R7y8:positionR9jR10:5:2i3r11R15r19R12i-114gr16oR5r17R7y2:uvR9jR10:5:2i2r11R15r19R12i-116ghR12i-113gR12i-115gy1:poy4:filey76:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FLineShader.hxy3:maxi683y3:mini671gy1:tr18goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:48:0R19oR20R21R22i702R23i686gR24jR10:13:1ahgaoR3jR4:1:1oR5jR6:0:0R7y9:modelViewR9jR10:7:0R15oR5r38R7y6:globalR9jR10:12:1aoR5r38R7y9:pixelSizeR9jR10:5:2i2r11R15r40R12i-111gr37hR12i-110gy10:qualifiersajy17:hxsl.VarQualifier:3:0hR12i-112gR19oR20R21R22i702R23i686gR24r39ghR19oR20R21R22i709R23i686gR24jR10:6:0gR19oR20R21R22i709R23i671gR24r12gR19oR20R21R22i710R23i661gR24jR10:0:0goR3jR4:5:3jR13:4:0oR3jR4:1:1oR5r10R7y4:pdirR9jR10:5:2i4r11R12i-124gR19oR20R21R22i734R23i730gR24r61goR3jR4:5:3r14oR3jR4:8:2oR3jR4:2:1jR25:40:0R19oR20R21R22i741R23i737gR24jR10:13:1ahgaoR3jR4:5:3r14oR3jR4:1:1r9R19oR20R21R22i745R23i742gR24r12goR3jR4:8:2oR3jR4:2:1r30R19oR20R21R22i752R23i748gR24jR10:13:1ahgaoR3jR4:1:1oR5r38R7y4:viewR9r39R15oR5r38R7y6:cameraR9jR10:12:1ar85oR5r38R7y4:projR9r39R15r86R12i-108goR5r38R7y8:viewProjR9r39R15r86R12i-109ghR12i-106gR12i-107gR19oR20R21R22i764R23i753gR24r39ghR19oR20R21R22i765R23i748gR24r51gR19oR20R21R22i765R23i742gR24r12goR3jR4:0:1jy10:hxsl.Const:3:1i1R19oR20R21R22i768R23i767gR24jR10:3:0ghR19oR20R21R22i769R23i737gR24jR10:5:2i4r11goR3jR4:1:1r88R19oR20R21R22i783R23i772gR24r39gR19oR20R21R22i783R23i737gR24jR10:5:2i4r11gR19oR20R21R22i783R23i730gR24r61goR3jR4:5:3jR13:20:1r14oR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i794R23i790gR24r61gajy14:hxsl.Component:0:0jR37:1:0hR19oR20R21R22i797R23i790gR24jR10:5:2i2r11goR3jR4:5:3jR13:2:0oR3jR4:0:1jR36:3:1i1R19oR20R21R22i802R23i801gR24r101goR3jR4:8:2oR3jR4:2:1jR25:13:0R19oR20R21R22i809R23i805gR24jR10:13:1aoR1aoR7y5:valueR9r101ghy3:retr101ghgaoR3jR4:5:3jR13:0:0oR3jR4:5:3r14oR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i814R23i810gR24r61gar120hR19oR20R21R22i816R23i810gR24r101goR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i823R23i819gR24r61gar120hR19oR20R21R22i825R23i819gR24r101gR19oR20R21R22i825R23i810gR24r101goR3jR4:5:3r14oR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i832R23i828gR24r61gar121hR19oR20R21R22i834R23i828gR24r101goR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i841R23i837gR24r61gar121hR19oR20R21R22i843R23i837gR24r101gR19oR20R21R22i843R23i828gR24r101gR19oR20R21R22i843R23i810gR24r101ghR19oR20R21R22i844R23i805gR24r101gR19oR20R21R22i844R23i801gR24r101gR19oR20R21R22i844R23i790gR24r124goR3jR4:5:3jR13:20:1r143oR3jR4:1:1oR5r10R7y19:transformedPositionR9jR10:5:2i3r11R12i-120gR19oR20R21R22i870R23i851gR24r190goR3jR4:5:3r14oR3jR4:5:3r14oR3jR4:1:1r9R19oR20R21R22i877R23i874gR24r12goR3jR4:9:2oR3jR4:1:1r23R19oR20R21R22i888R23i880gR24r24gar120hR19oR20R21R22i890R23i880gR24r101gR19oR20R21R22i890R23i874gR24r12goR3jR4:1:1oR5jR6:2:0R7y11:lengthScaleR9r101R12i-122gR19oR20R21R22i904R23i893gR24r101gR19oR20R21R22i904R23i874gR24r12gR19oR20R21R22i904R23i851gR24r190goR3jR4:5:3r58oR3jR4:1:1oR5r10R7y17:transformedNormalR9jR10:5:2i3r11R12i-119gR19oR20R21R22i928R23i911gR24r219goR3jR4:8:2oR3jR4:2:1jR25:31:0R19oR20R21R22i934R23i931gR24jR10:13:1aoR1aoR7y1:_R9r12ghR39r12ghgaoR3jR4:1:1r9R19oR20R21R22i934R23i931gR24r12ghR19oR20R21R22i946R23i931gR24r12gR19oR20R21R22i946R23i911gR24r219ghR19oR20R21R22i953R23i654gR24r56ghR19oR20R21R22i958R23i648gR24r56gR5jy17:hxsl.FunctionKind:2:0y3:refoR5jR6:6:0R7y8:__init__R9jR10:13:1aoR1ahR39r56ghR12i-125gR39r56goR1ahR2oR3jR4:4:1aoR3jR4:5:3jR13:20:1r143oR3jR4:9:2oR3jR4:1:1oR5r10R7y17:projectedPositionR9jR10:5:2i4r11R12i-121gR19oR20R21R22i1005R23i988gR24r260gar120r121hR19oR20R21R22i1008R23i988gR24jR10:5:2i2r11goR3jR4:5:3r14oR3jR4:5:3r14oR3jR4:5:3r14oR3jR4:5:3r14oR3jR4:3:1oR3jR4:5:3r14oR3jR4:9:2oR3jR4:1:1r60R19oR20R21R22i1017R23i1013gR24r61gar121r120hR19oR20R21R22i1020R23i1013gR24jR10:5:2i2r11goR3jR4:8:2oR3jR4:2:1jR25:38:0R19oR20R21R22i1027R23i1023gR24jR10:13:1ahgaoR3jR4:0:1jR36:3:1i1R19oR20R21R22i1029R23i1028gR24r101goR3jR4:0:1jR36:3:1i-1R19oR20R21R22i1032R23i1030gR24r101ghR19oR20R21R22i1033R23i1023gR24jR10:5:2i2r11gR19oR20R21R22i1033R23i1013gR24jR10:5:2i2r11gR19oR20R21R22i1034R23i1012gR24r302goR3jR4:3:1oR3jR4:5:3jR13:3:0oR3jR4:9:2oR3jR4:1:1r23R19oR20R21R22i1046R23i1038gR24r24gar121hR19oR20R21R22i1048R23i1038gR24r101goR3jR4:0:1jR36:3:1d0.5R19oR20R21R22i1054R23i1051gR24r101gR19oR20R21R22i1054R23i1038gR24r101gR19oR20R21R22i1055R23i1037gR24r101gR19oR20R21R22i1055R23i1012gR24r302goR3jR4:9:2oR3jR4:1:1r259R19oR20R21R22i1075R23i1058gR24r260gajR37:2:0hR19oR20R21R22i1077R23i1058gR24r101gR19oR20R21R22i1077R23i1012gR24r302goR3jR4:1:1r42R19oR20R21R22i1096R23i1080gR24r43gR19oR20R21R22i1096R23i1012gR24jR10:5:2i2r11goR3jR4:1:1oR5r209R7y5:widthR9r101R12i-123gR19oR20R21R22i1104R23i1099gR24r101gR19oR20R21R22i1104R23i1012gR24r340gR19oR20R21R22i1104R23i988gR24r266ghR19oR20R21R22i1110R23i982gR24r56gR5jR44:0:0R45oR5r246R7y6:vertexR9jR10:13:1aoR1ahR39r56ghR12i-126gR39r56ghR7y21:h3d.shader.LineShadery4:varsar259r352r218r245r208r60r86oR5jR6:5:0R7y6:outputR9jR10:12:1aoR5r359R7R17R9jR10:5:2i4r11R15r358R12i-118ghR12i-117gr40r19r189r342hg";
h3d_shader_Shadow.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:10:3oR3jR4:6:2jy15:haxe.macro.Unop:2:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:2:0y4:namey8:perPixely4:typejy9:hxsl.Type:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhy2:idi-198gy1:poy4:filey72:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FShadow.hxy3:maxi416y3:mini408gy1:tr12gR15oR16R17R18i416R19i407gR20r12goR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oR6jR7:3:0R8y9:shadowPosR10jR11:5:2i3jy12:hxsl.VecType:1:0R12ajR13:1:0hR14i-197gR15oR16R17R18i428R19i419gR20r25goR3jR4:5:3jR21:0:0oR3jR4:5:3jR21:1:0oR3jR4:5:3r33oR3jR4:1:1oR6jR7:4:0R8y19:transformedPositionR10jR11:5:2i3r24R14i-195gR15oR16R17R18i450R19i431gR20r38goR3jR4:1:1oR6jR7:0:0R8y4:projR10jR11:8:0y6:parentoR6r43R8y6:shadowR10jR11:12:1aoR6r43R8y3:mapR10jR11:10:0R26r45R14i-189gr42oR6r43R8y5:colorR10jR11:5:2i3r24R26r45R14i-191goR6r43R8y5:powerR10jR11:3:0R26r45R14i-192goR6r43R8y4:biasR10r52R26r45R14i-193ghR14i-188gR14i-190gR15oR16R17R18i464R19i453gR20r44gR15oR16R17R18i464R19i431gR20jR11:5:2i3r24goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:39:0R15oR16R17R18i471R19i467gR20jR11:13:1ahgaoR3jR4:0:1jy10:hxsl.Const:3:1d0.5R15oR16R17R18i475R19i472gR20r52goR3jR4:0:1jR33:3:1d-0.5R15oR16R17R18i481R19i477gR20r52goR3jR4:0:1jR33:3:1i1R15oR16R17R18i484R19i483gR20r52ghR15oR16R17R18i485R19i467gR20jR11:5:2i3r24gR15oR16R17R18i485R19i431gR20jR11:5:2i3r24goR3jR4:8:2oR3jR4:2:1r62R15oR16R17R18i492R19i488gR20r66gaoR3jR4:0:1jR33:3:1d0.5R15oR16R17R18i496R19i493gR20r52goR3jR4:0:1jR33:3:1d0.5R15oR16R17R18i501R19i498gR20r52goR3jR4:0:1jR33:3:1zR15oR16R17R18i504R19i503gR20r52ghR15oR16R17R18i505R19i488gR20jR11:5:2i3r24gR15oR16R17R18i505R19i431gR20jR11:5:2i3r24gR15oR16R17R18i505R19i419gR20r25gnR15oR16R17R18i505R19i403gR20jR11:0:0ghR15oR16R17R18i511R19i397gR20r113gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr113ghR14i-199gR37r113goR1ahR2oR3jR4:4:1aoR3jR4:7:2oR6r37R8R22R10jR11:5:2i3r24R14i-201goR3jR4:10:3oR3jR4:1:1r10R15oR16R17R18i573R19i565gR20r12goR3jR4:5:3r31oR3jR4:5:3r33oR3jR4:5:3r33oR3jR4:1:1oR6r37R8y24:pixelTransformedPositionR10jR11:5:2i3r24R14i-196gR15oR16R17R18i600R19i576gR20r139goR3jR4:1:1r42R15oR16R17R18i614R19i603gR20r44gR15oR16R17R18i614R19i576gR20r59goR3jR4:8:2oR3jR4:2:1r62R15oR16R17R18i621R19i617gR20r66gaoR3jR4:0:1jR33:3:1d0.5R15oR16R17R18i625R19i622gR20r52goR3jR4:0:1jR33:3:1d-0.5R15oR16R17R18i631R19i627gR20r52goR3jR4:0:1jR33:3:1i1R15oR16R17R18i634R19i633gR20r52ghR15oR16R17R18i635R19i617gR20jR11:5:2i3r24gR15oR16R17R18i635R19i576gR20jR11:5:2i3r24goR3jR4:8:2oR3jR4:2:1r62R15oR16R17R18i642R19i638gR20r66gaoR3jR4:0:1jR33:3:1d0.5R15oR16R17R18i646R19i643gR20r52goR3jR4:0:1jR33:3:1d0.5R15oR16R17R18i651R19i648gR20r52goR3jR4:0:1jR33:3:1zR15oR16R17R18i654R19i653gR20r52ghR15oR16R17R18i655R19i638gR20jR11:5:2i3r24gR15oR16R17R18i655R19i576gR20r129goR3jR4:1:1r22R15oR16R17R18i670R19i661gR20r25gR15oR16R17R18i670R19i561gR20r129gR15oR16R17R18i671R19i545gR20r113goR3jR4:7:2oR6r37R8y5:depthR10r52R14i-202goR3jR4:8:2oR3jR4:2:1jR32:53:0R15oR16R17R18i696R19i690gR20jR11:13:1aoR1aoR8y5:valueR10jR11:5:2i4r24ghR37r52ghgaoR3jR4:8:2oR3jR4:2:1jR32:33:0R15oR16R17R18i707R19i697gR20jR11:13:1aoR1aoR8y1:_R10r48goR8y1:bR10jR11:5:2i2r24ghR37jR11:5:2i4r24ghgaoR3jR4:1:1r47R15oR16R17R18i707R19i697gR20r48goR3jR4:9:2oR3jR4:1:1r128R15oR16R17R18i721R19i712gR20r129gajy14:hxsl.Component:0:0jR43:1:0hR15oR16R17R18i724R19i712gR20jR11:5:2i2r24ghR15oR16R17R18i725R19i697gR20r224ghR15oR16R17R18i726R19i690gR20r52gR15oR16R17R18i727R19i678gR20r113goR3jR4:7:2oR6r37R8y4:zMaxR10r52R14i-203goR3jR4:8:2oR3jR4:2:1jR32:51:0R15oR16R17R18i919R19i908gR20jR11:13:1aoR1aoR8R41R10r52ghR37r52ghgaoR3jR4:9:2oR3jR4:1:1r128R15oR16R17R18i917R19i908gR20r129gajR43:2:0hR15oR16R17R18i919R19i908gR20r52ghR15oR16R17R18i930R19i908gR20r52gR15oR16R17R18i931R19i897gR20r113goR3jR4:7:2oR6r37R8y5:deltaR10r52R14i-204goR3jR4:5:3jR21:3:0oR3jR4:8:2oR3jR4:2:1jR32:21:0R15oR16R17R18i969R19i948gR20jR11:13:1aoR1aoR8R41R10r52goR8R42R10r52ghR37r52ghgaoR3jR4:3:1oR3jR4:5:3r31oR3jR4:1:1r200R15oR16R17R18i954R19i949gR20r52goR3jR4:1:1r53R15oR16R17R18i968R19i957gR20r52gR15oR16R17R18i968R19i949gR20r52gR15oR16R17R18i969R19i948gR20r52goR3jR4:1:1r247R15oR16R17R18i978R19i974gR20r52ghR15oR16R17R18i979R19i948gR20r52goR3jR4:1:1r247R15oR16R17R18i986R19i982gR20r52gR15oR16R17R18i986R19i948gR20r52gR15oR16R17R18i987R19i936gR20r113goR3jR4:7:2oR6r37R8y5:shadeR10r52R14i-205goR3jR4:8:2oR3jR4:2:1r250R15oR16R17R18i1032R19i1004gR20jR11:13:1aoR1aoR8R41R10r52ghR37r52ghgaoR3jR4:8:2oR3jR4:2:1jR32:9:0R15oR16R17R18i1007R19i1004gR20jR11:13:1aoR1aoR8R40R10r52ghR37r52ghgaoR3jR4:5:3r33oR3jR4:1:1r51R15oR16R17R18i1021R19i1009gR20r52goR3jR4:1:1r272R15oR16R17R18i1029R19i1024gR20r52gR15oR16R17R18i1029R19i1009gR20r52ghR15oR16R17R18i1032R19i1004gR20r52ghR15oR16R17R18i1043R19i1004gR20r52gR15oR16R17R18i1044R19i992gR20r113goR3jR4:5:3jR21:20:1r33oR3jR4:9:2oR3jR4:1:1oR6r37R8y10:pixelColorR10jR11:5:2i4r24R14i-194gR15oR16R17R18i1059R19i1049gR20r354gar235r236r264hR15oR16R17R18i1063R19i1049gR20jR11:5:2i3r24goR3jR4:5:3r31oR3jR4:5:3r33oR3jR4:3:1oR3jR4:5:3r274oR3jR4:0:1jR33:3:1i1R15oR16R17R18i1069R19i1068gR20r52goR3jR4:1:1r312R15oR16R17R18i1077R19i1072gR20r52gR15oR16R17R18i1077R19i1068gR20r52gR15oR16R17R18i1078R19i1067gR20r52goR3jR4:9:2oR3jR4:1:1r49R15oR16R17R18i1093R19i1081gR20r50gar235r236r264hR15oR16R17R18i1097R19i1081gR20jR11:5:2i3r24gR15oR16R17R18i1097R19i1067gR20r383goR3jR4:1:1r312R15oR16R17R18i1105R19i1100gR20r52gR15oR16R17R18i1105R19i1067gR20r383gR15oR16R17R18i1105R19i1049gR20r360ghR15oR16R17R18i1111R19i537gR20r113gR6jR34:1:0R35oR6r118R8y8:fragmentR10jR11:13:1aoR1ahR37r113ghR14i-200gR37r113ghR8y17:h3d.shader.Shadowy4:varsar117r396r45r22r36r353r138r10hg";
h3d_shader_Skin.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey19:transformedPositiony4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-134gy1:poy4:filey70:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FSkin.hxy3:maxi538y3:mini519gy1:tr12goR3jR4:5:3jR5:0:0oR3jR4:5:3r16oR3jR4:5:3jR5:1:0oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1oR6r10R8y16:relativePositionR10jR11:5:2i3r11R13i-133gR14oR15R16R17i563R18i547gR19r24goR3jR4:16:2oR3jR4:1:1oR6jR7:2:0R8y13:bonesMatrixesR10jR11:14:2jR11:8:0jy13:hxsl.SizeDecl:1:1oR6r30R8y8:MaxBonesR10jR11:1:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR13i-136gR13i-137gR14oR15R16R17i579R18i566gR19r37goR3jR4:9:2oR3jR4:1:1oR6jR7:1:0R8y7:indexesR10jR11:9:1i4y6:parentoR6r43R8y5:inputR10jR11:12:1aoR6r43R8y8:positionR10jR11:5:2i3r11R27r45R13i-129goR6r43R8y6:normalR10jR11:5:2i3r11R27r45R13i-130goR6r43R8y7:weightsR10jR11:5:2i3r11R27r45R13i-131gr42hR13i-128gR13i-132gR14oR15R16R17i593R18i580gR19r44gajy14:hxsl.Component:0:0hR14oR15R16R17i595R18i580gR19r33gR14oR15R16R17i596R18i566gR19r31gR14oR15R16R17i596R18i547gR19jR11:5:2i3r11gR14oR15R16R17i597R18i546gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i613R18i600gR19r52gar57hR14oR15R16R17i615R18i600gR19jR11:3:0gR14oR15R16R17i615R18i546gR19r64goR3jR4:5:3r19oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1r23R14oR15R16R17i640R18i624gR19r24goR3jR4:16:2oR3jR4:1:1r29R14oR15R16R17i656R18i643gR19r37goR3jR4:9:2oR3jR4:1:1r42R14oR15R16R17i670R18i657gR19r44gajR32:1:0hR14oR15R16R17i672R18i657gR19r33gR14oR15R16R17i673R18i643gR19r31gR14oR15R16R17i673R18i624gR19r64gR14oR15R16R17i674R18i623gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i690R18i677gR19r52gar92hR14oR15R16R17i692R18i677gR19r74gR14oR15R16R17i692R18i623gR19r64gR14oR15R16R17i692R18i546gR19jR11:5:2i3r11goR3jR4:5:3r19oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1r23R14oR15R16R17i717R18i701gR19r24goR3jR4:16:2oR3jR4:1:1r29R14oR15R16R17i733R18i720gR19r37goR3jR4:9:2oR3jR4:1:1r42R14oR15R16R17i747R18i734gR19r44gajR32:2:0hR14oR15R16R17i749R18i734gR19r33gR14oR15R16R17i750R18i720gR19r31gR14oR15R16R17i750R18i701gR19r64gR14oR15R16R17i751R18i700gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i767R18i754gR19r52gar128hR14oR15R16R17i769R18i754gR19r74gR14oR15R16R17i769R18i700gR19r64gR14oR15R16R17i769R18i546gR19jR11:5:2i3r11gR14oR15R16R17i769R18i519gR19r12goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y17:transformedNormalR10jR11:5:2i3r11R13i-135gR14oR15R16R17i792R18i775gR19r154goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:31:0R14oR15R16R17i804R18i795gR19jR11:13:1aoR1aoR8y5:valueR10r64ghy3:retr64ghgaoR3jR4:5:3r16oR3jR4:5:3r16oR3jR4:5:3r19oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1r49R14oR15R16R17i824R18i812gR19r50goR3jR4:8:2oR3jR4:2:1jR34:48:0R14oR15R16R17i831R18i827gR19jR11:13:1ahgaoR3jR4:16:2oR3jR4:1:1r29R14oR15R16R17i845R18i832gR19r37goR3jR4:9:2oR3jR4:1:1r42R14oR15R16R17i859R18i846gR19r44gar57hR14oR15R16R17i861R18i846gR19r33gR14oR15R16R17i862R18i832gR19r31ghR14oR15R16R17i863R18i827gR19jR11:6:0gR14oR15R16R17i863R18i812gR19r64gR14oR15R16R17i864R18i811gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i880R18i867gR19r52gar57hR14oR15R16R17i882R18i867gR19r74gR14oR15R16R17i882R18i811gR19r64goR3jR4:5:3r19oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1r49R14oR15R16R17i903R18i891gR19r50goR3jR4:8:2oR3jR4:2:1r178R14oR15R16R17i910R18i906gR19r182gaoR3jR4:16:2oR3jR4:1:1r29R14oR15R16R17i924R18i911gR19r37goR3jR4:9:2oR3jR4:1:1r42R14oR15R16R17i938R18i925gR19r44gar92hR14oR15R16R17i940R18i925gR19r33gR14oR15R16R17i941R18i911gR19r31ghR14oR15R16R17i942R18i906gR19r199gR14oR15R16R17i942R18i891gR19r64gR14oR15R16R17i943R18i890gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i959R18i946gR19r52gar92hR14oR15R16R17i961R18i946gR19r74gR14oR15R16R17i961R18i890gR19r64gR14oR15R16R17i961R18i811gR19jR11:5:2i3r11goR3jR4:5:3r19oR3jR4:3:1oR3jR4:5:3r19oR3jR4:1:1r49R14oR15R16R17i982R18i970gR19r50goR3jR4:8:2oR3jR4:2:1r178R14oR15R16R17i989R18i985gR19r182gaoR3jR4:16:2oR3jR4:1:1r29R14oR15R16R17i1003R18i990gR19r37goR3jR4:9:2oR3jR4:1:1r42R14oR15R16R17i1017R18i1004gR19r44gar128hR14oR15R16R17i1019R18i1004gR19r33gR14oR15R16R17i1020R18i990gR19r31ghR14oR15R16R17i1021R18i985gR19r199gR14oR15R16R17i1021R18i970gR19r64gR14oR15R16R17i1022R18i969gR19r64goR3jR4:9:2oR3jR4:1:1r51R14oR15R16R17i1038R18i1025gR19r52gar128hR14oR15R16R17i1040R18i1025gR19r74gR14oR15R16R17i1040R18i969gR19r64gR14oR15R16R17i1040R18i811gR19jR11:5:2i3r11ghR14oR15R16R17i1041R18i795gR19r64gR14oR15R16R17i1041R18i775gR19r154ghR14oR15R16R17i1056R18i420gR19jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahR36r303ghR13i-138gR36r303ghR8y15:h3d.shader.Skiny4:varsar305r153r29r23r45r9r32hg";
h3d_shader_SpecularTexture.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:20:1jR5:1:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey9:specColory4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-50gy1:poy4:filey81:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FSpecularTexture.hxy3:maxi218y3:mini209gy1:tr13goR3jR4:9:2oR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:33:0R14oR15R16R17i229R18i222gR19jR11:13:1aoR1aoR8y1:_R10jR11:10:0goR8y1:bR10jR11:5:2i2r12ghy3:retjR11:5:2i4r12ghgaoR3jR4:1:1oR6jR7:2:0R8y7:textureR10r26R13i-48gR14oR15R16R17i229R18i222gR19r26goR3jR4:1:1oR6r11R8y12:calculatedUVR10jR11:5:2i2r12R13i-49gR14oR15R16R17i246R18i234gR19r39ghR14oR15R16R17i247R18i222gR19r29gajy14:hxsl.Component:0:0jR26:1:0jR26:2:0hR14oR15R16R17i251R18i222gR19jR11:5:2i3r12gR14oR15R16R17i251R18i209gR19r13ghR14oR15R16R17i257R18i203gR19jR11:0:0gR6jy17:hxsl.FunctionKind:1:0y3:refoR6jR7:6:0R8y8:fragmentR10jR11:13:1aoR1ahR23r55ghR13i-51gR23r55ghR8y26:h3d.shader.SpecularTexturey4:varsar38r10r57r33hg";
h3d_shader_Texture.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey12:calculatedUVy4:typejy9:hxsl.Type:5:2i2jy12:hxsl.VecType:1:0y2:idi-59gy1:poy4:filey73:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FTexture.hxy3:maxi443y3:mini431gy1:tr12goR3jR4:1:1oR6jR7:1:0R8y2:uvR10jR11:5:2i2r11y6:parentoR6r17R8y5:inputR10jR11:12:1ar16hR13i-52gR13i-53gR14oR15R16R17i454R18i446gR19r18gR14oR15R16R17i454R18i431gR19r12ghR14oR15R16R17i460R18i425gR19jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr28ghR13i-62gR26r28goR1ahR2oR3jR4:4:1aoR3jR4:7:2oR6r10R8y1:cR10jR11:5:2i4r11R13i-64goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:33:0R14oR15R16R17i507R18i500gR19jR11:13:1aoR1aoR8y1:_R10jR11:10:0goR8y1:bR10jR11:5:2i2r11ghR26r42ghgaoR3jR4:1:1oR6jR7:2:0R8y7:textureR10r52R13i-58gR14oR15R16R17i507R18i500gR19r52goR3jR4:1:1r9R14oR15R16R17i524R18i512gR19r12ghR14oR15R16R17i525R18i500gR19r42gR14oR15R16R17i526R18i492gR19r28goR3jR4:10:3oR3jR4:5:3jR5:14:0oR3jR4:1:1oR6r59R8y9:killAlphaR10jR11:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhR13i-55gR14oR15R16R17i544R18i535gR19r74goR3jR4:5:3jR5:9:0oR3jR4:5:3jR5:3:0oR3jR4:9:2oR3jR4:1:1r41R14oR15R16R17i549R18i548gR19r42gajy14:hxsl.Component:3:0hR14oR15R16R17i551R18i548gR19jR11:3:0goR3jR4:1:1oR6r59R8y18:killAlphaThresholdR10r91R33ajR34:7:2d0d1hR13i-57gR14oR15R16R17i572R18i554gR19r91gR14oR15R16R17i572R18i548gR19r91goR3jR4:0:1jy10:hxsl.Const:3:1zR14oR15R16R17i576R18i575gR19r91gR14oR15R16R17i576R18i548gR19r74gR14oR15R16R17i576R18i535gR19r74goR3jR4:11:0R14oR15R16R17i586R18i579gR19r28gnR14oR15R16R17i586R18i531gR19r28goR3jR4:10:3oR3jR4:1:1oR6r59R8y8:additiveR10r74R33ajR34:0:1nhR13i-54gR14oR15R16R17i604R18i596gR19r74goR3jR4:5:3jR5:20:1jR5:0:0oR3jR4:1:1oR6r10R8y10:pixelColorR10jR11:5:2i4r11R13i-60gR14oR15R16R17i622R18i612gR19r125goR3jR4:1:1r41R14oR15R16R17i627R18i626gR19r42gR14oR15R16R17i627R18i612gR19r125goR3jR4:5:3jR5:20:1jR5:1:0oR3jR4:1:1r124R14oR15R16R17i653R18i643gR19r125goR3jR4:1:1r41R14oR15R16R17i658R18i657gR19r42gR14oR15R16R17i658R18i643gR19r125gR14oR15R16R17i658R18i592gR19r28goR3jR4:10:3oR3jR4:1:1oR6r59R8y13:specularAlphaR10r74R33ajR34:0:1nhR13i-56gR14oR15R16R17i681R18i668gR19r74goR3jR4:5:3jR5:20:1r134oR3jR4:1:1oR6r10R8y9:specColorR10jR11:5:2i3r11R13i-61gR14oR15R16R17i698R18i689gR19r157goR3jR4:9:2oR3jR4:1:1r41R14oR15R16R17i703R18i702gR19r42gar88r88r88hR14oR15R16R17i707R18i702gR19jR11:5:2i3r11gR14oR15R16R17i707R18i689gR19r157gnR14oR15R16R17i707R18i664gR19r28ghR14oR15R16R17i713R18i486gR19r28gR6jR23:1:0R24oR6r31R8y8:fragmentR10jR11:13:1aoR1ahR26r28ghR13i-63gR26r28ghR8y18:h3d.shader.Texturey4:varsar9r30r156r175r115r58r148r93r19r73r124hg";
h3d_shader_UVDelta.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:20:1jR5:0:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey12:calculatedUVy4:typejy9:hxsl.Type:5:2i2jy12:hxsl.VecType:1:0y2:idi-207gy1:poy4:filey73:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FUVDelta.hxy3:maxi179y3:mini167gy1:tr13goR3jR4:1:1oR6jR7:2:0R8y7:uvDeltaR10jR11:5:2i2r12R13i-206gR14oR15R16R17i190R18i183gR19r19gR14oR15R16R17i190R18i167gR19r13ghR14oR15R16R17i196R18i161gR19jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr26ghR13i-208gR24r26ghR8y18:h3d.shader.UVDeltay4:varsar10r28r17hg";
h3d_shader_VertexColorAlpha.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:10:3oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:2:0y4:namey8:additivey4:typejy9:hxsl.Type:2:0y10:qualifiersajy17:hxsl.VarQualifier:0:1nhy2:idi-212gy1:poy4:filey82:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FVertexColorAlpha.hxy3:maxi245y3:mini237gy1:tr10goR3jR4:5:3jy16:haxe.macro.Binop:20:1jR20:0:0oR3jR4:1:1oR5jR6:4:0R7y10:pixelColorR9jR10:5:2i4jy12:hxsl.VecType:1:0R13i-211gR14oR15R16R17i263R18i253gR19r22goR3jR4:1:1oR5jR6:1:0R7y5:colorR9jR10:5:2i4r21y6:parentoR5r27R7y5:inputR9jR10:12:1ar26hR13i-209gR13i-210gR14oR15R16R17i278R18i267gR19r28gR14oR15R16R17i278R18i253gR19r22goR3jR4:5:3jR20:20:1jR20:1:0oR3jR4:1:1r19R14oR15R16R17i304R18i294gR19r22goR3jR4:1:1r26R14oR15R16R17i319R18i308gR19r28gR14oR15R16R17i319R18i294gR19r22gR14oR15R16R17i319R18i233gR19jR10:0:0ghR14oR15R16R17i325R18i227gR19r49gR5jy17:hxsl.FunctionKind:1:0y3:refoR5jR6:6:0R7y8:fragmentR9jR10:13:1aoR1ahy3:retr49ghR13i-213gR29r49ghR7y27:h3d.shader.VertexColorAlphay4:varsar53r8r29r19hg";
h3d_shader_VolumeDecal.SRC = "oy4:funsaoy4:argsahy4:exproy1:ejy13:hxsl.TExprDef:4:1aoR3jR4:5:3jy16:haxe.macro.Binop:4:0oR3jR4:1:1oy4:kindjy12:hxsl.VarKind:4:0y4:namey17:transformedNormaly4:typejy9:hxsl.Type:5:2i3jy12:hxsl.VecType:1:0y2:idi-165gy1:poy4:filey77:D%3A%5CHaxeToolkit%5Chaxe%5Clib%5Cheaps%2Fgit%2Fh3d%2Fshader%2FVolumeDecal.hxy3:maxi282y3:mini265gy1:tr12goR3jR4:1:1oR6jR7:2:0R8y6:normalR10jR11:5:2i3r11R13i-178gR14oR15R16R17i291R18i285gR19r18gR14oR15R16R17i291R18i265gR19r12ghR14oR15R16R17i297R18i259gR19jR11:0:0gR6jy17:hxsl.FunctionKind:0:0y3:refoR6jR7:6:0R8y6:vertexR10jR11:13:1aoR1ahy3:retr25ghR13i-180gR24r25goR1ahR2oR3jR4:4:1aoR3jR4:7:2oR6r10R8y6:matrixR10jR11:7:0R13i-182goR3jR4:5:3jR5:1:0oR3jR4:1:1oR6jR7:0:0R8y15:inverseViewProjR10r39y6:parentoR6r44R8y6:cameraR10jR11:12:1aoR6r44R8y4:viewR10r39R27r45R13i-140goR6r44R8y4:projR10r39R27r45R13i-141goR6r44R8y8:positionR10jR11:5:2i3r11R27r45R13i-142goR6r44R8y8:projDiagR10jR11:5:2i3r11R27r45R13i-143goR6r44R8y8:viewProjR10r39R27r45R13i-144gr43oR6r44R8y5:zNearR10jR11:3:0R27r45R13i-146goR6r44R8y4:zFarR10r55R27r45R13i-147goR6jR7:3:0R8y3:dirR10jR11:5:2i3r11R27r45R13i-148ghR13i-139gR13i-145gR14oR15R16R17i364R18i342gR19r39goR3jR4:1:1oR6r44R8y16:modelViewInverseR10r39R27oR6r44R8y6:globalR10jR11:12:1aoR6r44R8y4:timeR10r55R27r65R13i-150goR6r44R8y9:pixelSizeR10jR11:5:2i2r11R27r65R13i-151goR6r44R8y9:modelViewR10r39R27r65y10:qualifiersajy17:hxsl.VarQualifier:3:0hR13i-152gr64hR13i-149gR42ar72hR13i-153gR14oR15R16R17i390R18i367gR19r39gR14oR15R16R17i390R18i342gR19r39gR14oR15R16R17i391R18i329gR19r25goR3jR4:7:2oR6r10R8y9:screenPosR10jR11:5:2i2r11R13i-183goR3jR4:5:3jR5:2:0oR3jR4:9:2oR3jR4:1:1oR6r10R8y17:projectedPositionR10jR11:5:2i4r11R13i-166gR14oR15R16R17i429R18i412gR19r89gajy14:hxsl.Component:0:0jR46:1:0hR14oR15R16R17i432R18i412gR19r83goR3jR4:9:2oR3jR4:1:1r88R14oR15R16R17i452R18i435gR19r89gajR46:3:0hR14oR15R16R17i454R18i435gR19r55gR14oR15R16R17i454R18i412gR19r83gR14oR15R16R17i455R18i396gR19r25goR3jR4:7:2oR6r10R8y3:tuvR10jR11:5:2i2r11R13i-184goR3jR4:5:3jR5:0:0oR3jR4:5:3r41oR3jR4:1:1r82R14oR15R16R17i479R18i470gR19r83goR3jR4:8:2oR3jR4:2:1jy12:hxsl.TGlobal:38:0R14oR15R16R17i486R18i482gR19jR11:13:1ahgaoR3jR4:0:1jy10:hxsl.Const:3:1d0.5R14oR15R16R17i490R18i487gR19r55goR3jR4:0:1jR49:3:1d-0.5R14oR15R16R17i496R18i492gR19r55ghR14oR15R16R17i497R18i482gR19jR11:5:2i2r11gR14oR15R16R17i497R18i470gR19jR11:5:2i2r11goR3jR4:8:2oR3jR4:2:1r120R14oR15R16R17i504R18i500gR19r124gaoR3jR4:0:1jR49:3:1d0.5R14oR15R16R17i508R18i505gR19r55goR3jR4:0:1jR49:3:1d0.5R14oR15R16R17i513R18i510gR19r55ghR14oR15R16R17i514R18i500gR19jR11:5:2i2r11gR14oR15R16R17i514R18i470gR19r111gR14oR15R16R17i515R18i460gR19r25goR3jR4:7:2oR6r10R8y3:ruvR10jR11:5:2i4r11R13i-185goR3jR4:8:2oR3jR4:2:1jR48:40:0R14oR15R16R17i534R18i530gR19jR11:13:1ahgaoR3jR4:1:1r82R14oR15R16R17i550R18i541gR19r83goR3jR4:8:2oR3jR4:2:1jR48:53:0R14oR15R16R17i563R18i557gR19jR11:13:1aoR1aoR8y5:valueR10jR11:5:2i4r11ghR24r55ghgaoR3jR4:8:2oR3jR4:2:1jR48:33:0R14oR15R16R17i572R18i564gR19jR11:13:1aoR1aoR8y1:_R10jR11:10:0goR8y1:bR10jR11:5:2i2r11ghR24jR11:5:2i4r11ghgaoR3jR4:1:1oR6r44R8y8:depthMapR10r195R13i-176gR14oR15R16R17i572R18i564gR19r195goR3jR4:1:1r110R14oR15R16R17i580R18i577gR19r111ghR14oR15R16R17i581R18i564gR19r198ghR14oR15R16R17i582R18i557gR19r55goR3jR4:0:1jR49:3:1i1R14oR15R16R17i590R18i589gR19r55ghR14oR15R16R17i596R18i530gR19r162gR14oR15R16R17i597R18i520gR19r25goR3jR4:7:2oR6r10R8y4:wposR10r198R13i-186goR3jR4:5:3r41oR3jR4:1:1r161R14oR15R16R17i616R18i613gR19r162goR3jR4:1:1r38R14oR15R16R17i625R18i619gR19r39gR14oR15R16R17i625R18i613gR19r198gR14oR15R16R17i626R18i602gR19r25goR3jR4:7:2oR6r10R8y4:pposR10r198R13i-187goR3jR4:5:3r41oR3jR4:1:1r161R14oR15R16R17i645R18i642gR19r162goR3jR4:1:1r43R14oR15R16R17i670R18i648gR19r39gR14oR15R16R17i670R18i642gR19r198gR14oR15R16R17i671R18i631gR19r25goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y24:pixelTransformedPositionR10jR11:5:2i3r11R13i-164gR14oR15R16R17i700R18i676gR19r249goR3jR4:5:3r85oR3jR4:9:2oR3jR4:1:1r234R14oR15R16R17i707R18i703gR19r198gar93r94jR46:2:0hR14oR15R16R17i711R18i703gR19jR11:5:2i3r11goR3jR4:9:2oR3jR4:1:1r234R14oR15R16R17i718R18i714gR19r198gar102hR14oR15R16R17i720R18i714gR19r55gR14oR15R16R17i720R18i703gR19r261gR14oR15R16R17i720R18i676gR19r249goR3jR4:5:3r7oR3jR4:1:1oR6r10R8y12:calculatedUVR10jR11:5:2i2r11R13i-179gR14oR15R16R17i738R18i726gR19r276goR3jR4:5:3r113oR3jR4:5:3r41oR3jR4:1:1oR6r17R8y5:scaleR10jR11:5:2i2r11R13i-177gR14oR15R16R17i746R18i741gR19r283goR3jR4:3:1oR3jR4:5:3r85oR3jR4:9:2oR3jR4:1:1r221R14oR15R16R17i754R18i750gR19r198gar93r94hR14oR15R16R17i757R18i750gR19jR11:5:2i2r11goR3jR4:9:2oR3jR4:1:1r221R14oR15R16R17i764R18i760gR19r198gar102hR14oR15R16R17i766R18i760gR19r55gR14oR15R16R17i766R18i750gR19r295gR14oR15R16R17i767R18i749gR19r295gR14oR15R16R17i767R18i741gR19jR11:5:2i2r11goR3jR4:0:1jR49:3:1d0.5R14oR15R16R17i773R18i770gR19r55gR14oR15R16R17i773R18i741gR19r309gR14oR15R16R17i773R18i726gR19r276goR3jR4:10:3oR3jR4:5:3jR5:9:0oR3jR4:8:2oR3jR4:2:1jR48:21:0R14oR15R16R17i786R18i783gR19jR11:13:1aoR1aoR8y1:aR10r55goR8R53R10r55ghR24r55ghgaoR3jR4:8:2oR3jR4:2:1r323R14oR15R16R17i790R18i787gR19jR11:13:1ar327hgaoR3jR4:9:2oR3jR4:1:1r275R14oR15R16R17i803R18i791gR19r276gar93hR14oR15R16R17i805R18i791gR19r55goR3jR4:9:2oR3jR4:1:1r275R14oR15R16R17i819R18i807gR19r276gar94hR14oR15R16R17i821R18i807gR19r55ghR14oR15R16R17i822R18i787gR19r55goR3jR4:8:2oR3jR4:2:1r323R14oR15R16R17i827R18i824gR19jR11:13:1ar327hgaoR3jR4:5:3jR5:3:0oR3jR4:0:1jR49:3:1i1R14oR15R16R17i829R18i828gR19r55goR3jR4:9:2oR3jR4:1:1r275R14oR15R16R17i844R18i832gR19r276gar93hR14oR15R16R17i846R18i832gR19r55gR14oR15R16R17i846R18i828gR19r55goR3jR4:5:3r364oR3jR4:0:1jR49:3:1i1R14oR15R16R17i849R18i848gR19r55goR3jR4:9:2oR3jR4:1:1r275R14oR15R16R17i864R18i852gR19r276gar94hR14oR15R16R17i866R18i852gR19r55gR14oR15R16R17i866R18i848gR19r55ghR14oR15R16R17i867R18i824gR19r55ghR14oR15R16R17i868R18i783gR19r55goR3jR4:0:1jR49:3:1zR14oR15R16R17i872R18i871gR19r55gR14oR15R16R17i872R18i783gR19jR11:2:0goR3jR4:11:0R14oR15R16R17i882R18i875gR19r25gnR14oR15R16R17i882R18i779gR19r25ghR14oR15R16R17i888R18i323gR19r25gR6jR21:1:0R22oR6r28R8y8:fragmentR10jR11:13:1aoR1ahR24r25ghR13i-181gR24r25ghR8y22:h3d.shader.VolumeDecaly4:varsar88oR6r10R8y5:depthR10r55R13i-168gr275r27r9r282oR6r10R8y9:specColorR10jR11:5:2i3r11R13i-171gr16r411r202oR6r10R8y16:relativePositionR10jR11:5:2i3r11R13i-162gr45oR6jR7:5:0R8y6:outputR10jR11:12:1aoR6r423R8R31R10jR11:5:2i4r11R27r422R13i-158goR6r423R8y5:colorR10jR11:5:2i4r11R27r422R13i-159goR6r423R8R64R10jR11:5:2i4r11R27r422R13i-160goR6r423R8R20R10jR11:5:2i4r11R27r422R13i-161ghR13i-157goR6r10R8y8:screenUVR10jR11:5:2i2r11R13i-169gr65oR6jR7:1:0R8y5:inputR10jR11:12:1aoR6r437R8R31R10jR11:5:2i3r11R27r436R13i-155goR6r437R8R20R10jR11:5:2i3r11R27r436R13i-156ghR13i-154goR6r10R8y19:transformedPositionR10jR11:5:2i3r11R13i-163goR6r10R8y9:specPowerR10r55R13i-170gr248oR6r10R8y10:pixelColorR10jR11:5:2i4r11R13i-167ghg";
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0,0);
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved.gt != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved.amp != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved.quot != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved.apos != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
hxd_Charset.JP_KANA = "　あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわゐゑをんがぎぐげござじずぜぞだぢづでどばびぶべぼぱぴぷぺぽゃゅょアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヰヱヲンガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポヴャぇっッュョァィゥェォ・ー「」、。『』“”！：？％＆（）－０１２３４５６７８９";
hxd_Charset.ASCII = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
hxd_Charset.LATIN1 = "¡¢£¤¥¦§¨©ª«¬-®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ";
hxd_Charset.DEFAULT_CHARS = hxd_Charset.ASCII + hxd_Charset.LATIN1;
hxd_Key.BACKSPACE = 8;
hxd_Key.TAB = 9;
hxd_Key.ENTER = 13;
hxd_Key.SHIFT = 16;
hxd_Key.CTRL = 17;
hxd_Key.ALT = 18;
hxd_Key.ESCAPE = 27;
hxd_Key.SPACE = 32;
hxd_Key.PGUP = 33;
hxd_Key.PGDOWN = 34;
hxd_Key.END = 35;
hxd_Key.HOME = 36;
hxd_Key.LEFT = 37;
hxd_Key.UP = 38;
hxd_Key.RIGHT = 39;
hxd_Key.DOWN = 40;
hxd_Key.INSERT = 45;
hxd_Key.DELETE = 46;
hxd_Key.NUMBER_0 = 48;
hxd_Key.NUMBER_1 = 49;
hxd_Key.NUMBER_2 = 50;
hxd_Key.NUMBER_3 = 51;
hxd_Key.NUMBER_4 = 52;
hxd_Key.NUMBER_5 = 53;
hxd_Key.NUMBER_6 = 54;
hxd_Key.NUMBER_7 = 55;
hxd_Key.NUMBER_8 = 56;
hxd_Key.NUMBER_9 = 57;
hxd_Key.NUMPAD_0 = 96;
hxd_Key.NUMPAD_1 = 97;
hxd_Key.NUMPAD_2 = 98;
hxd_Key.NUMPAD_3 = 99;
hxd_Key.NUMPAD_4 = 100;
hxd_Key.NUMPAD_5 = 101;
hxd_Key.NUMPAD_6 = 102;
hxd_Key.NUMPAD_7 = 103;
hxd_Key.NUMPAD_8 = 104;
hxd_Key.NUMPAD_9 = 105;
hxd_Key.A = 65;
hxd_Key.B = 66;
hxd_Key.C = 67;
hxd_Key.D = 68;
hxd_Key.E = 69;
hxd_Key.F = 70;
hxd_Key.G = 71;
hxd_Key.H = 72;
hxd_Key.I = 73;
hxd_Key.J = 74;
hxd_Key.K = 75;
hxd_Key.L = 76;
hxd_Key.M = 77;
hxd_Key.N = 78;
hxd_Key.O = 79;
hxd_Key.P = 80;
hxd_Key.Q = 81;
hxd_Key.R = 82;
hxd_Key.S = 83;
hxd_Key.T = 84;
hxd_Key.U = 85;
hxd_Key.V = 86;
hxd_Key.W = 87;
hxd_Key.X = 88;
hxd_Key.Y = 89;
hxd_Key.Z = 90;
hxd_Key.F1 = 112;
hxd_Key.F2 = 113;
hxd_Key.F3 = 114;
hxd_Key.F4 = 115;
hxd_Key.F5 = 116;
hxd_Key.F6 = 117;
hxd_Key.F7 = 118;
hxd_Key.F8 = 119;
hxd_Key.F9 = 120;
hxd_Key.F10 = 121;
hxd_Key.F11 = 122;
hxd_Key.F12 = 123;
hxd_Key.NUMPAD_MULT = 106;
hxd_Key.NUMPAD_ADD = 107;
hxd_Key.NUMPAD_ENTER = 108;
hxd_Key.NUMPAD_SUB = 109;
hxd_Key.NUMPAD_DOT = 110;
hxd_Key.NUMPAD_DIV = 111;
hxd_Key.MOUSE_LEFT = 0;
hxd_Key.MOUSE_RIGHT = 1;
hxd_Key.MOUSE_WHEEL_UP = 2;
hxd_Key.MOUSE_WHEEL_DOWN = 3;
hxd_Key.LOC_LEFT = 256;
hxd_Key.LOC_RIGHT = 512;
hxd_Key.LSHIFT = 272;
hxd_Key.RSHIFT = 528;
hxd_Key.LCTRL = 273;
hxd_Key.RCTRL = 529;
hxd_Key.LALT = 274;
hxd_Key.RALT = 530;
hxd_Key.initDone = false;
hxd_Key.keyPressed = [];
hxd_Math.PI = 3.14159265358979323;
hxd_Math.EPSILON = 1e-10;
hxd__$Pixels_Channel_$Impl_$.R = 0;
hxd__$Pixels_Channel_$Impl_$.G = 1;
hxd__$Pixels_Channel_$Impl_$.B = 2;
hxd__$Pixels_Channel_$Impl_$.A = 3;
hxd_Stage.ENABLE_TOUCH = true;
hxd_System.setCursor = hxd_System.setNativeCursor;
hxd_System.LOOP_INIT = false;
hxd_Timer.wantedFPS = 60.;
hxd_Timer.maxDeltaTime = 0.5;
hxd_Timer.oldTime = haxe_Timer.stamp();
hxd_Timer.tmod_factor = 0.95;
hxd_Timer.calc_tmod = 1;
hxd_Timer.tmod = 1;
hxd_Timer.deltaT = 1;
hxd_Timer.frameCount = 0;
hxd_Worker.ENABLE = false;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.DFloat = 1;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.DVec2 = 2;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.DVec3 = 3;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.DVec4 = 4;
hxd_fmt_hmd__$Data_GeometryDataFormat_$Impl_$.DBytes4 = 9;
hxd_fmt_hmd_Position.QTMP = new h3d_Quat();
hxd_fmt_hmd_Material.DEFAULT_FLAGS = (function($this) {
	var $r;
	var f = 0;
	f = 1;
	f = 3;
	f = 7;
	$r = f;
	return $r;
}(this));
hxd_fmt_hmd_Data.CURRENT_VERSION = 2;
hxd_fmt_hmd_Reader.BLEND = h2d_BlendMode.__empty_constructs__;
hxd_fmt_hmd_Reader.CULLING = h3d_mat_Face.__empty_constructs__;
hxd_fs_EmbedFileSystem.invalidChars = new EReg("[^A-Za-z0-9_]","g");
hxd_impl_Memory.stack = [];
hxd_impl_Memory.inst = new hxd_impl_MemoryReader();
hxd_impl_Tmp.bytes = [];
hxd_poly2tri_Point.C_ID = 0;
hxd_res_Resource.LIVE_UPDATE = true;
hxd_res_FontBuilder.FONTS = new haxe_ds_StringMap();
hxd_res__$Image_ImageFormat_$Impl_$.Jpg = 0;
hxd_res__$Image_ImageFormat_$Impl_$.Png = 1;
hxd_res__$Image_ImageFormat_$Impl_$.Gif = 2;
hxd_res_Image.ALLOW_NPOT = true;
hxd_res_Image.DEFAULT_FILTER = h3d_mat_Filter.Linear;
hxd_res_NanoJpeg.BLOCKSIZE = 64;
hxd_res_NanoJpeg.W1 = 2841;
hxd_res_NanoJpeg.W2 = 2676;
hxd_res_NanoJpeg.W3 = 2408;
hxd_res_NanoJpeg.W5 = 1609;
hxd_res_NanoJpeg.W6 = 1108;
hxd_res_NanoJpeg.W7 = 565;
hxd_res_NanoJpeg.CF4A = -9;
hxd_res_NanoJpeg.CF4B = 111;
hxd_res_NanoJpeg.CF4C = 29;
hxd_res_NanoJpeg.CF4D = -3;
hxd_res_NanoJpeg.CF3A = 28;
hxd_res_NanoJpeg.CF3B = 109;
hxd_res_NanoJpeg.CF3C = -9;
hxd_res_NanoJpeg.CF3X = 104;
hxd_res_NanoJpeg.CF3Y = 27;
hxd_res_NanoJpeg.CF3Z = -3;
hxd_res_NanoJpeg.CF2A = 139;
hxd_res_NanoJpeg.CF2B = -11;
hxsl_Tools.UID = 0;
hxsl_Tools.SWIZ = hxsl_Component.__empty_constructs__;
js_Boot.__toStr = { }.toString;
hxsl_GlslOut.KWD_LIST = ["input","output","discard","dvec2","dvec3","dvec4"];
hxsl_GlslOut.KWDS = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = 0;
		var _g2 = hxsl_GlslOut.KWD_LIST;
		while(_g1 < _g2.length) {
			var k = _g2[_g1];
			++_g1;
			if(__map_reserved[k] != null) {
				_g.setReserved(k,true);
			} else {
				_g.h[k] = true;
			}
		}
	}
	$r = _g;
	return $r;
}(this));
hxsl_GlslOut.GLOBALS = (function($this) {
	var $r;
	var m = new haxe_ds_EnumValueMap();
	{
		var _g = 0;
		var _g1 = hxsl_TGlobal.__empty_constructs__;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			var n = "" + Std.string(g);
			n = n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
			m.set(g,n);
		}
	}
	m.set(hxsl_TGlobal.ToInt,"int");
	m.set(hxsl_TGlobal.ToFloat,"float");
	m.set(hxsl_TGlobal.ToBool,"bool");
	m.set(hxsl_TGlobal.Texture2D,"_texture2D");
	m.set(hxsl_TGlobal.LReflect,"reflect");
	m.set(hxsl_TGlobal.Mat3x4,"_mat3x4");
	{
		var tmp = m.iterator();
		while(tmp.hasNext()) {
			var g1 = tmp.next();
			var _this = hxsl_GlslOut.KWDS;
			if(__map_reserved[g1] != null) {
				_this.setReserved(g1,true);
			} else {
				_this.h[g1] = true;
			}
		}
	}
	$r = m;
	return $r;
}(this));
hxsl_GlslOut.MAT34 = "struct _mat3x4 { vec4 a; vec4 b; vec4 c; };";
hxsl_Printer.SWIZ = ["x","y","z","w"];
hxsl_RuntimeShader.UID = 0;
invertotanks_Bullet.bulletSpeedUp = 3;
invertotanks_Tank.vx = 0.65;
invertotanks_Tank.vf = 0.5;
invertotanks_Tank.vd = 0.032724923466666667;
invertotanks_Tank.pm = 0.5;
invertotanks_Tank.sTime = 1.5;
invertotanks_Tank.maxHealth = 100.0;
invertotanks_Tank.maxFuel = 40.0;
invertotanks_World.tankMaxHeightDist = 7;
invertotanks_World.bulletBounceLoss = 0.8;
invertotanks_World.tankSize = 8.5;
invertotanks_World.healthHeight = 16.5;
invertotanks_World.minPlayerIndicatorArrowHeight = 21.5;
invertotanks_World.maxPlayerIndicatorArrowHeight = 26.5;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
invertotanks_Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=InvertoTanks.js.map